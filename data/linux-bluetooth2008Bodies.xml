<?xml version="1.0" encoding="utf-8"?>
<emails><email><emailId>20080305084619</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-03-05 08:46:19-0400</timestampReceived><subject>Re: [patch (for 2.6.25?) 2/2] bluetooth: CONWISE Technology based adapters with buggy SCO support (b</subject><body>

Hi Andrew,

&gt; From: SDiZ &lt;sdiz@sdiz.net&gt;
&gt;
&gt; Fix the CONWISE Technology based adapters with buggy SCO support issue
&gt; (bugzilla #9027)
&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: "David S. Miller" &lt;davem@davemloft.net&gt;
&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt; ---
&gt;
&gt; drivers/bluetooth/hci_usb.c |    3 +++
&gt; 1 file changed, 3 insertions(+)
&gt;
&gt; diff -puN drivers/bluetooth/hci_usb.c~bluetooth-conwise-technology- 
&gt; based-adapters-with-buggy-sco-support-bugzilla-9027 drivers/ 
&gt; bluetooth/hci_usb.c
&gt; --- a/drivers/bluetooth/hci_usb.c~bluetooth-conwise-technology-based- 
&gt; adapters-with-buggy-sco-support-bugzilla-9027
&gt; +++ a/drivers/bluetooth/hci_usb.c
&gt; @@ -148,6 +148,9 @@ static struct usb_device_id blacklist_id
&gt; 	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
&gt; 	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
&gt;
&gt; +	/* CONWISE Technology based adapters with buggy SCO support */
&gt; +	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },

this is the one with the proper description and acked by me. Please  
drop the other one.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080306024403</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-03-06 02:44:03-0400</timestampReceived><subject>Re: [patch (for 2.6.25?) 2/2] bluetooth: CONWISE Technology based</subject><body>

From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Date: Wed, 5 Mar 2008 09:46:19 +0100

&gt; Hi Andrew,
&gt; 
&gt; &gt; diff -puN drivers/bluetooth/hci_usb.c~bluetooth-conwise-technology- 
&gt; &gt; based-adapters-with-buggy-sco-support-bugzilla-9027 drivers/ 
&gt; &gt; bluetooth/hci_usb.c
&gt; &gt; --- a/drivers/bluetooth/hci_usb.c~bluetooth-conwise-technology-based- 
&gt; &gt; adapters-with-buggy-sco-support-bugzilla-9027
&gt; &gt; +++ a/drivers/bluetooth/hci_usb.c
&gt; &gt; @@ -148,6 +148,9 @@ static struct usb_device_id blacklist_id
&gt; &gt; 	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
&gt; &gt; 	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
&gt; &gt;
&gt; &gt; +	/* CONWISE Technology based adapters with buggy SCO support */
&gt; &gt; +	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
&gt; 
&gt; this is the one with the proper description and acked by me. Please  
&gt; drop the other one.

I've added this to net-2.6
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080306024617</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-03-06 02:46:17-0400</timestampReceived><subject>Re: [patch (for 2.6.25?) 1/2] bluetooth: hci_core: defer</subject><body>

From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Date: Wed, 5 Mar 2008 09:48:29 +0100

&gt; &gt; @@ -902,8 +902,6 @@ int hci_unregister_dev(struct hci_dev *h
&gt; &gt;
&gt; &gt; 	BT_DBG("%p name %s type %d", hdev, hdev-&gt;name, hdev-&gt;type);
&gt; &gt;
&gt; &gt; -	hci_unregister_sysfs(hdev);
&gt; &gt; -
&gt; &gt; 	write_lock_bh(&amp;hci_dev_list_lock);
&gt; &gt; 	list_del(&amp;hdev-&gt;list);
&gt; &gt; 	write_unlock_bh(&amp;hci_dev_list_lock);
&gt; &gt; @@ -915,6 +913,8 @@ int hci_unregister_dev(struct hci_dev *h
&gt; &gt;
&gt; &gt; 	hci_notify(hdev, HCI_DEV_UNREG);
&gt; &gt;
&gt; &gt; +	hci_unregister_sysfs(hdev);
&gt; &gt; +
&gt; &gt; 	__hci_dev_put(hdev);
&gt; 
&gt; I never got a chance to test this one in a proper way, but from a  
&gt; logic point of view it makes sense and thus it is acked by me. I also  
&gt; trust Stefan that he fully tested it.

Also applied to net-2.6
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080316044518</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-03-16 04:45:18-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 10251] New: Bluetooth mouse stops working after mouse-idle</subject><body>

On Sun, Mar 16, 2008 at 4:16 AM, Andrew Morton
&lt;akpm@linux-foundation.org&gt; wrote:
&gt; On Sat, 15 Mar 2008 12:37:48 -0700 (PDT) bugme-daemon@bugzilla.kernel.org wrote:
&gt;
&gt;  &gt; http://bugzilla.kernel.org/show_bug.cgi?id=10251
&gt;  &gt;
&gt;  &gt;            Summary: Bluetooth mouse stops working after mouse-idle
&gt;  &gt;            Product: Drivers
&gt;  &gt;            Version: 2.5
&gt;  &gt;      KernelVersion: 2.6.24.2
&gt;  &gt;           Platform: All
&gt;  &gt;         OS/Version: Linux
&gt;  &gt;               Tree: Mainline
&gt;  &gt;             Status: NEW
&gt;  &gt;           Severity: normal
&gt;  &gt;           Priority: P1
&gt;  &gt;          Component: Bluetooth
&gt;  &gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;  &gt;         ReportedBy: harn-solo@gmx.de
&gt;  &gt;
&gt;  &gt;
&gt;  &gt; Latest working kernel version: never
&gt;  &gt; Earliest failing kernel version: 2.6.16
&gt;  &gt; Hardware Environment: x86,
&gt;  &gt; Software Environment: Xorg, bluez-libs-2.25, bluez-utils 2.25
&gt;  &gt; Problem Description: I'm using a Microsoft Five Button Mouse (Microsoft
&gt;  &gt; IntelliMouse Explorer for Bluetooth) connected via the onboard/build-in
&gt;  &gt; bluetooth adapter (Bus 003 Device 002: ID 1668:0441 Actiontec Electronics, Inc.
&gt;  &gt; [hex]) of my notebook, IBM T40p. After connecting the device everything works
&gt;  &gt; fine so far. When I don't use the device for quite some time (about 8 minutes),
&gt;  &gt; the mouse should enter a power saving mode. But moving the mouse again does not
&gt;  &gt; result in a moving cursor. The mouse is never working as expected again until I
&gt;  &gt; reconnect using e.g. hidd --search or hcitool cc btaddr.

Hi, Michael Long

You need to use either "hidd --server" or "bluetoothd-service-input"
(dbus service) in userspace to make the autoconnecting working.

Did you use any of them?

&gt;  &gt;
&gt;  &gt; Here is a hcipump:
&gt;  &gt;
&gt;  &gt;  HCI sniffer - Bluetooth packet analyzer ver 1.30
&gt;  &gt; device: hci0 snap_len: 1028 filter: 0xffffffff
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt;  &gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt;  &gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt;  &gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt;  &gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Disconn req: dcid 0x0041 scid 0x021f
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Disconn rsp: dcid 0x0041 scid 0x021f
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Disconn req: dcid 0x0040 scid 0x021e
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Disconn rsp: dcid 0x0040 scid 0x021e
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Disconn req: dcid 0x0040 scid 0x021e
&gt;  &gt; &gt; HCI Event: Disconn Complete (0x05) plen 4
&gt;  &gt;
&gt;  &gt;
&gt;  &gt; Here the mouse seems to go into idle mode.
&gt;  &gt; Next lines were raised just moving the mouse again.
&gt;  &gt;
&gt;  &gt;
&gt;  &gt; &gt; HCI Event: Connect Request (0x04) plen 10
&gt;  &gt; &lt; HCI Command: Accept Connection Request (0x01|0x0009) plen 7
&gt;  &gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt;  &gt; &gt; HCI Event: Connect Complete (0x03) plen 11
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 10
&gt;  &gt;     L2CAP(s): Info req: type 2
&gt;  &gt; &lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
&gt;  &gt; &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt;  &gt; &lt; HCI Command: Write Link Policy Settings (0x02|0x000d) plen 4
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Connect req: psm 17 scid 0x0220
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Connect rsp: dcid 0x0040 scid 0x0220 result 0 status 0
&gt;  &gt;       Connection successful
&gt;  &gt; &gt; HCI Event: Command Complete (0x0e) plen 6
&gt;  &gt; &lt; HCI Command: Change Connection Packet Type (0x01|0x000f) plen 4
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
&gt;  &gt;       MTU 133
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 18
&gt;  &gt;     L2CAP(s): Config rsp: scid 0x0220 flags 0x00 result 0 clen 4
&gt;  &gt;       Success
&gt;  &gt;       MTU 133
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Config req: dcid 0x0220 flags 0x00 clen 4
&gt;  &gt;       MTU 48
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 18
&gt;  &gt;     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 4
&gt;  &gt;       Success
&gt;  &gt;       MTU 48
&gt;  &gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;  &gt;     L2CAP(s): Connect req: psm 19 scid 0x0221
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Connect rsp: dcid 0x0041 scid 0x0221 result 0 status 0
&gt;  &gt;       Connection successful
&gt;  &gt; &gt; HCI Event: Connection Packet Type Changed (0x1d) plen 5
&gt;  &gt; &gt; HCI Event: Role Change (0x12) plen 8
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 4
&gt;  &gt;       MTU 133
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 18
&gt;  &gt;     L2CAP(s): Config rsp: scid 0x0221 flags 0x00 result 0 clen 4
&gt;  &gt;       Success
&gt;  &gt;       MTU 133
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;  &gt;     L2CAP(s): Config req: dcid 0x0221 flags 0x00 clen 4
&gt;  &gt;       MTU 48
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 17
&gt;  &gt; &gt; ACL data: handle 41 flags 0x01 dlen 1
&gt;  &gt;     L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 4
&gt;  &gt;       Success
&gt;  &gt;       MTU 48
&gt;  &gt; &gt; HCI Event: QoS Setup Complete (0x0d) plen 21
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0221 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Output report
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;  &gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;  &gt;       HIDP: Data: Output report
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;  &gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;  &gt;       HIDP: Data: Output report
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;  &gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;  &gt;       HIDP: Data: Output report
&gt;  &gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;  &gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;  &gt;       HIDP: Data: Output report
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;  &gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;  &gt;       HIDP: Data: Input report
&gt;  &gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt;  &gt; &gt; HCI Event: Disconn Complete (0x05) plen 4
&gt;  &gt;
&gt;  &gt;
&gt;  &gt; The above part repeats when I try to move the mouse again.
&gt;  &gt; The mouse cursor is moving only a few pixel, then the connection seems to stuck
&gt;  &gt; again.
&gt;  &gt;
&gt;  &gt; Steps to reproduce: Connect the above mentions bt-mouse, wait until the mouse
&gt;  &gt; goes into idle, move the mouse again.
&gt;  &gt;
&gt;
&gt;  (I thought these were supposed to be auto-sent to linux-bluetooth - didn't
&gt;  we set that up yet?)

Seems not yet.

&gt;  --
&gt;  To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt;  the body of a message to majordomo@vger.kernel.org
&gt;  More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080320070545</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-03-20 07:05:45-0400</timestampReceived><subject>Re: bluetooth still corrupts memory in 2.6.25-rc6</subject><body>

Hi!

&gt; &gt; &gt; &gt; &gt; ...just leave ppp-over-cellphone-over-bluetooth running, and do
&gt; &gt; &gt; &gt; &gt; s2ram...
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Linux version 2.6.25-rc6 (pavel@amd) (gcc version 4.1.3 20071209 \
&gt; &gt; &gt; &gt; &gt; (prerelease) (Debian 4.1.2-18)) #186 SMP Wed Mar 19 00:46:05 CET 2008 \
&gt; &gt; &gt; &gt; &gt; BIOS-provided physical RAM map:
&gt; &gt; &gt; &gt; Pavel, does the "still" from $SUBJ mean, that 2.6.24 is affected too (if
&gt; &gt; &gt; &gt; this is the same what I hit)?
&gt; &gt; &gt; 
&gt; &gt; &gt; Hey, I did not do careful analysis. I believe it is the same problem
&gt; &gt; &gt; that affects 2.6.24, too, yes. But I actually believe it is much older
&gt; &gt; &gt; than that...
&gt; &gt; 
&gt; &gt; If yes, then I got the crash by using hidp over l2cap with non-hid device
&gt; &gt; (session-&gt;input). I'm not sure if it was connected at all and even if hidd was
&gt; &gt; running (I tested moving with mouse by cellphone with switching on and off the
&gt; &gt; daemon, since it needed some little changes).

If you have easy/reproducible way of triggering that crash, yes that
would be useful.

...just leave ppp-over-cellphone-over-bluetooth running, and do
s2ram... takes few tries to reproduce, and you need to set up ppp each
time, so it is quite nasty to debug...

&gt; &gt; If you, hci fellows, are interested I might send more detailed description of
&gt; &gt; the crash tomorrow.

									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
pomozte zachranit klanovicky les:  http://www.ujezdskystrom.info/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080320224110</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-03-20 22:41:10-0400</timestampReceived><subject>Re: MAINTAINERS: bluez-devel is subscribers-only</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;
Date: Wed, 19 Mar 2008 21:06:28 +0100

&gt; 
&gt; &gt; bluez-devel is apparently a spamhole too.  linux-bluetooth@vger.kernel.org
&gt; &gt; has been set up and we're supposed to be migrating to it.
&gt; 
&gt; Subscribers-only spamhole is the most useless thing in the world, I
&gt; guess...
&gt; 
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;

Applied, thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080326162214</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-03-26 16:22:14-0400</timestampReceived><subject>Re: [Bluez-users] hciconfig hci0 reset bug</subject><body>

Hi Dave,

&gt;&gt; I've been looking around to see if I could figure out the build id  
&gt;&gt; where the
&gt;&gt; dongles started shipping with the correct HCI_Reset. I think I may  
&gt;&gt; have
&gt;&gt; found something.
&gt;
&gt; Thanks a lot.
&gt;
&gt; Marcel, I think it's what you want.  I would like to file a patch.

yes, but I already got it via CSR internals. They have always been  
helpful when it comes to BlueZ. CSR is an open source friendly  
company. I didn't have time to actually produce that patch since we  
have to turn the whole logic around.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080305084829</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-03-05 08:48:29-0400</timestampReceived><subject>Re: [patch (for 2.6.25?) 1/2] bluetooth: hci_core: defer hci_unregister_sysfs()</subject><body>

Hi Andrew,

&gt; From: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt;
&gt; Alon Bar-Lev reports:
&gt;
&gt;&gt; Feb 16 23:41:33 alon1 usb 3-1: configuration #1 chosen from 1 choice
&gt; Feb 16 23:41:33 alon1 BUG: unable to handle kernel NULL pointer  
&gt; dereference at virtual address 00000008
&gt; Feb 16 23:41:33 alon1 printing eip: c01b2db6 *pde = 00000000
&gt; Feb 16 23:41:33 alon1 Oops: 0000 [#1] PREEMPT
&gt; Feb 16 23:41:33 alon1 Modules linked in: ppp_deflate zlib_deflate  
&gt; zlib_inflate bsd_comp ppp_async rfcomm l2cap hci_usb vmnet(P)  
&gt; vmmon(P) tun radeon drm autofs4 ipv6 aes_generic crypto_algapi  
&gt; ieee80211_crypt_ccmp nf_nat_irc nf_nat_ftp nf_conntrack_irc  
&gt; nf_conntrack_ftp ipt_MASQUERADE iptable_nat nf_nat ipt_REJECT  
&gt; xt_tcpudp ipt_LOG xt_limit xt_state nf_conntrack_ipv4 nf_conntrack  
&gt; iptable_filter ip_tables x_tables snd_pcm_oss snd_mixer_oss  
&gt; snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device  
&gt; bluetooth ppp_generic slhc ioatdma dca cfq_iosched cpufreq_powersave  
&gt; cpufreq_ondemand cpufreq_conservative acpi_cpufreq freq_table uinput  
&gt; fan af_packet nls_cp1255 nls_iso8859_1 nls_utf8 nls_base pcmcia  
&gt; snd_intel8x0 snd_ac97_codec ac97_bus snd_pcm nsc_ircc snd_timer  
&gt; ipw2200 thinkpad_acpi irda snd ehci_hcd yenta_socket uhci_hcd  
&gt; psmouse ieee80211 soundcore intel_agp hwmon rsrc_nonstatic pcspkr  
&gt; e1000 crc_ccitt snd_page_alloc i2c_i801 ieee80211_crypt pcmcia_core  
&gt; agpgart thermal bat!
&gt; tery nvram rtc sr_mod ac sg firmware_class button processor cdrom  
&gt; unix usbcore evdev ext3 jbd ext2 mbcache loop ata_piix libata sd_mod  
&gt; scsi_mod
&gt; Feb 16 23:41:33 alon1
&gt; Feb 16 23:41:33 alon1 Pid: 4, comm: events/0 Tainted: P         
&gt; (2.6.24-gentoo-r2 #1)
&gt; Feb 16 23:41:33 alon1 EIP: 0060:[&lt;c01b2db6&gt;] EFLAGS: 00010282 CPU: 0
&gt; Feb 16 23:41:33 alon1 EIP is at sysfs_get_dentry+0x26/0x80
&gt; Feb 16 23:41:33 alon1 EAX: 00000000 EBX: 00000000 ECX: 00000000 EDX:  
&gt; f48a2210
&gt; Feb 16 23:41:33 alon1 ESI: f72eb900 EDI: f4803ae0 EBP: f4803ae0 ESP:  
&gt; f7c49efc
&gt; Feb 16 23:41:33 alon1 hcid[7004]: HCI dev 0 registered
&gt; Feb 16 23:41:33 alon1 DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068
&gt; Feb 16 23:41:33 alon1 Process events/0 (pid: 4, ti=f7c48000  
&gt; task=f7c3efc0 task.ti=f7c48000)
&gt; Feb 16 23:41:33 alon1 Stack: f7cb6140 f4822668 f7e71e10 c01b304d  
&gt; ffffffff ffffffff fffffffe c030ba9c
&gt; Feb 16 23:41:33 alon1 f7cb6140 f4822668 f6da6720 f7cb6140 f4822668  
&gt; f6da6720 c030ba8e c01ce20b
&gt; Feb 16 23:41:33 alon1 f6e9dd00 c030ba8e f6da6720 f6e9dd00 f6e9dd00  
&gt; 00000000 f4822600 00000000
&gt; Feb 16 23:41:33 alon1 Call Trace:
&gt; Feb 16 23:41:33 alon1 [&lt;c01b304d&gt;] sysfs_move_dir+0x3d/0x1f0
&gt; Feb 16 23:41:33 alon1 [&lt;c01ce20b&gt;] kobject_move+0x9b/0x120
&gt; Feb 16 23:41:33 alon1 [&lt;c0241711&gt;] device_move+0x51/0x110
&gt; Feb 16 23:41:33 alon1 [&lt;f9aaed80&gt;] del_conn+0x0/0x70 [bluetooth]
&gt; Feb 16 23:41:33 alon1 [&lt;f9aaed99&gt;] del_conn+0x19/0x70 [bluetooth]
&gt; Feb 16 23:41:33 alon1 [&lt;c012c1a1&gt;] run_workqueue+0x81/0x140
&gt; Feb 16 23:41:33 alon1 [&lt;c02c0c88&gt;] schedule+0x168/0x2e0
&gt; Feb 16 23:41:33 alon1 [&lt;c012fc70&gt;] autoremove_wake_function+0x0/0x50
&gt; Feb 16 23:41:33 alon1 [&lt;c012c9cb&gt;] worker_thread+0x9b/0xf0
&gt; Feb 16 23:41:33 alon1 [&lt;c012fc70&gt;] autoremove_wake_function+0x0/0x50
&gt; Feb 16 23:41:33 alon1 [&lt;c012c930&gt;] worker_thread+0x0/0xf0
&gt; Feb 16 23:41:33 alon1 [&lt;c012f962&gt;] kthread+0x42/0x70
&gt; Feb 16 23:41:33 alon1 [&lt;c012f920&gt;] kthread+0x0/0x70
&gt; Feb 16 23:41:33 alon1 [&lt;c0104c2f&gt;] kernel_thread_helper+0x7/0x18
&gt; Feb 16 23:41:33 alon1 =======================
&gt; Feb 16 23:41:33 alon1 Code: 26 00 00 00 00 57 89 c7 a1 50 1b 3a c0  
&gt; 56 53 8b 70 38 85 f6 74 08 8b 0e 85 c9 74 58 ff 06 8b 56 50 39 fa 74  
&gt; 47 89 fb eb 02 89 c3 &lt;8b&gt; 43 08 39 c2 75 f7 8b 46 08 83 c0 68 e8 98  
&gt; e7 10 00 8b 43 10
&gt; Feb 16 23:41:33 alon1 EIP: [&lt;c01b2db6&gt;] sysfs_get_dentry+0x26/0x80  
&gt; SS:ESP 0068:f7c49efc
&gt; Feb 16 23:41:33 alon1 ---[ end trace aae864e9592acc1d ]---
&gt;
&gt; Defer hci_unregister_sysfs because hci device could be destructed
&gt; while hci conn devices still there.
&gt;
&gt; Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Tested-by: Stefan Seyfried &lt;seife@suse.de&gt;
&gt; Acked-by: Alon Bar-Lev &lt;alon.barlev@gmail.com&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: "David S. Miller" &lt;davem@davemloft.net&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt; ---
&gt;
&gt; net/bluetooth/hci_core.c |    4 ++--
&gt; 1 file changed, 2 insertions(+), 2 deletions(-)
&gt;
&gt; diff -puN net/bluetooth/hci_core.c~bluetooth-hci_core-defer- 
&gt; hci_unregister_sysfs net/bluetooth/hci_core.c
&gt; --- a/net/bluetooth/hci_core.c~bluetooth-hci_core-defer- 
&gt; hci_unregister_sysfs
&gt; +++ a/net/bluetooth/hci_core.c
&gt; @@ -902,8 +902,6 @@ int hci_unregister_dev(struct hci_dev *h
&gt;
&gt; 	BT_DBG("%p name %s type %d", hdev, hdev-&gt;name, hdev-&gt;type);
&gt;
&gt; -	hci_unregister_sysfs(hdev);
&gt; -
&gt; 	write_lock_bh(&amp;hci_dev_list_lock);
&gt; 	list_del(&amp;hdev-&gt;list);
&gt; 	write_unlock_bh(&amp;hci_dev_list_lock);
&gt; @@ -915,6 +913,8 @@ int hci_unregister_dev(struct hci_dev *h
&gt;
&gt; 	hci_notify(hdev, HCI_DEV_UNREG);
&gt;
&gt; +	hci_unregister_sysfs(hdev);
&gt; +
&gt; 	__hci_dev_put(hdev);

I never got a chance to test this one in a proper way, but from a  
logic point of view it makes sense and thus it is acked by me. I also  
trust Stefan that he fully tested it.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080315201634</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-03-15 20:16:34-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 10251] New: Bluetooth mouse stops working</subject><body>

On Sat, 15 Mar 2008 12:37:48 -0700 (PDT) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=10251
&gt; 
&gt;            Summary: Bluetooth mouse stops working after mouse-idle
&gt;            Product: Drivers
&gt;            Version: 2.5
&gt;      KernelVersion: 2.6.24.2
&gt;           Platform: All
&gt;         OS/Version: Linux
&gt;               Tree: Mainline
&gt;             Status: NEW
&gt;           Severity: normal
&gt;           Priority: P1
&gt;          Component: Bluetooth
&gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;         ReportedBy: harn-solo@gmx.de
&gt; 
&gt; 
&gt; Latest working kernel version: never
&gt; Earliest failing kernel version: 2.6.16
&gt; Hardware Environment: x86, 
&gt; Software Environment: Xorg, bluez-libs-2.25, bluez-utils 2.25
&gt; Problem Description: I'm using a Microsoft Five Button Mouse (Microsoft
&gt; IntelliMouse Explorer for Bluetooth) connected via the onboard/build-in
&gt; bluetooth adapter (Bus 003 Device 002: ID 1668:0441 Actiontec Electronics, Inc.
&gt; [hex]) of my notebook, IBM T40p. After connecting the device everything works
&gt; fine so far. When I don't use the device for quite some time (about 8 minutes),
&gt; the mouse should enter a power saving mode. But moving the mouse again does not
&gt; result in a moving cursor. The mouse is never working as expected again until I
&gt; reconnect using e.g. hidd --search or hcitool cc btaddr.
&gt; 
&gt; Here is a hcipump:
&gt; 
&gt;  HCI sniffer - Bluetooth packet analyzer ver 1.30
&gt; device: hci0 snap_len: 1028 filter: 0xffffffff
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 0]
&gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Disconn req: dcid 0x0041 scid 0x021f
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Disconn rsp: dcid 0x0041 scid 0x021f
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Disconn req: dcid 0x0040 scid 0x021e
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Disconn rsp: dcid 0x0040 scid 0x021e
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Disconn req: dcid 0x0040 scid 0x021e
&gt; &gt; HCI Event: Disconn Complete (0x05) plen 4
&gt; 
&gt; 
&gt; Here the mouse seems to go into idle mode.
&gt; Next lines were raised just moving the mouse again.
&gt; 
&gt; 
&gt; &gt; HCI Event: Connect Request (0x04) plen 10
&gt; &lt; HCI Command: Accept Connection Request (0x01|0x0009) plen 7
&gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt; &gt; HCI Event: Connect Complete (0x03) plen 11
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 10
&gt;     L2CAP(s): Info req: type 2
&gt; &lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
&gt; &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt; &lt; HCI Command: Write Link Policy Settings (0x02|0x000d) plen 4
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Connect req: psm 17 scid 0x0220
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Connect rsp: dcid 0x0040 scid 0x0220 result 0 status 0
&gt;       Connection successful
&gt; &gt; HCI Event: Command Complete (0x0e) plen 6
&gt; &lt; HCI Command: Change Connection Packet Type (0x01|0x000f) plen 4
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
&gt;       MTU 133 
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 18
&gt;     L2CAP(s): Config rsp: scid 0x0220 flags 0x00 result 0 clen 4
&gt;       Success
&gt;       MTU 133 
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Config req: dcid 0x0220 flags 0x00 clen 4
&gt;       MTU 48 
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 18
&gt;     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 4
&gt;       Success
&gt;       MTU 48 
&gt; &gt; HCI Event: Command Status (0x0f) plen 4
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 12
&gt;     L2CAP(s): Connect req: psm 19 scid 0x0221
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Connect rsp: dcid 0x0041 scid 0x0221 result 0 status 0
&gt;       Connection successful
&gt; &gt; HCI Event: Connection Packet Type Changed (0x1d) plen 5
&gt; &gt; HCI Event: Role Change (0x12) plen 8
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 4
&gt;       MTU 133 
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 18
&gt;     L2CAP(s): Config rsp: scid 0x0221 flags 0x00 result 0 clen 4
&gt;       Success
&gt;       MTU 133 
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 16
&gt;     L2CAP(s): Config req: dcid 0x0221 flags 0x00 clen 4
&gt;       MTU 48 
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 17
&gt; &gt; ACL data: handle 41 flags 0x01 dlen 1
&gt;     L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 4
&gt;       Success
&gt;       MTU 48 
&gt; &gt; HCI Event: QoS Setup Complete (0x0d) plen 21
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0221 len 7 [psm 19]
&gt;       HIDP: Data: Output report
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;       HIDP: Data: Output report
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;       HIDP: Data: Output report
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;       HIDP: Data: Output report
&gt; &lt; ACL data: handle 41 flags 0x02 dlen 7
&gt;     L2CAP(d): cid 0x0221 len 3 [psm 19]
&gt;       HIDP: Data: Output report
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; ACL data: handle 41 flags 0x02 dlen 11
&gt;     L2CAP(d): cid 0x0041 len 7 [psm 19]
&gt;       HIDP: Data: Input report
&gt; &gt; HCI Event: Mode Change (0x14) plen 6
&gt; &gt; HCI Event: Disconn Complete (0x05) plen 4
&gt; 
&gt; 
&gt; The above part repeats when I try to move the mouse again. 
&gt; The mouse cursor is moving only a few pixel, then the connection seems to stuck
&gt; again.
&gt; 
&gt; Steps to reproduce: Connect the above mentions bt-mouse, wait until the mouse
&gt; goes into idle, move the mouse again.
&gt; 

(I thought these were supposed to be auto-sent to linux-bluetooth - didn't
we set that up yet?)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080320025022</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-03-20 02:50:22-0400</timestampReceived><subject>Re: bluetooth still corrupts memory in 2.6.25-rc6</subject><body>

On Thu, Mar 20, 2008 at 7:26 AM, Jiri Slaby &lt;jirislaby@gmail.com&gt; wrote:
&gt; Removed the bluez-devel@.
&gt; 
&gt; 
&gt; On 03/20/2008 12:06 AM, Pavel Machek wrote:
&gt; &gt; On Thu 2008-03-20 00:02:57, Jiri Slaby wrote:
&gt; &gt; &gt; On 03/19/2008 09:21 AM, Pavel Machek wrote:
&gt; &gt; &gt; &gt; ...just leave ppp-over-cellphone-over-bluetooth running, and do
&gt; &gt; &gt; &gt; s2ram...
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Linux version 2.6.25-rc6 (pavel@amd) (gcc version 4.1.3 20071209 (prerelease) \
&gt; &gt; &gt; &gt; (Debian 4.1.2-18)) #186 SMP Wed Mar 19 00:46:05 CET 2008 BIOS-provided \
&gt; &gt; &gt; &gt; physical RAM map:
&gt; &gt; &gt; Pavel, does the "still" from $SUBJ mean, that 2.6.24 is affected too (if
&gt; &gt; &gt; this is the same what I hit)?
&gt; &gt; 
&gt; &gt; Hey, I did not do careful analysis. I believe it is the same problem
&gt; &gt; that affects 2.6.24, too, yes. But I actually believe it is much older
&gt; &gt; than that...
&gt; 
&gt; If yes, then I got the crash by using hidp over l2cap with non-hid device
&gt; (session-&gt;input). I'm not sure if it was connected at all and even if hidd was
&gt; running (I tested moving with mouse by cellphone with switching on and off the
&gt; daemon, since it needed some little changes).
&gt; 
&gt; If you, hci fellows, are interested I might send more detailed description of
&gt; the crash tomorrow.

add linux-bluetooth@vger.kernel.org in cc

&gt; 
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; Please read the FAQ at  http://www.tux.org/lkml/
&gt; 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080319183943</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-03-19 18:39:43-0400</timestampReceived><subject>Re: MAINTAINERS: bluez-devel is subscribers-only</subject><body>

On Wed, 19 Mar 2008 15:27:03 +0100 Pavel Machek &lt;pavel@ucw.cz&gt; wrote:

&gt; 
&gt; Document subscribers-only bluetooth mailing list.
&gt; 
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; 
&gt; ---
&gt; commit d5ac3c822e1036165b92d62e464be1e61c12d757
&gt; tree a5c8b5f46dc0f0c94889b7eda68abe334a2d8d59
&gt; parent a1171bebd79cde255d3fa73a86eeab808ab09fe6
&gt; author Pavel &lt;pavel@amd.ucw.cz&gt; Wed, 19 Mar 2008 15:26:41 +0100
&gt; committer Pavel &lt;pavel@amd.ucw.cz&gt; Wed, 19 Mar 2008 15:26:41 +0100
&gt; 
&gt;  MAINTAINERS |    2 +-
&gt;  1 files changed, 1 insertions(+), 1 deletions(-)
&gt; 
&gt; diff --git a/MAINTAINERS b/MAINTAINERS
&gt; index 6d628fb..9c1332e 100644
&gt; --- a/MAINTAINERS
&gt; +++ b/MAINTAINERS
&gt; @@ -880,7 +880,7 @@ P:	Marcel Holtmann
&gt;  M:	marcel@holtmann.org
&gt;  P:	Maxim Krasnyansky
&gt;  M:	maxk@qualcomm.com
&gt; -L:	bluez-devel@lists.sf.net
&gt; +L:	bluez-devel@lists.sf.net (subscribers-only)
&gt;  W:	http://bluez.sf.net
&gt;  W:	http://www.bluez.org
&gt;  W:	http://www.holtmann.org/linux/bluetooth/

bluez-devel is apparently a spamhole too.  linux-bluetooth@vger.kernel.org
has been set up and we're supposed to be migrating to it.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080322002943</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-03-22 00:29:43-0400</timestampReceived><subject>Re: [Bluez-users] hciconfig hci0 reset bug</subject><body>

On Fri, Mar 21, 2008 at 1:19 AM, Odysseus Flappington
&lt;deriziotis@gmail.com&gt; wrote:
&gt; Hi Marcel, Dave,
&gt;
&gt; I've been looking around to see if I could figure out the build id where the
&gt; dongles started shipping with the correct HCI_Reset. I think I may have
&gt; found something.

Thanks a lot.

Marcel, I think it's what you want.  I would like to file a patch.

&gt;
&gt; http://www.csr.com/ contains the docs regarding the release of the CSR
&gt; firmware and the specs that each adhere's to. Looking at the following HCI
&gt; overall Implementation doc, I think we can find the relevant build id:
&gt;
&gt; https://www.csrsupport.com/document.php?did=141
&gt;
&gt; Firstly, i found confirmation that the problem has been solved in
&gt; HCIStack1.1v12.x:
&gt;
&gt; "In builds before HCIStack1.1v12.x, the HCI Reset command rebooted the
&gt; BlueCore device. This implied the host
&gt;  transport was reset. This was a consequence of the way the firmware team
&gt; understood an early version of the
&gt; Bluetooth specification (probably 0.7).
&gt;
&gt; Rebooting the BlueCore device is incorrect behaviour. Version 1.1 [BT] now
&gt; makes it clear that the Reset
&gt;  command must reinitialise radio, LC, LM and HCI state, but leave the host
&gt; transport in place. Builds since
&gt; HCIStack1.1v12.x obey [BT]."
&gt;
&gt; So this should be fixed in HCIStack1.1v12.x, the doc outlines the build ids
&gt; for each version of of the stack, here is the build id for HCIStack1.1v12.1:
&gt;
&gt; BuildID (hex)   BuildID (decimal)    Build Name
&gt; 0x0077               119             HCIStack1.1v12.1
&gt;
&gt; So, if I'm reading this correctly, you should issue the reset for all
&gt; CSR-based dongles with build id &gt; 118.
&gt;
&gt; Am I on the right track here? Does this information look accurate to you
&gt; guys?
&gt;
&gt; If there's anything else I can to do re this issue, please let feel free to
&gt; ask me.
&gt;
&gt; Many thanks,
&gt; Alex (Jackflap)
&gt;
&gt;
&gt;
&gt;
&gt;
&gt; On 18/03/2008, Dave Young &lt;hidave.darkstar@gmail.com&gt; wrote:
&gt; &gt; On Mon, Mar 17, 2008 at 8:28 PM, Odysseus Flappington
&gt; &gt;
&gt; &gt; &lt;deriziotis@gmail.com&gt; wrote:
&gt; &gt; &gt; Hi Dave,
&gt; &gt; &gt;
&gt; &gt;
&gt; &gt; &gt; So I got around to recompiling my kernel this weekend, and ran off a
&gt; test on
&gt; &gt; &gt; the patch attached and it worked like a charm.
&gt; &gt; &gt;
&gt; &gt; &gt; I have to wonder though why the line was commented out in the first
&gt; place.
&gt; &gt; &gt; Could it be because internal adapters don't need the line?
&gt; &gt; &gt;
&gt; &gt; &gt; Anyway, I'd love to see this fixed in future kernels. If there's
&gt; anything
&gt; &gt; &gt; else I can do to help test, let me know. Now that I've got my head
&gt; around
&gt; &gt; &gt; recompiling kernels again, I can probably turn around tests a lot
&gt; faster.
&gt; &gt;
&gt; &gt;
&gt; &gt; Hi thanks
&gt; &gt;
&gt; &gt; About the reset issue, I get some response from marcel about reset csr
&gt; dongles
&gt; &gt; -------- Marcel said :
&gt; &gt; this is a clear NAK since you gonna break all old CSR based dongles.
&gt; &gt; Within the Bluetooth 1.0b and 1.1 specification there was an issues
&gt; &gt; with if HCI_Reset should only reset the Bluetooth internals or also
&gt; &gt; the transport. So issuing HCI_Reset on an old dongle will cause an USB
&gt; &gt; reset.
&gt; &gt;
&gt; &gt; The solution is to find the build id when CSR produced correct
&gt; &gt; firmware and set the HCI_RESET quirk based on that. I meant to do this
&gt; &gt; for a long time, but so far never got around to inquiry the correct
&gt; &gt; build id where this got fixed.
&gt; &gt; --------
&gt; &gt;
&gt; &gt; But I think it's hard to find that build id, so ...
&gt; &gt;
&gt; &gt; Regards
&gt; &gt;
&gt; &gt; dave
&gt; &gt;
&gt; &gt;
&gt; &gt; &gt;
&gt; &gt; &gt; Many thanks,
&gt; &gt; &gt;
&gt; &gt; &gt;
&gt; &gt; &gt; Alex
&gt; &gt; &gt;
&gt; &gt; &gt; On 03/03/2008, Odysseus Flappington &lt;deriziotis@gmail.com&gt; wrote:
&gt; &gt; &gt; &gt; Ok,
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; I passed reset=1 to hci_usb by adding the following line to
&gt; &gt; &gt; &gt; /etc/modprobe.d/options:
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; options hci_usb reset=1
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; and that's fixed the problem!
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; Wasn't sure about my lsusb output, didn't seem to show very much, so
&gt; &gt; &gt; &gt; here's my lsusb -v output for my bluetooth device:
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; Bus 001 Device 002: ID 0a12:0001 Cambridge Silicon Radio, Ltd
&gt; &gt; &gt; &gt; Bluetooth Dongle (HCI mode)
&gt; &gt; &gt; &gt; Device Descriptor:
&gt; &gt; &gt; &gt;   bLength                18
&gt; &gt; &gt; &gt;   bDescriptorType         1
&gt; &gt; &gt; &gt;   bcdUSB               2.00
&gt; &gt; &gt; &gt;   bDeviceClass          224 Wireless
&gt; &gt; &gt; &gt;   bDeviceSubClass         1 Radio Frequency
&gt; &gt; &gt; &gt;   bDeviceProtocol         1 Bluetooth
&gt; &gt; &gt; &gt;   bMaxPacketSize0        64
&gt; &gt; &gt; &gt;   idVendor           0x0a12 Cambridge Silicon Radio, Ltd
&gt; &gt; &gt; &gt;   idProduct          0x0001 Bluetooth Dongle (HCI mode)
&gt; &gt; &gt; &gt;   bcdDevice           31.64
&gt; &gt; &gt; &gt;   iManufacturer           0
&gt; &gt; &gt; &gt;   iProduct                0
&gt; &gt; &gt; &gt;   iSerial                 0
&gt; &gt; &gt; &gt;   bNumConfigurations      1
&gt; &gt; &gt; &gt;   Configuration Descriptor:
&gt; &gt; &gt; &gt;     bLength                 9
&gt; &gt; &gt; &gt;     bDescriptorType         2
&gt; &gt; &gt; &gt;     wTotalLength          177
&gt; &gt; &gt; &gt;     bNumInterfaces          2
&gt; &gt; &gt; &gt;     bConfigurationValue     1
&gt; &gt; &gt; &gt;     iConfiguration          0
&gt; &gt; &gt; &gt;     bmAttributes         0xc0
&gt; &gt; &gt; &gt;       Self Powered
&gt; &gt; &gt; &gt;     MaxPower                0mA
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        0
&gt; &gt; &gt; &gt;       bAlternateSetting       0
&gt; &gt; &gt; &gt;       bNumEndpoints           3
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x81  EP 1 IN
&gt; &gt; &gt; &gt;         bmAttributes            3
&gt; &gt; &gt; &gt;           Transfer Type            Interrupt
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0010  1x 16 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x02  EP 2 OUT
&gt; &gt; &gt; &gt;         bmAttributes            2
&gt; &gt; &gt; &gt;           Transfer Type            Bulk
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x82  EP 2 IN
&gt; &gt; &gt; &gt;         bmAttributes            2
&gt; &gt; &gt; &gt;           Transfer Type            Bulk
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       0
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0000  1x 0 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0000  1x 0 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       1
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0009  1x 9 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0009  1x 9 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       2
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0011  1x 17 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0011  1x 17 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       3
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0019  1x 25 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0019  1x 25 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       4
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0021  1x 33 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0021  1x 33 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;     Interface Descriptor:
&gt; &gt; &gt; &gt;       bLength                 9
&gt; &gt; &gt; &gt;       bDescriptorType         4
&gt; &gt; &gt; &gt;       bInterfaceNumber        1
&gt; &gt; &gt; &gt;       bAlternateSetting       5
&gt; &gt; &gt; &gt;       bNumEndpoints           2
&gt; &gt; &gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt; &gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt; &gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt; &gt; &gt;       iInterface              0
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0031  1x 49 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt;       Endpoint Descriptor:
&gt; &gt; &gt; &gt;         bLength                 7
&gt; &gt; &gt; &gt;         bDescriptorType         5
&gt; &gt; &gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt; &gt; &gt;         bmAttributes            1
&gt; &gt; &gt; &gt;           Transfer Type            Isochronous
&gt; &gt; &gt; &gt;           Synch Type               None
&gt; &gt; &gt; &gt;           Usage Type               Data
&gt; &gt; &gt; &gt;         wMaxPacketSize     0x0031  1x 49 bytes
&gt; &gt; &gt; &gt;         bInterval               1
&gt; &gt; &gt; &gt; Device Status:     0x0001
&gt; &gt; &gt; &gt;   Self Powered
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; Thanks,
&gt; &gt; &gt; &gt; Alex
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; On 03/03/2008, Odysseus Flappington &lt;deriziotis@gmail.com&gt; wrote:
&gt; &gt; &gt; &gt; &gt; Hi Dave,
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt;  Thanks for the help. I can probably get a recompile of my kernel
&gt; done
&gt; &gt; &gt; &gt; &gt;  by the end of the weekend, maybe end of week, if it'll help.
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt;  In the meantime, I'll try loading the bluetooth module with reset=1
&gt; &gt; &gt; &gt; &gt;  and get the lsusb output to you tonight when I get home from work.
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt;  Thanks,
&gt; &gt; &gt; &gt; &gt;  Alex (Jackflap)
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt;  On 03/03/2008, Dave Young &lt;hidave.darkstar@gmail.com&gt; wrote:
&gt; &gt; &gt; &gt; &gt;  &gt; On Mon, Mar 3, 2008 at 9:21 AM, Dave Young
&gt; &gt; &gt; &lt;hidave.darkstar@gmail.com&gt; wrote:
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt; On Fri, Feb 29, 2008 at 6:51 AM, Odysseus Flappington
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &lt;deriziotis@gmail.com&gt; wrote:
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt; &gt; So, it turns out that in order for any external usb
&gt; bluetooth
&gt; &gt; &gt; adapters
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  to re-connect to paired input devices on reboot, you need
&gt; to
&gt; &gt; &gt; issue an
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  'hciconfig hci0 reset' command after rebooting in order to
&gt; &gt; &gt; reconnect.
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  More info can be found in bug #133690 on Launchpad
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;
&gt; &gt; &gt; (https://bugs.launchpad.net/ubuntu/+source/bluez-utils/+bug/133690).
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  This bug isn't Ubuntu-specific since I have reproduced in
&gt; &gt; &gt; Fedora 8, so
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  I'm posting here.
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  Simply adding 'hciconfig hci0 reset' in
&gt; /etc/default/bluetooth
&gt; &gt; &gt; in
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  source would solve this bug. Is this a reasonable
&gt; solution?
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  &gt;  &gt;  What is required in order to get a fix implemented?
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt; Sorry for previous blank reply.
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  For your problem, if you don't want to patch kernel you can also
&gt; try
&gt; &gt; &gt; &gt; &gt;  &gt;  load the bluetooth module with parameter "reset=1"
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  Could you send the lsusb output?
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;  Regards
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt; dave
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt;
&gt; -------------------------------------------------------------------------
&gt; &gt; &gt; &gt; &gt;  &gt;  This SF.net email is sponsored by: Microsoft
&gt; &gt; &gt; &gt; &gt;  &gt;  Defy all challenges. Microsoft(R) Visual Studio 2008.
&gt; &gt; &gt; &gt; &gt;  &gt;  http://clk.atdmt.com/MRT/go/vse0120000070mrt/direct/01/
&gt; &gt; &gt; &gt; &gt;  &gt;  _______________________________________________
&gt; &gt; &gt; &gt; &gt;  &gt;  Bluez-users mailing list
&gt; &gt; &gt; &gt; &gt;  &gt;  Bluez-users@lists.sourceforge.net
&gt; &gt; &gt; &gt; &gt;  &gt;  https://lists.sourceforge.net/lists/listinfo/bluez-users
&gt; &gt; &gt; &gt; &gt;  &gt;
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt;
&gt; &gt; &gt;
&gt; &gt; &gt;
&gt; &gt;
&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080319200628</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-03-19 20:06:28-0400</timestampReceived><subject>Re: MAINTAINERS: bluez-devel is subscribers-only</subject><body>


&gt; bluez-devel is apparently a spamhole too.  linux-bluetooth@vger.kernel.org
&gt; has been set up and we're supposed to be migrating to it.

Subscribers-only spamhole is the most useless thing in the world, I
guess...

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;

diff --git a/MAINTAINERS b/MAINTAINERS
index 6d628fb..76843d0 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -880,7 +880,7 @@ P:	Marcel Holtmann
 M:	marcel@holtmann.org
 P:	Maxim Krasnyansky
 M:	maxk@qualcomm.com
-L:	bluez-devel@lists.sf.net
+L:	linux-bluetooth@vger.kernel.org
 W:	http://bluez.sf.net
 W:	http://www.bluez.org
 W:	http://www.holtmann.org/linux/bluetooth/


-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
pomozte zachranit klanovicky les:  http://www.ujezdskystrom.info/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080319211125</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-03-19 21:11:25-0400</timestampReceived><subject>Re: MAINTAINERS: bluez-devel is subscribers-only</subject><body>

Pavel Machek wrote:
&gt;&gt; bluez-devel is apparently a spamhole too.  linux-bluetooth@vger.kernel.org
&gt;&gt; has been set up and we're supposed to be migrating to it.
&gt; 
&gt; Subscribers-only spamhole is the most useless thing in the world, I
&gt; guess...

It only switched to subscribers-only after the vger list was established, and
since then there is no spam on bluez-devel ;-)
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080305090451</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-03-05 09:04:51-0400</timestampReceived><subject>Re: [patch (for 2.6.25?) 1/2] bluetooth: hci_core: defer hci_unregister_sysfs()</subject><body>

Marcel Holtmann wrote:

&gt; I never got a chance to test this one in a proper way, but from a  
&gt; logic point of view it makes sense and thus it is acked by me. I also  
&gt; trust Stefan that he fully tested it.

It worked for me and it is in the openSUSE Factory kernels for quite a while
and i have no negative reports. Those kernels are still 2.6.24.1-based as of
now, so this testing is somewhat limited to an older kernel version :-(
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080402055956</emailId><senderName>Dave Young</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-04-02 05:59:56-0400</timestampReceived><subject>[PATCH 1/2] bluetooth : use lockdep sub-classes for diffrent</subject><body>

'rfcomm connect' will trigger lockdep warnings which is caused by
locking diffrent kinds of bluetooth sockets at the same time.

So using sub-classes per AF_BLUETOOTH sub-type for lockdep.

Thanks for the hints from dave jones.

---
&gt; From: Dave Jones &lt;davej@codemonkey.org.uk&gt;
&gt; Date: Thu, 27 Mar 2008 12:21:56 -0400
&gt; 
&gt; &gt; Mar 27 08:10:57 localhost kernel: Pid: 3611, comm: obex-data-serve Not tainted \
&gt; &gt;                 2.6.25-0.121.rc5.git4.fc9 #1
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+2287/3089] \
&gt; &gt;                 __lock_acquire+0x8ef/0xc11
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sched_clock+8/11] ? sched_clock+0x8/0xb
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_acquire+106/144] lock_acquire+0x6a/0x90
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+182/198] \
&gt; &gt;                 lock_sock_nested+0xb6/0xc6
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [security_socket_post_create+22/27] ? \
&gt; &gt;                 security_socket_post_create+0x16/0x1b
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__sock_create+388/472] ? \
&gt; &gt;                 __sock_create+0x184/0x1d8
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [kernel_bind+10/13] kernel_bind+0xa/0xd
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dad3d7&gt;] rfcomm_dlc_open+0xc8/0x294 \
&gt; &gt;                 [rfcomm]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+187/198] ? \
&gt; &gt;                 lock_sock_nested+0xbb/0xc6
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dae18c&gt;] rfcomm_sock_connect+0x8b/0xc2 \
&gt; &gt;                 [rfcomm]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_connect+96/125] sys_connect+0x60/0x7d
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+1370/3089] ? \
&gt; &gt;                 __lock_acquire+0x55a/0xc11
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_socketcall+140/392] \
&gt; &gt;                 sys_socketcall+0x8c/0x188
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [syscall_call+7/11] syscall_call+0x7/0xb
---

Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

---
net/bluetooth/af_bluetooth.c |   40 ++++++++++++++++++++++++++++++++++++++++
1 file changed, 40 insertions(+)

diff -upr linux/net/bluetooth/af_bluetooth.c linux.new/net/bluetooth/af_bluetooth.c
--- linux/net/bluetooth/af_bluetooth.c	2008-04-01 16:09:17.000000000 +0800
+++ linux.new/net/bluetooth/af_bluetooth.c	2008-04-01 16:08:52.000000000 +0800
@@ -53,6 +53,30 @@
 /* Bluetooth sockets */
 #define BT_MAX_PROTO	8
 static struct net_proto_family *bt_proto[BT_MAX_PROTO];
+
+static struct lock_class_key bt_slock_key[BT_MAX_PROTO];
+static struct lock_class_key bt_lock_key[BT_MAX_PROTO];
+static const char *bt_key_strings[BT_MAX_PROTO] = {
+	"sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_HCI",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_SCO",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_BNEP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_CMTP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_HIDP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_AVDTP",
+};
+
+static const char *bt_slock_key_strings[BT_MAX_PROTO] = {
+	"slock-AF_BLUETOOTH-BTPROTO_L2CAP",
+	"slock-AF_BLUETOOTH-BTPROTO_HCI",
+	"slock-AF_BLUETOOTH-BTPROTO_SCO",
+	"slock-AF_BLUETOOTH-BTPROTO_RFCOMM",
+	"slock-AF_BLUETOOTH-BTPROTO_BNEP",
+	"slock-AF_BLUETOOTH-BTPROTO_CMTP",
+	"slock-AF_BLUETOOTH-BTPROTO_HIDP",
+	"slock-AF_BLUETOOTH-BTPROTO_AVDTP",
+};
 static DEFINE_RWLOCK(bt_proto_lock);
 
 int bt_sock_register(int proto, struct net_proto_family *ops)
@@ -95,6 +119,21 @@ int bt_sock_unregister(int proto)
 }
 EXPORT_SYMBOL(bt_sock_unregister);
 
+static void bt_reclassify_sock_lock(struct socket *sock, int proto)
+{
+	struct sock *sk = sock-&gt;sk;
+
+	if (!sk)
+		return;
+	BUG_ON(sock_owned_by_user(sk));
+
+	sock_lock_init_class_and_name(sk,
+			bt_slock_key_strings[proto],
+			&amp;bt_slock_key[proto],
+			bt_key_strings[proto],
+			&amp;bt_lock_key[proto]);
+}
+
 static int bt_sock_create(struct net *net, struct socket *sock, int proto)
 {
 	int err;
@@ -117,6 +156,7 @@ static int bt_sock_create(struct net *ne
 
 	if (bt_proto[proto] &amp;&amp; try_module_get(bt_proto[proto]-&gt;owner)) {
 		err = bt_proto[proto]-&gt;create(net, sock, proto);
+		bt_reclassify_sock_lock(sock, proto);
 		module_put(bt_proto[proto]-&gt;owner);
 	}
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080502203955</emailId><senderName></senderName><senderEmail>akpm</senderEmail><timestampReceived>2008-05-02 20:39:55-0400</timestampReceived><subject>[patch 1/1] hci_usb.h: fix hard-to-trigger race</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;

If someone tries to _urb_unlink while _urb_queue_head is running, he'll see
_urb-&gt;queue == NULL and fail to do any locking.  Prevent that from happening
by strategically placed barriers.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
---

 drivers/bluetooth/hci_usb.h |   21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff -puN drivers/bluetooth/hci_usb.h~hci_usbh-fix-hard-to-trigger-race drivers/bluetooth/hci_usb.h
--- a/drivers/bluetooth/hci_usb.h~hci_usbh-fix-hard-to-trigger-race
+++ a/drivers/bluetooth/hci_usb.h
@@ -70,7 +70,8 @@ static inline void _urb_queue_head(struc
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	list_add(&amp;_urb-&gt;list, &amp;q-&gt;head); _urb-&gt;queue = q;
+	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
+	_urb-&gt;queue = q; mb(); list_add(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
@@ -78,19 +79,23 @@ static inline void _urb_queue_tail(struc
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head); _urb-&gt;queue = q;
+	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
+	_urb-&gt;queue = q; mb(); list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
 static inline void _urb_unlink(struct _urb *_urb)
 {
-	struct _urb_queue *q = _urb-&gt;queue;
+	struct _urb_queue *q;
 	unsigned long flags;
-	if (q) {
-		spin_lock_irqsave(&amp;q-&gt;lock, flags);
-		list_del(&amp;_urb-&gt;list); _urb-&gt;queue = NULL;
-		spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
-	}
+
+	mb();
+	q = _urb-&gt;queue;
+	/* If q is NULL, it will die at easy-to-debug NULL pointer dereference.
+	   No need to BUG(). */
+	spin_lock_irqsave(&amp;q-&gt;lock, flags);
+	list_del(&amp;_urb-&gt;list); _urb-&gt;queue = NULL;
+	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
 struct hci_usb {
_
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080601013410</emailId><senderName>Dave Young</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-01 01:34:10-0400</timestampReceived><subject>[PATCH][resend] rfcomm deadlock fix</subject><body>

There's logic in __rfcomm_dlc_close:
	rfcomm_dlc_lock(d);
	d-&gt;state = BT_CLOSED;
	d-&gt;state_changed(d, err);
	rfcomm_dlc_unlock(d);

In rfcomm_dev_state_change, it's possible that rfcomm_dev_put try to take the
dlc lock, then we will deadlock.

Here fixed it by unlock dlc before rfcomm_dev_get in rfcomm_dev_state_change.

why not unlock just before rfcomm_dev_put? it's because there's another problem.
rfcomm_dev_get/rfcomm_dev_del will take rfcomm_dev_lock, but in rfcomm_dev_add
the lock order is : rfcomm_dev_lock --&gt; dlc lock

so I unlock dlc before the taken of rfcomm_dev_lock.
 
Actually it's a regression caused by commit
1905f6c736cb618e07eca0c96e60e3c024023428, the dlc state_change could be two
callbacks : rfcomm_sk_state_change and rfcomm_dev_state_change. I missed the \
rfcomm_sk_state_change that time.

Thanks Arjan van de Ven &lt;arjan@linux.intel.com&gt; for the effort in commit
4c8411f8c115def968820a4df6658ccfd55d7f1a
but he missed the rfcomm_dev_state_change lock issue.

Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

---
net/bluetooth/rfcomm/tty.c |   13 ++++++++++++-
1 file changed, 12 insertions(+), 1 deletion(-)

diff -upr linux/net/bluetooth/rfcomm/tty.c linux.new/net/bluetooth/rfcomm/tty.c
--- linux/net/bluetooth/rfcomm/tty.c	2008-05-30 15:46:33.000000000 +0800
+++ linux.new/net/bluetooth/rfcomm/tty.c	2008-05-30 17:08:30.000000000 +0800
@@ -566,11 +566,22 @@ static void rfcomm_dev_state_change(stru
 	if (dlc-&gt;state == BT_CLOSED) {
 		if (!dev-&gt;tty) {
 			if (test_bit(RFCOMM_RELEASE_ONHUP, &amp;dev-&gt;flags)) {
-				if (rfcomm_dev_get(dev-&gt;id) == NULL)
+				/* Drop DLC lock here to avoid deadlock
+				 * 1. rfcomm_dev_get will take rfcomm_dev_lock
+				 *    but in rfcomm_dev_add there's lock order:
+				 *    rfcomm_dev_lock -&gt; dlc lock
+				 * 2. rfcomm_dev_put will deaklock if it's
+				 *    the last reference
+				 */
+				rfcomm_dlc_unlock(dlc);
+				if (rfcomm_dev_get(dev-&gt;id) == NULL) {
+					rfcomm_dlc_lock(dlc);
 					return;
+				}
 
 				rfcomm_dev_del(dev);
 				rfcomm_dev_put(dev);
+				rfcomm_dlc_lock(dlc);
 			}
 		} else
 			tty_hangup(dev-&gt;tty);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080704163157</emailId><senderName>Gaël_Evenat</senderName><senderEmail>g007@wanadoo.fr</senderEmail><timestampReceived>2008-07-04 16:31:57-0400</timestampReceived><subject>errors on bluez-utils compilation</subject><body>

hi,
I tried to compile bluez-utils but there are some errors : (when I do make)
"
security.c: Dans la fonction «link_key_request» :
security.c:279: erreur: storage size of «req» isn»t known
security.c:291: erreur: «HCIGETAUTHINFO» undeclared (first use in this 
function)
security.c:291: erreur: (Each undeclared identifier is reported only once
security.c:291: erreur: for each function it appears in.)
security.c:279: attention : unused variable «req»
"
I don't what to do... If you have ideas

the ./configure was OK

thank you

(I have Ubuntu 8.04)

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080803233959</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-08-03 23:39:59-0400</timestampReceived><subject>Cannot pair A2DP speakers with Belkin Bluetooth adapter</subject><body>

[No, I am *not* having any device conflict with the pegasus driver.]

Hi,

I have a Belkin bluetooth adapter model F8T012xx1, IDs 0x050d:0x0121

http://catalog.belkin.com/IWCatProductPage.process?Product_Id=273100

and I cannot pair it with a set of bluetooth A2DP speakers. These same speakers work \
fine with my laptop, which has an internal bluetooth device 0x0a5c:0x2110. But \
whenever I try to pair the Belkin device using the commands

$ hcitool cc &lt;bdaddr&gt;
$ hcitool auth &lt;bdaddr&gt;

then the connection drops after only a few seconds and the pairing fails. To date, I \
have only been able to pair this adapter with my Nokia mobile phone, after which I \
have been able to browse the phone's filesystem successfully.

The adapter's device descriptor is:

T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  8 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=050d ProdID=0121 Rev= 4.13
S:  Manufacturer=Broadcom Corp
S:  Product=BELKIN BLUETOOTH USB ADAPTER CL. 1
S:  SerialNumber=000A3A7DFF80
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:* If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

Can anyone suggest anything to try in order to keep the BT connection up, please? I \
have already tried adding the flags HCI_RESET | HCI_WRONG_SCO_MTU without any effect.

Thanks for any help here,
Cheers,
Chris



      __________________________________________________________
Not happy with your email address?.
Get the one you really want - millions of new email addresses available now at Yahoo! \
                http://uk.docs.yahoo.com/ymail/new.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080901223004</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-09-01 22:30:04-0400</timestampReceived><subject>bluez 4.2 + linux 2.6.27-rc5 -&gt; no audio interface</subject><body>

Hi

I decided to try bluez-4.2 with my Jabra JX10 Bluetooth headset. I ran
bluetoothd. It says that it has registered interfaces for
org.bluez.network.Router, org.bluez.network.Hub, org.bluez.network.Peer
and org.bluez.serial.ProxyManager but nothing about an audio service. It
does load the /usr/local/lib/bluetooth/plugins/audio.so plugin. The
python script bluez-4.2/audio/test-audio says
"org.freedesktop.DBus.Error.UnknownMethod: Method "ActivateService" with
signature "s" on interface "org.bluez.Manager" doesn't exist".

Running arecord just says "BT_GETCAPABILITIES failed : Input/output
error(5)".

I created /etc/bluetooth/audio.conf and modified my ~/.asoundrc.

What else do I need to do to get bluetooth audio working?

I am running linux 2.6.27-rc5 because I want to try the new btusb driver
and it's SCO over USB support.

In
http://[2001:4860:0:1001::28]/search?q�che:AJmIOP3i9YIJ:pastebin.ca/raw/1094961+bluetoothd+Registered+interface+org.bluez&amp;hl=en&amp;ct=clnk&amp;cd


I saw that bluetoothd can say "Registered interface
org.bluez.audio.Headset on path /org/bluez/hci0/dev_". Does it have to
contact the bluetooth headset before registering the
org.bluez.audio.Headset interface?

When I run bluetoothd, dbus-monitor --system says "
interface=org.bluez.Manager; member�apterAdded".

src/test-discovery, src/test-device, and src/test-adapter all work.

Any help would be most welcome.

thanks
Stuart

PS I also tried creating /etc/bluetooth/rfcomm.conf but I don't really
know what to put in it.

&gt; root@kooka; bluetoothd -dn
bluetoothd[4160]: Bluetooth daemon
bluetoothd[4160]: Enabling debug information
bluetoothd[4160]: parsing main.conf
bluetoothd[4160]: offmode=NoScan
bluetoothd[4160]: discovto=0
bluetoothd[4160]: pageto�92
bluetoothd[4160]: name=%h-%d
bluetoothd[4160]: class=0x000100
bluetoothd[4160]: Starting SDP server
bluetoothd[4160]: Adding rec : 0xb8bcaa98
bluetoothd[4160]: with handle : 0x1
bluetoothd[4160]: Adding rec : 0xb8bcca80
bluetoothd[4160]: with handle : 0x0
bluetoothd[4160]: Service classes 0x00
bluetoothd[4160]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[4160]: /usr/local/lib/bluetooth/plugins/audio.so
bluetoothd[4160]: Unix socket created: 11
bluetoothd[4160]: /usr/local/lib/bluetooth/plugins/serial.so
bluetoothd[4160]: /usr/local/lib/bluetooth/plugins/network.so
bluetoothd[4160]: Parsing /etc/bluetooth/network.conf failed: No such
file or directory
bluetoothd[4160]: Config options: InterfacePrefix=bnep%d,
PANU_Script=(null), GN_Script=(null), NAP_Script=(null),
GN_Interface=pan0, NAP_Interface=pan1, Security=true
bluetoothd[4160]: bridge pan0 created
bluetoothd[4160]: /usr/local/lib/bluetooth/plugins/input.so
bluetoothd[4160]: input.conf: Key file does not have key 'IdleTimeout'
bluetoothd[4160]: HCI dev 0 registered
bluetoothd[4160]: HCI dev 0 already up
bluetoothd[4160]: headset_server_probe: path /org/bluez/hci0
bluetoothd[4160]: Couldn't find record for : 0x10000
bluetoothd[4160]: Adding record with handle 0x10000
bluetoothd[4160]: Adding rec : 0xb8bcf760
bluetoothd[4160]: with handle : 0x10000
bluetoothd[4160]: Service classes 0x00
bluetoothd[4160]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[4160]: SEP 0xb8bcd3b8 registered: type:0 codec:0 seid:1
bluetoothd[4160]: Couldn't find record for : 0x10001
bluetoothd[4160]: Adding record with handle 0x10001
bluetoothd[4160]: Adding rec : 0xb8bcd8a0
bluetoothd[4160]: with handle : 0x10001
bluetoothd[4160]: Service classes 0x08
bluetoothd[4160]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[4160]: Couldn't find record for : 0x10002
bluetoothd[4160]: Adding record with handle 0x10002
bluetoothd[4160]: Adding rec : 0xb8bcd5c0
bluetoothd[4160]: with handle : 0x10002
bluetoothd[4160]: Service classes 0x08
bluetoothd[4160]: Couldn't find record for : 0x10003
bluetoothd[4160]: Adding record with handle 0x10003
bluetoothd[4160]: Adding rec : 0xb8bcdd58
bluetoothd[4160]: with handle : 0x10003
bluetoothd[4160]: Service classes 0x08
bluetoothd[4160]: proxy_probe: path /org/bluez/hci0
bluetoothd[4160]: Registered interface org.bluez.serial.ProxyManager on
path /org/bluez/hci0
bluetoothd[4160]: network_server_probe: path /org/bluez/hci0
bluetoothd[4160]: Couldn't find record for : 0x10004
bluetoothd[4160]: Adding record with handle 0x10004
bluetoothd[4160]: Adding rec : 0xb8bd05c0
bluetoothd[4160]: with handle : 0x10004
bluetoothd[4160]: Service classes 0x0a
bluetoothd[4160]: register_server_record: got record id 0x10004
bluetoothd[4160]: Registered interface org.bluez.network.Peer on path
/org/bluez/hci0
bluetoothd[4160]: network_server_probe: path /org/bluez/hci0
bluetoothd[4160]: Couldn't find record for : 0x10005
bluetoothd[4160]: Adding record with handle 0x10005
bluetoothd[4160]: Adding rec : 0xb8bd0be8
bluetoothd[4160]: with handle : 0x10005
bluetoothd[4160]: Service classes 0x0a
bluetoothd[4160]: register_server_record: got record id 0x10005
bluetoothd[4160]: Registered interface org.bluez.network.Hub on path
/org/bluez/hci0
bluetoothd[4160]: network_server_probe: path /org/bluez/hci0
bluetoothd[4160]: Couldn't find record for : 0x10006
bluetoothd[4160]: Adding record with handle 0x10006
bluetoothd[4160]: Adding rec : 0xb8bd1210
bluetoothd[4160]: with handle : 0x10006
bluetoothd[4160]: Service classes 0x0a
bluetoothd[4160]: register_server_record: got record id 0x10006
bluetoothd[4160]: Registered interface org.bluez.network.Router on path
/org/bluez/hci0
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_14_A7_74_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_03_89_B7_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_0A_94_94_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_03_89_DC_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_03_89_DC_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_03_89_FE_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_0E_6D_8F_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_17_E5_E6_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_17_E5_16_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_17_E5_0C_xx_xx
bluetoothd[4160]: Creating device /org/bluez/hci0/dev_00_1A_45_2F_xx_xx
bluetoothd[4160]: Adapter /org/bluez/hci0 has been enabled
bluetoothd[4160]: Starting security manager 0
bluetoothd[4160]: child 4162 exited
bluetoothd[4160]: child 4164 exited
bluetoothd[4160]: Accepted new client connection on unix socket (fd )
bluetoothd[4160]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4160]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4160]: Unix client disconnected (fd )
bluetoothd[4160]: Accepted new client connection on unix socket (fd )
bluetoothd[4160]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4160]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4160]: Unix client disconnected (fd )
.....


&gt; ; ./bluez-4.2/audio/test-audio
Traceback (most recent call last):
    File "./bluez-4.2/audio/test-audio", line 10, in &lt;module&gt;
      conn = manager.ActivateService('audio')
    File "/var/lib/python-support/python2.5/dbus/proxies.py", line 68, in
__call__
      return self._proxy_method(*args, **keywords)
    File "/var/lib/python-support/python2.5/dbus/proxies.py", line 140,
in __call__
      **keywords)
    File "/var/lib/python-support/python2.5/dbus/connection.py", line
622, in call_blocking
      message, timeout)
dbus.exceptions.DBusException: org.freedesktop.DBus.Error.UnknownMethod:
Method "ActivateService" with signature "s" on interface
"org.bluez.Manager" doesn't exist


&gt; ; arecord -D JX10  -f S16_LE | wc -c
ALSA lib pcm_bluetooth.c:1619:(bluetooth_init) BT_GETCAPABILITIES failed
&gt; Input/output error(5)
arecord: main:564: audio open error: Input/output error
0

&gt; ; less ~/.asoundrc
pcm.JX10 {
          type bluetooth
          device "00:1A:45:2F:xx:xx" # Jabra JX10 series 2
}
&gt; ; cat /etc/bluetooth/audio.conf
# Configuration file for the audio service

# This section contains options which are not specific to any
# particular interface
[General]

# Switch to master role for incoming connections (defaults to true)
Master=true

# If we want to disable support for specific services
# Defaults to supporting all implemented services
Disable=Control,Source

# SCO routing. Either PCM or HCI (in which case audio is routed to/from
ALSA)
# Defaults to HCI
SCORouting=PCM

# Headset interface specific options (i.e. options which affect how the
audio
# service interacts with remote headset devices)
[Headset]

# Set to true to support HFP (in addition to HSP only which is the default)
# Defaults to false
HFP�lse

# HFP Gateway features
# Defaults to false
3WayCalling�lse
EchoCancelNoiseCancel�lse
VoiceRecognition�lse
InBandRingtone�lse
VoiceTags�lse
RejectingCalls�lse
EnhancedCallStatus�lse
EnhancedCallControl�lse
ExtendedErrorResultCodes�lse

# Just an example of potential config options for the other interfaces
[A2DP]
SBCSources=1
MPEG12Sources=0
SBCSinksMPEG12Sinks:; cat /etc/bluetooth/main.conf
[General]

# List of plugins that should not be loaded on bluetoothd startup
#DisablePlugins = network,input

# Default adaper name
# %h - substituted for hostname
# %d - substituted for adapter id
Name = %h-%d

# Default device class. Only the major and minor device class bits are
# considered
Class = 0x000100

# How long to stay in discoverable mode before going back to
non-discoverable
# The value is in seconds. Default is 180, i.e. 3 minutes.
# 0 = disable timer, i.e. stay discoverable forever
DiscoverableTimeout = 0

# Use some other page timeout than the controller default one
# (16384 = 10 seconds)
PageTimeout = 8192

# Behaviour for Adapter.SetProperty("mode", "off")
# Possible values: "DevDown", "NoScan" (default)
OffMode = NoScan


&gt; ; uname -a
Linux kooka 2.6.27-rc5 #1 SMP Sat Aug 30 16:48:04 CEST 2008 i686 GNU/Linux

&gt; ; cat /etc/dbus-1/system.d/bluetooth.conf
&lt;!-- This configuration file specifies the required security policies
       for Bluetooth core daemon to work. --&gt;

&lt;!DOCTYPE busconfig PUBLIC "-//freedesktop//DTD D-BUS Bus Configuration
1.0//EN"
   "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd"&gt;
&lt;busconfig&gt;

    &lt;!-- ../system.conf have denied everything, so we just punch some
holes --&gt;

    &lt;policy user="root"&gt;
      &lt;allow own="org.bluez"/&gt;
    &lt;/policy&gt;

    &lt;policy at_console="true"&gt;
      &lt;allow send_path="/"/&gt;
      &lt;allow send_path="/org/bluez"/&gt;

      &lt;allow send_destination="org.bluez.Manager"/&gt;
      &lt;allow receive_sender="org.bluez.Manager"/&gt;

      &lt;allow send_destination="org.bluez.Adapter"/&gt;
      &lt;allow receive_sender="org.bluez.Adapter"/&gt;

      &lt;allow send_destination="org.bluez.Device"/&gt;
      &lt;allow receive_sender="org.bluez.Device"/&gt;
    &lt;/policy&gt;

&gt; root@kooka;  dbus-monitor  --system
signal sender=org.freedesktop.DBus -&gt; dest=:1.78
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameAcquired
     string ":1.78"
signal sender=org.freedesktop.DBus -&gt; dest=(null destination)
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameOwnerChanged
     string "org.bluez"
     string ":1.76"
     string ""
signal sender=org.freedesktop.DBus -&gt; dest=(null destination)
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameOwnerChanged
     string ":1.76"
     string ":1.76"
     string ""
signal sender=org.freedesktop.DBus -&gt; dest=(null destination)
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameOwnerChanged
     string ":1.79"
     string ""
     string ":1.79"
signal sender=org.freedesktop.DBus -&gt; dest=(null destination)
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameOwnerChanged
     string "org.bluez"
     string ""
     string ":1.79"
signal sender=:1.79 -&gt; dest=(null destination) path=/;
interface=org.bluez.Manager; member�apterAdded
     object path "/org/bluez/hci0"
signal sender=:1.79 -&gt; dest=(null destination) path=/org/bluez/hci0;
interface=org.bluez.Adapter; member=PropertyChanged
     string "Mode"
     variant       string "off"
signal sender=:1.79 -&gt; dest=(null destination) path=/;
interface=org.bluez.Manager; member�faultAdapterChanged
     object path "/org/bluez/hci0"

&gt; ; src/test-discovery
[ 00:16:AE:xx:xx:xx ]
     RSSI = 0
     Name = Livebox-A328
     Class = 0x520300
     Address = 00:xx:xx:xx:xx:xx
&gt; ;  src/test-device name 00:1A:45:2F:xx:xx
Jabra JX10 series 2
&gt; ; src/test-device class 00:1A:45:2F:xx:xx
0x200404
&gt; ; src/test-device trusted 00:1A:45:2F:xx:xx
0
&gt; ; src/test-adapter address
00:0C:xx:xx:xx:xx

&gt; ; network/test-network
Traceback (most recent call last):
   File "network/test-network", line 10, in &lt;module&gt;
     conn = manager.ActivateService('network')
   File "/var/lib/python-support/python2.5/dbus/proxies.py", line 68, in
__call__
     return self._proxy_method(*args, **keywords)
   File "/var/lib/python-support/python2.5/dbus/proxies.py", line 140,
in __call__
     **keywords)
   File "/var/lib/python-support/python2.5/dbus/connection.py", line
622, in call_blocking
     message, timeout)
dbus.exceptions.DBusException: org.freedesktop.DBus.Error.UnknownMethod:
Method "ActivateService" with signature "s" on interface
"org.bluez.Manager" doesn't exist

&gt; ; serial/test-serial
Traceback (most recent call last):
   File "serial/test-serial", line 12, in &lt;module&gt;
     conn = manager.ActivateService('serial')
   File "/var/lib/python-support/python2.5/dbus/proxies.py", line 68, in
__call__
     return self._proxy_method(*args, **keywords)
   File "/var/lib/python-support/python2.5/dbus/proxies.py", line 140,
in __call__
     **keywords)
   File "/var/lib/python-support/python2.5/dbus/connection.py", line
622, in call_blocking
     message, timeout)
dbus.exceptions.DBusException: org.freedesktop.DBus.Error.UnknownMethod:
Method "ActivateService" with signature "s" on interface
"org.bluez.Manager" doesn't exist

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081103184739</emailId><senderName>Isaías_Martínez_Yelmo</senderName><senderEmail>isaiasmy@gmail.com</senderEmail><timestampReceived>2008-11-03 18:47:39-0400</timestampReceived><subject>Dell 365 Bluetooth</subject><body>

Hello,

I would like to ask if there is some future plan to support the new bluetooth 
device Dell 365 Bluetooth.  As far as I know, this is a new device included on 
new Dell Latitudes e4200/e4300 and I have not found any information related 
with it yet. This is the information that i have obtained from lsusb, just to 
provide all the information that I have:

Bus 001 Device 006: ID 413c:8160 Dell Computer Corp. 
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass          224 Wireless
  bDeviceSubClass         1 Radio Frequency
  bDeviceProtocol         1 Bluetooth
  bMaxPacketSize0        64
  idVendor           0x413c Dell Computer Corp.
  idProduct          0x8160 
  bcdDevice            1.73
  iManufacturer           1 Dell Computer Corp
  iProduct                2 Dell Wireless 365 Bluetooth Module
  iSerial                 0 
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength          216
    bNumInterfaces          4
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower              100mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           3
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0010  1x 16 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x82  EP 2 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x02  EP 2 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0000  1x 0 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0000  1x 0 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       1
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0009  1x 9 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0009  1x 9 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       2
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0011  1x 17 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0011  1x 17 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       3
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       4
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       5
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        2
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       255 Vendor Specific Class
      bInterfaceSubClass    255 Vendor Specific Subclass
      bInterfaceProtocol    255 Vendor Specific Protocol
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x84  EP 4 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x04  EP 4 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        3
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass       254 Application Specific Interface
      bInterfaceSubClass      1 Device Firmware Update
      bInterfaceProtocol      0 
      iInterface              0 
      ** UNRECOGNIZED:  07 21 07 88 13 40 00
Device Status:     0x0001
  Self Powered

My distro is Ubuntu Intrepid:

2.6.27-7-generic #1 SMP x86_64 GNU/Linux

Thank you very mucho for your attention.

Cheers,

Isaías
-- 
Isaías Martínez Yelmo
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201155356</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-12-01 15:53:56-0400</timestampReceived><subject>New property for DeviceFound signals to distinguish EIR devices</subject><body>

Hi,

I think it'd be beneficial to add a new property to the DeviceFound
signals so that the UI performing the discovery would know if an
Extended Inquiry Result was received and therefore conclude that this is
a 2.1 (or newer) device. With the current API this is not really
possible, e.g. a device name could be part of the signal because of EIR
or it might be there simply because it was cached previously.

The benefit in knowing this "2.1 or newer" information is that the UI
could anticipate whether legacy or secure simple pairing will be
triggered or not. For us in Maemo we have only had to worry about legacy
pairing so far due to 2.0 or older hardware. Because of this we have
been able to eliminate the delay in getting a PIN request from the
controller and the user responding to it simply by asking the user for
the PIN *before* starting the actual pairing procedure. Especially for
longer PINs there's a risk of a timeout error on the lower layers and so
this delay elimination is a good thing.

Now, that SSP might occur it would be confusing for the user to be
presented with a PIN dialog and then a few moments later with e.g. a
passkey confirmation dialog for SSP. However, with the new property the
UI could make this preliminary PIN entry only occur when it's really
needed.

So, what should the new property be called?

* I proposed "SSP" (a boolean) on IRC but Marcel didn't think it's such
a good idea since there shouldn't be any artificial coupling between SSP
and EIR (since essentially they are two different things even though
they typically occur together).

* If SSP isn't good, then how about "EIR" which would also be a boolean

* Another alternative would be to introduce a "Version" property that
could be reused also in the Adapter interface to show which core spec
version is being used. Another question is should it be numeric or a
string? A numeric one would allow easy comparisons but a string would be
more flexible and consistent with the rest of the D-Bus API.

Any other suggestions or opinions?

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201161257</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-01 16:12:57-0400</timestampReceived><subject>Re: New property for DeviceFound signals to distinguish EIR devices</subject><body>

Hi Johan,

&gt; I think it'd be beneficial to add a new property to the DeviceFound
&gt; signals so that the UI performing the discovery would know if an
&gt; Extended Inquiry Result was received and therefore conclude that this is
&gt; a 2.1 (or newer) device. With the current API this is not really
&gt; possible, e.g. a device name could be part of the signal because of EIR
&gt; or it might be there simply because it was cached previously.
&gt; 
&gt; The benefit in knowing this "2.1 or newer" information is that the UI
&gt; could anticipate whether legacy or secure simple pairing will be
&gt; triggered or not. For us in Maemo we have only had to worry about legacy
&gt; pairing so far due to 2.0 or older hardware. Because of this we have
&gt; been able to eliminate the delay in getting a PIN request from the
&gt; controller and the user responding to it simply by asking the user for
&gt; the PIN *before* starting the actual pairing procedure. Especially for
&gt; longer PINs there's a risk of a timeout error on the lower layers and so
&gt; this delay elimination is a good thing.
&gt; 
&gt; Now, that SSP might occur it would be confusing for the user to be
&gt; presented with a PIN dialog and then a few moments later with e.g. a
&gt; passkey confirmation dialog for SSP. However, with the new property the
&gt; UI could make this preliminary PIN entry only occur when it's really
&gt; needed.
&gt; 
&gt; So, what should the new property be called?
&gt; 
&gt; * I proposed "SSP" (a boolean) on IRC but Marcel didn't think it's such
&gt; a good idea since there shouldn't be any artificial coupling between SSP
&gt; and EIR (since essentially they are two different things even though
&gt; they typically occur together).
&gt; 
&gt; * If SSP isn't good, then how about "EIR" which would also be a boolean
&gt; 
&gt; * Another alternative would be to introduce a "Version" property that
&gt; could be reused also in the Adapter interface to show which core spec
&gt; version is being used. Another question is should it be numeric or a
&gt; string? A numeric one would allow easy comparisons but a string would be
&gt; more flexible and consistent with the rest of the D-Bus API.

so I do like the idea of a boolean property. That is pretty simple. So
my current proposal would be "LegacyPairing". Since the Simple Pairing
should become the default and handles all the use cases right, we only
need to detect the cases for the old 2.0 and before devices.

However this has a limitation. We make the assumption that we always get
the Extended Inquiry Result. So setting LegacyPairing=True doesn't mean
that we are not doing Simple Pairing. It just means that we don't know
at this point of time if the remote device supports its. In practice we
might not be seeing this, but it is not mandatory for 2.1 devices to
enable Extended Inquiry Response.

We could also cache the value since if we do SDP before initiating a
dedicated pairing (only fails with Security Mode 3 devices) and then we
do get the real value if Simple Pairing is enabled or not.

So while adding it to the DeviceFound properties would be nice, but I
think adding it to the actual device properties might make more sense.
However right now the wizard is not doing SDP before pairing.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080928174406</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-28 17:44:06-0400</timestampReceived><subject>[PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi:

Ubuntu was carrying a "hildon" patch to make the bluetooth-properties application fit \
on smaller form factors for lpia.  We've adapted the patch to be applicable to all \
platforms.  It changes the layout of the bluetooth-properties window to be better for \
small displays without a loss of functionality.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["06_preferences-horizontal-layout.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/properties/adapter.c \
                bluez-gnome-1.5.new/properties/adapter.c
--- bluez-gnome-1.5/properties/adapter.c	2008-09-28 11:47:41.000000000 -0500
+++ bluez-gnome-1.5.new/properties/adapter.c	2008-09-28 11:47:51.000000000 -0500
@@ -208,11 +208,7 @@
 	}
 
 	update_buttons(adapter, paired, trusted, connected);
-
-	if (selected == TRUE)
-		gtk_widget_show(adapter-&gt;button_trusted);
-	else
-		gtk_widget_hide(adapter-&gt;button_trusted);
+	gtk_widget_set_sensitive(adapter-&gt;button_trusted, selected);
 }
 
 static void row_callback(GtkTreeModel *model, GtkTreePath  *path,
@@ -379,7 +375,7 @@
 		timeout = 0;
 	}
 
-	mainbox = gtk_vbox_new(FALSE, 18);
+	mainbox = gtk_hbox_new(FALSE, 12);
 	gtk_container_set_border_width(GTK_CONTAINER(mainbox), 12);
 
 	gtk_notebook_prepend_page(GTK_NOTEBOOK(adapter-&gt;notebook),
@@ -389,6 +385,9 @@
 
 	adapter-&gt;child = mainbox;
 
+	mainbox = gtk_vbox_new (FALSE, 18);
+	gtk_container_add(GTK_CONTAINER (GTK_CONTAINER (adapter-&gt;child)), mainbox);
+
 	vbox = gtk_vbox_new(FALSE, 6);
 	gtk_box_pack_start(GTK_BOX(mainbox), vbox, FALSE, FALSE, 0);
 
@@ -489,7 +488,7 @@
 					G_CALLBACK(focus_callback), adapter);
 
 	vbox = gtk_vbox_new(FALSE, 6);
-	gtk_box_pack_start(GTK_BOX(mainbox), vbox, TRUE, TRUE, 0);
+	gtk_box_pack_start(GTK_BOX(adapter-&gt;child), vbox, TRUE, TRUE, 0);
 
 	label = create_label(_("Known devices"));
 	gtk_box_pack_start(GTK_BOX(vbox), label, FALSE, FALSE, 0);
@@ -535,9 +534,9 @@
 	adapter-&gt;button_delete = button;
 
 	button = gtk_button_new_with_mnemonic(NULL);
-	gtk_widget_set_no_show_all(button, TRUE);
 	gtk_container_add(GTK_CONTAINER(buttonbox), button);
-
+	gtk_button_set_label(GTK_BUTTON(button),_("Set _Trusted"));
+	gtk_widget_set_sensitive(GTK_WIDGET(button), FALSE);
 	g_signal_connect(G_OBJECT(button), "clicked",
 				G_CALLBACK(trusted_callback), adapter);
 


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929090720</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 09:07:20-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi Mario,

&gt; Ubuntu was carrying a "hildon" patch to make the bluetooth-properties application \
&gt; fit on smaller form factors for lpia.  We've adapted the patch to be applicable to \
&gt; all platforms.  It changes the layout of the bluetooth-properties window to be \
&gt; better for small displays without a loss of functionality.

I have no idea what this patch tries to achieve. How will this save
space on small displays?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929091524</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 09:15:24-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

On Mon, 2008-09-29 at 11:07 +0200, Marcel Holtmann wrote:
&gt; Hi Mario,
&gt; 
&gt; &gt; Ubuntu was carrying a "hildon" patch to make the bluetooth-properties application \
&gt; &gt; fit on smaller form factors for lpia.  We've adapted the patch to be applicable \
&gt; &gt; to all platforms.  It changes the layout of the bluetooth-properties window to be \
&gt; &gt; better for small displays without a loss of functionality.
&gt; 
&gt; I have no idea what this patch tries to achieve. How will this save
&gt; space on small displays?

A before/after screenshot would be useful indeed. If it's a good layout,
it should probably be used by default.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929150516</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-29 15:05:16-0400</timestampReceived><subject>RE: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi Bastien &amp; Marcel:

Here's the screenshots as requested:

Old: http://imagebin.org/27644

New: http://imagebin.org/27643

A lot of these MID devices don't have screens bigger than 1024x600 (some 800x600 \
depending on their aspect ratio).  This change really just reorganizes the GUI so \
that both laptops and MID devices can use the same layout.  I'm attaching an updated \
patch relative to 1.6.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 



-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org on behalf of Bastien Nocera
Sent: Mon 9/29/2008 4:15 AM
To: Marcel Holtmann
Cc: Limonciello, Mario; linux-bluetooth@vger.kernel.org
Subject: Re: [PATCH] Make bluetooth-properties fit on smaller displays
 
On Mon, 2008-09-29 at 11:07 +0200, Marcel Holtmann wrote:
&gt; Hi Mario,
&gt; 
&gt; &gt; Ubuntu was carrying a "hildon" patch to make the bluetooth-properties application \
&gt; &gt; fit on smaller form factors for lpia.  We've adapted the patch to be applicable \
&gt; &gt; to all platforms.  It changes the layout of the bluetooth-properties window to be \
&gt; &gt; better for small displays without a loss of functionality.
&gt; 
&gt; I have no idea what this patch tries to achieve. How will this save
&gt; space on small displays?

A before/after screenshot would be useful indeed. If it's a good layout,
it should probably be used by default.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


["06_preferences-horizontal-layout.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.6/properties/adapter.c \
                bluez-gnome-1.6.new/properties/adapter.c
--- bluez-gnome-1.6/properties/adapter.c	2008-09-29 07:08:50.000000000 -0500
+++ bluez-gnome-1.6.new/properties/adapter.c	2008-09-29 09:55:36.000000000 -0500
@@ -246,16 +246,10 @@
 	}
 
 	update_buttons(adapter, paired, trusted, connected);
-
-	if (selected == TRUE) {
-		gtk_widget_show(adapter-&gt;button_disconnect);
-		gtk_widget_show(adapter-&gt;button_trusted);
-		gtk_widget_show(adapter-&gt;button_delete);
-	} else {
-		gtk_widget_hide(adapter-&gt;button_disconnect);
-		gtk_widget_hide(adapter-&gt;button_trusted);
-		gtk_widget_hide(adapter-&gt;button_delete);
-	}
+	
+	gtk_widget_set_sensitive(adapter-&gt;button_disconnect,selected);
+	gtk_widget_set_sensitive(adapter-&gt;button_trusted,selected);
+	gtk_widget_set_sensitive(adapter-&gt;button_delete,selected);
 }
 
 static void row_callback(GtkTreeModel *model, GtkTreePath  *path,
@@ -461,7 +455,7 @@
 	adapter-&gt;discoverable = discoverable;
 	adapter-&gt;timeout_value = timeout;
 
-	mainbox = gtk_vbox_new(FALSE, 18);
+	mainbox = gtk_hbox_new(FALSE, 12);
 	gtk_container_set_border_width(GTK_CONTAINER(mainbox), 12);
 
 	gtk_notebook_prepend_page(GTK_NOTEBOOK(adapter-&gt;notebook),
@@ -471,6 +465,9 @@
 
 	adapter-&gt;child = mainbox;
 
+	mainbox = gtk_vbox_new (FALSE, 18);
+	gtk_container_add(GTK_CONTAINER (GTK_CONTAINER (adapter-&gt;child)), mainbox);
+
 	vbox = gtk_vbox_new(FALSE, 6);
 	gtk_box_pack_start(GTK_BOX(mainbox), vbox, FALSE, FALSE, 0);
 
@@ -569,7 +566,7 @@
 	entry = gtk_entry_new();
 	gtk_entry_set_max_length(GTK_ENTRY(entry), 248);
 	gtk_widget_set_size_request(entry, 240, -1);
-	gtk_box_pack_start(GTK_BOX(vbox), entry, TRUE, TRUE, 0);
+	gtk_box_pack_start(GTK_BOX(vbox), entry, FALSE, FALSE, 0);
 
 	if (name != NULL)
 		gtk_entry_set_text(GTK_ENTRY(entry), name);
@@ -582,7 +579,7 @@
 					G_CALLBACK(focus_callback), adapter);
 
 	vbox = gtk_vbox_new(FALSE, 6);
-	gtk_box_pack_start(GTK_BOX(mainbox), vbox, TRUE, TRUE, 0);
+	gtk_box_pack_start(GTK_BOX(adapter-&gt;child), vbox, TRUE, TRUE, 0);
 
 	label = create_label(_("Known devices"));
 	gtk_box_pack_start(GTK_BOX(vbox), label, FALSE, FALSE, 0);
@@ -634,8 +631,8 @@
 						GTK_ICON_SIZE_BUTTON);
 	gtk_container_add(GTK_CONTAINER(button), image);
 	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
 	gtk_widget_show(image);
+	gtk_widget_set_sensitive(button,FALSE);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);
@@ -651,8 +648,8 @@
 						GTK_ICON_SIZE_BUTTON);
 	gtk_container_add(GTK_CONTAINER(button), image);
 	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
 	gtk_widget_show(image);
+	gtk_widget_set_sensitive(button,FALSE);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);
@@ -668,8 +665,8 @@
 						GTK_ICON_SIZE_BUTTON);
 	gtk_container_add(GTK_CONTAINER(button), image);
 	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
 	gtk_widget_show(image);
+	gtk_widget_set_sensitive(button,FALSE);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929152210</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 15:22:10-0400</timestampReceived><subject>RE: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

On Mon, 2008-09-29 at 10:05 -0500, Mario_Limonciello@Dell.com wrote:
&gt; Hi Bastien &amp; Marcel:
&gt; 
&gt; Here's the screenshots as requested:
&gt; 
&gt; Old: http://imagebin.org/27644
&gt; 
&gt; New: http://imagebin.org/27643
&gt; 
&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt; the same layout.  I'm attaching an updated patch relative to 1.6.

Both versions would fit on both those screens. What's wrong with leaving
it as is? In the worst case, I'd move the contextual buttons to the side
of the treeview, instead of underneath, and add labels to those buttons.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929164712</emailId><senderName>"Emmet Hikory"</senderName><senderEmail>persia@ubuntu.com</senderEmail><timestampReceived>2008-09-29 16:47:12-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

On Tue, Sep 30, 2008 at 12:22 AM, Bastien Nocera &lt;hadess@hadess.net&gt; wrote:
&gt; On Mon, 2008-09-29 at 10:05 -0500, Mario_Limonciello@Dell.com wrote:
&gt;&gt; Hi Bastien &amp; Marcel:
&gt;&gt;
&gt;&gt; Here's the screenshots as requested:
&gt;&gt;
&gt;&gt; Old: http://imagebin.org/27644
&gt;&gt;
&gt;&gt; New: http://imagebin.org/27643
&gt;&gt;
&gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt;
&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt; of the treeview, instead of underneath, and add labels to those buttons.

    Good day.  I adapted the suggested patch for this from one
previously shipped in Ubuntu by Michael Frey and Loic Minier.

    My actual test screens were 1024x600 (intel driver) and 800x600
(vesa driver), running under the hildon-desktop environment.  If I'm
running in clean GNOME@96DPI, the default looks OK, but there is only
space for two or three devices.  If I'm running under hildon-desktop,
there's only space for one device.  As one of these screens is
actually 247 DPI, running at 96 DPI tends to make everything nearly
unreadably small.  Note that I've also tested with GNOME+devilspie, to
force maximisation, which created a bit more space, but not hugely
more space.

    In practice, I use a keyboard, headset, communication to a yet
smaller portable device, and communication to my laptop.  I'd like to
add a mouse, GPS device, and printer.  I'm experimenting with a
"bluetooth handset" for making VoIP calls, which would be a separate
audio device for ekiga/empathy.  As a result, my device listing easily
exceeds the limits imposed by the vertical layout on a small screen.
Whlie this may be an exceptional case, I think "mouse, keyboard,
headset, phone, printer" isn't an unreasonable list of accessories,
even for a regular laptop user.

    One possible solution would be to write a separate hildon front
end, which is probably the best solution for 640x480 or 800x480, but
for 800x600 and 1024x600, the use case for using themed GNOME with
higher DPI hinting is strong enough that having a separate front-end
seems confusing.

    Mind you, I don't want to limit the experience on high-resolution
low-DPI screens, and will admit that I don't have the equipment to
properly test this use case.  If the consensus is that it the result
of moving the device listing to the right creates an unpleasant
experience for these users, then perhaps it is not a sensible default.

-- 
Emmet HIKORY
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929234133</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 23:41:33-0400</timestampReceived><subject>RE: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi Bastien,

&gt; &gt; Here's the screenshots as requested:
&gt; &gt; 
&gt; &gt; Old: http://imagebin.org/27644
&gt; &gt; 
&gt; &gt; New: http://imagebin.org/27643
&gt; &gt; 
&gt; &gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt; &gt; (some 800x600 depending on their aspect ratio).  This change really
&gt; &gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt; &gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt; 
&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt; of the treeview, instead of underneath, and add labels to those buttons.

I really don't see the advantage of the vertical layout. For the buttons
I tried to use a ToolBar, but that looks ugly since I can get rid of the
top and bottom frame. Otherwise we could have put that to the right of
the TreeView and saved the extra space you guys need.

Regards

Marcel



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930080040</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-09-30 08:00:40-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Bastien Nocera wrote:
&gt; On Mon, 2008-09-29 at 10:05 -0500, Mario_Limonciello@Dell.com wrote:
&gt;   
&gt;&gt; Hi Bastien &amp; Marcel:
&gt;&gt;
&gt;&gt; Here's the screenshots as requested:
&gt;&gt;
&gt;&gt; Old: http://imagebin.org/27644
&gt;&gt;
&gt;&gt; New: http://imagebin.org/27643
&gt;&gt;
&gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt;&gt;     
&gt;
&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt; of the treeview, instead of underneath, and add labels to those buttons.
&gt;   
The preferences dialog on an Eee PC (701) screen is a real pain, it is 
too big vertically.  800x480 screen, plus a window manager bar at the 
bottom, plus some chunky window decorations up the top.  For a window to 
fit conveniently on a standard Eee PC screen it needs to be 422 pixels 
vertically it looks like (the standard decorations are VERY chunky :)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930081729</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 08:17:29-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi David,

&gt; &gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt; &gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt; &gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt; &gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt; &gt;&gt;     
&gt; &gt;
&gt; &gt; Both versions would fit on both those screens. What's wrong with leaving
&gt; &gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt; &gt; of the treeview, instead of underneath, and add labels to those buttons.
&gt; &gt;   
&gt; The preferences dialog on an Eee PC (701) screen is a real pain, it is 
&gt; too big vertically.  800x480 screen, plus a window manager bar at the 
&gt; bottom, plus some chunky window decorations up the top.  For a window to 
&gt; fit conveniently on a standard Eee PC screen it needs to be 422 pixels 
&gt; vertically it looks like (the standard decorations are VERY chunky :)

the dialog ix 420x420 and thus it should fit.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930085651</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-09-30 08:56:51-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Marcel Holtmann wrote:
&gt; Hi David,
&gt;
&gt;   
&gt;&gt;&gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt;&gt;&gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt;&gt;&gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt;&gt;&gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt;&gt;&gt;&gt;     
&gt;&gt;&gt;&gt;         
&gt;&gt;&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt;&gt;&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt;&gt;&gt; of the treeview, instead of underneath, and add labels to those buttons.
&gt;&gt;&gt;   
&gt;&gt;&gt;       
&gt;&gt; The preferences dialog on an Eee PC (701) screen is a real pain, it is 
&gt;&gt; too big vertically.  800x480 screen, plus a window manager bar at the 
&gt;&gt; bottom, plus some chunky window decorations up the top.  For a window to 
&gt;&gt; fit conveniently on a standard Eee PC screen it needs to be 422 pixels 
&gt;&gt; vertically it looks like (the standard decorations are VERY chunky :)
&gt;&gt;     
&gt;
&gt; the dialog ix 420x420 and thus it should fit.
&gt;   
Interesting - that's not what I'm seeing.  I've just tried xwininfo on 
bluez-gnome-1.7 on both an Eee PC and a full sized PC (possibly with 
slightly different support library versions).

Full sized PC geometry for the preferences window is 420x521.  EeePC 
geometry for the same is 420x523.
  I'm not sure where the 2 pixel difference comes from (I don't think 
the geometry here is including the window manager decorations).  But 
neither are close to 420x420.  You weren't thinking 420x520 perchance?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930133802</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-30 13:38:02-0400</timestampReceived><subject>RE: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

Hi Folks:

I would think the DPI of the environment is playing into this.  David, what DPI is on your EEE?

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 



-----Original Message-----
From: David Sainty [mailto:david.sainty@dtsp.co.nz]
Sent: Tue 9/30/2008 3:56 AM
To: Marcel Holtmann
Cc: Bastien Nocera; Limonciello, Mario; linux-bluetooth@vger.kernel.org
Subject: Re: [PATCH] Make bluetooth-properties fit on smaller displays
 
Marcel Holtmann wrote:
&gt; Hi David,
&gt;
&gt;   
&gt;&gt;&gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt;&gt;&gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt;&gt;&gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt;&gt;&gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt;&gt;&gt;&gt;     
&gt;&gt;&gt;&gt;         
&gt;&gt;&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt;&gt;&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt;&gt;&gt; of the treeview, instead of underneath, and add labels to those buttons.
&gt;&gt;&gt;   
&gt;&gt;&gt;       
&gt;&gt; The preferences dialog on an Eee PC (701) screen is a real pain, it is 
&gt;&gt; too big vertically.  800x480 screen, plus a window manager bar at the 
&gt;&gt; bottom, plus some chunky window decorations up the top.  For a window to 
&gt;&gt; fit conveniently on a standard Eee PC screen it needs to be 422 pixels 
&gt;&gt; vertically it looks like (the standard decorations are VERY chunky :)
&gt;&gt;     
&gt;
&gt; the dialog ix 420x420 and thus it should fit.
&gt;   
Interesting - that's not what I'm seeing.  I've just tried xwininfo on 
bluez-gnome-1.7 on both an Eee PC and a full sized PC (possibly with 
slightly different support library versions).

Full sized PC geometry for the preferences window is 420x521.  EeePC 
geometry for the same is 420x523.
  I'm not sure where the 2 pixel difference comes from (I don't think 
the geometry here is including the window manager decorations).  But 
neither are close to 420x420.  You weren't thinking 420x520 perchance?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001162629</emailId><senderName>Jim Carter</senderName><senderEmail>jimc@math.ucla.edu</senderEmail><timestampReceived>2008-10-01 16:26:29-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

On Wed, 1 Oct 2008, David Sainty wrote:

&gt; xdpyinfo says the DPI is 100x101... heh...
&gt; 
&gt;  dimensions:    800x480 pixels (203x121 millimeters)
&gt;  resolution:    100x101 dots per inch
&gt; 
&gt; In reality it's around 133dpi (153mm x 92mm).

I'm sure the erratic sizing comes from nonuniform font selection.

I had endless trouble printing web pages from a Dell Inspiron 6400 
(1680x1050px, 128dpi if I remember right, Opera browser) and a Nokia N810 
(800x480px, 226dpi, Mozilla clonoid for GTK) -- the text glyphs were way 
oversize, even overlapping.  To fix, I lied to my X-server claiming 96dpi. 
As I understand it, one of the libraries scales the PostScript font, but 
not the graphical content, so the glyphs are the same size as those on the 
physical screen, which of course is a crock on the N810, or on an Eee, and 
is also a poor strategy on the laptop.

My current opinion is that all the apps should specify a font of Serif or 
Sans-Serif (according to the theme), and the user (with the help of good 
defaults in the distro) should set the default font size so he can read 
them with his eyes (blurred with age) and physical screen, and the apps 
should never override that setting, at most making small relative changes 
for titles or fine print notes.  Erratic font sizes are one objection I 
have to Maemo on the N810, but Maemo is definitely not the only offender.

I wonder if the Bluetooth applet follows this rule?  Judging from the 
discussion, most likely it does, and it's then at the mercy of the distro's 
setup.

Judging the screenshots that were shown, I think the landscape layout (new) 
is more practical for the N810.  However, the smallest screen I have to 
deal with at work is the Palm Treo 650 at 320x320px.  It wouldn't be 
running Linux, but if it were, both orientations would be equally bad.  I 
suspect that handheld devices are the most likely to have Bluetooth 
accessories, since they have the most limitation in power and USB ports, so 
special effort should be put in to fit any dialog boxes reliably on the 
small screens, assuming the distro provides defaults that make this 
possible.

James F. Carter          Voice 310 825 2897    FAX 310 206 6673
UCLA-Mathnet;  6115 MSA; 520 Portola Plaza; Los Angeles, CA, USA  90095-1555
Email: jimc@math.ucla.edu    http://www.math.ucla.edu/~jimc (q.v. for PGP key)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006114023</emailId><senderName>Tomas Winkler</senderName><senderEmail>tomas.winkler@intel.com</senderEmail><timestampReceived>2008-10-06 11:40:23-0400</timestampReceived><subject>[PATCH V2] btsdio: fix tx error path</subject><body>

This patch fixes accumulating of the header
in case packet was requeued in the error path.

Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
---
 drivers/bluetooth/btsdio.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
index 58630cc..c422e89 100644
--- a/drivers/bluetooth/btsdio.c
+++ b/drivers/bluetooth/btsdio.c
@@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data *data, struct sk_buff *skb)
 
 	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
 	if (err &lt; 0) {
+		skb_pull(skb, 4);
 		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
 		return err;
 	}
-- 
1.5.4.3

---------------------------------------------------------------------
Intel Israel (74) Limited

This e-mail and any attachments may contain confidential material for
the sole use of the intended recipient(s). Any review or distribution
by others is strictly prohibited. If you are not the intended
recipient, please contact the sender and delete all copies.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006120143</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 12:01:43-0400</timestampReceived><subject>Re: [PATCH V2] btsdio: fix tx error path</subject><body>

Hi Tomas,

&gt; This patch fixes accumulating of the header
&gt; in case packet was requeued in the error path.
&gt; 
&gt; Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; ---
&gt;  drivers/bluetooth/btsdio.c |    1 +
&gt;  1 files changed, 1 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
&gt; index 58630cc..c422e89 100644
&gt; --- a/drivers/bluetooth/btsdio.c
&gt; +++ b/drivers/bluetooth/btsdio.c
&gt; @@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data *data, struct sk_buff *skb)
&gt;  
&gt;  	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
&gt;  	if (err &lt; 0) {
&gt; +		skb_pull(skb, 4);
&gt;  		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
&gt;  		return err;
&gt;  	}

thanks, but I already fixed that one manually in my tree :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080822132018</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-22 13:20:18-0400</timestampReceived><subject>[rft]autosuspend for btusb</subject><body>

Hi,

this patch against vanilla 2.6.27-rc4 implements full autosuspend for
btusb. It should allow the HCI to be suspended during periods of inactivity
while retaining full service if the device supports USB remote wakeup.

Please test and/or comment on the code.
It works for me with a few glitches but still needs to be a bit polished.

	Regards
		Oliver

---

--- linux-2.6.27-rc4/drivers/usb/core/urb.c	2008-08-21 10:03:44.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-20 17:21:24.000000000 +0200
@@ -601,15 +601,20 @@ EXPORT_SYMBOL_GPL(usb_kill_anchored_urbs
 void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
 {
 	struct urb *victim;
+	unsigned long flags;
 
-	spin_lock_irq(&amp;anchor-&gt;lock);
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	while (!list_empty(&amp;anchor-&gt;urb_list)) {
 		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
 				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 		/* this will unanchor the URB */
 		usb_unlink_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	}
-	spin_unlock_irq(&amp;anchor-&gt;lock);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 }
 EXPORT_SYMBOL_GPL(usb_unlink_anchored_urbs);
 
@@ -628,3 +633,47 @@ int usb_wait_anchor_empty_timeout(struct
 				  msecs_to_jiffies(timeout));
 }
 EXPORT_SYMBOL_GPL(usb_wait_anchor_empty_timeout);
+
+struct urb *usb_get_from_anchor(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	if (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.next, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		usb_unanchor_urb(victim);
+	} else {
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		victim = NULL;
+	}
+
+	return victim;
+}
+
+EXPORT_SYMBOL_GPL(usb_get_from_anchor);
+
+void usb_scuttle_anchored_urbs(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	while (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		/* this will unanchor the URB */
+		usb_unanchor_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	}
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+}
+
+EXPORT_SYMBOL_GPL(usb_scuttle_anchored_urbs);
+
--- linux-2.6.27-rc4/include/linux/usb.h	2008-08-21 10:04:29.000000000 +0200
+++ linux-2.6.27-rc3/include/linux/usb.h	2008-08-20 17:09:57.000000000 +0200
@@ -1462,6 +1460,8 @@ extern void usb_anchor_urb(struct urb *u
 extern void usb_unanchor_urb(struct urb *urb);
 extern int usb_wait_anchor_empty_timeout(struct usb_anchor *anchor,
 					 unsigned int timeout);
+extern struct urb *usb_get_from_anchor(struct usb_anchor *anchor);
+extern void usb_scuttle_anchored_urbs(struct usb_anchor *anchor);
 
 /**
  * usb_urb_dir_in - check if an URB describes an IN transfer
--- linux-2.6.27-rc4/drivers/bluetooth/btusb.c	2008-08-21 10:04:11.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-22 14:39:05.000000000 +0200
@@ -35,13 +35,13 @@
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
-//#define CONFIG_BT_HCIBTUSB_DEBUG
+#define CONFIG_BT_HCIBTUSB_DEBUG
 #ifndef CONFIG_BT_HCIBTUSB_DEBUG
 #undef  BT_DBG
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.3"
+#define VERSION "0.4"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -165,10 +165,12 @@ static struct usb_device_id blacklist_ta
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 #define BTUSB_ISOC_RUNNING	2
+#define BTUSB_SUSPENDING	3
 
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,11 +178,15 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
 	struct usb_anchor isoc_anchor;
+	struct usb_anchor deferred;
+	int tx_in_flight;
+	spinlock_t txlock;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
@@ -189,8 +195,26 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int did_iso_resume:1;
+	int susp_count;
 };
 
+static int inc_tx(struct btusb_data *data)
+{
+	unsigned long flags;
+	int rv;
+
+	BT_DBG("entered");
+	spin_lock_irqsave(&amp;data-&gt;txlock, flags);
+	rv = test_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+	if (!rv)
+		data-&gt;tx_in_flight++;
+	spin_unlock_irqrestore(&amp;data-&gt;txlock, flags);
+	BT_DBG("returning %d", rv);
+
+	return rv;
+}
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -217,6 +241,7 @@ static void btusb_intr_complete(struct u
 	if (!test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -227,7 +252,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +265,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +287,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -301,6 +326,7 @@ static void btusb_bulk_complete(struct u
 	if (!test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -311,7 +337,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +350,19 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +372,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -483,6 +510,33 @@ static void btusb_tx_complete(struct urb
 {
 	struct sk_buff *skb = urb-&gt;context;
 	struct hci_dev *hdev = (struct hci_dev *) skb-&gt;dev;
+	struct btusb_data *data = hdev-&gt;driver_data;
+
+	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
+					urb, urb-&gt;status, urb-&gt;actual_length);
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		goto done;
+
+	if (!urb-&gt;status)
+		hdev-&gt;stat.byte_tx += urb-&gt;transfer_buffer_length;
+	else
+		hdev-&gt;stat.err_tx++;
+
+done:
+	spin_lock(&amp;data-&gt;txlock);
+	data-&gt;tx_in_flight--;
+	spin_unlock(&amp;data-&gt;txlock);
+
+	kfree(urb-&gt;setup_packet);
+
+	kfree_skb(skb);
+}
+
+static void btusb_isoc_tx_complete(struct urb *urb)
+{
+	struct sk_buff *skb = urb-&gt;context;
+	struct hci_dev *hdev = (struct hci_dev *) skb-&gt;dev;
 
 	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
 					urb, urb-&gt;status, urb-&gt;actual_length);
@@ -508,13 +562,19 @@ static int btusb_open(struct hci_dev *hd
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (err &lt; 0)
+		return err;
+	data-&gt;acl-&gt;needs_remote_wakeup = 1;
+	usb_autopm_put_interface(data-&gt;acl);
+
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_ATOMIC);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,24 +583,34 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
+	btusb_stop_traffic(data);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err) {
+		data-&gt;acl-&gt;needs_remote_wakeup = 0;
+		usb_autopm_put_interface(data-&gt;acl);
+	}
 	return 0;
 }
 
@@ -571,6 +641,7 @@ static int btusb_send_frame(struct sk_bu
 
 	switch (bt_cb(skb)-&gt;pkt_type) {
 	case HCI_COMMAND_PKT:
+		BT_DBG("HCI_COMMAND_PKT");
 		urb = usb_alloc_urb(0, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
@@ -596,6 +667,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_ACLDATA_PKT:
+		BT_DBG("HCI_ACLDATA_PKT");
 		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
 			return -ENODEV;
 
@@ -613,6 +685,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_SCODATA_PKT:
+		BT_DBG("HCI_SCODATA_PKT");
 		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
 			return -ENODEV;
 
@@ -626,7 +699,7 @@ static int btusb_send_frame(struct sk_bu
 		urb-&gt;dev      = data-&gt;udev;
 		urb-&gt;pipe     = pipe;
 		urb-&gt;context  = skb;
-		urb-&gt;complete = btusb_tx_complete;
+		urb-&gt;complete = btusb_isoc_tx_complete;
 		urb-&gt;interval = data-&gt;isoc_tx_ep-&gt;bInterval;
 
 		urb-&gt;transfer_flags  = URB_ISO_ASAP;
@@ -637,12 +710,21 @@ static int btusb_send_frame(struct sk_bu
 				le16_to_cpu(data-&gt;isoc_tx_ep-&gt;wMaxPacketSize));
 
 		hdev-&gt;stat.sco_tx++;
-		break;
+		goto skip_waking;
 
 	default:
 		return -EILSEQ;
 	}
 
+	err = inc_tx(data);
+	if (err) {
+		printk(KERN_ERR"Autosuspension detected\n");
+		usb_anchor_urb(urb, &amp;data-&gt;deferred);
+		schedule_work(&amp;data-&gt;waker);
+		err = 0;
+		goto out;
+	}
+skip_waking:
 	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -654,6 +736,7 @@ static int btusb_send_frame(struct sk_bu
 
 	usb_free_urb(urb);
 
+out:
 	return err;
 }
 
@@ -672,8 +755,19 @@ static void btusb_notify(struct hci_dev
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -723,20 +817,19 @@ static void btusb_work(struct work_struc
 {
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
-
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
+	int err;
 
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (!data-&gt;did_iso_resume) {
+			err = usb_autopm_get_interface(data-&gt;isoc);
+			if (!err) {
+				data-&gt;did_iso_resume = 1;
+			} else {
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+				return;
+			}
+		}
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
@@ -756,9 +849,26 @@ static void btusb_work(struct work_struc
 		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
 		__set_isoc_interface(hdev, 0);
+		if (data-&gt;did_iso_resume) {
+			data-&gt;did_iso_resume = 0;
+			usb_autopm_put_interface(data-&gt;isoc);
+		}
 	}
 }
 
+static void btusb_waker(struct work_struct *work)
+{
+	struct btusb_data *data = container_of(work, struct btusb_data, waker);
+	int err;
+
+	BUG_ON(data == NULL);
+	BT_DBG("about to resume");
+	BUG_ON(data-&gt;acl == NULL);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err)
+		usb_autopm_put_interface(data-&gt;acl);
+}
+
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
@@ -821,15 +931,19 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
 	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	INIT_WORK(&amp;data-&gt;waker, btusb_waker);
+	spin_lock_init(&amp;data-&gt;txlock);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
 	init_usb_anchor(&amp;data-&gt;isoc_anchor);
+	init_usb_anchor(&amp;data-&gt;deferred);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -889,7 +1003,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,21 +1035,131 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	printk(KERN_ERR"%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+	spin_lock_irq(&amp;data-&gt;txlock);
+	if (!(interface_to_usbdev(intf)-&gt;auto_pm &amp;&amp; data-&gt;tx_in_flight)) {
+		set_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		printk(KERN_ERR"%s accepting\n", __func__);
+	} else {
+		spin_unlock_irq(&amp;data-&gt;txlock);
+		printk(KERN_ERR"%s rejecting, count %d\n", __func__, data-&gt;tx_in_flight);
+		return -EBUSY;
+	}
+	spin_unlock_irq(&amp;data-&gt;txlock);
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	BT_DBG("flags: %ld", data-&gt;flags);
+	return 0;
+}
+
+static int play_deferred(struct btusb_data *data)
+{
+	struct urb *urb;
+	int err = 0;
+
+	while ((urb = usb_get_from_anchor(&amp;data-&gt;deferred))) {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0)
+			break;
+		else
+			data-&gt;tx_in_flight++;
+	}
+	usb_scuttle_anchored_urbs(&amp;data-&gt;deferred);
+	return err;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+
+		spin_lock_irq(&amp;data-&gt;txlock);
+		ret = play_deferred(data);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;txlock);
+
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080822133353</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-22 13:33:53-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Hi Oliver,

&gt; this patch against vanilla 2.6.27-rc4 implements full autosuspend for
&gt; btusb. It should allow the HCI to be suspended during periods of inactivity
&gt; while retaining full service if the device supports USB remote wakeup.

actually we do have two cases. An inactive device can be woken up by an
HCI Connection Request coming via the interrupt endpoint or if we have a
send_frame callback via the Bluetooth stack itself.

What do we do if a device does not support remote wakeup?

&gt; Please test and/or comment on the code.
&gt; It works for me with a few glitches but still needs to be a bit polished.

Please explain the tx_in_flight stuff to me. It looks unneeded since we
anchor all TX URBs anyway.

So can we just leave the ISOC interface stuff out of it and try to get
the case right where we have control and interrupt URBs only and maybe
bulk URBs in case we an ACL link up.

This reminds me that we should extend the notify() callback to inform
about sniff and active state changes. Since in theory when a connection
goes into sniff mode, we could suspend it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080822135156</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-22 13:51:56-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Am Freitag 22 August 2008 15:33:53 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; this patch against vanilla 2.6.27-rc4 implements full autosuspend for
&gt; &gt; btusb. It should allow the HCI to be suspended during periods of inactivity
&gt; &gt; while retaining full service if the device supports USB remote wakeup.
&gt; 
&gt; actually we do have two cases. An inactive device can be woken up by an
&gt; HCI Connection Request coming via the interrupt endpoint or if we have a
&gt; send_frame callback via the Bluetooth stack itself.

Yes, if send_frame triggers it, we wake using a work queue. A connection
request will wake us via remote wakeup.

&gt; What do we do if a device does not support remote wakeup?

Autosuspend on close, resume on open. I don't think we can do more.

&gt; &gt; Please test and/or comment on the code.
&gt; &gt; It works for me with a few glitches but still needs to be a bit polished.
&gt; 
&gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; anchor all TX URBs anyway.

The completion of an URB may happen after the autosuspend timeout passed.
But we cannot use the pm counters as they are not accessible in interrupt.
Hence we must maintain a counter ourselves.

&gt; So can we just leave the ISOC interface stuff out of it and try to get

The isoc stuff should be handled already, but I haven't tested that.

&gt; the case right where we have control and interrupt URBs only and maybe
&gt; bulk URBs in case we an ACL link up.
&gt; 
&gt; This reminds me that we should extend the notify() callback to inform
&gt; about sniff and active state changes. Since in theory when a connection
&gt; goes into sniff mode, we could suspend it.

We should definitely do that.

	Regards
		Oliver


	

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080822143110</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-22 14:31:10-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; this patch against vanilla 2.6.27-rc4 implements full autosuspend for
&gt; &gt; &gt; btusb. It should allow the HCI to be suspended during periods of inactivity
&gt; &gt; &gt; while retaining full service if the device supports USB remote wakeup.
&gt; &gt; 
&gt; &gt; actually we do have two cases. An inactive device can be woken up by an
&gt; &gt; HCI Connection Request coming via the interrupt endpoint or if we have a
&gt; &gt; send_frame callback via the Bluetooth stack itself.
&gt; 
&gt; Yes, if send_frame triggers it, we wake using a work queue. A connection
&gt; request will wake us via remote wakeup.
&gt; 
&gt; &gt; What do we do if a device does not support remote wakeup?
&gt; 
&gt; Autosuspend on close, resume on open. I don't think we can do more.

sounds good to me. I wanna split the whole work into small patches so we
can have an easier review. I attached the first two of this series and
they should apply cleanly against 2.6.27-rc4, but keep in mind that you
need the usb_unlink_anchored_urbs() patch too.

&gt; &gt; &gt; Please test and/or comment on the code.
&gt; &gt; &gt; It works for me with a few glitches but still needs to be a bit polished.
&gt; &gt; 
&gt; &gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; &gt; anchor all TX URBs anyway.
&gt; 
&gt; The completion of an URB may happen after the autosuspend timeout passed.
&gt; But we cannot use the pm counters as they are not accessible in interrupt.
&gt; Hence we must maintain a counter ourselves.

Can we not just check the number of URBs in the anchor? I am against
just duplicating a counter, but then lets call it it what it is to make
it gets not misused. It is a purely a PM counter.

&gt; &gt; So can we just leave the ISOC interface stuff out of it and try to get
&gt; 
&gt; The isoc stuff should be handled already, but I haven't tested that.

I know, but I wanna get the basic logic clean and tested. The SCO part
comes after that. Even if I think it should be good already.

&gt; &gt; the case right where we have control and interrupt URBs only and maybe
&gt; &gt; bulk URBs in case we an ACL link up.
&gt; &gt; 
&gt; &gt; This reminds me that we should extend the notify() callback to inform
&gt; &gt; about sniff and active state changes. Since in theory when a connection
&gt; &gt; goes into sniff mode, we could suspend it.
&gt; 
&gt; We should definitely do that.

I will work on a patch for that one.

Regards

Marcel


["patch-btusb-001" (patch-btusb-001)]

[Bluetooth] Add fine grained mem_flags used to btusb driver

The URB submission routines need more fine grained control for the
mem_flags used by kmalloc(), usb_alloc_urb() and usb_submit_urb() to
better support different caller situations. Add a mem_flags parameter
and have the caller full control.

Signed-off-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

---
commit 283407ed763e144f2343c980542a460dee98e98c
tree ea86d454c7e8b6243c8a717ac009bbde2a11beb0
parent 6a55617ed5d1aa62b850de2cf66f5ede2eef4825
author Marcel Holtmann &lt;marcel@holtmann.org&gt; Fri, 22 Aug 2008 16:23:47 +0200
committer Marcel Holtmann &lt;marcel@holtmann.org&gt; Fri, 22 Aug 2008 16:23:47 +0200

 drivers/bluetooth/btusb.c |   34 +++++++++++++++++-----------------
 1 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 6a01068..9296df0 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -227,7 +227,7 @@ static void btusb_intr_complete(struct urb *urb)
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t mem_flags)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +240,13 @@ static int btusb_submit_intr_urb(struct hci_dev *hdev)
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, mem_flags);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, mem_flags);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +262,7 @@ static int btusb_submit_intr_urb(struct hci_dev *hdev)
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, mem_flags);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -311,7 +311,7 @@ static void btusb_bulk_complete(struct urb *urb)
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t mem_flags)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,13 +324,13 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev)
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, mem_flags);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, mem_flags);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -345,7 +345,7 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev)
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, mem_flags);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -423,7 +423,7 @@ static void inline __fill_isoc_descriptor(struct urb *urb, int len, int mtu)
 	urb-&gt;number_of_packets = i;
 }
 
-static int btusb_submit_isoc_urb(struct hci_dev *hdev)
+static int btusb_submit_isoc_urb(struct hci_dev *hdev, gfp_t mem_flags)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -436,14 +436,14 @@ static int btusb_submit_isoc_urb(struct hci_dev *hdev)
 	if (!data-&gt;isoc_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, GFP_KERNEL);
+	urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, mem_flags);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;isoc_rx_ep-&gt;wMaxPacketSize) *
 						BTUSB_MAX_ISOC_FRAMES;
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, mem_flags);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -466,7 +466,7 @@ static int btusb_submit_isoc_urb(struct hci_dev *hdev)
 
 	usb_anchor_urb(urb, &amp;data-&gt;isoc_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, mem_flags);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -514,7 +514,7 @@ static int btusb_open(struct hci_dev *hdev)
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_KERNEL);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -726,10 +726,10 @@ static void btusb_work(struct work_struct *work)
 
 	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
 		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+			if (btusb_submit_bulk_urb(hdev, GFP_KERNEL) &lt; 0)
 				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 			else
-				btusb_submit_bulk_urb(hdev);
+				btusb_submit_bulk_urb(hdev, GFP_KERNEL);
 		}
 	} else {
 		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
@@ -746,10 +746,10 @@ static void btusb_work(struct work_struct *work)
 		}
 
 		if (!test_and_set_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_isoc_urb(hdev) &lt; 0)
+			if (btusb_submit_isoc_urb(hdev, GFP_KERNEL) &lt; 0)
 				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 			else
-				btusb_submit_isoc_urb(hdev);
+				btusb_submit_isoc_urb(hdev, GFP_KERNEL);
 		}
 	} else {
 		clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);

["patch-btusb-002" (patch-btusb-002)]

[Bluetooth] Handle bulk URBs in btusb driver from notify callback

With the addition of usb_unlink_anchored_urbs() it is possible to fully
control the bulk URBs from the notify callback. There is no need to
schedule work and so only do this for the isoc URBs.

Also cancel any scheduled work when closing down the interface.

Signed-off-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

---
commit 3c7a240281e8269ba297d3805f90c65c726828f5
tree 4a345086275bc7625aef6848a9acf2f4db58af65
parent 283407ed763e144f2343c980542a460dee98e98c
author Marcel Holtmann &lt;marcel@holtmann.org&gt; Fri, 22 Aug 2008 16:24:45 +0200
committer Marcel Holtmann &lt;marcel@holtmann.org&gt; Fri, 22 Aug 2008 16:24:45 +0200

 drivers/bluetooth/btusb.c |   29 +++++++++++++++--------------
 1 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 9296df0..0532569 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -532,6 +532,8 @@ static int btusb_close(struct hci_dev *hdev)
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
+	cancel_work_sync(&amp;data-&gt;work);
+
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
 
@@ -672,8 +674,19 @@ static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -724,18 +737,6 @@ static void btusb_work(struct work_struct *work)
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev, GFP_KERNEL) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev, GFP_KERNEL);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
-
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080822143841</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-22 14:38:41-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Am Freitag 22 August 2008 16:31:10 schrieb Marcel Holtmann:

Hi,

&gt; &gt; &gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; &gt; &gt; anchor all TX URBs anyway.
&gt; &gt; 
&gt; &gt; The completion of an URB may happen after the autosuspend timeout passed.
&gt; &gt; But we cannot use the pm counters as they are not accessible in interrupt.
&gt; &gt; Hence we must maintain a counter ourselves.
&gt; 
&gt; Can we not just check the number of URBs in the anchor? I am against
&gt; just duplicating a counter, but then lets call it it what it is to make
&gt; it gets not misused. It is a purely a PM counter.

Yes, we can do that. In fact a bool empty/!empty will do. I'll do that.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825104346</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-25 10:43:46-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Am Freitag 22 August 2008 16:31:10 schrieb Marcel Holtmann:
&gt; &gt; &gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; &gt; &gt; anchor all TX URBs anyway.
&gt; &gt; 
&gt; &gt; The completion of an URB may happen after the autosuspend timeout passed.
&gt; &gt; But we cannot use the pm counters as they are not accessible in interrupt.
&gt; &gt; Hence we must maintain a counter ourselves.
&gt; 
&gt; Can we not just check the number of URBs in the anchor? I am against
&gt; just duplicating a counter, but then lets call it it what it is to make
&gt; it gets not misused. It is a purely a PM counter.
&gt; 

An excellent suggestion allowing major simplifications. This version works
for me. It required an extension of the anchor API, so it obsoletes
the split-up you've done. Therefore the whole thing comes as a big patch
against rc4, easy to test.

	Regards
		Oliver

----

--- linux-2.6.27-rc4/drivers/usb/core/urb.c	2008-08-21 10:03:44.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-22 17:25:49.000000000 +0200
@@ -601,15 +601,20 @@ EXPORT_SYMBOL_GPL(usb_kill_anchored_urbs
 void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
 {
 	struct urb *victim;
+	unsigned long flags;
 
-	spin_lock_irq(&amp;anchor-&gt;lock);
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	while (!list_empty(&amp;anchor-&gt;urb_list)) {
 		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
 				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 		/* this will unanchor the URB */
 		usb_unlink_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	}
-	spin_unlock_irq(&amp;anchor-&gt;lock);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 }
 EXPORT_SYMBOL_GPL(usb_unlink_anchored_urbs);
 
@@ -628,3 +633,61 @@ int usb_wait_anchor_empty_timeout(struct
 				  msecs_to_jiffies(timeout));
 }
 EXPORT_SYMBOL_GPL(usb_wait_anchor_empty_timeout);
+
+struct urb *usb_get_from_anchor(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	if (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.next, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		usb_unanchor_urb(victim);
+	} else {
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		victim = NULL;
+	}
+
+	return victim;
+}
+
+EXPORT_SYMBOL_GPL(usb_get_from_anchor);
+
+void usb_scuttle_anchored_urbs(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	while (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		/* this will unanchor the URB */
+		usb_unanchor_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	}
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+}
+
+EXPORT_SYMBOL_GPL(usb_scuttle_anchored_urbs);
+
+int usb_anchor_empty(struct usb_anchor *anchor)
+{
+	unsigned long flags;
+	int rv;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	rv = list_empty(&amp;anchor-&gt;urb_list);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+
+	return rv;
+}
+
+EXPORT_SYMBOL_GPL(usb_anchor_empty);
+
--- linux-2.6.27-rc4/include/linux/usb.h	2008-08-21 10:04:29.000000000 +0200
+++ linux-2.6.27-rc3/include/linux/usb.h	2008-08-22 17:25:47.000000000 +0200
@@ -110,8 +110,6 @@ enum usb_interface_condition {
  * @sysfs_files_created: sysfs attributes exist
  * @needs_remote_wakeup: flag set when the driver requires remote-wakeup
  *	capability during autosuspend.
- * @needs_binding: flag set when the driver should be re-probed or unbound
- *	following a reset or suspend operation it doesn't support.
  * @dev: driver model's view of this device
  * @usb_dev: if an interface is bound to the USB major, this will point
  *	to the sysfs representation for that device.
@@ -1462,6 +1460,9 @@ extern void usb_anchor_urb(struct urb *u
 extern void usb_unanchor_urb(struct urb *urb);
 extern int usb_wait_anchor_empty_timeout(struct usb_anchor *anchor,
 					 unsigned int timeout);
+extern struct urb *usb_get_from_anchor(struct usb_anchor *anchor);
+extern void usb_scuttle_anchored_urbs(struct usb_anchor *anchor);
+extern int usb_anchor_empty(struct usb_anchor *anchor);
 
 /**
  * usb_urb_dir_in - check if an URB describes an IN transfer
--- linux-2.6.27-rc4/drivers/bluetooth/btusb.c	2008-08-21 10:04:11.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-25 12:01:15.000000000 +0200
@@ -35,13 +35,13 @@
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
-//#define CONFIG_BT_HCIBTUSB_DEBUG
+#define CONFIG_BT_HCIBTUSB_DEBUG
 #ifndef CONFIG_BT_HCIBTUSB_DEBUG
 #undef  BT_DBG
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.3"
+#define VERSION "0.4"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -165,10 +165,12 @@ static struct usb_device_id blacklist_ta
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 #define BTUSB_ISOC_RUNNING	2
+#define BTUSB_SUSPENDING	3
 
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,11 +178,13 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
 	struct usb_anchor isoc_anchor;
+	struct usb_anchor deferred;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
@@ -189,6 +193,8 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int did_iso_resume:1;
+	int susp_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -217,6 +223,7 @@ static void btusb_intr_complete(struct u
 	if (!test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -227,7 +234,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +247,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +269,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -301,6 +308,7 @@ static void btusb_bulk_complete(struct u
 	if (!test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -311,7 +319,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +332,19 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +354,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -508,13 +517,19 @@ static int btusb_open(struct hci_dev *hd
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (err &lt; 0)
+		return err;
+	data-&gt;acl-&gt;needs_remote_wakeup = 1;
+	usb_autopm_put_interface(data-&gt;acl);
+
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_ATOMIC);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,24 +538,34 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
+	btusb_stop_traffic(data);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err) {
+		data-&gt;acl-&gt;needs_remote_wakeup = 0;
+		usb_autopm_put_interface(data-&gt;acl);
+	}
 	return 0;
 }
 
@@ -562,7 +587,7 @@ static int btusb_send_frame(struct sk_bu
 	struct usb_ctrlrequest *dr;
 	struct urb *urb;
 	unsigned int pipe;
-	int err;
+	int err, susp;
 
 	BT_DBG("%s", hdev-&gt;name);
 
@@ -571,6 +596,7 @@ static int btusb_send_frame(struct sk_bu
 
 	switch (bt_cb(skb)-&gt;pkt_type) {
 	case HCI_COMMAND_PKT:
+		BT_DBG("HCI_COMMAND_PKT");
 		urb = usb_alloc_urb(0, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
@@ -596,6 +622,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_ACLDATA_PKT:
+		BT_DBG("HCI_ACLDATA_PKT");
 		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
 			return -ENODEV;
 
@@ -613,6 +640,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_SCODATA_PKT:
+		BT_DBG("HCI_SCODATA_PKT");
 		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
 			return -ENODEV;
 
@@ -643,17 +671,22 @@ static int btusb_send_frame(struct sk_bu
 		return -EILSEQ;
 	}
 
+	spin_lock(&amp;data-&gt;lock);
+	susp = test_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
 	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
-
-	err = usb_submit_urb(urb, GFP_ATOMIC);
-	if (err &lt; 0) {
-		BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
-		kfree(urb-&gt;setup_packet);
-		usb_unanchor_urb(urb);
+	if (susp) {
+		schedule_work(&amp;data-&gt;waker);
+		err = 0;
+	} else {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0) {
+			BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
+			kfree(urb-&gt;setup_packet);
+			usb_unanchor_urb(urb);
+		}
+		usb_free_urb(urb);
 	}
-
-	usb_free_urb(urb);
-
+	spin_unlock(&amp;data-&gt;lock);
 	return err;
 }
 
@@ -672,8 +705,19 @@ static void btusb_notify(struct hci_dev
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -723,20 +767,19 @@ static void btusb_work(struct work_struc
 {
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
-
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
+	int err;
 
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (!data-&gt;did_iso_resume) {
+			err = usb_autopm_get_interface(data-&gt;isoc);
+			if (!err) {
+				data-&gt;did_iso_resume = 1;
+			} else {
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+				return;
+			}
+		}
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
@@ -756,9 +799,26 @@ static void btusb_work(struct work_struc
 		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
 		__set_isoc_interface(hdev, 0);
+		if (data-&gt;did_iso_resume) {
+			data-&gt;did_iso_resume = 0;
+			usb_autopm_put_interface(data-&gt;isoc);
+		}
 	}
 }
 
+static void btusb_waker(struct work_struct *work)
+{
+	struct btusb_data *data = container_of(work, struct btusb_data, waker);
+	int err;
+
+	BUG_ON(data == NULL);
+	BT_DBG("about to resume");
+	BUG_ON(data-&gt;acl == NULL);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err)
+		usb_autopm_put_interface(data-&gt;acl);
+}
+
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
@@ -821,15 +881,18 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
 	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	INIT_WORK(&amp;data-&gt;waker, btusb_waker);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
 	init_usb_anchor(&amp;data-&gt;isoc_anchor);
+	init_usb_anchor(&amp;data-&gt;deferred);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -889,7 +952,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,21 +984,128 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+	spin_lock_irq(&amp;data-&gt;lock);
+	if (	interface_to_usbdev(intf)-&gt;auto_pm &amp;&amp;
+		!usb_anchor_empty(&amp;data-&gt;tx_anchor)) {
+		spin_unlock_irq(&amp;data-&gt;lock);
+		return -EBUSY;
+	}
+
+	set_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+	spin_unlock_irq(&amp;data-&gt;lock);
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int play_deferred(struct btusb_data *data)
+{
+	struct urb *urb;
+	int err = 0;
+
+	while ((urb = usb_get_from_anchor(&amp;data-&gt;tx_anchor))) {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0)
+			break;
+	}
+	usb_scuttle_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return err;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+
+		spin_lock_irq(&amp;data-&gt;lock);
+		ret = play_deferred(data);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;lock);
+
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825115130</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-25 11:51:30-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Hi Oliver,

&gt;&gt;&gt;&gt; Please explain the tx_in_flight stuff to me. It looks unneeded  
&gt;&gt;&gt;&gt; since we
&gt;&gt;&gt;&gt; anchor all TX URBs anyway.
&gt;&gt;&gt;
&gt;&gt;&gt; The completion of an URB may happen after the autosuspend timeout  
&gt;&gt;&gt; passed.
&gt;&gt;&gt; But we cannot use the pm counters as they are not accessible in  
&gt;&gt;&gt; interrupt.
&gt;&gt;&gt; Hence we must maintain a counter ourselves.
&gt;&gt;
&gt;&gt; Can we not just check the number of URBs in the anchor? I am against
&gt;&gt; just duplicating a counter, but then lets call it it what it is to  
&gt;&gt; make
&gt;&gt; it gets not misused. It is a purely a PM counter.
&gt;&gt;
&gt;
&gt; An excellent suggestion allowing major simplifications. This version  
&gt; works
&gt; for me. It required an extension of the anchor API, so it obsoletes
&gt; the split-up you've done. Therefore the whole thing comes as a big  
&gt; patch
&gt; against rc4, easy to test.

I will break up the patch into pieces. However right now I am missing  
my beloved test machine since I am traveling. So everybody reporting  
success or failure would be nice.

Can you break out the USB anchor extensions and make sure they get  
merged into 2.6.28 in an early stage of the merge window. It really  
wanna get all of this stuff into the next kernel release. Finally we  
are getting somewhere with this driver and can kill the broken hci_usb.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826095647</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-26 09:56:47-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

On Mon 2008-08-25 12:43:46, Oliver Neukum wrote:
&gt; Am Freitag 22 August 2008 16:31:10 schrieb Marcel Holtmann:
&gt; &gt; &gt; &gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; &gt; &gt; &gt; anchor all TX URBs anyway.
&gt; &gt; &gt; 
&gt; &gt; &gt; The completion of an URB may happen after the autosuspend timeout passed.
&gt; &gt; &gt; But we cannot use the pm counters as they are not accessible in interrupt.
&gt; &gt; &gt; Hence we must maintain a counter ourselves.
&gt; &gt; 
&gt; &gt; Can we not just check the number of URBs in the anchor? I am against
&gt; &gt; just duplicating a counter, but then lets call it it what it is to make
&gt; &gt; it gets not misused. It is a purely a PM counter.
&gt; &gt; 
&gt; 
&gt; An excellent suggestion allowing major simplifications. This version works
&gt; for me. It required an extension of the anchor API, so it obsoletes
&gt; the split-up you've done. Therefore the whole thing comes as a big patch
&gt; against rc4, easy to test.

I could not get it to apply over -rc4-git, usb seems to be changing
under us :-(. After manual fixup (conflict was in comment), I still
get

  LD      .tmp_vmlinux1
drivers/built-in.o: In function `btusb_suspend':
btusb.c:(.text+0x20a578): undefined reference to `usb_anchor_empty'
drivers/built-in.o: In function `btusb_resume':
btusb.c:(.text+0x20ade6): undefined reference to `usb_get_from_anchor'
btusb.c:(.text+0x20ae01): undefined reference to
`usb_scuttle_anchored_urbs'
make: *** [.tmp_vmlinux1] Error 1
40.09user 7.55system 47.97 (0m47.971s) elapsed 99.34%CPU
pavel@amd:/data/l/linux-good$

...probably the "already applied" patch it complained about was not so
applied after all.

...ok, I got it to apply, compile, resulting patch is attached.
									Pavel

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 6a01068..62a9a5b 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -35,13 +35,13 @@ #include &lt;linux/usb.h&gt;
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
-//#define CONFIG_BT_HCIBTUSB_DEBUG
+#define CONFIG_BT_HCIBTUSB_DEBUG
 #ifndef CONFIG_BT_HCIBTUSB_DEBUG
 #undef  BT_DBG
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.3"
+#define VERSION "0.4"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -165,10 +165,12 @@ #define BTUSB_MAX_ISOC_FRAMES	10
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 #define BTUSB_ISOC_RUNNING	2
+#define BTUSB_SUSPENDING	3
 
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,11 +178,13 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
 	struct usb_anchor isoc_anchor;
+	struct usb_anchor deferred;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
@@ -189,6 +193,8 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int did_iso_resume:1;
+	int susp_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -217,6 +223,7 @@ static void btusb_intr_complete(struct u
 	if (!test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -227,7 +234,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +247,13 @@ static int btusb_submit_intr_urb(struct 
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +269,7 @@ static int btusb_submit_intr_urb(struct 
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -301,6 +308,7 @@ static void btusb_bulk_complete(struct u
 	if (!test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -311,7 +319,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +332,19 @@ static int btusb_submit_bulk_urb(struct 
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +354,7 @@ static int btusb_submit_bulk_urb(struct 
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -508,13 +517,19 @@ static int btusb_open(struct hci_dev *hd
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (err &lt; 0)
+		return err;
+	data-&gt;acl-&gt;needs_remote_wakeup = 1;
+	usb_autopm_put_interface(data-&gt;acl);
+
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_ATOMIC);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,24 +538,34 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
+	btusb_stop_traffic(data);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err) {
+		data-&gt;acl-&gt;needs_remote_wakeup = 0;
+		usb_autopm_put_interface(data-&gt;acl);
+	}
 	return 0;
 }
 
@@ -562,7 +587,7 @@ static int btusb_send_frame(struct sk_bu
 	struct usb_ctrlrequest *dr;
 	struct urb *urb;
 	unsigned int pipe;
-	int err;
+	int err, susp;
 
 	BT_DBG("%s", hdev-&gt;name);
 
@@ -571,6 +596,7 @@ static int btusb_send_frame(struct sk_bu
 
 	switch (bt_cb(skb)-&gt;pkt_type) {
 	case HCI_COMMAND_PKT:
+		BT_DBG("HCI_COMMAND_PKT");
 		urb = usb_alloc_urb(0, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
@@ -596,6 +622,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_ACLDATA_PKT:
+		BT_DBG("HCI_ACLDATA_PKT");
 		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
 			return -ENODEV;
 
@@ -613,6 +640,7 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_SCODATA_PKT:
+		BT_DBG("HCI_SCODATA_PKT");
 		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
 			return -ENODEV;
 
@@ -643,17 +671,22 @@ static int btusb_send_frame(struct sk_bu
 		return -EILSEQ;
 	}
 
+	spin_lock(&amp;data-&gt;lock);
+	susp = test_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
 	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
-
-	err = usb_submit_urb(urb, GFP_ATOMIC);
-	if (err &lt; 0) {
-		BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
-		kfree(urb-&gt;setup_packet);
-		usb_unanchor_urb(urb);
+	if (susp) {
+		schedule_work(&amp;data-&gt;waker);
+		err = 0;
+	} else {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0) {
+			BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
+			kfree(urb-&gt;setup_packet);
+			usb_unanchor_urb(urb);
+		}
+		usb_free_urb(urb);
 	}
-
-	usb_free_urb(urb);
-
+	spin_unlock(&amp;data-&gt;lock);
 	return err;
 }
 
@@ -672,8 +705,19 @@ static void btusb_notify(struct hci_dev 
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -723,20 +767,19 @@ static void btusb_work(struct work_struc
 {
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
-
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
+	int err;
 
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (!data-&gt;did_iso_resume) {
+			err = usb_autopm_get_interface(data-&gt;isoc);
+			if (!err) {
+				data-&gt;did_iso_resume = 1;
+			} else {
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+				return;
+			}
+		}
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
@@ -756,9 +799,26 @@ static void btusb_work(struct work_struc
 		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
 		__set_isoc_interface(hdev, 0);
+		if (data-&gt;did_iso_resume) {
+			data-&gt;did_iso_resume = 0;
+			usb_autopm_put_interface(data-&gt;isoc);
+		}
 	}
 }
 
+static void btusb_waker(struct work_struct *work)
+{
+	struct btusb_data *data = container_of(work, struct btusb_data, waker);
+	int err;
+
+	BUG_ON(data == NULL);
+	BT_DBG("about to resume");
+	BUG_ON(data-&gt;acl == NULL);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err)
+		usb_autopm_put_interface(data-&gt;acl);
+}
+
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
@@ -821,15 +881,18 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
 	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	INIT_WORK(&amp;data-&gt;waker, btusb_waker);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
 	init_usb_anchor(&amp;data-&gt;isoc_anchor);
+	init_usb_anchor(&amp;data-&gt;deferred);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -889,7 +952,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,21 +984,128 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+	spin_lock_irq(&amp;data-&gt;lock);
+	if (	interface_to_usbdev(intf)-&gt;auto_pm &amp;&amp;
+		!usb_anchor_empty(&amp;data-&gt;tx_anchor)) {
+		spin_unlock_irq(&amp;data-&gt;lock);
+		return -EBUSY;
+	}
+
+	set_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+	spin_unlock_irq(&amp;data-&gt;lock);
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int play_deferred(struct btusb_data *data)
+{
+	struct urb *urb;
+	int err = 0;
+
+	while ((urb = usb_get_from_anchor(&amp;data-&gt;tx_anchor))) {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0)
+			break;
+	}
+	usb_scuttle_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return err;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+
+		spin_lock_irq(&amp;data-&gt;lock);
+		ret = play_deferred(data);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;lock);
+
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
diff --git a/drivers/usb/core/urb.c b/drivers/usb/core/urb.c
index 47111e8..0ceb312 100644
--- a/drivers/usb/core/urb.c
+++ b/drivers/usb/core/urb.c
@@ -633,3 +633,61 @@ int usb_wait_anchor_empty_timeout(struct
 				  msecs_to_jiffies(timeout));
 }
 EXPORT_SYMBOL_GPL(usb_wait_anchor_empty_timeout);
+
+struct urb *usb_get_from_anchor(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	if (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.next, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		usb_unanchor_urb(victim);
+	} else {
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		victim = NULL;
+	}
+
+	return victim;
+}
+
+EXPORT_SYMBOL_GPL(usb_get_from_anchor);
+
+void usb_scuttle_anchored_urbs(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	while (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		/* this will unanchor the URB */
+		usb_unanchor_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	}
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+}
+
+EXPORT_SYMBOL_GPL(usb_scuttle_anchored_urbs);
+
+int usb_anchor_empty(struct usb_anchor *anchor)
+{
+	unsigned long flags;
+	int rv;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	rv = list_empty(&amp;anchor-&gt;urb_list);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+
+	return rv;
+}
+
+EXPORT_SYMBOL_GPL(usb_anchor_empty);
+
diff --git a/include/linux/usb.h b/include/linux/usb.h
index 94ac74a..4f09a57 100644
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -112,8 +112,6 @@ enum usb_interface_condition {
  *	capability during autosuspend.
  * @needs_altsetting0: flag set when a set-interface request for altsetting 0
  *	has been deferred.
- * @needs_binding: flag set when the driver should be re-probed or unbound
- *	following a reset or suspend operation it doesn't support.
  * @dev: driver model's view of this device
  * @usb_dev: if an interface is bound to the USB major, this will point
  *	to the sysfs representation for that device.
@@ -1465,6 +1463,9 @@ extern void usb_anchor_urb(struct urb *u
 extern void usb_unanchor_urb(struct urb *urb);
 extern int usb_wait_anchor_empty_timeout(struct usb_anchor *anchor,
 					 unsigned int timeout);
+extern struct urb *usb_get_from_anchor(struct usb_anchor *anchor);
+extern void usb_scuttle_anchored_urbs(struct usb_anchor *anchor);
+extern int usb_anchor_empty(struct usb_anchor *anchor);
 
 /**
  * usb_urb_dir_in - check if an URB describes an IN transfer

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826100519</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-26 10:05:19-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

On Tue 2008-08-26 11:56:47, Pavel Machek wrote:
&gt; On Mon 2008-08-25 12:43:46, Oliver Neukum wrote:
&gt; &gt; Am Freitag 22 August 2008 16:31:10 schrieb Marcel Holtmann:
&gt; &gt; &gt; &gt; &gt; Please explain the tx_in_flight stuff to me. It looks unneeded since we
&gt; &gt; &gt; &gt; &gt; anchor all TX URBs anyway.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; The completion of an URB may happen after the autosuspend timeout passed.
&gt; &gt; &gt; &gt; But we cannot use the pm counters as they are not accessible in interrupt.
&gt; &gt; &gt; &gt; Hence we must maintain a counter ourselves.
&gt; &gt; &gt; 
&gt; &gt; &gt; Can we not just check the number of URBs in the anchor? I am against
&gt; &gt; &gt; just duplicating a counter, but then lets call it it what it is to make
&gt; &gt; &gt; it gets not misused. It is a purely a PM counter.
&gt; &gt; &gt; 
&gt; &gt; 
&gt; &gt; An excellent suggestion allowing major simplifications. This version works
&gt; &gt; for me. It required an extension of the anchor API, so it obsoletes
&gt; &gt; the split-up you've done. Therefore the whole thing comes as a big patch
&gt; &gt; against rc4, easy to test.
&gt; 
&gt; I could not get it to apply over -rc4-git, usb seems to be changing
&gt; under us :-(. After manual fixup (conflict was in comment), I still
&gt; get
&gt; 
&gt;   LD      .tmp_vmlinux1
&gt; drivers/built-in.o: In function `btusb_suspend':
&gt; btusb.c:(.text+0x20a578): undefined reference to `usb_anchor_empty'
&gt; drivers/built-in.o: In function `btusb_resume':
&gt; btusb.c:(.text+0x20ade6): undefined reference to `usb_get_from_anchor'
&gt; btusb.c:(.text+0x20ae01): undefined reference to
&gt; `usb_scuttle_anchored_urbs'
&gt; make: *** [.tmp_vmlinux1] Error 1
&gt; 40.09user 7.55system 47.97 (0m47.971s) elapsed 99.34%CPU
&gt; pavel@amd:/data/l/linux-good$
&gt; 
&gt; ...probably the "already applied" patch it complained about was not so
&gt; applied after all.
&gt; 
&gt; ...ok, I got it to apply, compile, resulting patch is attached.


And it worked for me, but suspend died. I'll verify if that's a
problem in vanilla -rc4-git, too.
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826110251</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-26 11:02:51-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

Am Dienstag 26 August 2008 12:05:19 schrieb Pavel Machek:

Hi,

&gt; And it worked for me, but suspend died. I'll verify if that's a
&gt; problem in vanilla -rc4-git, too.

what exactly does "died" mean?

	Regards
		Oliver



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201164559</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-12-01 16:45:59-0400</timestampReceived><subject>Re: New property for DeviceFound signals to distinguish EIR devices</subject><body>

Hi Marcel,

On Mon, Dec 01, 2008, Marcel Holtmann wrote:
&gt; so I do like the idea of a boolean property. That is pretty simple. So
&gt; my current proposal would be "LegacyPairing". Since the Simple Pairing
&gt; should become the default and handles all the use cases right, we only
&gt; need to detect the cases for the old 2.0 and before devices.
&gt; 
&gt; However this has a limitation. We make the assumption that we always get
&gt; the Extended Inquiry Result. So setting LegacyPairing=True doesn't mean
&gt; that we are not doing Simple Pairing. It just means that we don't know
&gt; at this point of time if the remote device supports its. In practice we
&gt; might not be seeing this, but it is not mandatory for 2.1 devices to
&gt; enable Extended Inquiry Response.

I'd be fine with adding a LecacyPairing boolean both to the DeviceFound
signal and the Device interface. I don't think the false-positive case
is too bad since it shouldn't happen often and the UI can simply fall
back to SSP then (which is a potential source of confusion for the user
but at least the pairing can proceed).

&gt; We could also cache the value since if we do SDP before initiating a
&gt; dedicated pairing (only fails with Security Mode 3 devices) and then we
&gt; do get the real value if Simple Pairing is enabled or not.

The problem is precisely these Security Mode 3 devices. I still see
plenty of them when I go to UnplugFests. If we go ahead and try to do
SDP with them before dedicated bonding we've already lost the chance to
get the PIN from the user before its actually requested by the
controler. We could simply reject any PIN request caused by the SDP but
that has at least the following issues:

1. it would make the overall procedure longer (and the double
connect/auth request could have interop. implications with some devices)

2. it can't be done in a clean way with the existing D-Bus API since
there's no direct agent association for CreateDevice like there is for
CreatePairedDevice

&gt; So while adding it to the DeviceFound properties would be nice, but I
&gt; think adding it to the actual device properties might make more sense.
&gt; However right now the wizard is not doing SDP before pairing.

At least according to the API doc, whatever property is available in the
DeviceFound signal should also be available in the Device interface. So
if we add this to the DeviceFound signal the rest takes care of itself
if we intend to conform to the current API description :)

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081103205821</emailId><senderName>Isaías_Martínez_Yelmo</senderName><senderEmail>isaiasmy@gmail.com</senderEmail><timestampReceived>2008-11-03 20:58:21-0400</timestampReceived><subject>Re: Dell 365 Bluetooth</subject><body>

El Monday 03 November 2008 20:03:51 Mario Limonciello escribió:
&gt; Isaías Martínez Yelmo wrote:
&gt; &gt; Hello,
&gt; &gt;
&gt; &gt; I would like to ask if there is some future plan to support the new
&gt; &gt; bluetooth device Dell 365 Bluetooth.  As far as I know, this is a new
&gt; &gt; device included on new Dell Latitudes e4200/e4300 and I have not found
&gt; &gt; any information related with it yet. This is the information that i have
&gt; &gt; obtained from lsusb, just to provide all the information that I have:
&gt; &gt;
&gt; &gt; Bus 001 Device 006: ID 413c:8160 Dell Computer Corp.
&gt; &gt; Device Descriptor:
&gt; &gt;   bLength                18
&gt; &gt;   bDescriptorType         1
&gt; &gt;   bcdUSB               2.00
&gt; &gt;   bDeviceClass          224 Wireless
&gt; &gt;   bDeviceSubClass         1 Radio Frequency
&gt; &gt;   bDeviceProtocol         1 Bluetooth
&gt; &gt;   bMaxPacketSize0        64
&gt; &gt;   idVendor           0x413c Dell Computer Corp.
&gt; &gt;   idProduct          0x8160
&gt; &gt;   bcdDevice            1.73
&gt; &gt;   iManufacturer           1 Dell Computer Corp
&gt; &gt;   iProduct                2 Dell Wireless 365 Bluetooth Module
&gt; &gt;   iSerial                 0
&gt; &gt;   bNumConfigurations      1
&gt; &gt;   Configuration Descriptor:
&gt; &gt;     bLength                 9
&gt; &gt;     bDescriptorType         2
&gt; &gt;     wTotalLength          216
&gt; &gt;     bNumInterfaces          4
&gt; &gt;     bConfigurationValue     1
&gt; &gt;     iConfiguration          0
&gt; &gt;     bmAttributes         0xe0
&gt; &gt;       Self Powered
&gt; &gt;       Remote Wakeup
&gt; &gt;     MaxPower              100mA
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        0
&gt; &gt;       bAlternateSetting       0
&gt; &gt;       bNumEndpoints           3
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x81  EP 1 IN
&gt; &gt;         bmAttributes            3
&gt; &gt;           Transfer Type            Interrupt
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0010  1x 16 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x82  EP 2 IN
&gt; &gt;         bmAttributes            2
&gt; &gt;           Transfer Type            Bulk
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x02  EP 2 OUT
&gt; &gt;         bmAttributes            2
&gt; &gt;           Transfer Type            Bulk
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       0
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0000  1x 0 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0000  1x 0 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       1
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0009  1x 9 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0009  1x 9 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       2
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0011  1x 17 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0011  1x 17 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       3
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0020  1x 32 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0020  1x 32 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       4
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        1
&gt; &gt;       bAlternateSetting       5
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       224 Wireless
&gt; &gt;       bInterfaceSubClass      1 Radio Frequency
&gt; &gt;       bInterfaceProtocol      1 Bluetooth
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x83  EP 3 IN
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x03  EP 3 OUT
&gt; &gt;         bmAttributes            1
&gt; &gt;           Transfer Type            Isochronous
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0040  1x 64 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        2
&gt; &gt;       bAlternateSetting       0
&gt; &gt;       bNumEndpoints           2
&gt; &gt;       bInterfaceClass       255 Vendor Specific Class
&gt; &gt;       bInterfaceSubClass    255 Vendor Specific Subclass
&gt; &gt;       bInterfaceProtocol    255 Vendor Specific Protocol
&gt; &gt;       iInterface              0
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x84  EP 4 IN
&gt; &gt;         bmAttributes            2
&gt; &gt;           Transfer Type            Bulk
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0020  1x 32 bytes
&gt; &gt;         bInterval               1
&gt; &gt;       Endpoint Descriptor:
&gt; &gt;         bLength                 7
&gt; &gt;         bDescriptorType         5
&gt; &gt;         bEndpointAddress     0x04  EP 4 OUT
&gt; &gt;         bmAttributes            2
&gt; &gt;           Transfer Type            Bulk
&gt; &gt;           Synch Type               None
&gt; &gt;           Usage Type               Data
&gt; &gt;         wMaxPacketSize     0x0020  1x 32 bytes
&gt; &gt;         bInterval               1
&gt; &gt;     Interface Descriptor:
&gt; &gt;       bLength                 9
&gt; &gt;       bDescriptorType         4
&gt; &gt;       bInterfaceNumber        3
&gt; &gt;       bAlternateSetting       0
&gt; &gt;       bNumEndpoints           0
&gt; &gt;       bInterfaceClass       254 Application Specific Interface
&gt; &gt;       bInterfaceSubClass      1 Device Firmware Update
&gt; &gt;       bInterfaceProtocol      0
&gt; &gt;       iInterface              0
&gt; &gt;       ** UNRECOGNIZED:  07 21 07 88 13 40 00
&gt; &gt; Device Status:     0x0001
&gt; &gt;   Self Powered
&gt; &gt;
&gt; &gt; My distro is Ubuntu Intrepid:
&gt; &gt;
&gt; &gt; 2.6.27-7-generic #1 SMP x86_64 GNU/Linux
&gt; &gt;
&gt; &gt; Thank you very mucho for your attention.
&gt; &gt;
&gt; &gt; Cheers,
&gt; &gt;
&gt; &gt; Isaías
&gt;
&gt; Isaías:
&gt;
&gt; As far as I'm aware, this device should be supported.  The latest
&gt; hid2hci patches (which landed in Intrepid already) will get it into hci
&gt; mode.  You might need to mess with a reset quirk though (try modprobe
&gt; options btusb=1), but i've not verified this.  If setting this modprobe
&gt; option makes it work, we can submit a kernel quirk for it.
&gt;
&gt; Regards

Hello,

I'm not very sure on how to enable the option that you mention, sorry. I've 
include in /etc/modprobe.d/options the next line:

options btusb=1

but I don't know if this is right. The dmesg command shows these lines related 
with hid2hci:

[   12.458741] usb 1-1.2: usbfs: process 2746 (hid2hci) did not claim 
interface 0 before use
[   24.365796] usb 1-1.2: usbfs: process 5909 (hid2hci) did not claim 
interface 0 before use

Perhaps, it could be relevant.

Let me know, if I have to enable the option in other way.

Regards,

Isaias

-- 
Isaías Martínez Yelmo
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081103210849</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-11-03 21:08:49-0400</timestampReceived><subject>Re: Dell 365 Bluetooth</subject><body>

Isaias:

Isaías Martínez Yelmo wrote:
&gt; El Monday 03 November 2008 20:03:51 Mario Limonciello escribió:
&gt;   
&gt;
&gt; Hello,
&gt;
&gt; I'm not very sure on how to enable the option that you mention, sorry. I've 
&gt; include in /etc/modprobe.d/options the next line:
&gt;
&gt; options btusb=1
&gt;
&gt; but I don't know if this is right. The dmesg command shows these lines related 
&gt; with hid2hci:
&gt;
&gt; [   12.458741] usb 1-1.2: usbfs: process 2746 (hid2hci) did not claim 
&gt; interface 0 before use
&gt; [   24.365796] usb 1-1.2: usbfs: process 5909 (hid2hci) did not claim 
&gt; interface 0 before use
&gt;
&gt; Perhaps, it could be relevant.
&gt;
&gt; Let me know, if I have to enable the option in other way.
&gt;
&gt; Regards,
&gt;
&gt; Isaias
&gt;
&gt;   
Sorry, I mistyped before.  The modprobe options should be:

options btusb reset=1

See if that does your device any good.

Regards
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080902194440</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-09-02 19:44:40-0400</timestampReceived><subject>Re: bluez 4.2 + linux 2.6.27-rc5 -&gt; no audio interface</subject><body>

Hi

I reinstalled bluez-4.2 (without recompiling) and now I get a little
further. I still cannot hear any music on my Jabra JX10 but I have a
"Headset service on RFCOMM channel 2".  When I try aplay I get
"unix_sendmsg_fd: Bad file descriptor(9)" and "resume failed" or
"connect(): Connection timed out (110)" and "Unable to lock headset".
After arecord I get "unix_sendmsg_fd: Bad file descriptor(9)" and
"resume failed" after a 40 second timeout.

What do these messages mean?

When I run aplay and arecord, the headset beeps. When the connection is
underway, I can press the headset's buttons and bluetoothd writes out a
message "Received AT+CKPD 0".

thanks for your time!
Stuart

These are the messages written to /var/log/daemon.log. I used logger(1)
to insert into the log the aplay &amp; arecord commands I executed.


Sep  2 21:20:15 kooka bluetoothd[23192]: Bluetooth daemon
Sep  2 21:20:15 kooka bluetoothd[23192]: Enabling debug information
Sep  2 21:20:15 kooka bluetoothd[23192]: parsing main.conf
Sep  2 21:20:15 kooka bluetoothd[23192]: offmode=NoScan
Sep  2 21:20:15 kooka bluetoothd[23192]: discovto=0
Sep  2 21:20:15 kooka bluetoothd[23192]: pageto�92
Sep  2 21:20:15 kooka bluetoothd[23192]: name=%h-%d
Sep  2 21:20:15 kooka bluetoothd[23192]: class=0x000100
Sep  2 21:20:15 kooka bluetoothd[23192]: Starting SDP server
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8ba9a98
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x1
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8baba80
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x0
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x00
Sep  2 21:20:15 kooka bluetoothd[23192]: Loading plugins
/usr/local/lib/bluetooth/plugins
Sep  2 21:20:15 kooka bluetoothd[23192]:
/usr/local/lib/bluetooth/plugins/audio.so
Sep  2 21:20:15 kooka bluetoothd[23192]: Unix socket created: 11
Sep  2 21:20:15 kooka bluetoothd[23192]:
/usr/local/lib/bluetooth/plugins/serial.so
Sep  2 21:20:15 kooka bluetoothd[23192]:
/usr/local/lib/bluetooth/plugins/network.so
Sep  2 21:20:15 kooka bluetoothd[23192]: Parsing
/etc/bluetooth/network.conf failed: No such file or directory
Sep  2 21:20:15 kooka bluetoothd[23192]: Config options:
InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null),
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true
Sep  2 21:20:15 kooka bluetoothd[23192]: bridge pan0 created
Sep  2 21:20:15 kooka bluetoothd[23192]:
/usr/local/lib/bluetooth/plugins/input.so
Sep  2 21:20:15 kooka bluetoothd[23192]: input.conf: Key file does not
have key 'IdleTimeout'
Sep  2 21:20:15 kooka bluetoothd[23192]: HCI dev 0 registered
Sep  2 21:20:15 kooka bluetoothd[23192]: child 23194 exited
Sep  2 21:20:15 kooka bluetoothd[23192]: HCI dev 0 up
Sep  2 21:20:15 kooka bluetoothd[23192]: headset_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10000
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10000
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bae760
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10000
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x00
Sep  2 21:20:15 kooka bluetoothd[23192]: a2dp_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: SEP 0xb8bac3d8 registered:
type:0 codec:0 seid:1
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10001
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10001
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bac8a0
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10001
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x08
Sep  2 21:20:15 kooka bluetoothd[23192]: avrcp_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10002
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10002
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bac5e0
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10002
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x08
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10003
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10003
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bacd58
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10003
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x08
Sep  2 21:20:15 kooka bluetoothd[23192]: proxy_probe: path /org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.serial.ProxyManager on path /org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: network_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10004
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10004
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8baf5c0
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10004
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x0a
Sep  2 21:20:15 kooka bluetoothd[23192]: register_server_record: got
record id 0x10004
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.network.Peer on path /org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: network_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10005
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10005
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bafbe8
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10005
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x0a
Sep  2 21:20:15 kooka bluetoothd[23192]: register_server_record: got
record id 0x10005
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.network.Hub on path /org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: network_server_probe: path
/org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Couldn't find record for : 0x10006
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding record with handle 0x10006
Sep  2 21:20:15 kooka bluetoothd[23192]: Adding rec : 0xb8bb0210
Sep  2 21:20:15 kooka bluetoothd[23192]: with handle : 0x10006
Sep  2 21:20:15 kooka bluetoothd[23192]: Service classes 0x0a
Sep  2 21:20:15 kooka bluetoothd[23192]: register_server_record: got
record id 0x10006
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.network.Router on path /org/bluez/hci0
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx
Sep  2 21:20:15 kooka bluetoothd[23192]: Probe drivers for
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx
Sep  2 21:20:15 kooka bluetoothd[23192]: Found Headset record
Sep  2 21:20:15 kooka bluetoothd[23192]: Discovered Headset service on
RFCOMM channel 2
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.audio.Headset on path /org/bluez/hci0/dev_00_1A_45_2F_xx_xx
Sep  2 21:20:15 kooka bluetoothd[23192]: headset_probe: path
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx
Sep  2 21:20:15 kooka bluetoothd[23192]: Registered interface
org.bluez.input.Device on path /org/bluez/hci0/dev_00_1A_45_2F_xx_xx
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_14_A7_74_D3_AF
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_03_89_B7_F8_D3
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_0A_94_94_4F_B3
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_03_89_DC_5C_9F
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_03_89_DC_FC_EC
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_03_89_FE_E6_19
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_17_E5_E6_25_AB
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_17_E5_16_88_6C
Sep  2 21:20:15 kooka bluetoothd[23192]: Creating device
/org/bluez/hci0/dev_00_17_E5_0C_EA_70
Sep  2 21:20:15 kooka bluetoothd[23192]: Adapter /org/bluez/hci0 has
been enabled
Sep  2 21:20:15 kooka bluetoothd[23192]: Starting security manager 0
Sep  2 21:20:15 kooka bluetoothd[23192]: child 23199 exited
Sep  2 21:20:36 kooka logger: aplay -D JX10 -f S16_LE /dev/zero
Sep  2 21:20:36 kooka bluetoothd[23192]: Accepted new client connection
on unix socket (fd )
Sep  2 21:20:36 kooka bluetoothd[23192]: Audio API: received
BT_GETCAPABILITIES_REQ
Sep  2 21:20:36 kooka bluetoothd[23192]: Audio API: sending
BT_GETCAPABILITIES_RSP
Sep  2 21:20:36 kooka bluetoothd[23192]: Audio API: received
BT_SETCONFIGURATION_REQ
Sep  2 21:20:36 kooka bluetoothd[23192]: config sco - device 00:1A:45:2F:xx:xx \
                access_mode = 2
Sep  2 21:20:36 kooka bluetoothd[23192]:
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: Connecting to 00:1A:45:2F:xx:xx
channel 2
Sep  2 21:20:36 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_DISCONNECTED -&gt;
HEADSET_STATE_CONNECT_IN_PROGRESS
Sep  2 21:20:39 kooka bluetoothd[23192]: link_key_request
(sba:0C:41:E1:xx:xx, dba:1A:45:2F:xx:xx)
Sep  2 21:20:39 kooka bluetoothd[23192]: kernel auth requirements = 0x00
Sep  2 21:20:39 kooka bluetoothd[23192]: stored link key type = 0x00
Sep  2 21:20:40 kooka bluetoothd[23192]:
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: Connected to 00:1A:45:2F:xx:xx
Sep  2 21:20:40 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_CONNECT_IN_PROGRESS
-&gt; HEADSET_STATE_CONNECTED
Sep  2 21:20:40 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Sep  2 21:21:20 kooka bluetoothd[23192]: connect(): Connection timed out
(110)
Sep  2 21:21:20 kooka bluetoothd[23192]: Audio API: sending
BT_SETCONFIGURATION_RSP
Sep  2 21:21:20 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_PLAY_IN_PROGRESS -&gt;
HEADSET_STATE_CONNECTED
Sep  2 21:21:20 kooka bluetoothd[23192]: Audio API: received
BT_STREAMSTART_REQ
Sep  2 21:21:20 kooka bluetoothd[23192]: Audio API: sending
BT_STREAMSTART_RSP
Sep  2 21:21:20 kooka bluetoothd[23192]: Audio API: sending BT_STREAMFD_IND
Sep  2 21:21:20 kooka bluetoothd[23192]: unix_sendmsg_fd: Bad file
descriptor(9)
Sep  2 21:21:20 kooka bluetoothd[23192]: resume failed
Sep  2 21:21:20 kooka bluetoothd[23192]: Audio API: sending
BT_STREAMSTART_RSP
Sep  2 21:21:20 kooka bluetoothd[23192]: Unix client disconnected (fd )
Sep  2 21:21:38 kooka logger: aplay -D JX10 -f S16_LE /dev/zero
Sep  2 21:21:38 kooka bluetoothd[23192]: Accepted new client connection
on unix socket (fd )
Sep  2 21:21:38 kooka bluetoothd[23192]: Audio API: received
BT_GETCAPABILITIES_REQ
Sep  2 21:21:38 kooka bluetoothd[23192]: Audio API: sending
BT_GETCAPABILITIES_RSP
Sep  2 21:21:38 kooka bluetoothd[23192]: Audio API: received
BT_SETCONFIGURATION_REQ
Sep  2 21:21:38 kooka bluetoothd[23192]: config sco - device 00:1A:45:2F:xx:xx \
                access_mode = 2
Sep  2 21:21:38 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Sep  2 21:21:42 kooka bluetoothd[23192]: Received AT+CKPD 0
Sep  2 21:21:45 kooka bluetoothd[23192]: Received AT+VGS
Sep  2 21:22:18 kooka bluetoothd[23192]: connect(): Connection timed out
(110)
Sep  2 21:22:18 kooka bluetoothd[23192]: Unable to lock headset
Sep  2 21:22:18 kooka bluetoothd[23192]: config failed
Sep  2 21:22:18 kooka bluetoothd[23192]: Audio API: sending
BT_SETCONFIGURATION_RSP
Sep  2 21:22:18 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_PLAY_IN_PROGRESS -&gt;
HEADSET_STATE_CONNECTED
Sep  2 21:22:18 kooka bluetoothd[23192]: Unix client disconnected (fd )
Sep  2 21:22:23 kooka logger: aplay -D JX10 -f S16_LE /dev/zero
Sep  2 21:22:23 kooka bluetoothd[23192]: Accepted new client connection
on unix socket (fd )
Sep  2 21:22:23 kooka bluetoothd[23192]: Audio API: received
BT_GETCAPABILITIES_REQ
Sep  2 21:22:23 kooka bluetoothd[23192]: Audio API: sending
BT_GETCAPABILITIES_RSP
Sep  2 21:22:23 kooka bluetoothd[23192]: Audio API: received
BT_SETCONFIGURATION_REQ
Sep  2 21:22:23 kooka bluetoothd[23192]: config sco - device 00:1A:45:2F:xx:xx \
                access_mode = 2
Sep  2 21:22:23 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Sep  2 21:23:03 kooka bluetoothd[23192]: connect(): Connection timed out
(110)
Sep  2 21:23:03 kooka bluetoothd[23192]: Unable to lock headset
Sep  2 21:23:03 kooka bluetoothd[23192]: config failed
Sep  2 21:23:03 kooka bluetoothd[23192]: Audio API: sending
BT_SETCONFIGURATION_RSP
Sep  2 21:23:03 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_PLAY_IN_PROGRESS -&gt;
HEADSET_STATE_CONNECTED
Sep  2 21:23:03 kooka bluetoothd[23192]: Unix client disconnected (fd )
Sep  2 21:23:29 kooka logger: arecord -D JX10  -f S16_LE
Sep  2 21:23:29 kooka bluetoothd[23192]: Accepted new client connection
on unix socket (fd )
Sep  2 21:23:29 kooka bluetoothd[23192]: Audio API: received
BT_GETCAPABILITIES_REQ
Sep  2 21:23:29 kooka bluetoothd[23192]: Audio API: sending
BT_GETCAPABILITIES_RSP
Sep  2 21:23:29 kooka bluetoothd[23192]: Audio API: received
BT_SETCONFIGURATION_REQ
Sep  2 21:23:29 kooka bluetoothd[23192]: config sco - device 00:1A:45:2F:xx:xx \
                access_mode = 1
Sep  2 21:23:29 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Sep  2 21:24:09 kooka bluetoothd[23192]: connect(): Connection timed out
(110)
Sep  2 21:24:09 kooka bluetoothd[23192]: Audio API: sending
BT_SETCONFIGURATION_RSP
Sep  2 21:24:09 kooka bluetoothd[23192]: State changed
/org/bluez/hci0/dev_00_1A_45_2F_xx_xx: HEADSET_STATE_PLAY_IN_PROGRESS -&gt;
HEADSET_STATE_CONNECTED
Sep  2 21:24:09 kooka bluetoothd[23192]: Audio API: received
BT_STREAMSTART_REQ
Sep  2 21:24:09 kooka bluetoothd[23192]: Audio API: sending
BT_STREAMSTART_RSP
Sep  2 21:24:09 kooka bluetoothd[23192]: Audio API: sending BT_STREAMFD_IND
Sep  2 21:24:09 kooka bluetoothd[23192]: unix_sendmsg_fd: Bad file
descriptor(9)
Sep  2 21:24:09 kooka bluetoothd[23192]: resume failed
Sep  2 21:24:09 kooka bluetoothd[23192]: Audio API: sending
BT_STREAMSTART_RSP
Sep  2 21:24:09 kooka bluetoothd[23192]: Unix client disconnected (fd )

&gt; ; sdptool  records 00:1A:45:2F:xx:xx
Service Name: Hands-Free unit
Service RecHandle: 0x10000
Service Class ID List:
   "Handsfree" (0x111e)
   "Generic Audio" (0x1203)
Protocol Descriptor List:
   "L2CAP" (0x0100)
   "RFCOMM" (0x0003)
     Channel: 1
Language Base Attr List:
   code_ISO639: 0x656e
   encoding:    0x6a
   base_offset: 0x100
Profile Descriptor List:
   "Handsfree" (0x111e)
     Version: 0x0105

Service Name: Headset
Service RecHandle: 0x10001
Service Class ID List:
   "Headset" (0x1108)
   "Generic Audio" (0x1203)
Protocol Descriptor List:
   "L2CAP" (0x0100)
   "RFCOMM" (0x0003)
     Channel: 2
Language Base Attr List:
   code_ISO639: 0x656e
   encoding:    0x6a
   base_offset: 0x100
Profile Descriptor List:
   "Headset" (0x1108)
     Version: 0x0100

&gt; ; lsmod | grep usb
usb_storage            77960  1
usbhid                 37924  0
hid                    35660  1 usbhid
ff_memless              6216  1 usbhid
snd_usb_audio          72288  1
snd_usb_lib            15168  1 snd_usb_audio
snd_rawmidi            20512  2 snd_usb_lib,snd_seq_midi
snd_hwdep               8004  1 snd_usb_audio
btusb                  11864  22291
bluetooth              49184  9 sco,bnep,rfcomm,l2cap,btusb
snd_pcm                64708  3 snd_usb_audio,snd_hda_intel
snd                    47480  13
snd_usb_audio,snd_seq_oss,snd_seq,snd_rawmidi,snd_seq_device,snd_hwdep,snd_mixer_oss,snd_hda_intel,snd_pcm,snd_timer


&gt; ; logger -p daemon.info  "arecord -D JX10  -f S16_LE"; arecord -D JX10
  -f S16_LE
Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)
arecord: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
&gt; ; logger -p daemon.info  "aplay -D JX10  -f S16_LE /dev/zero";  aplay
-D JX10  -f S16_LE /dev/zero
Playing raw data '/dev/zero' : Signed 16 bit Little Endian, Rate 8000
Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080906101056</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-09-06 10:10:56-0400</timestampReceived><subject>Re: bluez 4.2 + linux 2.6.27-rc5 -&gt; no audio interface</subject><body>

Hi

I'm still trying to get music out of my Jabra JX10 headset using bluez 4.2 on
my machine running linux 2.6.27-rc5 (with the new btusb module).
Has anyone had any success with this setup?

When I try to play a wav file, after a 40 second timeout, bluetoothd says
"connect(): Connection timed out (110)".
aplay then says "Unable to install hw params". During this time,
according to hcidump, 12943 SCO data packets are transmitted.

Bluez 4.2 and my headset work on a 2.6.23 kernel with the sco-flowcontrol patch.

I see that bluez-4.3 has just come out.
I suppose that I should try it to see if it helps.

Has anyone any ideas on what I could be doing wrong?

thanks
Stuart



When I run "aplay -D JX10 ~/lib/alarm.wav" I see:

Playing WAVE '/home/stuart/lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 \
                Hz, Mono
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]

"hcidump | uniq -c" gives

       1 HCI sniffer - Bluetooth packet analyzer ver 1.42
       1 device: hci0 snap_len: 1028 filter: 0xffffffff
       1 &lt; HCI Command: Write Default Link Policy Settings (0x02|0x000f) plen 2
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &lt; HCI Command: Read Local Version Information (0x04|0x0001) plen 0
       1 &gt; HCI Event: Command Complete (0x0e) plen 12
       1 &lt; HCI Command: Read Local Supported Features (0x04|0x0003) plen 0
       1 &gt; HCI Event: Command Complete (0x0e) plen 12
       1 &lt; HCI Command: Read Class of Device (0x03|0x0023) plen 0
       1 &gt; HCI Event: Command Complete (0x0e) plen 7
       1 &lt; HCI Command: Read Local Name (0x03|0x0014) plen 0
       1 &gt; HCI Event: Command Complete (0x0e) plen 252
       1 &lt; HCI Command: Set Event Mask (0x03|0x0001) plen 8
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Scan Enable (0x03|0x001a) plen 1
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Local Name (0x03|0x0013) plen 248
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Page Timeout (0x03|0x0018) plen 2
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
       1 &gt; HCI Event: Command Complete (0x0e) plen 4
       1 &lt; HCI Command: Read Stored Link Key (0x03|0x000d) plen 7
       1 &gt; HCI Event: Command Complete (0x0e) plen 8
       1 &lt; HCI Command: Read Class of Device (0x03|0x0023) plen 0
       1 &gt; HCI Event: Command Complete (0x0e) plen 7
       1 &lt; HCI Command: Create Connection (0x01|0x0005) plen 13
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &gt; HCI Event: Connect Complete (0x03) plen 11
       1 &lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
       1 &gt; HCI Event: Max Slots Change (0x1b) plen 3
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
       1 &lt; ACL data: handle 41 flags 0x02 dlen 10
       1     L2CAP(s): Info req: type 2
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 16
       1     L2CAP(s): Info rsp: type 2 result 0
       1       Extended feature mask 0x0000
       1 &lt; ACL data: handle 41 flags 0x02 dlen 12
       1     L2CAP(s): Connect req: psm 3 scid 0x0040
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 16
       1     L2CAP(s): Connect rsp: dcid 0x0064 scid 0x0040 result 1 status 2
       1       Connection pending - Authorization pending
       1 &gt; HCI Event: Remote Name Req Complete (0x07) plen 255
       1 &gt; HCI Event: Link Key Request (0x17) plen 6
       1 &lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
       1 &gt; HCI Event: Command Complete (0x0e) plen 10
       1 &gt; ACL data: handle 41 flags 0x02 dlen 16
       1     L2CAP(s): Connect rsp: dcid 0x0064 scid 0x0040 result 0 status 0
       1       Connection successful
       1 &lt; ACL data: handle 41 flags 0x02 dlen 16
       1     L2CAP(s): Config req: dcid 0x0064 flags 0x00 clen 4
       1       MTU 1013
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 14
       1     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
       1       Success
       1 &gt; ACL data: handle 41 flags 0x02 dlen 16
       1     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
       1       MTU 1013
       1 &lt; ACL data: handle 41 flags 0x02 dlen 18
       1     L2CAP(s): Config rsp: scid 0x0064 flags 0x00 result 0 clen 4
       1       MTU 1013
       1 &lt; ACL data: handle 41 flags 0x02 dlen 8
       1     L2CAP(d): cid 0x0064 len 4 [psm 3]
       1       RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c
       2 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 8
       1     L2CAP(d): cid 0x0040 len 4 [psm 3]
       1       RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7
       1 &lt; ACL data: handle 41 flags 0x02 dlen 18
       1     L2CAP(d): cid 0x0064 len 14 [psm 3]
       1       RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
       1       dlci 4 frame_type 0 credit_flow 15 pri 7 ack_timer 0
       1       frame_size 1008 max_retrans 0 credits 7
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 18
       1     L2CAP(d): cid 0x0040 len 14 [psm 3]
       1       RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
       1       dlci 4 frame_type 0 credit_flow 14 pri 7 ack_timer 0
       1       frame_size 127 max_retrans 0 credits 0
       1 &lt; ACL data: handle 41 flags 0x02 dlen 8
       1     L2CAP(d): cid 0x0064 len 4 [psm 3]
       1       RFCOMM(s): SABM: cr 1 dlci 4 pf 1 ilen 0 fcs 0x96
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; ACL data: handle 41 flags 0x02 dlen 8
       1     L2CAP(d): cid 0x0040 len 4 [psm 3]
       1       RFCOMM(s): UA: cr 1 dlci 4 pf 1 ilen 0 fcs 0x5d
       1 &lt; ACL data: handle 41 flags 0x02 dlen 12
       1     L2CAP(d): cid 0x0064 len 8 [psm 3]
       1       RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       1       dlci 4 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
       1 &lt; HCI Command: Add SCO Connection (0x01|0x0007) plen 4
       1 &gt; ACL data: handle 41 flags 0x02 dlen 12
       1     L2CAP(d): cid 0x0040 len 8 [psm 3]
       1       RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       1       dlci 4 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
       1 &lt; ACL data: handle 41 flags 0x02 dlen 12
       1     L2CAP(d): cid 0x0064 len 8 [psm 3]
       1       RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       1       dlci 4 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
       2 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       1 &gt; ACL data: handle 41 flags 0x02 dlen 12
       1     L2CAP(d): cid 0x0040 len 8 [psm 3]
       1       RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       1       dlci 4 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
       1 &lt; ACL data: handle 41 flags 0x02 dlen 9
       1     L2CAP(d): cid 0x0064 len 5 [psm 3]
       1       RFCOMM(d): UIH: cr 1 dlci 4 pf 1 ilen 0 fcs 0x79 credits 33
       1 &gt; ACL data: handle 41 flags 0x02 dlen 9
       1     L2CAP(d): cid 0x0040 len 5 [psm 3]
       1       RFCOMM(d): UIH: cr 0 dlci 4 pf 1 ilen 0 fcs 0xa3 credits 15
       1 &gt; HCI Event: Max Slots Change (0x1b) plen 3
       1 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
       1 &gt; HCI Event: Connect Complete (0x03) plen 11
       1 &gt; HCI Event: Max Slots Change (0x1b) plen 3
       1 &gt; SCO data: handle 57 flags 0x00 dlen 48
   12943 &gt; SCO data: handle 44 flags 0x00 dlen 48
       1 &lt; HCI Command: Disconnect (0x01|0x0006) plen 3
       3 &gt; SCO data: handle 44 flags 0x00 dlen 48
       1 &gt; HCI Event: Command Status (0x0f) plen 4
       7 &gt; SCO data: handle 44 flags 0x00 dlen 48
       1 &gt; HCI Event: Disconn Complete (0x05) plen 4
       1 &gt; HCI Event: Max Slots Change (0x1b) plen 3

This is what bluetoothd writes into the log
(I logged the aplay command as well)

Sep  6 11:40:49 kooka bluetoothd[30154]: Bluetooth daemon
Sep  6 11:40:49 kooka bluetoothd[30154]: Enabling debug information
Sep  6 11:40:49 kooka bluetoothd[30154]: parsing main.conf
Sep  6 11:40:49 kooka bluetoothd[30154]: offmode=NoScan
Sep  6 11:40:49 kooka bluetoothd[30154]: discovto=0
Sep  6 11:40:49 kooka bluetoothd[30154]: pageto�92
Sep  6 11:40:49 kooka bluetoothd[30154]: name=%h-%d
Sep  6 11:40:49 kooka bluetoothd[30154]: class=0x000100
Sep  6 11:40:49 kooka bluetoothd[30154]: Starting SDP server
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92f6a98
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x1
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92f8a80
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x0
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x00
Sep  6 11:40:49 kooka bluetoothd[30154]: Loading plugins \
                /usr/local/lib/bluetooth/plugins
Sep  6 11:40:49 kooka bluetoothd[30154]: /usr/local/lib/bluetooth/plugins/audio.so
Sep  6 11:40:49 kooka bluetoothd[30154]: Unix socket created: 11
Sep  6 11:40:49 kooka bluetoothd[30154]: /usr/local/lib/bluetooth/plugins/serial.so
Sep  6 11:40:49 kooka bluetoothd[30154]: /usr/local/lib/bluetooth/plugins/network.so
Sep  6 11:40:49 kooka bluetoothd[30154]: Parsing /etc/bluetooth/network.conf failed: \
                No such file or directory
Sep  6 11:40:49 kooka bluetoothd[30154]: Config options: InterfacePrefix=bnep%d, \
PANU_Script=(null), GN_Script=(null), NAP_Script=(null), GN_Interface=pan0, \
                NAP_Interface=pan1, Security=true
Sep  6 11:40:49 kooka bluetoothd[30154]: bridge pan0 created
Sep  6 11:40:49 kooka bluetoothd[30154]: /usr/local/lib/bluetooth/plugins/input.so
Sep  6 11:40:49 kooka bluetoothd[30154]: input.conf: Key file does not have key \
                'IdleTimeout'
Sep  6 11:40:49 kooka bluetoothd[30154]: HCI dev 0 registered
Sep  6 11:40:49 kooka bluetoothd[30154]: HCI dev 0 already up
Sep  6 11:40:49 kooka bluetoothd[30154]: headset_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10000
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10000
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92fb760
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10000
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x00
Sep  6 11:40:49 kooka bluetoothd[30154]: a2dp_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: SEP 0xb92f93b8 registered: type:0 codec:0 \
                seid:1
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10001
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10001
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92f98a0
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10001
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x08
Sep  6 11:40:49 kooka bluetoothd[30154]: avrcp_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10002
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10002
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92f95c0
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10002
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x08
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10003
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10003
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92f9d58
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10003
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x08
Sep  6 11:40:49 kooka bluetoothd[30154]: proxy_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface \
                org.bluez.serial.ProxyManager on path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: network_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10004
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10004
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92fc5c0
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10004
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x0a
Sep  6 11:40:49 kooka bluetoothd[30154]: register_server_record: got record id \
                0x10004
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface org.bluez.network.Peer \
                on path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: network_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10005
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10005
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92fcbe8
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10005
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x0a
Sep  6 11:40:49 kooka bluetoothd[30154]: register_server_record: got record id \
                0x10005
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface org.bluez.network.Hub \
                on path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: network_server_probe: path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Couldn't find record for : 0x10006
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding record with handle 0x10006
Sep  6 11:40:49 kooka bluetoothd[30154]: Adding rec : 0xb92fd210
Sep  6 11:40:49 kooka bluetoothd[30154]: with handle : 0x10006
Sep  6 11:40:49 kooka bluetoothd[30154]: Service classes 0x0a
Sep  6 11:40:49 kooka bluetoothd[30154]: register_server_record: got record id \
                0x10006
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface \
                org.bluez.network.Router on path /org/bluez/hci0
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Sep  6 11:40:49 kooka bluetoothd[30154]: Probe drivers for \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Sep  6 11:40:49 kooka bluetoothd[30154]: Found Headset record
Sep  6 11:40:49 kooka bluetoothd[30154]: Discovered Headset service on RFCOMM channel \
                2
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface org.bluez.audio.Headset \
                on path /org/bluez/hci0/dev_00_1A_45_2F_49_98
Sep  6 11:40:49 kooka bluetoothd[30154]: headset_probe: path \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Sep  6 11:40:49 kooka bluetoothd[30154]: Registered interface org.bluez.input.Device \
                on path /org/bluez/hci0/dev_00_1A_45_2F_49_98
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_14_A7_74_D3_AF
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_03_89_B7_F8_D3
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_0A_94_94_4F_B3
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_03_89_DC_5C_9F
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_03_89_DC_FC_EC
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_03_89_FE_E6_19
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_0E_6D_8F_91_6A
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_E6_25_AB
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_16_88_6C
Sep  6 11:40:49 kooka bluetoothd[30154]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_0C_EA_70
Sep  6 11:40:49 kooka bluetoothd[30154]: Adapter /org/bluez/hci0 has been enabled
Sep  6 11:40:49 kooka bluetoothd[30154]: Starting security manager 0
Sep  6 11:40:49 kooka bluetoothd[30154]: child 30157 exited
Sep  6 11:40:49 kooka bluetoothd[30154]: child 30158 exited
Sep  6 11:40:49 kooka bluetoothd[30154]: Agent registered for hci0 at \
                :1.24:/org/bluez/agent/hci0
Sep  6 11:45:53 kooka aplay: aplay -D JX10 /home/stuart/lib/alarm.wav
Sep  6 11:45:53 kooka bluetoothd[30154]: Accepted new client connection on unix \
                socket (fd )
Sep  6 11:45:53 kooka bluetoothd[30154]: Audio API: received BT_GETCAPABILITIES_REQ
Sep  6 11:45:53 kooka bluetoothd[30154]: Audio API: sending BT_GETCAPABILITIES_RSP
Sep  6 11:45:53 kooka bluetoothd[30154]: Audio API: received BT_SETCONFIGURATION_REQ
Sep  6 11:45:53 kooka bluetoothd[30154]: config sco - device = 00:1A:45:2F:49:98 \
                access_mode = 2
Sep  6 11:45:53 kooka bluetoothd[30154]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                Connecting to 00:1A:45:2F:49:98 channel 2
Sep  6 11:45:53 kooka bluetoothd[30154]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Sep  6 11:45:54 kooka bluetoothd[30154]: link_key_request (sba:0C:41:E1:FF:30, \
                dba:1A:45:2F:49:98)
Sep  6 11:45:54 kooka bluetoothd[30154]: kernel auth requirements = 0x00
Sep  6 11:45:54 kooka bluetoothd[30154]: stored link key type = 0x00
Sep  6 11:45:55 kooka bluetoothd[30154]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                Connected to 00:1A:45:2F:49:98
Sep  6 11:45:55 kooka bluetoothd[30154]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Sep  6 11:45:55 kooka bluetoothd[30154]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
                HEADSET_STATE_PLAY_IN_PROGRESS
Sep  6 11:46:35 kooka bluetoothd[30154]: connect(): Connection timed out (110)
Sep  6 11:46:35 kooka bluetoothd[30154]: Audio API: sending BT_SETCONFIGURATION_RSP
Sep  6 11:46:35 kooka bluetoothd[30154]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_PLAY_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Sep  6 11:46:35 kooka bluetoothd[30154]: Audio API: received BT_STREAMSTART_REQ
Sep  6 11:46:35 kooka bluetoothd[30154]: Audio API: sending BT_STREAMSTART_RSP
Sep  6 11:46:35 kooka bluetoothd[30154]: Audio API: sending BT_STREAMFD_IND
Sep  6 11:46:35 kooka bluetoothd[30154]: unix_sendmsg_fd: Bad file descriptor(9)
Sep  6 11:46:35 kooka bluetoothd[30154]: resume failed
Sep  6 11:46:35 kooka bluetoothd[30154]: Audio API: sending BT_STREAMSTART_RSP
Sep  6 11:46:35 kooka bluetoothd[30154]: Unix client disconnected (fd )

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081231152930</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-31 15:29:30-0400</timestampReceived><subject>[PATCH] Added possibility to analyze 4 blocks at once in SBC encoder</subject><body>

Hello all,

With bluez-4.25 release I hope that the SBC encoder sound quality issues are
now solved (though this is yet to be confirmed).

Nevertheless, I think it is time to focus on performance :) The attached patch
contains code preparations which are needed for SIMD optimizations for
the analysis filter. Also theoretically it should be possible to tweak code to
have both 32-bit and 16-bit fixed point analysis filter compiled in and switch
between them at runtime (at user's request or semi-intelligently depending
on audio bitrate).

This patch should be stable and ready to be committed.

Best regards,
Siarhei Siamashka

["0001-Added-possibility-to-analyze-4-blocks-at-once-in-SBC.patch" (text/x-diff)]

From e7e029ee7acb75e0a846c61f19a4244810242cdb Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@gmail.com&gt;
Date: Wed, 31 Dec 2008 09:14:25 +0200
Subject: [PATCH] Added possibility to analyze 4 blocks at once in SBC encoder

This change is needed for SIMD optimizations which will follow
shortly. And even for non-SIMD capable platforms it still may
be useful to have possibility to merge several analyzing functions
together into one for better code scheduling or reusing loaded
constants. Also analysis filter functions are now called using
function pointers, which allows the default implementation to be
overrided at runtime (with high precision variant or MMX/SSE2/NEON
optimized code).
---
 sbc/sbc.c |  131 ++++++++++++++++++++++++++++++++++++++-----------------------
 1 files changed, 82 insertions(+), 49 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index ce52e1e..01b4011 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -94,7 +94,11 @@ struct sbc_decoder_state {
 struct sbc_encoder_state {
 	int subbands;
 	int position[2];
-	int16_t X[2][160];
+	int16_t X[2][256];
+	void (*sbc_analyze_4b_4s)(int16_t *pcm, int16_t *x,
+				  int32_t *out, int out_stride);
+	void (*sbc_analyze_4b_8s)(int16_t *pcm, int16_t *x,
+				  int32_t *out, int out_stride);
 };
 
 /*
@@ -649,14 +653,6 @@ static int sbc_synthesize_audio(struct sbc_decoder_state *state,
 	}
 }
 
-static void sbc_encoder_init(struct sbc_encoder_state *state,
-				const struct sbc_frame *frame)
-{
-	memset(&amp;state-&gt;X, 0, sizeof(state-&gt;X));
-	state-&gt;subbands = frame-&gt;subbands;
-	state-&gt;position[0] = state-&gt;position[1] = 9 * frame-&gt;subbands;
-}
-
 static inline void _sbc_analyze_four(const int16_t *in, int32_t *out)
 {
 	FIXED_A t1[4];
@@ -694,23 +690,27 @@ static inline void _sbc_analyze_four(const int16_t *in, int32_t *out)
 	}
 }
 
-static inline void sbc_analyze_four(struct sbc_encoder_state *state,
-				struct sbc_frame *frame, int ch, int blk)
+static void sbc_analyze_4b_4s(int16_t *pcm, int16_t *x,
+			      int32_t *out, int out_stride)
 {
-	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
-	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 4];
-
-	/* Input 4 Audio Samples */
-	x[40] = x[0] = pcm[3];
-	x[41] = x[1] = pcm[2];
-	x[42] = x[2] = pcm[1];
-	x[43] = x[3] = pcm[0];
-
-	_sbc_analyze_four(x, frame-&gt;sb_sample_f[blk][ch]);
+	int i;
+
+	/* Input 4 x 4 Audio Samples */
+	for (i = 0; i &lt; 16; i += 4) {
+		x[64 + i] = x[0 + i] = pcm[15 - i];
+		x[65 + i] = x[1 + i] = pcm[14 - i];
+		x[66 + i] = x[2 + i] = pcm[13 - i];
+		x[67 + i] = x[3 + i] = pcm[12 - i];
+	}
 
-	state-&gt;position[ch] -= 4;
-	if (state-&gt;position[ch] &lt; 0)
-		state-&gt;position[ch] = 36;
+	/* Analyze four blocks */
+	_sbc_analyze_four(x + 12, out);
+	out += out_stride;
+	_sbc_analyze_four(x + 8, out);
+	out += out_stride;
+	_sbc_analyze_four(x + 4, out);
+	out += out_stride;
+	_sbc_analyze_four(x, out);
 }
 
 static inline void _sbc_analyze_eight(const int16_t *in, int32_t *out)
@@ -766,28 +766,31 @@ static inline void _sbc_analyze_eight(const int16_t *in, int32_t *out)
 	}
 }
 
-static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
-					struct sbc_frame *frame, int ch,
-					int blk)
+static void sbc_analyze_4b_8s(int16_t *pcm, int16_t *x,
+			      int32_t *out, int out_stride)
 {
-	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
-	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 8];
-
-	/* Input 8 Audio Samples */
-	x[80] = x[0] = pcm[7];
-	x[81] = x[1] = pcm[6];
-	x[82] = x[2] = pcm[5];
-	x[83] = x[3] = pcm[4];
-	x[84] = x[4] = pcm[3];
-	x[85] = x[5] = pcm[2];
-	x[86] = x[6] = pcm[1];
-	x[87] = x[7] = pcm[0];
-
-	_sbc_analyze_eight(x, frame-&gt;sb_sample_f[blk][ch]);
-
-	state-&gt;position[ch] -= 8;
-	if (state-&gt;position[ch] &lt; 0)
-		state-&gt;position[ch] = 72;
+	int i;
+
+	/* Input 4 x 8 Audio Samples */
+	for (i = 0; i &lt; 32; i += 8) {
+		x[128 + i] = x[0 + i] = pcm[31 - i];
+		x[129 + i] = x[1 + i] = pcm[30 - i];
+		x[130 + i] = x[2 + i] = pcm[29 - i];
+		x[131 + i] = x[3 + i] = pcm[28 - i];
+		x[132 + i] = x[4 + i] = pcm[27 - i];
+		x[133 + i] = x[5 + i] = pcm[26 - i];
+		x[134 + i] = x[6 + i] = pcm[25 - i];
+		x[135 + i] = x[7 + i] = pcm[24 - i];
+	}
+
+	/* Analyze four blocks */
+	_sbc_analyze_eight(x + 24, out);
+	out += out_stride;
+	_sbc_analyze_eight(x + 16, out);
+	out += out_stride;
+	_sbc_analyze_eight(x + 8, out);
+	out += out_stride;
+	_sbc_analyze_eight(x, out);
 }
 
 static int sbc_analyze_audio(struct sbc_encoder_state *state,
@@ -798,14 +801,32 @@ static int sbc_analyze_audio(struct sbc_encoder_state *state,
 	switch (frame-&gt;subbands) {
 	case 4:
 		for (ch = 0; ch &lt; frame-&gt;channels; ch++)
-			for (blk = 0; blk &lt; frame-&gt;blocks; blk++)
-				sbc_analyze_four(state, frame, ch, blk);
+			for (blk = 0; blk &lt; frame-&gt;blocks; blk += 4) {
+				state-&gt;sbc_analyze_4b_4s(
+					&amp;frame-&gt;pcm_sample[ch][blk * 4],
+					&amp;state-&gt;X[ch][state-&gt;position[ch]],
+					frame-&gt;sb_sample_f[blk][ch],
+					frame-&gt;sb_sample_f[blk + 1][ch] -
+					frame-&gt;sb_sample_f[blk][ch]);
+				state-&gt;position[ch] -= 16;
+				if (state-&gt;position[ch] &lt; 0)
+					state-&gt;position[ch] = 64 - 16;
+			}
 		return frame-&gt;blocks * 4;
 
 	case 8:
 		for (ch = 0; ch &lt; frame-&gt;channels; ch++)
-			for (blk = 0; blk &lt; frame-&gt;blocks; blk++)
-				sbc_analyze_eight(state, frame, ch, blk);
+			for (blk = 0; blk &lt; frame-&gt;blocks; blk += 4) {
+				state-&gt;sbc_analyze_4b_8s(
+					&amp;frame-&gt;pcm_sample[ch][blk * 8],
+					&amp;state-&gt;X[ch][state-&gt;position[ch]],
+					frame-&gt;sb_sample_f[blk][ch],
+					frame-&gt;sb_sample_f[blk + 1][ch] -
+					frame-&gt;sb_sample_f[blk][ch]);
+				state-&gt;position[ch] -= 32;
+				if (state-&gt;position[ch] &lt; 0)
+					state-&gt;position[ch] = 128 - 32;
+			}
 		return frame-&gt;blocks * 8;
 
 	default:
@@ -1025,6 +1046,18 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 	return data_ptr - data;
 }
 
+static void sbc_encoder_init(struct sbc_encoder_state *state,
+				const struct sbc_frame *frame)
+{
+	memset(&amp;state-&gt;X, 0, sizeof(state-&gt;X));
+	state-&gt;subbands = frame-&gt;subbands;
+	state-&gt;position[0] = state-&gt;position[1] = 12 * frame-&gt;subbands;
+
+	/* Default implementation for analyze function */
+	state-&gt;sbc_analyze_4b_4s = sbc_analyze_4b_4s;
+	state-&gt;sbc_analyze_4b_8s = sbc_analyze_4b_8s;
+}
+
 struct sbc_priv {
 	int init;
 	struct sbc_frame frame;
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081225231444</emailId><senderName>Khem Raj</senderName><senderEmail>raj.khem@gmail.com</senderEmail><timestampReceived>2008-12-25 23:14:44-0400</timestampReceived><subject>[patch] hid2hci check usb_init return value</subject><body>

Hi

Working on a system which did not have a USB in it. I was getting a
segfault with hid2hci. The problem tracked down was usb_init () was 
failing and we did not check for it and carried on with execution. 
As a result the next call to libusb failed because we passed in NULL for
ctx because during usb_init () this should have been malloc'ed if all
have gone correctly but in case of error usb_init () free's up the
allocated memory and hence the segfault. 

We should check for return value of usb_init () call and exit
immediately if it fails. Tested on 4.24 release. 

OK ?

Thanks

-Khem



["hid2hci_usb_init.patch" (text/x-diff)]

# Signed-off-by: Khem Raj &lt;raj.khem@gmail.com&gt;
#
# Use the new usb1 API for usb_init() and check for fails from 
# usb_init (). Currently we see a crash on a system which does
# not have USB because usb_init() fails and it cleans up all initialized
# data (e.g. ctx) which is used in subsequent calls to libusb
# We return immediately if usb_init() fails for some reason.

Index: bluez-4.24/tools/hid2hci.c
===================================================================
--- bluez-4.24.orig/tools/hid2hci.c	2008-10-25 23:40:34.000000000 -0700
+++ bluez-4.24/tools/hid2hci.c	2008-12-25 01:24:12.000000000 -0800
@@ -337,7 +337,7 @@
 int main(int argc, char *argv[])
 {
 	struct device_info dev[16];
-	int i, opt, num, quiet = 0, mode = HCI;
+	int i, ret, opt, num, quiet = 0, mode = HCI;
 
 	while ((opt = getopt_long(argc, argv, "+01qh", main_options, NULL)) != -1) {
 		switch (opt) {
@@ -361,8 +361,9 @@
 	argc -= optind;
 	argv += optind;
 	optind = 0;
-
-	usb_init();
+	ret = usb_init();
+	if (ret &lt; 0)
+		return ret;
 
 	num = find_devices(mode, dev, sizeof(dev) / sizeof(dev[0]));
 	if (num &lt;= 0) {

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081229121231</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 12:12:31-0400</timestampReceived><subject>Re: [patch] hid2hci check usb_init return value</subject><body>

Hi Khem,

&gt; Working on a system which did not have a USB in it. I was getting a
&gt; segfault with hid2hci. The problem tracked down was usb_init () was 
&gt; failing and we did not check for it and carried on with execution. 
&gt; As a result the next call to libusb failed because we passed in NULL for
&gt; ctx because during usb_init () this should have been malloc'ed if all
&gt; have gone correctly but in case of error usb_init () free's up the
&gt; allocated memory and hence the segfault. 
&gt; 
&gt; We should check for return value of usb_init () call and exit
&gt; immediately if it fails. Tested on 4.24 release. 

the problem is that usb_init() doesn't return any errors on the versions
that I have here:

ii  libusb-0.1-4   2:0.1.12-12    userspace USB programming library
ii  libusb-dev     2:0.1.12-12    userspace USB programming library

Applying your patch would break complication on multiple platforms.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001090621</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-01 09:06:21-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

Hi Ville,

&gt; I have A-link dongle with following records. This seems to require the
&gt; same quirk. Tested with v2.6.26-mh4 and btusb module.
&gt; 
&gt; hci0:   Type: USB
&gt;         BD Address: 00:02:72:16:15:F9 ACL MTU: 1021:8 SCO MTU: 64:1
&gt;         UP RUNNING 
&gt;         RX bytes:5385 acl:0 sco:0 events:70 errors:0
&gt;         TX bytes:698 acl:0 sco:0 commands:48 errors:0
&gt;         Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x79 0x83
&gt;         Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
&gt;         Link policy: RSWITCH HOLD SNIFF PARK 
&gt;         Link mode: SLAVE ACCEPT 
&gt;         Name: 'null-0'
&gt;         Class: 0x000100
&gt;         Service Classes: Unspecified
&gt;         Device Class: Computer, Uncategorized
&gt;         HCI Ver: 2.1 (0x4) HCI Rev: 0x5111 LMP Ver: 2.1 (0x4) LMP
&gt; Subver: 0x420e
&gt;         Manufacturer: Broadcom Corporation (15)
&gt; 
&gt; hci0:   Type: USB
&gt;         BD Address: 00:02:72:16:15:F9 ACL MTU: 1021:8 SCO MTU: 64:1
&gt;         Firmware 17.66 / 14

can you give me the simple lsusb and /proc/bus/usb/devices for this one
please.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001163300</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-01 16:33:00-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

On Wed, 2008-10-01 at 09:26 -0700, Jim Carter wrote:
&gt; On Wed, 1 Oct 2008, David Sainty wrote:
&gt; 
&gt; &gt; xdpyinfo says the DPI is 100x101... heh...
&gt; &gt; 
&gt; &gt;  dimensions:    800x480 pixels (203x121 millimeters)
&gt; &gt;  resolution:    100x101 dots per inch
&gt; &gt; 
&gt; &gt; In reality it's around 133dpi (153mm x 92mm).
&gt; 
&gt; I'm sure the erratic sizing comes from nonuniform font selection.
&lt;snip&gt;

What does all that have to do with the discussion at hand?

&gt; I wonder if the Bluetooth applet follows this rule?  Judging from the 
&gt; discussion, most likely it does, and it's then at the mercy of the distro's 
&gt; setup.

There's resolution independence patches ready to be merged into GTK+.
See:
http://bugzilla.gnome.org/show_bug.cgi?id=546711

&gt; Judging the screenshots that were shown, I think the landscape layout (new) 
&gt; is more practical for the N810.

The N810 doesn't use bluez-gnome.

&gt;   However, the smallest screen I have to 
&gt; deal with at work is the Palm Treo 650 at 320x320px.

Which doesn't run Linux, or bluez-gnome, does it?

&gt;   It wouldn't be 
&gt; running Linux, but if it were, both orientations would be equally bad.  I 
&gt; suspect that handheld devices are the most likely to have Bluetooth 
&gt; accessories, since they have the most limitation in power and USB ports, so 
&gt; special effort should be put in to fit any dialog boxes reliably on the 
&gt; small screens, assuming the distro provides defaults that make this 
&gt; possible.

Please don't go off on tangents. There's a pretty clear discussion
happening, I don't think we want to hear ramblings about other devices
that don't even use bluez-gnome.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001091907</emailId><senderName>"Massimo Morini"</senderName><senderEmail>morrisbit@yahoo.it</senderEmail><timestampReceived>2008-10-01 09:19:07-0400</timestampReceived><subject>bluetooth and detection devices actually present</subject><body>

Hy

In Applet 0.26 in Bluetooth devices detected appear, let's say, over time ...

I want to delete these devices (if I find the file)


so by "explores devices," of Applet Bluetooth,
i see devices actually present in the vicinity at that moment.

and not all those who took over in time BlueZ and that will be saved.

can you show me the files I try?

Thanks in advance
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001220931</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-01 22:09:31-0400</timestampReceived><subject>Untrusted input devices by default</subject><body>

Hello:

In my efforts to get BlueZ 4.x into Intrepid a question was posed.  How
come input devices don't default to "Trusted" when paired in the
Wizard?  This makes for a weird experience the next time you reboot (or
disconnect the device for that matter) that you need to give it
"authorization".

Regards
--=20
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081003063735</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-03 06:37:35-0400</timestampReceived><subject>Re: Untrusted input devices by default</subject><body>

Hi Mario,

&gt; In my efforts to get BlueZ 4.x into Intrepid a question was posed.  How
&gt; come input devices don't default to "Trusted" when paired in the
&gt; Wizard?  This makes for a weird experience the next time you reboot (or
&gt; disconnect the device for that matter) that you need to give it
&gt; "authorization".

that is a bug. We should set the input device as trusted after we
connected to it. Any chance you have a patch for it?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930210318</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-09-30 21:03:18-0400</timestampReceived><subject>bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect: Operation</subject><body>

Hi again

I just installed bluez-4.9 and linux 2.6.27-rc8 hoping that my
Jabra JX10 bluetooth headset would start working. Still no luck.
Bluetoothd says "connect: Operation not permitted (1)" and
aplay "BT_SETCONFIGURATION failed".

I also downloaded the 2.6.26-mh6 patches from
http://www.bluez.org/more-usb-driver-fixes-and-quirks/ and recompiled
another kernel. The kernel crashed twice (I only booted it twice) rather
quickly. I did get time to run aplay once and it gave the same errors
as shown here. The hcidump is almost exactly the same.

Er, what headsets do work? Please let me know. The Jabra JX10 "features
Bluetooth 2.0 and e-SCO for improved audio quality and MultiPoint
capability for connecting to 2 devices at once". Could that be
what is causing the problem?

I ran strace on bluetoothd and it appears that it is
"bind(25, {sa_family=AF_BLUETOOTH, \
sa_data="0\377\341A\f\0\310\261\v\270H\225d\271"...}, 8)" that is returning -1 with \
errno set to EADDRINUSE

Please let me know if I should send these questions elsewhere.

thanks for any advice!
Stuart

Bluetoothd says:

bluetoothd: Accepted new client connection on unix socket (fd=23)
bluetoothd: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to 00:1A:45:2F:49:98 \
                channel 1
bluetoothd: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                HEADSET_STATE_DISCONNECTED -&gt; HEADSET_STATE_CONNECT_IN_PROGRESS
bluetoothd: adapter_get_device(00:1A:45:2F:49:98)
bluetoothd: link_key_request (sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98)
bluetoothd: kernel auth requirements = 0x04
bluetoothd: stored link key type = 0x00
bluetoothd: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98
bluetoothd: Received AT+BRSF=27
bluetoothd: HFP HF features: "EC and/or NR function" "Call waiting and 3-way calling" \
                "Voice recognition activation" "Remote volume control"
bluetoothd: Received AT+CIND=?
bluetoothd: Received AT+CIND?
bluetoothd: Received AT+CMER=3, 0, 0, 1
bluetoothd: Event reporting (CMER): mode=3, ind=1
bluetoothd: HFP Service Level Connection established
bluetoothd: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED
bluetoothd: connect: Operation not permitted (1)
bluetoothd: config failed
bluetoothd: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd: Unix client disconnected (fd=23)
bluetoothd: Received AT+VGS=00

% aplay -D JX10 lib/alarm.wav
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]

# hciconfig hci0 revision
hci0:	Type: USB
	BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
	HCI 16.4
	Chip version: BlueCore02-External
	Max key size: 56 bit
	SCO mapping:  HCI
# hciconfig hci0 version
hci0:	Type: USB
	BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
	HCI Ver: 1.1 (0x1) HCI Rev: 0x20d LMP Ver: 1.1 (0x1) LMP Subver: 0x20d
	Manufacturer: Cambridge Silicon Radio (10)

HCI sniffer - Bluetooth packet analyzer ver 1.42
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
     bdaddr 00:1A:45:2F:49:98 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
     Packet type: DM1 DM3 DM5 DH1 DH3 DH5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Create Connection (0x01|0x0005) status 0x00 ncmd 1
 &gt; HCI Event: Connect Complete (0x03) plen 11
     status 0x00 handle 41 bdaddr 00:1A:45:2F:49:98 type ACL encrypt 0x00
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
     handle 41
 &gt; HCI Event: Command Status (0x0f) plen 4
     Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 0
 &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
     bdaddr 00:1A:45:2F:49:98 mode 1
 &gt; HCI Event: Max Slots Change (0x1b) plen 3
     handle 41 slots 5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Unknown (0x00|0x0000) status 0x00 ncmd 1
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
     bdaddr 00:1A:45:2F:49:98 mode 2 clkoffset 0x0000
 &gt; HCI Event: Command Status (0x0f) plen 4
     Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
 &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
     status 0x00 handle 41
     Features: 0xbf 0xfe 0x8b 0xf8 0x1b 0x18 0x00 0x80
&lt; ACL data: handle 41 flags 0x02 dlen 10
     L2CAP(s): Info req: type 2
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Info rsp: type 2 result 0
       Extended feature mask 0x0000
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(s): Connect req: psm 3 scid 0x0040
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0040 result 1 status 2
       Connection pending - Authorization pending
 &gt; HCI Event: Remote Name Req Complete (0x07) plen 255
     status 0x00 bdaddr 00:1A:45:2F:49:98 name 'Jabra JX10 series 2'
 &gt; HCI Event: Link Key Request (0x17) plen 6
     bdaddr 00:1A:45:2F:49:98
&lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
     bdaddr 00:1A:45:2F:49:98 key F63331CE2D0DBCA190DC73C930CD6117
 &gt; HCI Event: Command Complete (0x0e) plen 10
     Link Key Request Reply (0x01|0x000b) ncmd 1
     status 0x00 bdaddr 00:1A:45:2F:49:98
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0040 result 0 status 0
       Connection successful
&lt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x0058 flags 0x00 clen 4
       MTU 1013
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
       Success
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(s): Config rsp: scid 0x0058 flags 0x00 result 0 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0058 len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0058 len 14 [psm 3]
       RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
       dlci 2 frame_type 0 credit_flow 15 pri 7 ack_timer 0
       frame_size 1008 max_retrans 0 credits 7
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
       dlci 2 frame_type 0 credit_flow 14 pri 7 ack_timer 0
       frame_size 127 max_retrans 0 credits 0
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0058 len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 2 pf 1 ilen 0 fcs 0x59
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 2 pf 1 ilen 0 fcs 0x92
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x0058 len 5 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 1 ilen 0 fcs 0x86 credits 33
 &gt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x0040 len 5 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 0 fcs 0x5c credits 15
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 0 ilen 11 fcs 0x40
       0000: 41 54 2b 42 52 53 46 3d  32 37 0d                 AT+BRSF=27.
&lt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0058 len 15 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 11 fcs 0x9a
       0000: 0d 0a 2b 42 52 53 46 3d  30 0d 0a                 ..+BRSF=0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 2
       0000: 41 54 2b 43 49 4e 44 3d  3f 0d                    AT+CIND=?.
&lt; ACL data: handle 41 flags 0x02 dlen 135
     L2CAP(d): cid 0x0058 len 131 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 127 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  28 22 62 61 74 74 63 68  ..+CIND:("battch
       0010: 67 22 2c 28 30 2d 35 29  29 2c 28 22 73 69 67 6e  g",(0-5)),("sign
       0020: 61 6c 22 2c 28 30 2d 35  29 29 2c 28 22 73 65 72  al",(0-5)),("ser
       0030: 76 69 63 65 22 2c 28 30  2c 31 29 29 2c 28 22 63  vice",(0,1)),("c
       0040: 61 6c 6c 22 2c 28 30 2c  31 29 29 2c 28 22 63 61  all",(0,1)),("ca
       0050: 6c 6c 73 65 74 75 70 22  2c 28 30 2d 33 29 29 2c  llsetup",(0-3)),
       0060: 28 22 63 61 6c 6c 68 65  6c 64 22 2c 28 30 2d 32  ("callheld",(0-2
       0070: 29 29 2c 28 22 72 6f 61  6d 22 2c 28 30 2c 31     )),("roam",(0,1
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 4 fcs 0x9a
       0000: 29 29 0d 0a                                       ))..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 9 fcs 0x5c credits 3
       0000: 41 54 2b 43 49 4e 44 3f  0d                       AT+CIND?.
&lt; ACL data: handle 41 flags 0x02 dlen 31
     L2CAP(d): cid 0x0058 len 27 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 23 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  35 2c 35 2c 31 2c 30 2c  ..+CIND:5,5,1,0,
       0010: 30 2c 30 2c 30 0d 0a                              0,0,0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 28
     L2CAP(d): cid 0x0040 len 24 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 19 fcs 0x5c credits 2
       0000: 41 54 2b 43 4d 45 52 3d  33 2c 20 30 2c 20 30 2c  AT+CMER=3, 0, 0,
       0010: 20 31 0d                                           1.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 1
       0000: 41 54 2b 56 47 53 3d 30  30 0d                    AT+VGS=00.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006062121</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-06 06:21:21-0400</timestampReceived><subject>[PATCH] Don't show (null) in wizard</subject><body>

Hi:

I've noticed that the wizard will show (null) if the device name is not yet \
recognized when pairing.  This is a bit confusing to the user experience.  The \
attached patch makes the behavior a little bit better.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["07_null_device_name.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.8/wizard/main.c bluez-gnome-1.8.new/wizard/main.c
--- bluez-gnome-1.8/wizard/main.c	2008-10-04 14:32:56.000000000 -0500
+++ bluez-gnome-1.8.new/wizard/main.c	2008-10-06 01:18:54.000000000 -0500
@@ -362,6 +362,8 @@
 		g_free(target_address);
 		target_address = address;
 
+		if (name == NULL)
+			name = "device";
 		g_free(target_name);
 		target_name = name;
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081006083359</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 08:33:59-0400</timestampReceived><subject>Re: H5 support?</subject><body>

Hi George,

&gt; I need to implement H5 support in the BlueZ stack. Has anybody already
&gt; done any work on H5? I see it as a todo in BlueZ website.

the Three-Wire support can be done via a modified BCSP since that is
what it is. Actually a lot more simplified BCSP.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081002203206</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-10-02 20:32:06-0400</timestampReceived><subject>fix bug in suspend/resume code of btusb</subject><body>

Hi,

this fixes an issue in btusb's suspend/resume support that strikes if
the adapter is suspended while the hci is down.
This probably fixes the bug Pavel sees with autosuspend and fixes a bug
for me. I am currently looking at issues with new hardware, but with this patch
it should work at least for the best hardware.

What tree should I base a clean patch against?

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver


---

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index ef24515..47ff028 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -1072,6 +1069,10 @@ static int btusb_resume(struct usb_interface *intf)
 			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
 			return ret;
 		}
+	} else {
+		spin_lock_irq(&amp;data-&gt;lock);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;lock);
 	}
 
 	if (hdev-&gt;conn_hash.acl_num &gt; 0) {


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006090514</emailId><senderName>Tomas Winkler</senderName><senderEmail>tomas.winkler@intel.com</senderEmail><timestampReceived>2008-10-06 09:05:14-0400</timestampReceived><subject>[PATCH] btsdio: fix tx error path</subject><body>

This patch fixes accumulating of the header
in case packet was requeued in the error path.

Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
---
 drivers/bluetooth/btsdio.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
index 58630cc..e4724b8 100644
--- a/drivers/bluetooth/btsdio.c
+++ b/drivers/bluetooth/btsdio.c
@@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data *data, struct sk_buff *skb)
 
 	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
 	if (err &lt; 0) {
+		skb_pop(skb, 4);
 		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
 		return err;
 	}
-- 
1.5.4.3

---------------------------------------------------------------------
Intel Israel (74) Limited

This e-mail and any attachments may contain confidential material for
the sole use of the intended recipient(s). Any review or distribution
by others is strictly prohibited. If you are not the intended
recipient, please contact the sender and delete all copies.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006092250</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 09:22:50-0400</timestampReceived><subject>Re: [PATCH] btsdio: fix tx error path</subject><body>

Hi Tomas,

&gt; This patch fixes accumulating of the header
&gt; in case packet was requeued in the error path.
&gt; 
&gt; Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; ---
&gt;  drivers/bluetooth/btsdio.c |    1 +
&gt;  1 files changed, 1 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
&gt; index 58630cc..e4724b8 100644
&gt; --- a/drivers/bluetooth/btsdio.c
&gt; +++ b/drivers/bluetooth/btsdio.c
&gt; @@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data *data, struct sk_buff *skb)
&gt;  
&gt;  	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
&gt;  	if (err &lt; 0) {
&gt; +		skb_pop(skb, 4);
&gt;  		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
&gt;  		return err;
&gt;  	}

good catch. Applied to my tree. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081004232414</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-04 23:24:14-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect():</subject><body>

Hi Marcel

On 04/10/08 13:51, Marcel Holtmann wrote:
&gt; &gt; &gt; There is a regression on bluetoothd daemon, we introduce a SCO socket
&gt; &gt; &gt; listen recently which is causing the problem, although it seem that
&gt; &gt; &gt; the driver is also cooperating with the problem.
&gt; &gt; ok. Thanks for the information. Would installing bluez-4.10 help? 
&gt; I will release 4.11 over the weekend and that should fix it.

not for me :-( I am once again getting the "aplay: set_params:979:
Unable to install hw params:" message after a 40 second delay.

The headset hisses softly to me during these 40 seconds.

The error message from bluetoothd is "connect(): Connection timed out (110)"

Sometimes bluetoothd segfaults.

Would you like to see the output of hcidump?

Oct  5 01:08:44 kooka bluetoothd[21788]: Bluetooth daemon
Oct  5 01:08:44 kooka bluetoothd[21788]: Enabling debug information
Oct  5 01:08:44 kooka bluetoothd[21788]: parsing main.conf
Oct  5 01:08:44 kooka bluetoothd[21788]: offmode=NoScan
Oct  5 01:08:44 kooka bluetoothd[21788]: discovto=0
Oct  5 01:08:44 kooka bluetoothd[21788]: pageto=8192
Oct  5 01:08:44 kooka bluetoothd[21788]: name=%h-%d
Oct  5 01:08:44 kooka bluetoothd[21788]: class=0x000100
Oct  5 01:08:44 kooka bluetoothd[21788]: inqmode=0
Oct  5 01:08:44 kooka bluetoothd[21788]: Starting SDP server
Oct  5 01:08:44 kooka bluetoothd[21788]: Loading plugins \
                /usr/local/lib/bluetooth/plugins
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/audio.so
Oct  5 01:08:44 kooka bluetoothd[21788]: Parsing /etc/bluetooth/audio.conf failed: No \
                such file or directory
Oct  5 01:08:44 kooka bluetoothd[21788]: Unix socket created: 11
Oct  5 01:08:44 kooka bluetoothd[21788]: Telephony plugin initialized
Oct  5 01:08:44 kooka bluetoothd[21788]: HFP AG features: "Ability to reject a call" \
                "Enhanced call status" "Extended Error Result Codes"
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/serial.so
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/hal.so
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/service.so
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/network.so
Oct  5 01:08:44 kooka bluetoothd[21788]: Parsing /etc/bluetooth/network.conf failed: \
                No such file or directory
Oct  5 01:08:44 kooka bluetoothd[21788]: Config options: InterfacePrefix=bnep%d, \
PANU_Script=(null), GN_Script=(null), NAP_Script=(null), GN_Interface=pan0, \
                NAP_Interface=pan1, Security=true
Oct  5 01:08:44 kooka bluetoothd[21788]: bridge pan0 created
Oct  5 01:08:44 kooka bluetoothd[21788]: /usr/local/lib/bluetooth/plugins/input.so
Oct  5 01:08:44 kooka bluetoothd[21788]: input.conf: Key file does not have key \
                'IdleTimeout'
Oct  5 01:08:44 kooka bluetoothd[21788]: HCI dev 0 registered
Oct  5 01:08:44 kooka bluetoothd[21788]: child 21791 forked
Oct  5 01:08:44 kooka bluetoothd[21788]: HCI dev 0 already up
Oct  5 01:08:44 kooka bluetoothd[21788]: headset_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10000
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10001
Oct  5 01:08:44 kooka bluetoothd[21788]: a2dp_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: SEP 0xb9818800 registered: type:0 codec:0 \
                seid:1
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10002
Oct  5 01:08:44 kooka bluetoothd[21788]: avrcp_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10003
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10004
Oct  5 01:08:44 kooka bluetoothd[21788]: proxy_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface \
                org.bluez.SerialProxyManager on path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: service_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.Service on \
                path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: network_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10005
Oct  5 01:08:44 kooka bluetoothd[21788]: register_server_record: got record id \
                0x10005
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.NetworkPeer \
                on path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: network_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10006
Oct  5 01:08:44 kooka bluetoothd[21788]: register_server_record: got record id \
                0x10006
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.NetworkHub on \
                path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: network_server_probe: path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Adding record with handle 0x10007
Oct  5 01:08:44 kooka bluetoothd[21788]: register_server_record: got record id \
                0x10007
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.NetworkRouter \
                on path /org/bluez/hci0
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Oct  5 01:08:44 kooka bluetoothd[21788]: Probe drivers for \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Oct  5 01:08:44 kooka bluetoothd[21788]: Found Headset record
Oct  5 01:08:44 kooka bluetoothd[21788]: Discovered Headset service on RFCOMM channel \
                2
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.Headset on \
                path /org/bluez/hci0/dev_00_1A_45_2F_49_98
Oct  5 01:08:44 kooka bluetoothd[21788]: Found Hansfree record
Oct  5 01:08:44 kooka bluetoothd[21788]: Discovered Handsfree service on RFCOMM \
                channel 1
Oct  5 01:08:44 kooka bluetoothd[21788]: headset_probe: path \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Oct  5 01:08:44 kooka bluetoothd[21788]: Registered interface org.bluez.Input on path \
                /org/bluez/hci0/dev_00_1A_45_2F_49_98
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_14_A7_74_D3_AF
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_03_89_B7_F8_D3
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_0A_94_94_4F_B3
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_03_89_DC_5C_9F
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_03_89_DC_FC_EC
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_03_89_FE_E6_19
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_0E_6D_8F_91_6A
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_E6_25_AB
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_16_88_6C
Oct  5 01:08:44 kooka bluetoothd[21788]: Creating device \
                /org/bluez/hci0/dev_00_17_E5_0C_EA_70
Oct  5 01:08:44 kooka bluetoothd[21788]: Adapter /org/bluez/hci0 has been enabled
Oct  5 01:08:44 kooka bluetoothd[21788]: Starting security manager 0
Oct  5 01:08:44 kooka bluetoothd[21788]: child 21791 exited
Oct  5 01:08:44 kooka bluetoothd[21788]: Computer is classified as desktop
Oct  5 01:08:44 kooka bluetoothd[21788]: Current device class is 0x4a0104
Oct  5 01:08:44 kooka bluetoothd[21788]: Setting 0x000104 for major/minor device \
                class
Oct  5 01:09:03 kooka bluetoothd[21788]: Accepted new client connection on unix \
                socket (fd=23)
Oct  5 01:09:03 kooka bluetoothd[21788]: Audio API: received BT_GETCAPABILITIES_REQ
Oct  5 01:09:03 kooka bluetoothd[21788]: Audio API: sending BT_GETCAPABILITIES_RSP
Oct  5 01:09:03 kooka bluetoothd[21788]: Audio API: received BT_SETCONFIGURATION_REQ
Oct  5 01:09:03 kooka bluetoothd[21788]: config sco - device = 00:1A:45:2F:49:98 \
                access_mode = 2
Oct  5 01:09:03 kooka bluetoothd[21788]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                Connecting to 00:1A:45:2F:49:98 channel 1
Oct  5 01:09:03 kooka bluetoothd[21788]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Oct  5 01:09:06 kooka bluetoothd[21788]: adapter_get_device(00:1A:45:2F:49:98)
Oct  5 01:09:07 kooka bluetoothd[21788]: link_key_request (sba=00:0C:41:E1:FF:30, \
                dba=00:1A:45:2F:49:98)
Oct  5 01:09:07 kooka bluetoothd[21788]: kernel auth requirements = 0x04
Oct  5 01:09:07 kooka bluetoothd[21788]: stored link key type = 0x00
Oct  5 01:09:07 kooka bluetoothd[21788]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                Connected to 00:1A:45:2F:49:98
Oct  5 01:09:07 kooka bluetoothd[21788]: Received AT+BRSF=27
Oct  5 01:09:07 kooka bluetoothd[21788]: HFP HF features: "EC and/or NR function" \
"Call waiting and 3-way calling" "Voice recognition activation" "Remote volume \
                control"
Oct  5 01:09:08 kooka bluetoothd[21788]: Received AT+CIND=?
Oct  5 01:09:08 kooka bluetoothd[21788]: Received AT+CIND?
Oct  5 01:09:08 kooka bluetoothd[21788]: Received AT+CMER=3, 0, 0, 1
Oct  5 01:09:08 kooka bluetoothd[21788]: Event reporting (CMER): mode=3, ind=1
Oct  5 01:09:08 kooka bluetoothd[21788]: HFP Service Level Connection established
Oct  5 01:09:08 kooka bluetoothd[21788]: telephony-dummy: device 0xb981d4f8 connected
Oct  5 01:09:08 kooka bluetoothd[21788]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Oct  5 01:09:08 kooka bluetoothd[21788]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
                HEADSET_STATE_PLAY_IN_PROGRESS
Oct  5 01:09:08 kooka bluetoothd[21788]: Received AT+VGS=15
Oct  5 01:09:48 kooka bluetoothd[21788]: connect(): Connection timed out (110)
Oct  5 01:09:48 kooka bluetoothd[21788]: Audio API: sending BT_SETCONFIGURATION_RSP
Oct  5 01:09:48 kooka bluetoothd[21788]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_PLAY_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Oct  5 01:09:48 kooka bluetoothd[21788]: Audio API: received BT_STREAMSTART_REQ
Oct  5 01:09:48 kooka bluetoothd[21788]: Audio API: sending BT_STREAMSTART_RSP
Oct  5 01:09:48 kooka bluetoothd[21788]: Audio API: sending BT_STREAMFD_IND
Oct  5 01:09:48 kooka bluetoothd[21788]: unix_sendmsg_fd: Bad file descriptor(9)
Oct  5 01:09:48 kooka bluetoothd[21788]: resume failed
Oct  5 01:09:48 kooka bluetoothd[21788]: Audio API: sending BT_STREAMSTART_RSP
Oct  5 01:09:48 kooka bluetoothd[21788]: Unix client disconnected (fd=23)
Oct  5 01:09:48 kooka bluetoothd[21788]: No matching connection for handle 49

bluetoothd[22825]: Bluetooth daemon
bluetoothd[22825]: Enabling debug information
bluetoothd[22825]: parsing main.conf
bluetoothd[22825]: offmode=NoScan
bluetoothd[22825]: discovto=0
bluetoothd[22825]: pageto=8192
bluetoothd[22825]: name=%h-%d
bluetoothd[22825]: class=0x000100
bluetoothd[22825]: inqmode=0
bluetoothd[22825]: Starting SDP server
bluetoothd[22825]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[22825]: /usr/local/lib/bluetooth/plugins/audio.so
bluetoothd[22825]: Parsing /etc/bluetooth/audio.conf failed: No such file or \
directory bluetoothd[22825]: Unix socket created: 11
bluetoothd[22825]: Telephony plugin initialized
bluetoothd[22825]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[22825]: \
/usr/local/lib/bluetooth/plugins/serial.so bluetoothd[22825]: \
/usr/local/lib/bluetooth/plugins/hal.so bluetoothd[22825]: \
/usr/local/lib/bluetooth/plugins/service.so bluetoothd[22825]: \
/usr/local/lib/bluetooth/plugins/network.so bluetoothd[22825]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[22825]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true \
bluetoothd[22825]: bridge pan0 created bluetoothd[22825]: \
/usr/local/lib/bluetooth/plugins/input.so bluetoothd[22825]: input.conf: Key file \
does not have key 'IdleTimeout' bluetoothd[22825]: HCI dev 0 registered
bluetoothd[22825]: child 22828 forked
bluetoothd[22825]: HCI dev 0 already up
bluetoothd[22825]: headset_server_probe: path /org/bluez/hci0
bluetoothd[22825]: Adding record with handle 0x10000
bluetoothd[22825]: Adding record with handle 0x10001
bluetoothd[22825]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[22825]: SEP 0xb8a9b818 registered: type:0 codec:0 seid:1
bluetoothd[22825]: Adding record with handle 0x10002
bluetoothd[22825]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[22825]: Adding record with handle 0x10003
bluetoothd[22825]: Adding record with handle 0x10004
bluetoothd[22825]: proxy_probe: path /org/bluez/hci0
bluetoothd[22825]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[22825]: service_probe: path /org/bluez/hci0
bluetoothd[22825]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[22825]: network_server_probe: path /org/bluez/hci0
bluetoothd[22825]: Adding record with handle 0x10005
bluetoothd[22825]: register_server_record: got record id 0x10005
bluetoothd[22825]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[22825]: network_server_probe: path /org/bluez/hci0
bluetoothd[22825]: Adding record with handle 0x10006
bluetoothd[22825]: register_server_record: got record id 0x10006
bluetoothd[22825]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[22825]: network_server_probe: path /org/bluez/hci0
bluetoothd[22825]: Adding record with handle 0x10007
bluetoothd[22825]: register_server_record: got record id 0x10007
bluetoothd[22825]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[22825]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[22825]: Found Headset record
bluetoothd[22825]: Discovered Headset service on RFCOMM channel 2
bluetoothd[22825]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[22825]: Found Hansfree record
bluetoothd[22825]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[22825]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[22825]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[22825]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[22825]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[22825]: Starting security manager 0
bluetoothd[22825]: child 22828 exited
bluetoothd[22825]: Computer is classified as desktop
bluetoothd[22825]: Current device class is 0x4a0104
bluetoothd[22825]: Setting 0x000104 for major/minor device class
bluetoothd[22825]: Accepted new client connection on unix socket (fd=23)
bluetoothd[22825]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[22825]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[22825]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[22825]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[22825]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[22825]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[22825]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[22825]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[22825]: kernel auth \
requirements = 0x04 bluetoothd[22825]: stored link key type = 0x00
bluetoothd[22825]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[22825]: Received AT+BRSF=27
bluetoothd[22825]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[22825]: \
Received AT+CIND=? bluetoothd[22825]: Received AT+CIND?
bluetoothd[22825]: Received AT+CMER=3, 0, 0, 1
bluetoothd[22825]: Event reporting (CMER): mode=3, ind=1
bluetoothd[22825]: HFP Service Level Connection established
bluetoothd[22825]: telephony-dummy: device 0xb8aa0518 connected
bluetoothd[22825]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[22825]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[22825]: Received AT+VGS=15
bluetoothd[22825]: connect(): Connection timed out (110)
bluetoothd[22825]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[22825]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[22825]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[22825]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[22825]: Audio API: sending BT_STREAMFD_IND
bluetoothd[22825]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[22825]: resume failed
bluetoothd[22825]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[22825]: Unix client disconnected (fd=23)
bluetoothd[22825]: No matching connection for handle 53
bluetoothd[22825]: Accepted new client connection on unix socket (fd=23)
bluetoothd[22825]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[22825]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[22825]: Unix client disconnected (fd=23)
bluetoothd[22825]: Accepted new client connection on unix socket (fd=23)
bluetoothd[22825]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[22825]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[22825]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[22825]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[22825]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[22825]: Unix \
client disconnected (fd=23) bluetoothd[22825]: telephony-dummy: device 0xb8aa0518 \
disconnected bluetoothd[22825]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[22825]: \
connect(): Connection timed out (110) Segmentation fault


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006205606</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 20:56:06-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + SCO headset -&gt; SIGSEGV</subject><body>

hi Johan

&gt; however could you try to get a backtrace with gdb as well since it seems 
&gt; that valgrind either distorts or hides some errors.

I guess that I have forgotten how to use gdb because the backtrace
doesn't tell me much. Or perhaps I have to recompile with "-g".

&gt; root@kooka; gdb  src/.libs/bluetoothd
GNU gdb 6.8-debian
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...
(gdb) run -dn
Starting program: /ws/stuart/install/bluez/git/bluez/src/.libs/bluetoothd -dn
bluetoothd[4220]: Bluetooth daemon
bluetoothd[4220]: Enabling debug information
bluetoothd[4220]: parsing main.conf
bluetoothd[4220]: offmode=NoScan
bluetoothd[4220]: discovto=0
bluetoothd[4220]: pageto=8192
bluetoothd[4220]: name=%h-%d
bluetoothd[4220]: class=0x000100
bluetoothd[4220]: inqmode=0
bluetoothd[4220]: Starting SDP server
bluetoothd[4220]: Loading plugins /home/stuart/ws/install/bluez/git/bluez/plugins
bluetoothd[4220]: /home/stuart/ws/install/bluez/git/bluez/plugins/audio.so
bluetoothd[4220]: Parsing /etc/bluetooth/audio.conf failed: No such file or directory
bluetoothd[4220]: Unix socket created: 13
bluetoothd[4220]: Telephony plugin initialized
bluetoothd[4220]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[4220]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/serial.so bluetoothd[4220]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/hal.so bluetoothd[4220]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/service.so bluetoothd[4220]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/network.so bluetoothd[4220]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[4220]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true \
bluetoothd[4220]: Can't create GN bridge bluetoothd[4220]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/input.so bluetoothd[4220]: \
input.conf: Key file does not have key 'IdleTimeout' bluetoothd[4220]: HCI dev 0 \
registered bluetoothd[4220]: child 4223 forked
bluetoothd[4220]: HCI dev 0 already up
bluetoothd[4220]: headset_server_probe: path /org/bluez/hci0
bluetoothd[4220]: Adding record with handle 0x10000
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[4220]: Adding record with handle 0x10001
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[4220]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[4220]: SEP 0xb90df780 registered: type:0 codec:0 seid:1
bluetoothd[4220]: Adding record with handle 0x10002
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[4220]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[4220]: Adding record with handle 0x10003
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[4220]: Adding record with handle 0x10004
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[4220]: proxy_probe: path /org/bluez/hci0
bluetoothd[4220]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[4220]: service_probe: path /org/bluez/hci0
bluetoothd[4220]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[4220]: network_server_probe: path /org/bluez/hci0
bluetoothd[4220]: Adding record with handle 0x10005
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[4220]: register_server_record: got record id 0x10005
bluetoothd[4220]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[4220]: network_server_probe: path /org/bluez/hci0
bluetoothd[4220]: Adding record with handle 0x10006
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[4220]: register_server_record: got record id 0x10006
bluetoothd[4220]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[4220]: network_server_probe: path /org/bluez/hci0
bluetoothd[4220]: Adding record with handle 0x10007
bluetoothd[4220]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4220]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[4220]: register_server_record: got record id 0x10007
bluetoothd[4220]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[4220]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[4220]: Found Headset record
bluetoothd[4220]: Discovered Headset service on RFCOMM channel 2
bluetoothd[4220]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[4220]: Found Hansfree record
bluetoothd[4220]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[4220]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[4220]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[4220]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[4220]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[4220]: Starting security manager 0
bluetoothd[4220]: child 4223 exited
bluetoothd[4220]: Computer is classified as desktop
bluetoothd[4220]: Current device class is 0x4a0104
bluetoothd[4220]: Setting 0x000104 for major/minor device class
bluetoothd[4220]: Accepted new client connection on unix socket (fd=25)
bluetoothd[4220]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4220]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4220]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[4220]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[4220]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[4220]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[4220]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[4220]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[4220]: kernel auth \
requirements = 0x04 bluetoothd[4220]: stored link key type = 0x00
bluetoothd[4220]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[4220]: Received AT+BRSF=27
bluetoothd[4220]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[4220]: \
Received AT+CIND=? bluetoothd[4220]: Received AT+CIND?
bluetoothd[4220]: Received AT+CMER=3, 0, 0, 1
bluetoothd[4220]: Event reporting (CMER): mode=3, ind=1
bluetoothd[4220]: HFP Service Level Connection established
bluetoothd[4220]: telephony-dummy: device 0xb90e45f0 connected
bluetoothd[4220]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[4220]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[4220]: Received AT+VGS=15
bluetoothd[4220]: connect(): Connection timed out (110)
bluetoothd[4220]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[4220]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[4220]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[4220]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[4220]: Audio API: sending BT_STREAMFD_IND
bluetoothd[4220]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[4220]: resume failed
bluetoothd[4220]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[4220]: Unix client disconnected (fd=25)
bluetoothd[4220]: No matching connection for handle 45
bluetoothd[4220]: Accepted new client connection on unix socket (fd=25)
bluetoothd[4220]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4220]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4220]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[4220]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[4220]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[4220]: Unix \
client disconnected (fd=25) bluetoothd[4220]: telephony-dummy: device 0xb90e45f0 \
disconnected bluetoothd[4220]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[4220]: \
Accepted new client connection on unix socket (fd=25) bluetoothd[4220]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[4220]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[4220]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[4220]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[4220]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[4220]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[4220]: \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[4220]: Received AT+BRSF=27 bluetoothd[4220]: HFP HF features: "EC and/or \
NR function" "Call waiting and 3-way calling" "Voice recognition activation" "Remote \
volume control" bluetoothd[4220]: Received AT+CIND=?
bluetoothd[4220]: Received AT+CIND?
bluetoothd[4220]: Received AT+CMER=3, 0, 0, 1
bluetoothd[4220]: Event reporting (CMER): mode=3, ind=1
bluetoothd[4220]: HFP Service Level Connection established
bluetoothd[4220]: telephony-dummy: device 0xb90e45f0 connected
bluetoothd[4220]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[4220]: \
connect: Operation not permitted (1) bluetoothd[4220]: config failed
bluetoothd[4220]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[4220]: Unix client disconnected (fd=25)
bluetoothd[4220]: Received AT+VGS=15
bluetoothd[4220]: connect(): Connection timed out (110)

Program received signal SIGSEGV, Segmentation fault.
0xb7deda16 in ?? ()
(gdb) where
#0  0xb7deda16 in ?? ()
#1  0xb7dff1e3 in ?? ()
#2  0xb7f6eda5 in ?? ()
#3  0x0000006e in ?? ()
#4  0xb80319e4 in ?? ()
#5  0xb7f9e86c in ?? ()
#6  0xbfff8d1b in ?? ()
#7  0xbfff8d16 in ?? ()
#8  0xb7f8aff4 in ?? ()
#9  0xb90e45f0 in ?? ()
#10 0xb90e4a40 in ?? ()
#11 0x00000000 in ?? ()
(gdb) bt
#0  0xb7deda16 in ?? ()
#1  0xb7dff1e3 in ?? ()
#2  0xb7f6eda5 in ?? ()
#3  0x0000006e in ?? ()
#4  0xb80319e4 in ?? ()
#5  0xb7f9e86c in ?? ()
#6  0xbfff8d1b in ?? ()
#7  0xbfff8d16 in ?? ()
#8  0xb7f8aff4 in ?? ()
#9  0xb90e45f0 in ?? ()
#10 0xb90e4a40 in ?? ()
#11 0x00000000 in ?? ()

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081003004730</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-10-03 00:47:30-0400</timestampReceived><subject>Keeping ACL link around after DBUS CreateBonding()</subject><body>

Marcel/Johan:

I have memories of one of you talking about a custom change to bluez
to not immediately drop the ACL link once DBUS CreateBonding() has
finished (so that SDP can then be done on that link).

Do you know the patch to do this? I am currently experimenting with
changing the timer expiry in hci_conn_put() for disc_timer. Maybe
there's a nicer way.

Thanks
Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006203912</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 20:39:12-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + Belkin F8T017 -&gt; Can't read class of</subject><body>

hi Johan

&gt; Why your application gives up prematurely is still unclear to me.

I must admit this what interests me most.

I wondered if it was by old USBBT100 Bluetooth dongle that is causing
my problems. I thus bought a Belkin F8T017 (Bluetooth v2.1 Class I).
It works even less than my old Linksys USBBT100.

bluetoothd (from git) says:

bluetoothd[3517]: HCI dev 0 up
bluetoothd[3517]: Can't read class of adapter on /org/bluez/hci0: Input/output error \
(5)

When I unplugged the dongle, bluetoothd also said

bluetoothd[3517]: proxy_remove: path /org/bluez/hci0
process 3517: arguments to dbus_connection_unref() were incorrect, assertion \
"connection != NULL" failed in file dbus-connection.c line 2645. This is normally a \
bug in some application using the D-Bus library.

This dongle appears to contain a hub, a keyboard and a mouse!

Oct  6 21:57:36 kooka kernel: [85228.696180] usb 1-2: new full speed USB device using \
                uhci_hcd and address 9
Oct  6 21:57:36 kooka kernel: [85228.873638] usb 1-2: configuration #1 chosen from 1 \
                choice
Oct  6 21:57:36 kooka kernel: [85228.876578] hub 1-2:1.0: USB hub found
Oct  6 21:57:36 kooka kernel: [85228.878555] hub 1-2:1.0: 3 ports detected
Oct  6 21:57:36 kooka kernel: [85229.104656] usb 1-2: New USB device found, \
                idVendor=0a5c, idProduct=4500
Oct  6 21:57:36 kooka kernel: [85229.104662] usb 1-2: New USB device strings: Mfr=1, \
                Product=2, SerialNumber=0
Oct  6 21:57:36 kooka kernel: [85229.104665] usb 1-2: Product: BCM2046B1
Oct  6 21:57:36 kooka kernel: [85229.104666] usb 1-2: Manufacturer: Broadcom
Oct  6 21:57:37 kooka kernel: [85229.181563] usb 1-2.1: new full speed USB device \
                using uhci_hcd and address 10
Oct  6 21:57:37 kooka kernel: [85229.303641] usb 1-2.1: configuration #1 chosen from \
                1 choice
Oct  6 21:57:37 kooka kernel: [85229.309775] input: HID 0a5c:4502 as \
                /class/input/input17
Oct  6 21:57:37 kooka kernel: [85229.340573] input,hidraw4: USB HID v1.11 Keyboard \
                [HID 0a5c:4502] on usb-0000:00:1a.0-2.1
Oct  6 21:57:37 kooka kernel: [85229.340669] usb 1-2.1: New USB device found, \
                idVendor=0a5c, idProduct=4502
Oct  6 21:57:37 kooka kernel: [85229.340671] usb 1-2.1: New USB device strings: \
                Mfr=0, Product=0, SerialNumber=0
Oct  6 21:57:37 kooka kernel: [85229.413569] usb 1-2.2: new full speed USB device \
                using uhci_hcd and address 11
Oct  6 21:57:37 kooka kernel: [85229.533664] usb 1-2.2: configuration #1 chosen from \
                1 choice
Oct  6 21:57:37 kooka kernel: [85229.540840] input: HID 0a5c:4503 as \
                /class/input/input18
Oct  6 21:57:37 kooka kernel: [85229.580070] input,hidraw6: USB HID v1.11 Mouse [HID \
                0a5c:4503] on usb-0000:00:1a.0-2.2
Oct  6 21:57:37 kooka kernel: [85229.580166] usb 1-2.2: New USB device found, \
                idVendor=0a5c, idProduct=4503
Oct  6 21:57:37 kooka kernel: [85229.580168] usb 1-2.2: New USB device strings: \
                Mfr=0, Product=0, SerialNumber=0
Oct  6 21:57:37 kooka kernel: [85229.657571] usb 1-2.3: new full speed USB device \
                using uhci_hcd and address 12
Oct  6 21:57:37 kooka kernel: [85229.794657] usb 1-2.3: configuration #1 chosen from \
                1 choice
Oct  6 21:57:37 kooka kernel: [85229.797922] usb 1-2.3: New USB device found, \
                idVendor=050d, idProduct=0017
Oct  6 21:57:37 kooka kernel: [85229.797926] usb 1-2.3: New USB device strings: \
                Mfr=1, Product=2, SerialNumber=3
Oct  6 21:57:37 kooka kernel: [85229.797928] usb 1-2.3: Product: BLUETOOTH USB +EDR \
                ADAPTER Class 1 v2.1 UHE
Oct  6 21:57:37 kooka kernel: [85229.797930] usb 1-2.3: Manufacturer: Broadcom Corp
Oct  6 21:57:37 kooka kernel: [85229.797932] usb 1-2.3: SerialNumber: 000A3A8494D9

&gt; ; hciconfig -a
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	UP RUNNING
	RX bytes:299 acl:0 sco:0 events:25 errors:0
	TX bytes:344 acl:0 sco:0 commands:25 errors:0
	Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x79 0x83
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
	Link policy:
	Link mode: SLAVE ACCEPT
Can't read local name on hci0: Input/output error (5)
&gt; ; hciconfig  hci0 commands
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	Commands: Octet 0  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 1  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 2  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 3  = 0x03 (Bit 0 1)
		  Octet 4  = 0xfe (Bit 1 2 3 4 5 6 7)
		  Octet 5  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 6  = 0xef (Bit 0 1 2 3 5 6 7)
		  Octet 7  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 8  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 9  = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 10 = 0xef (Bit 0 1 2 3 5 6 7)
		  Octet 11 = 0x1f (Bit 0 1 2 3 4)
		  Octet 12 = 0xf2 (Bit 1 4 5 6 7)
		  Octet 13 = 0x0f (Bit 0 1 2 3)
		  Octet 14 = 0xe8 (Bit 3 5 6 7)
		  Octet 15 = 0xfe (Bit 1 2 3 4 5 6 7)
		  Octet 16 = 0x3f (Bit 0 1 2 3 4 5)
		  Octet 17 = 0xf7 (Bit 0 1 2 4 5 6 7)
		  Octet 18 = 0x8f (Bit 0 1 2 3 7)
		  Octet 19 = 0xff (Bit 0 1 2 3 4 5 6 7)
		  Octet 20 = 0x0c (Bit 2 3)
	'Inquiry' 'Inquiry Cancel' 'Periodic Inquiry Mode'
	'Exit Periodic Inquiry Mode' 'Create Connection' 'Disconnect'
	'Add SCO Connection' 'Cancel Create Connection'
	'Accept Connection Request' 'Reject Connection Request'
	'Link Key Request Reply' 'Link Key Request Negative Reply'
	'PIN Code Request Reply' 'PIN Code Request Negative Reply'
	'Change Connection Packet Type' 'Authentication Requested'
	'Set Connection Encryption' 'Change Connection Link Key'
	'Master Link Key' 'Remote Name Request' 'Cancel Remote Name Request'
	'Read Remote Supported Features' 'Read Remote Extended Features'
	'Read Remote Version Information' 'Read Clock Offset'
	'Read LMP Handle' 'Hold Mode' 'Sniff Mode' 'Exit Sniff Mode'
	'Park State' 'Exit Park State' 'QoS Setup' 'Role Discovery'
	'Switch Role' 'Read Link Policy Settings' 'Write Link Policy Settings'
	'Read Default Link Policy Settings'
	'Write Default Link Policy Settings' 'Flow Specification'
	'Set Event Mask' 'Reset' 'Set Event Filter' 'Flush' 'Read PIN Type'
	'Write PIN Type' 'Read Stored Link Key' 'Write Stored Link Key'
	'Delete Stored Link Key' 'Write Local Name' 'Read Local Name'
	'Read Connection Accept Timeout' 'Write Connection Accept Timeout'
	'Read Page Timeout' 'Write Page Timeout' 'Read Scan Enable'
	'Write Scan Enable' 'Read Page Scan Activity'
	'Write Page Scan Activity' 'Read Inquiry Scan Activity'
	'Write Inquiry Scan Activity' 'Read Authentication Enable'
	'Write Authentication Enable' 'Read Encryption Mode'
	'Write Encryption Mode' 'Read Class Of Device' 'Write Class Of Device'
	'Read Voice Setting' 'Write Voice Setting'
	'Read Automatic Flush Timeout' 'Write Automatic Flush Timeout'
	'Read Num Broadcast Retransmissions'
	'Write Num Broadcast Retransmissions' 'Read Hold Mode Activity'
	'Write Hold Mode Activity' 'Read Transmit Power Level'
	'Read Synchronous Flow Control Enable'
	'Set Host Controller To Host Flow Control' 'Host Buffer Size'
	'Host Number Of Completed Packets' 'Read Link Supervision Timeout'
	'Write Link Supervision Timeout' 'Read Number of Supported IAC'
	'Read Current IAC LAP' 'Write Current IAC LAP'
	'Set AFH Channel Classification' 'Read Inquiry Scan Type'
	'Write Inquiry Scan Type' 'Read Inquiry Mode' 'Write Inquiry Mode'
	'Read Page Scan Type' 'Write Page Scan Type'
	'Read AFH Channel Assessment Mode' 'Write AFH Channel Assessment Mode'
	'Read Local Version Information' 'Read Local Supported Features'
	'Read Local Extended Features' 'Read Buffer Size' 'Read BD ADDR'
	'Read Failed Contact Counter' 'Reset Failed Contact Counter'
	'Get Link Quality' 'Read RSSI' 'Read AFH Channel Map' 'Read BD Clock'
	'Read Loopback Mode' 'Write Loopback Mode'
	'Enable Device Under Test Mode' 'Setup Synchronous Connection'
	'Accept Synchronous Connection' 'Reject Synchronous Connection'
	'Read Extended Inquiry Response' 'Write Extended Inquiry Response'
	'Refresh Encryption Key' 'Sniff Subrating' 'Read Simple Pairing Mode'
	'Write Simple Pairing Mode' 'Read Local OOB Data'
	'Read Inquiry Transmit Power Level'
	'Write Inquiry Transmit Power Level'
	'Read Default Erroneous Data Reporting'
	'Write Default Erroneous Data Reporting' 'IO Capability Request Reply'
	'User Confirmation Request Reply'
	'User Confirmation Request Negative Reply'
	'User Passkey Request Reply' 'User Passkey Request Negative Reply'
	'Remote OOB Data Request Reply' 'Write Simple Pairing Debug Mode'
	'Enhanced Flush' 'Remote OOB Data Request Negative Reply'
	'Send Keypress Notification' 'IO Capabilities Response Negative Reply'
&gt; ; hciconfig  hci0 features
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	Features page 0: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x79 0x83
		&lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
		&lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
		&lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
		&lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
		&lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt;
		&lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt;
		&lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt;
		&lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt;
		&lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt;
		&lt;sniff subrating&gt; &lt;pause encryption&gt; &lt;AFH cap. master&gt;
		&lt;AFH class. master&gt; &lt;EDR eSCO 2 Mbps&gt; &lt;EDR eSCO 3 Mbps&gt;
		&lt;3-slot EDR eSCO&gt; &lt;extended inquiry&gt; &lt;simple pairing&gt;
		&lt;encapsulated PDU&gt; &lt;err. data report&gt; &lt;non-flush flag&gt; &lt;LSTO&gt;
		&lt;inquiry TX power&gt; &lt;extended features&gt;
	Features page 1: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
&gt; ; hciconfig  hci0 version
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	HCI Ver: 2.1 (0x4) HCI Rev: 0x5123 LMP Ver: 2.1 (0x4) LMP Subver: 0x420e
	Manufacturer: Broadcom Corporation (15)
&gt; ; hciconfig  hci0 revision
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	Firmware 35.66 / 14
&gt; ; lsusb -s 001:
Bus 001 Device 012: ID 050d:0017 Belkin Components
Bus 001 Device 011: ID 0a5c:4503 Broadcom Corp.
Bus 001 Device 010: ID 0a5c:4502 Broadcom Corp.
Bus 001 Device 009: ID 0a5c:4500 Broadcom Corp.
Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
&gt; ; aplay -D JX10 ~/lib/alarm.wav
ALSA lib pcm_bluetooth.c:1619:(bluetooth_init) BT_GETCAPABILITIES failed : \
                Input/output error(5)
aplay: main:564: audio open error: Input/output error

&gt; root@kooka; valgrind src/.libs/bluetoothd -dn
==3517== Memcheck, a memory error detector.
==3517== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
==3517== Using LibVEX rev 1854, a library for dynamic binary translation.
==3517== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
==3517== Using valgrind-3.3.1-Debian, a dynamic binary instrumentation framework.
==3517== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
==3517== For more details, rerun with: -v
==3517==
bluetoothd[3517]: Bluetooth daemon
bluetoothd[3517]: Enabling debug information
bluetoothd[3517]: parsing main.conf
bluetoothd[3517]: offmode=NoScan
bluetoothd[3517]: discovto=0
bluetoothd[3517]: pageto=8192
bluetoothd[3517]: name=%h-%d
bluetoothd[3517]: class=0x000100
bluetoothd[3517]: inqmode=0
bluetoothd[3517]: Starting SDP server
bluetoothd[3517]: Loading plugins /home/stuart/ws/install/bluez/git/bluez/plugins
bluetoothd[3517]: /home/stuart/ws/install/bluez/git/bluez/plugins/audio.so
bluetoothd[3517]: Parsing /etc/bluetooth/audio.conf failed: No such file or directory
bluetoothd[3517]: Unix socket created: 11
bluetoothd[3517]: Telephony plugin initialized
bluetoothd[3517]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[3517]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/serial.so bluetoothd[3517]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/hal.so bluetoothd[3517]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/service.so bluetoothd[3517]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/network.so bluetoothd[3517]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[3517]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true ==3517== \
Warning: noted but unhandled ioctl 0x89a0 with no size/direction hints ==3517==    \
This could cause spurious value errors to appear. ==3517==    See \
README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper. \
bluetoothd[3517]: Can't create GN bridge bluetoothd[3517]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/input.so bluetoothd[3517]: \
input.conf: Key file does not have key 'IdleTimeout' bluetoothd[3517]: HCI dev 0 \
registered bluetoothd[3517]: child 3518 forked
bluetoothd[3517]: HCI dev 0 up
bluetoothd[3517]: Can't read class of adapter on /org/bluez/hci0: Input/output error \
(5) bluetoothd[3517]: Starting security manager 0
==3518==
==3518== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 104 from 2)
==3518== malloc/free: in use at exit: 30,412 bytes in 352 blocks.
==3518== malloc/free: 751 allocs, 399 frees, 292,193 bytes allocated.
==3518== For counts of detected errors, rerun with: -v
==3518== searching for pointers to 352 not-freed blocks.
==3518== checked 146,352 bytes.
==3518==
==3518== LEAK SUMMARY:
==3518==    definitely lost: 0 bytes in 0 blocks.
==3518==      possibly lost: 744 bytes in 3 blocks.
==3518==    still reachable: 29,668 bytes in 349 blocks.
==3518==         suppressed: 0 bytes in 0 blocks.
==3518== Rerun with --leak-check=full to see details of leaked memory.
bluetoothd[3517]: child 3518 exited
bluetoothd[3517]: Accepted new client connection on unix socket (fd=16)
bluetoothd[3517]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[3517]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[3517]: Unix client disconnected (fd=16)
bluetoothd[3517]: HCI dev 0 down
bluetoothd[3517]: headset_server_remove: path /org/bluez/hci0
bluetoothd[3517]: a2dp_server_remove: path /org/bluez/hci0
bluetoothd[3517]: avrcp_server_remove: path /org/bluez/hci0
bluetoothd[3517]: proxy_remove: path /org/bluez/hci0
process 3517: arguments to dbus_connection_unref() were incorrect, assertion \
"connection != NULL" failed in file dbus-connection.c line 2645. This is normally a \
bug in some application using the D-Bus library. bluetoothd[3517]: service_remove: \
path /org/bluez/hci0 bluetoothd[3517]: network_server_remove: path /org/bluez/hci0
bluetoothd[3517]: network_server_remove: path /org/bluez/hci0
bluetoothd[3517]: network_server_remove: path /org/bluez/hci0
bluetoothd[3517]: Adapter /org/bluez/hci0 has been disabled
bluetoothd[3517]: Stopping security manager 0
bluetoothd[3517]: HCI dev 0 unregistered
bluetoothd[3517]: Unregister path: /org/bluez/hci0
bluetoothd[3517]: Removing adapter /org/bluez/hci0
bluetoothd[3517]: HCI dev 0 registered
bluetoothd[3517]: child 3787 forked
bluetoothd[3517]: HCI dev 0 up
bluetoothd[3517]: Can't read class of adapter on /org/bluez/hci0: Input/output error \
(5) bluetoothd[3517]: Starting security manager 0
==3787==
==3787== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 104 from 2)
==3787== malloc/free: in use at exit: 30,422 bytes in 353 blocks.
==3787== malloc/free: 927 allocs, 574 frees, 501,820 bytes allocated.
==3787== For counts of detected errors, rerun with: -v
==3787== searching for pointers to 353 not-freed blocks.
==3787== checked 146,624 bytes.
==3787==
==3787== LEAK SUMMARY:
==3787==    definitely lost: 0 bytes in 0 blocks.
==3787==      possibly lost: 744 bytes in 3 blocks.
==3787==    still reachable: 29,678 bytes in 350 blocks.
==3787==         suppressed: 0 bytes in 0 blocks.
==3787== Rerun with --leak-check=full to see details of leaked memory.
bluetoothd[3517]: child 3787 exited
bluetoothd[3517]: Accepted new client connection on unix socket (fd=17)
bluetoothd[3517]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[3517]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[3517]: Unix client disconnected (fd=17)

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006224055</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 22:40:55-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + bluetoothd -&gt; SIGSEGV</subject><body>

hello Marcel

&gt; &gt; &gt; ; grep ' -g' Makefile
&gt; &gt; CFLAGS = -Wall -O2 -D_FORTIFY_SOURCE=2 -fPIC -g -O0
&gt; 
&gt; that is indeed strange. You should be able to get a proper backtrace.

yes. I ran src/.libs/bluetoothd, it core dumped,
but I still cannot get a reasonable backtrace. Weird.

I'm not sure that that running src/.libs/bluetoothd is correct.
src/.libs/bluetoothd will use the libbluetooth.so.3 installed in
/usr/local/lib. If I want to use the library in the source area
(as I have not installed this version of bluez) I should run
src/bluetoothd. It does the library magic to use the libraries
in the src area.

I did this and it still core dumps and gdb still cannot read the
core. Time to go to bed.

&gt; root@kooka; src//bluetoothd -dn
bluetoothd[9997]: Bluetooth daemon
bluetoothd[9997]: Enabling debug information
bluetoothd[9997]: parsing main.conf
bluetoothd[9997]: offmode=NoScan
bluetoothd[9997]: discovto=0
bluetoothd[9997]: pageto=8192
bluetoothd[9997]: name=%h-%d
bluetoothd[9997]: class=0x000100
bluetoothd[9997]: inqmode=0
bluetoothd[9997]: Starting SDP server
bluetoothd[9997]: Loading plugins /home/stuart/ws/install/bluez/git/bluez/plugins
bluetoothd[9997]: /home/stuart/ws/install/bluez/git/bluez/plugins/audio.so
bluetoothd[9997]: Parsing /etc/bluetooth/audio.conf failed: No such file or directory
bluetoothd[9997]: Unix socket created: 11
bluetoothd[9997]: Telephony plugin initialized
bluetoothd[9997]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[9997]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/serial.so bluetoothd[9997]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/hal.so bluetoothd[9997]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/service.so bluetoothd[9997]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/network.so bluetoothd[9997]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[9997]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true \
bluetoothd[9997]: bridge pan0 created bluetoothd[9997]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/input.so bluetoothd[9997]: \
input.conf: Key file does not have key 'IdleTimeout' bluetoothd[9997]: HCI dev 0 \
registered bluetoothd[9997]: child 10014 forked
bluetoothd[9997]: HCI dev 0 up
bluetoothd[9997]: Adapter /org/bluez/hci0 without an address
bluetoothd[9997]: headset_server_probe: path /org/bluez/hci0
bluetoothd[9997]: Adding record with handle 0x10000
bluetoothd[9997]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[9997]: Adding record with handle 0x10001
bluetoothd[9997]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[9997]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[9997]: SEP 0xb90487d0 registered: type:0 codec:0 seid:1
bluetoothd[9997]: Adding record with handle 0x10002
bluetoothd[9997]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[9997]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[9997]: Adding record with handle 0x10003
bluetoothd[9997]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[9997]: Adding record with handle 0x10004
bluetoothd[9997]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[9997]: proxy_probe: path /org/bluez/hci0
bluetoothd[9997]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[9997]: service_probe: path /org/bluez/hci0
bluetoothd[9997]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[9997]: network_server_probe: path /org/bluez/hci0
bluetoothd[9997]: Adding record with handle 0x10005
bluetoothd[9997]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[9997]: register_server_record: got record id 0x10005
bluetoothd[9997]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[9997]: network_server_probe: path /org/bluez/hci0
bluetoothd[9997]: Adding record with handle 0x10006
bluetoothd[9997]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[9997]: register_server_record: got record id 0x10006
bluetoothd[9997]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[9997]: network_server_probe: path /org/bluez/hci0
bluetoothd[9997]: Adding record with handle 0x10007
bluetoothd[9997]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[9997]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[9997]: register_server_record: got record id 0x10007
bluetoothd[9997]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[9997]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[9997]: Found Headset record
bluetoothd[9997]: Discovered Headset service on RFCOMM channel 2
bluetoothd[9997]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[9997]: Found Hansfree record
bluetoothd[9997]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[9997]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[9997]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[9997]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[9997]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[9997]: Starting security manager 0
bluetoothd[9997]: child 10014 exited
bluetoothd[9997]: Computer is classified as desktop
bluetoothd[9997]: Current device class is 0x4a0100
bluetoothd[9997]: Setting 0x000104 for major/minor device class
bluetoothd[9997]: Accepted new client connection on unix socket (fd=23)
bluetoothd[9997]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[9997]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[9997]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[9997]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[9997]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[9997]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[9997]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[9997]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[9997]: kernel auth \
requirements = 0x04 bluetoothd[9997]: stored link key type = 0x00
bluetoothd[9997]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[9997]: Received AT+BRSF=27
bluetoothd[9997]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[9997]: \
Received AT+CIND=? bluetoothd[9997]: Received AT+CIND?
bluetoothd[9997]: Received AT+CMER=3, 0, 0, 1
bluetoothd[9997]: Event reporting (CMER): mode=3, ind=1
bluetoothd[9997]: HFP Service Level Connection established
bluetoothd[9997]: telephony-dummy: device 0xb904d860 connected
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[9997]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[9997]: Received AT+VGS=14
bluetoothd[9997]: connect(): Connection timed out (110)
bluetoothd[9997]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[9997]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[9997]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[9997]: Audio API: sending BT_STREAMFD_IND
bluetoothd[9997]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[9997]: resume failed
bluetoothd[9997]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[9997]: Unix client disconnected (fd=23)
bluetoothd[9997]: No matching connection for handle 44
bluetoothd[9997]: Accepted new client connection on unix socket (fd=23)
bluetoothd[9997]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[9997]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[9997]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[9997]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[9997]: \
connect(): Connection timed out (110) bluetoothd[9997]: Unable to lock headset
bluetoothd[9997]: config failed
bluetoothd[9997]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[9997]: Unix \
client disconnected (fd=23) bluetoothd[9997]: No matching connection for handle 44
bluetoothd[9997]: Accepted new client connection on unix socket (fd=23)
bluetoothd[9997]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[9997]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[9997]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[9997]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[9997]: Received \
AT+VGS=15 bluetoothd[9997]: Unix client disconnected (fd=23)
bluetoothd[9997]: telephony-dummy: device 0xb904d860 disconnected
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[9997]: \
Accepted new client connection on unix socket (fd=23) bluetoothd[9997]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[9997]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[9997]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[9997]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[9997]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[9997]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[9997]: \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[9997]: Received AT+BRSF=27 bluetoothd[9997]: HFP HF features: "EC and/or \
NR function" "Call waiting and 3-way calling" "Voice recognition activation" "Remote \
volume control" bluetoothd[9997]: Received AT+CIND=?
bluetoothd[9997]: Received AT+CIND?
bluetoothd[9997]: Received AT+CMER=3, 0, 0, 1
bluetoothd[9997]: Event reporting (CMER): mode=3, ind=1
bluetoothd[9997]: HFP Service Level Connection established
bluetoothd[9997]: telephony-dummy: device 0xb904d860 connected
bluetoothd[9997]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[9997]: \
connect: Operation not permitted (1) bluetoothd[9997]: config failed
bluetoothd[9997]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[9997]: Unix client disconnected (fd=23)
bluetoothd[9997]: Received AT+VGS=15
bluetoothd[9997]: connect(): Connection timed out (110)
Segmentation fault (core dumped)

&gt; ; gdb src/.libs/bluetoothd   core
GNU gdb 6.8-debian
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...

warning: core file may not match specified executable file.
Core was generated by \
`/home/stuart/ws/install/bluez/git/bluez/src/.libs/lt-bluetoothd -dn'. Program \
terminated with signal 11, Segmentation fault. [New process 9997]
#0  0xb7c4da16 in ?? ()
(gdb) quit
&gt; ; ls /home/stuart/ws/install/bluez/git/bluez/src/.libs
bluetoothd  lt-bluetoothd
&gt; ; gdb /home/stuart/ws/install/bluez/git/bluez/src/.libs/lt-bluetoothd core
GNU gdb 6.8-debian
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...
Core was generated by \
`/home/stuart/ws/install/bluez/git/bluez/src/.libs/lt-bluetoothd -dn'. Program \
terminated with signal 11, Segmentation fault. [New process 9997]
#0  0xb7c4da16 in ?? ()
(gdb) where
#0  0xb7c4da16 in ?? ()
#1  0xb7c5f1e3 in ?? ()
#2  0xb7dceda5 in ?? ()
#3  0x0000006e in ?? ()
#4  0xb7df3afa in ?? ()
#5  0xbff5c4b0 in ?? ()
#6  0xbff5c472 in ?? ()
#7  0x00000010 in ?? ()
#8  0xb7deaff4 in ?? ()
#9  0xb904d860 in ?? ()
#10 0xb904dcb0 in ?? ()
#11 0x00000000 in ?? ()
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081007065518</emailId><senderName>"chen chong"</senderName><senderEmail>byrbzdl@gmail.com</senderEmail><timestampReceived>2008-10-07 06:55:18-0400</timestampReceived><subject>How to disable authentication when using bluetooth on Linux?</subject><body>

Hi, all

When pushing a file to bluetooth mobile phone from a Linux PC, how to
disable bluetooth authentication mechanism (in kernel or user level ?
), so that the phone won't prompt a window ask for PIN code?


I'm a freshman on bluez, now I'm trying to write an application on
Linux PC,  to send files to mobile phones with OBEX. The PC has a USB
bluetooth stick to communication with the phone.

Now I have successfully sent a file to phone using the following commands:
1. "hcitool scan" and "sdptool browse"
2. "passkey-agent --default 1234" and "ussp-push --dev 0
BTADDR@CHANNEL desk.jpg desk.jpg"

but the phone ask for a PIN code at the start.

To get rid of this, I had tried to comment out
"start_security_manager()" in bluez-utils-3.7/hcid/main.c,  and
recompile it, then restart the bluetooth service. But PIN code was
still prompted, and after if I input some characters,  the command
"ussp-push --dev 0 --debug  BTADDR@CHANNEL desk.jpg desk.jpg", failed
with the following error:

root@debian:~/bluetooth# pushing file desk.jpg
name=desk.jpg, size=24762
__obex_connect: client_context_t = 0x80540f0
Registered transport
Set user data
Created new objext
cobex_write
Local device 00:01:02:03:04:01
Remote device 00:01:02:03:04:05 (11)
Write error: Transport endpoint is not connected
obex_event: client_context_t = 0x80540f0
cobex_disconnect
Link broken!
Started a new request
cobex_close
__obex_connect: error=-2
Unable to connect to the server
Error
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081007102139</emailId><senderName>"sreevani medhahal"</senderName><senderEmail>sreevani.medhahal@gmail.com</senderEmail><timestampReceived>2008-10-07 10:21:39-0400</timestampReceived><subject>regarding headset test</subject><body>

Hi,

 I have the following query...
1)    Headset Model Number: motorola HT820
when i tried hstest play new.wav &lt;bd_addr&gt; channel_no
here what should be the channel no ?
$./hstest play email.wav  00:07:A4:B7:51:8D 1
Voice setting: 0x0060
RFCOMM channel connected
Can't connect SCO audio channel: Address already in use

output of :$ hciconfig -a
hci0:	Type: USB
	BD Address: 00:02:5B:02:97:76 ACL MTU: 310:10 SCO MTU: 64:8
	UP RUNNING PSCAN
	RX bytes:203468 acl:2048 sco:274 events:9024 errors:5
	TX bytes:1274949 acl:5837 sco:0 commands:740 errors:0
	Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x59 0x83
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
	Link policy: RSWITCH HOLD SNIFF PARK
	Link mode: SLAVE ACCEPT
	Name: 'training01-0'
	Class: 0x2a0100
	Service Classes: Networking, Capturing, Audio
	Device Class: Computer, Uncategorized
	HCI Ver: 2.1 (0x4) HCI Rev: 0x1306 LMP Ver: 2.1 (0x4) LMP Subver: 0x1306
	Manufacturer: Cambridge Silicon Radio (10)




I tried mailing on the bluez-users list :but no luck (hence attempting it here)
2)
I am using
    Headset Model Number: motorola HT820

Contents of .asoundrc is as below:
 cat ~/.asoundrc
pcm.bluetooth {
 type bluetooth
 device 00:07:A4:B7:51:8D
}

using bluez4.6 &amp; kernel 2.6.27.rc6

when i use
$aplay -D bluetooth -f S16_LE shutdown1.wav
Playing WAVE 'shutdown1.wav' : Signed 16 bit Little Endian, Rate 44100 Hz, Stere
I am able to hear it in my HT820

where as when i do
1)
arecord -D bluetooth -r 44100 -f S16_LE new.wav
Recording WAVE 'new.wav' : Signed 16 bit Little Endian, Rate 44100 Hz, Mono
I kept the above command running for few seconds &amp; then pressed ctrl-c.
there is new.wav file created of size just 44 bytes &amp; when i try aplay
on this nothing is heard( i think this is due to no recording on this
file).
2) I get the following error For
 I use the below command to hear what i have said in the microphone.!
$ arecord -Dplug:bluetooth -f S16_LE | aplay -D bluetooth -f S16_LE
Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:712:(bluetooth_a2dp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)
arecord: set_params:1015: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 128000
PERIOD_SIZE: 1024
PERIOD_BYTES: 2048
PERIODS: 6
BUFFER_TIME: 768000
BUFFER_SIZE: 6144
BUFFER_BYTES: 12288
TICK_TIME: 0
aplay: playback:2148: read error
Let me know if i need to specify any other information.
regards,
S M
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081007072746</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-07 07:27:46-0400</timestampReceived><subject>Re: How to disable authentication when using bluetooth on Linux?</subject><body>


Seems you are using BlueZ -3.37, look in the hcid.conf file in /etc/bluetooth, it \
should have a keyword "security", make the option to none. [I assume its says "user" \
currently.]


Regards,
Pavan 

----- Original Message -----
From: chen chong &lt;byrbzdl@gmail.com&gt;
To: linux-bluetooth@vger.kernel.org, linux-kernel@vger.kernel.org
Sent: Tue, 7 Oct 2008 12:25:18 +0530 (IST)
Subject: How to disable authentication when using bluetooth on Linux?

Hi, all

When pushing a file to bluetooth mobile phone from a Linux PC, how to
disable bluetooth authentication mechanism (in kernel or user level ?
), so that the phone won't prompt a window ask for PIN code?


I'm a freshman on bluez, now I'm trying to write an application on
Linux PC,  to send files to mobile phones with OBEX. The PC has a USB
bluetooth stick to communication with the phone.

Now I have successfully sent a file to phone using the following commands:
1. "hcitool scan" and "sdptool browse"
2. "passkey-agent --default 1234" and "ussp-push --dev 0
BTADDR@CHANNEL desk.jpg desk.jpg"

but the phone ask for a PIN code at the start.

To get rid of this, I had tried to comment out
"start_security_manager()" in bluez-utils-3.7/hcid/main.c,  and
recompile it, then restart the bluetooth service. But PIN code was
still prompted, and after if I input some characters,  the command
"ussp-push --dev 0 --debug  BTADDR@CHANNEL desk.jpg desk.jpg", failed
with the following error:

root@debian:~/bluetooth# pushing file desk.jpg
name=desk.jpg, size=24762
__obex_connect: client_context_t = 0x80540f0
Registered transport
Set user data
Created new objext
cobex_write
Local device 00:01:02:03:04:01
Remote device 00:01:02:03:04:05 (11)
Write error: Transport endpoint is not connected
obex_event: client_context_t = 0x80540f0
cobex_disconnect
Link broken!
Started a new request
cobex_close
__obex_connect: error=-2
Unable to connect to the server
Error
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081007075754</emailId><senderName>"chen chong"</senderName><senderEmail>byrbzdl@gmail.com</senderEmail><timestampReceived>2008-10-07 07:57:54-0400</timestampReceived><subject>Re: How to disable authentication when using bluetooth on Linux?</subject><body>

Hi, Pavan

Thanks for your reply. I had tried this before, and tried it again
just now, but it still doesn't work.

The following are my steps, pls help to check if I missed any steps, THX!

1. change "security user;" to "security none;" in /etc/bluetooth/hcid.conf
2. Restart the bluetooth service:  # /etc/init.d/bluetooth restart
3. (Optional: I tried twice, once with this step, and the other without)
    Start passkey-agent: # passkey-agent --default 1234
4. ussp-push --dev 0 --debug 00:01:02:03:04:05@11 desk.jpg desk.jpg  &amp;

root@debian:~/bluetooth#
pushing file desk.jpg
name=desk.jpg, size=24762
__obex_connect: client_context_t = 0x80540f0
Registered transport
Set user data
Created new objext
cobex_write
Local device 00:01:02:03:04:01
Remote device 00:01:02:03:04:05 (11)
Write error: Transport endpoint is not connected
obex_event: client_context_t = 0x80540f0
cobex_disconnect
Link broken!
Started a new request
cobex_close
__obex_connect: error=-2
Unable to connect to the server
Error


my /etc/bluetooth/hcid.conf configuration are as following:
-------------------------------------------------------------------------
# HCId options
options {
        autoinit yes;
        security none;
        pairing multi;
        passkey "1234";
}

# Default settings for HCI devices
device {
        name "pass1234";
        # Local device class
        class 0x3e0100;
        # Default packet type
        #pkt_type DH1,DM1,HV1;
        # Inquiry and Page scan
        iscan enable; pscan enable;
        # Default link mode
        lm accept;
        # Default link policy
        lp rswitch,hold,sniff,park;
}
-------------------------------------------------------------------------

Is this configuration correct?

My Linux version is:
root@debian:~/bluetooth# uname -a
Linux debian 2.6.18-6-686 #1 SMP Sun Feb 10 22:11:31 UTC 2008 i686 GNU/Linux

Any more information needed?

THX


Kris
2008/10/7  &lt;pavan_savoy@indiatimes.com&gt;:
&gt; 
&gt; Seems you are using BlueZ -3.37, look in the hcid.conf file in /etc/bluetooth, it \
&gt; should have a keyword "security", make the option to none. [I assume its says \
&gt; "user" currently.] 
&gt; 
&gt; Regards,
&gt; Pavan
&gt; 
&gt; ----- Original Message -----
&gt; From: chen chong &lt;byrbzdl@gmail.com&gt;
&gt; To: linux-bluetooth@vger.kernel.org, linux-kernel@vger.kernel.org
&gt; Sent: Tue, 7 Oct 2008 12:25:18 +0530 (IST)
&gt; Subject: How to disable authentication when using bluetooth on Linux?
&gt; 
&gt; Hi, all
&gt; 
&gt; When pushing a file to bluetooth mobile phone from a Linux PC, how to
&gt; disable bluetooth authentication mechanism (in kernel or user level ?
&gt; ), so that the phone won't prompt a window ask for PIN code?
&gt; 
&gt; 
&gt; I'm a freshman on bluez, now I'm trying to write an application on
&gt; Linux PC,  to send files to mobile phones with OBEX. The PC has a USB
&gt; bluetooth stick to communication with the phone.
&gt; 
&gt; Now I have successfully sent a file to phone using the following commands:
&gt; 1. "hcitool scan" and "sdptool browse"
&gt; 2. "passkey-agent --default 1234" and "ussp-push --dev 0
&gt; BTADDR@CHANNEL desk.jpg desk.jpg"
&gt; 
&gt; but the phone ask for a PIN code at the start.
&gt; 
&gt; To get rid of this, I had tried to comment out
&gt; "start_security_manager()" in bluez-utils-3.7/hcid/main.c,  and
&gt; recompile it, then restart the bluetooth service. But PIN code was
&gt; still prompted, and after if I input some characters,  the command
&gt; "ussp-push --dev 0 --debug  BTADDR@CHANNEL desk.jpg desk.jpg", failed
&gt; with the following error:
&gt; 
&gt; root@debian:~/bluetooth# pushing file desk.jpg
&gt; name=desk.jpg, size=24762
&gt; __obex_connect: client_context_t = 0x80540f0
&gt; Registered transport
&gt; Set user data
&gt; Created new objext
&gt; cobex_write
&gt; Local device 00:01:02:03:04:01
&gt; Remote device 00:01:02:03:04:05 (11)
&gt; Write error: Transport endpoint is not connected
&gt; obex_event: client_context_t = 0x80540f0
&gt; cobex_disconnect
&gt; Link broken!
&gt; Started a new request
&gt; cobex_close
&gt; __obex_connect: error=-2
&gt; Unable to connect to the server
&gt; Error
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 
&gt; 
&gt; 
&gt; --
&gt; Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
&gt; on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
&gt;  
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006204544</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 20:45:44-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + Belkin F8T017 -&gt; Can't read class of</subject><body>

Hi Stuart,

&gt; &gt; Why your application gives up prematurely is still unclear to me.
&gt; 
&gt; I must admit this what interests me most.
&gt; 
&gt; I wondered if it was by old USBBT100 Bluetooth dongle that is causing
&gt; my problems. I thus bought a Belkin F8T017 (Bluetooth v2.1 Class I).
&gt; It works even less than my old Linksys USBBT100.
&gt; 
&gt; bluetoothd (from git) says:
&gt; 
&gt; bluetoothd[3517]: HCI dev 0 up
&gt; bluetoothd[3517]: Can't read class of adapter on /org/bluez/hci0: Input/output error (5)

loas btusb or hci_usb with reset=1 and show me the content
of /proc/bus/usb/devices to add a permanent quirk.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006215510</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 21:55:10-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + Belkin F8T017 -&gt; Can't read class of</subject><body>

hi Marcel

&gt; loas btusb or hci_usb with reset=1 and show me the content
&gt; of /proc/bus/usb/devices to add a permanent quirk.

I forgot to "hciconfig hci0 down", that's why I had to reboot.

&gt; root@kooka; modprobe -v btusb  reset=1
insmod /lib/modules/2.6.27-rc8/kernel/drivers/bluetooth/btusb.ko reset=1

I suppose that I have to repair my headset (though bluetoothd doesn't say this)
to get it to work with this new dongle. Time to install bluez-gnome-1.8. I had
to use bluetooth-wizard to pair with the device. Running aplay did not make
bluetooth-applet open and ask me to pair (even though I had the headset in
pairing mode).

My Jabra JX10 Series II headset now works. It even works with the VoIP
client twinkle http://www.twinklephone.com/.

Many thanks! Extra!

I hope that the quirk will make it into 2.6.27.

&gt; ; cat  /proc/bus/usb/devices

T:  Bus=08 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh= 6
B:  Alloc=  0/800 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0002 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 ehci_hcd
S:  Product=EHCI Host Controller
S:  SerialNumber=0000:00:1d.7
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms

T:  Bus=07 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc=  0/900 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1d.2
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=06 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc=  0/900 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1d.1
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=05 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc=  0/900 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1d.0
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=04 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh= 6
B:  Alloc=  4/800 us ( 1%), #Int=  8, #Iso=  0
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0002 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 ehci_hcd
S:  Product=EHCI Host Controller
S:  SerialNumber=0000:00:1a.7
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms

T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480 MxCh= 4
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=02 MxPS=64 #Cfgs=  1
P:  Vendor=0424 ProdID=2504 Rev= 0.01
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  2mA
I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=01 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms
I:* If#= 0 Alt= 1 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=02 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms

T:  Bus=04 Lev=02 Prnt=02 Port=00 Cnt=01 Dev#=  5 Spd=12  MxCh= 3
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=05ac ProdID=1003 Rev= 4.10
S:  Manufacturer=Mitsumi Electric
S:  Product=Hub in Apple Extended USB Keyboard
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr= 50mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=255ms

T:  Bus=04 Lev=03 Prnt=05 Port=01 Cnt=01 Dev#=  9 Spd=1.5 MxCh= 0
D:  Ver= 1.10 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=045e ProdID=0040 Rev= 3.00
S:  Manufacturer=Microsoft
S:  Product=Microsoft 3-Button Mouse with IntelliEye(TM)
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=10ms

T:  Bus=04 Lev=03 Prnt=05 Port=02 Cnt=02 Dev#= 10 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=05ac ProdID=020b Rev= 4.10
S:  Manufacturer=Mitsumi Electric
S:  Product=Apple Extended USB Keyboard
C:* #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr= 50mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=10ms
I:* If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
E:  Ad=82(I) Atr=03(Int.) MxPS=   4 Ivl=10ms

T:  Bus=04 Lev=01 Prnt=01 Port=04 Cnt=02 Dev#=  3 Spd=480 MxCh= 4
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=02 MxPS=64 #Cfgs=  1
P:  Vendor=050d ProdID=0231 Rev= 0.07
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=01 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms
I:* If#= 0 Alt= 1 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=02 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms

T:  Bus=04 Lev=02 Prnt=03 Port=01 Cnt=01 Dev#=  6 Spd=12  MxCh= 0
D:  Ver= 1.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a92 ProdID=0071 Rev= 1.00
S:  Manufacturer=AUDIOTRAK
S:  Product=MAYA7.1 USB
C:* #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=250mA
I:* If#= 0 Alt= 0 #EPs= 0 Cls=01(audio) Sub=01 Prot=00 Driver=snd-usb-audio
I:* If#= 1 Alt= 0 #EPs= 0 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
I:  If#= 1 Alt= 1 #EPs= 1 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
E:  Ad=01(O) Atr=09(Isoc) MxPS= 768 Ivl=1ms

T:  Bus=04 Lev=02 Prnt=03 Port=02 Cnt=02 Dev#=  7 Spd=12  MxCh= 3
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=2222 ProdID=0200 Rev= 0.01
S:  Manufacturer=Macally
S:  Product=Macally iKey
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=255ms

T:  Bus=04 Lev=03 Prnt=07 Port=00 Cnt=01 Dev#= 11 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=2222 ProdID=0003 Rev= 0.01
S:  Manufacturer=Macally
S:  Product=Macally iKey
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=10ms

T:  Bus=04 Lev=02 Prnt=03 Port=03 Cnt=03 Dev#=  8 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=ff(vend.) Sub=00 Prot=ff MxPS= 8 #Cfgs=  1
P:  Vendor=04a9 ProdID=220d Rev= 1.00
S:  Manufacturer=Canon
S:  Product=CanoScan
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=ff Driver=(none)
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=16ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=03(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms

T:  Bus=03 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc=  0/900 us ( 0%), #Int=  2, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1a.2
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=03 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  2 Spd=12  MxCh= 4
D:  Ver= 1.01 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=05e3 ProdID=0604 Rev= 0.12
S:  Product=USB Hub
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=255ms

T:  Bus=03 Lev=02 Prnt=02 Port=01 Cnt=01 Dev#=  3 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=0d8c ProdID=000c Rev= 1.00
S:  Product=C-Media USB Headphone Set
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 0 Cls=01(audio) Sub=01 Prot=00 Driver=snd-usb-audio
I:* If#= 1 Alt= 0 #EPs= 0 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
I:  If#= 1 Alt= 1 #EPs= 1 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
E:  Ad=01(O) Atr=09(Isoc) MxPS= 200 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 0 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
I:  If#= 2 Alt= 1 #EPs= 1 Cls=01(audio) Sub=02 Prot=00 Driver=snd-usb-audio
E:  Ad=82(I) Atr=05(Isoc) MxPS= 100 Ivl=1ms
I:* If#= 3 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
E:  Ad=83(I) Atr=03(Int.) MxPS=   4 Ivl=32ms

T:  Bus=03 Lev=02 Prnt=02 Port=02 Cnt=02 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=10d6 ProdID=1100 Rev= 1.00
S:  Product=USB 2.0(FS) FLASH DISK
S:  SerialNumber=USB 2.0(FS) FLASH DISK
C:* #Ifs= 1 Cfg#= 1 Atr=80 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=05 Prot=50 Driver=usb-storage
E:  Ad=01(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms

T:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc=  0/900 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1a.1
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
B:  Alloc= 27/900 us ( 3%), #Int=  4, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27-rc8 uhci_hcd
S:  Product=UHCI Host Controller
S:  SerialNumber=0000:00:1a.0
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=01 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  3 Spd=12  MxCh= 3
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4500 Rev= 1.00
S:  Manufacturer=Broadcom
S:  Product=BCM2046B1
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr= 94mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=255ms

T:  Bus=01 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4502 Rev= 1.00
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=10ms

T:  Bus=01 Lev=02 Prnt=03 Port=01 Cnt=02 Dev#=  5 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4503 Rev= 1.00
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=10ms

T:  Bus=01 Lev=02 Prnt=03 Port=02 Cnt=03 Dev#=  6 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=050d ProdID=0017 Rev= 2.91
S:  Manufacturer=Broadcom Corp
S:  Product=BLUETOOTH USB +EDR ADAPTER Class 1 v2.1 UHE
S:  SerialNumber=000A3A8494D9
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  32 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  32 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

&gt; root@kooka; src/.libs/bluetoothd -dn
bluetoothd[4605]: Bluetooth daemon
bluetoothd[4605]: Enabling debug information
bluetoothd[4605]: parsing main.conf
bluetoothd[4605]: offmode=NoScan
bluetoothd[4605]: discovto=0
bluetoothd[4605]: pageto=8192
bluetoothd[4605]: name=%h-%d
bluetoothd[4605]: class=0x000100
bluetoothd[4605]: inqmode=0
bluetoothd[4605]: Starting SDP server
bluetoothd[4605]: Loading plugins /home/stuart/ws/install/bluez/git/bluez/plugins
bluetoothd[4605]: /home/stuart/ws/install/bluez/git/bluez/plugins/audio.so
bluetoothd[4605]: Parsing /etc/bluetooth/audio.conf failed: No such file or directory
bluetoothd[4605]: Unix socket created: 11
bluetoothd[4605]: Telephony plugin initialized
bluetoothd[4605]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[4605]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/serial.so bluetoothd[4605]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/hal.so bluetoothd[4605]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/service.so bluetoothd[4605]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/network.so bluetoothd[4605]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[4605]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true \
bluetoothd[4605]: bridge pan0 created bluetoothd[4605]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/input.so bluetoothd[4605]: \
input.conf: Key file does not have key 'IdleTimeout' bluetoothd[4605]: HCI dev 0 \
registered bluetoothd[4605]: child 4614 forked
bluetoothd[4605]: HCI dev 0 already up
bluetoothd[4605]: headset_server_probe: path /org/bluez/hci0
bluetoothd[4605]: Adding record with handle 0x10000
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[4605]: Adding record with handle 0x10001
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[4605]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[4605]: SEP 0xb8ec4790 registered: type:0 codec:0 seid:1
bluetoothd[4605]: Adding record with handle 0x10002
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[4605]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[4605]: Adding record with handle 0x10003
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[4605]: Adding record with handle 0x10004
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[4605]: proxy_probe: path /org/bluez/hci0
bluetoothd[4605]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[4605]: service_probe: path /org/bluez/hci0
bluetoothd[4605]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[4605]: network_server_probe: path /org/bluez/hci0
bluetoothd[4605]: Adding record with handle 0x10005
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[4605]: register_server_record: got record id 0x10005
bluetoothd[4605]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[4605]: network_server_probe: path /org/bluez/hci0
bluetoothd[4605]: Adding record with handle 0x10006
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[4605]: register_server_record: got record id 0x10006
bluetoothd[4605]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[4605]: network_server_probe: path /org/bluez/hci0
bluetoothd[4605]: Adding record with handle 0x10007
bluetoothd[4605]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[4605]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[4605]: register_server_record: got record id 0x10007
bluetoothd[4605]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[4605]: Adapter /org/bluez/hci0 has been enabled
bluetoothd[4605]: Starting security manager 0
bluetoothd[4605]: child 4614 exited
bluetoothd[4605]: Computer is classified as desktop
bluetoothd[4605]: Current device class is 0x4a0104
bluetoothd[4605]: Setting 0x000104 for major/minor device class
bluetoothd[4605]: Accepted new client connection on unix socket (fd=23)
bluetoothd[4605]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4605]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4605]: Unix client disconnected (fd=23)
bluetoothd[4605]: Accepted new client connection on unix socket (fd=23)
bluetoothd[4605]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4605]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4605]: Unix client disconnected (fd=23)
bluetoothd[4605]: Accepted new client connection on unix socket (fd=23)
bluetoothd[4605]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4605]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4605]: Unix client disconnected (fd=23)
bluetoothd[4605]: Accepted new client connection on unix socket (fd=23)
bluetoothd[4605]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4605]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4605]: Unix client disconnected (fd=23)
bluetoothd[4605]: Accepted new client connection on unix socket (fd=23)
bluetoothd[4605]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[4605]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[4605]: Unix client disconnected (fd=23)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006223854</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 22:38:54-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + Belkin F8T017 -&gt; Can't read class of</subject><body>

Hi Stuart,

&gt; I hope that the quirk will make it into 2.6.27.
&gt; 
&gt; :; cat  /proc/bus/usb/devices
&gt;
&gt; T:  Bus=01 Lev=02 Prnt=03 Port=02 Cnt=03 Dev#=  6 Spd=12  MxCh= 0
&gt; D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
&gt; P:  Vendor=050d ProdID=0017 Rev= 2.91
&gt; S:  Manufacturer=Broadcom Corp
&gt; S:  Product=BLUETOOTH USB +EDR ADAPTER Class 1 v2.1 UHE
&gt; S:  SerialNumber=000A3A8494D9
&gt; C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=  2mA
&gt; I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
&gt; E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  32 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  32 Ivl=1ms
&gt; I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
&gt; I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
&gt; I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
&gt; E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
&gt; E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
&gt; I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

I doubt it since it is not in yet. Show me the output of hciconfig -a
for this so I can create a patch for it.

What is the exact model number of this one. Do you have to have a link
to the product website by any chance.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003063602</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-03 06:36:02-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

Hi Nick,

&gt; I have memories of one of you talking about a custom change to bluez
&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt; finished (so that SDP can then be done on that link).
&gt; 
&gt; Do you know the patch to do this? I am currently experimenting with
&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt; there's a nicer way.

do you have a trace in BTSnoop format for me. We are using L2CAP raw
sockets for bonding and thus the default 2 seconds disconnect timeout
applies. Enough time to get SDP started on the same link. If the remote
side however decides to disconnect us, we are out of luck.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003064254</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-10-03 06:42:54-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

On Thu, Oct 2, 2008 at 11:36 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; I have memories of one of you talking about a custom change to bluez
&gt;&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt;&gt; finished (so that SDP can then be done on that link).
&gt;&gt;
&gt;&gt; Do you know the patch to do this? I am currently experimenting with
&gt;&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt;&gt; there's a nicer way.
&gt;
&gt; do you have a trace in BTSnoop format for me. We are using L2CAP raw
&gt; sockets for bonding and thus the default 2 seconds disconnect timeout
&gt; applies. Enough time to get SDP started on the same link. If the remote
&gt; side however decides to disconnect us, we are out of luck.

For this situation the ACL connection is not complete, so the 10ms
timeout applies. I have a patch to use the 2 second timeout code path
for both connecting and connected. I wonder if this would be useful in
mainline, or if this is just a strange behavior of our BRF6300 (it
completes pin code and link key before the ACL link is reported as
connected). I'll send you some logs tomorrow if that would still help.

Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003065625</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-03 06:56:25-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

Hi Nick,

&gt; &gt;&gt; I have memories of one of you talking about a custom change to bluez
&gt; &gt;&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt; &gt;&gt; finished (so that SDP can then be done on that link).
&gt; &gt;&gt;
&gt; &gt;&gt; Do you know the patch to do this? I am currently experimenting with
&gt; &gt;&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt; &gt;&gt; there's a nicer way.
&gt; &gt;
&gt; &gt; do you have a trace in BTSnoop format for me. We are using L2CAP raw
&gt; &gt; sockets for bonding and thus the default 2 seconds disconnect timeout
&gt; &gt; applies. Enough time to get SDP started on the same link. If the remote
&gt; &gt; side however decides to disconnect us, we are out of luck.
&gt; 
&gt; For this situation the ACL connection is not complete, so the 10ms
&gt; timeout applies. I have a patch to use the 2 second timeout code path
&gt; for both connecting and connected. I wonder if this would be useful in
&gt; mainline, or if this is just a strange behavior of our BRF6300 (it
&gt; completes pin code and link key before the ACL link is reported as
&gt; connected). I'll send you some logs tomorrow if that would still help.

that is not strange behavior. That is just a device in security mode 3.
The important question is who disconnects the link.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006161854</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-10-06 16:18:54-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

On Fri, Oct 3, 2008 at 8:56 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; &gt;&gt; I have memories of one of you talking about a custom change to bluez
&gt;&gt; &gt;&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt;&gt; &gt;&gt; finished (so that SDP can then be done on that link).
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; Do you know the patch to do this? I am currently experimenting with
&gt;&gt; &gt;&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt;&gt; &gt;&gt; there's a nicer way.
&gt;&gt; &gt;
&gt;&gt; &gt; do you have a trace in BTSnoop format for me. We are using L2CAP raw
&gt;&gt; &gt; sockets for bonding and thus the default 2 seconds disconnect timeout
&gt;&gt; &gt; applies. Enough time to get SDP started on the same link. If the remote
&gt;&gt; &gt; side however decides to disconnect us, we are out of luck.
&gt;&gt;
&gt;&gt; For this situation the ACL connection is not complete, so the 10ms
&gt;&gt; timeout applies. I have a patch to use the 2 second timeout code path
&gt;&gt; for both connecting and connected. I wonder if this would be useful in
&gt;&gt; mainline, or if this is just a strange behavior of our BRF6300 (it
&gt;&gt; completes pin code and link key before the ACL link is reported as
&gt;&gt; connected). I'll send you some logs tomorrow if that would still help.
&gt;
&gt; that is not strange behavior. That is just a device in security mode 3.
&gt; The important question is who disconnects the link.

We (bluez kernel stack) disconnect the link due to the 10 ms timeout
that applies when the ACL link is in CONNECT. Here is a patch to use
the 2 second time out during CONNECT phase as well as CONNECTED. Does
this patch seem reasonable? It looks like just CONNECT || CONNECTED is
sufficient, but there are other modes like CONNECT2.

commit 0876dd6c7c3c5827c21bb0804453a249de234953
Author: Nick Pelly &lt;npelly@google.com&gt;
Date:   Fri Oct 3 16:07:50 2008 -0700

    bluetooth: Drop ACL link after 2 seconds not 10 ms when connecting.

diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 3446bc9..a2b0e09 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -341,7 +341,7 @@ static inline void hci_conn_put(struct hci_conn *conn)
                unsigned long timeo;
                if (conn-&gt;type == ACL_LINK) {
                        del_timer(&amp;conn-&gt;idle_timer);
-                       if (conn-&gt;state == BT_CONNECTED) {
+                       if (conn-&gt;state == BT_CONNECTED || conn-&gt;state
== BT_CONNECT) {
                                timeo = msecs_to_jiffies(HCI_DISCONN_TIMEOUT);
                                if (!conn-&gt;out)
                                        timeo *= 2;



Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006162624</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 16:26:24-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

Hi Nick,

&gt; &gt;&gt; &gt;&gt; I have memories of one of you talking about a custom change to bluez
&gt; &gt;&gt; &gt;&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt; &gt;&gt; &gt;&gt; finished (so that SDP can then be done on that link).
&gt; &gt;&gt; &gt;&gt;
&gt; &gt;&gt; &gt;&gt; Do you know the patch to do this? I am currently experimenting with
&gt; &gt;&gt; &gt;&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt; &gt;&gt; &gt;&gt; there's a nicer way.
&gt; &gt;&gt; &gt;
&gt; &gt;&gt; &gt; do you have a trace in BTSnoop format for me. We are using L2CAP raw
&gt; &gt;&gt; &gt; sockets for bonding and thus the default 2 seconds disconnect timeout
&gt; &gt;&gt; &gt; applies. Enough time to get SDP started on the same link. If the remote
&gt; &gt;&gt; &gt; side however decides to disconnect us, we are out of luck.
&gt; &gt;&gt;
&gt; &gt;&gt; For this situation the ACL connection is not complete, so the 10ms
&gt; &gt;&gt; timeout applies. I have a patch to use the 2 second timeout code path
&gt; &gt;&gt; for both connecting and connected. I wonder if this would be useful in
&gt; &gt;&gt; mainline, or if this is just a strange behavior of our BRF6300 (it
&gt; &gt;&gt; completes pin code and link key before the ACL link is reported as
&gt; &gt;&gt; connected). I'll send you some logs tomorrow if that would still help.
&gt; &gt;
&gt; &gt; that is not strange behavior. That is just a device in security mode 3.
&gt; &gt; The important question is who disconnects the link.
&gt; 
&gt; We (bluez kernel stack) disconnect the link due to the 10 ms timeout
&gt; that applies when the ACL link is in CONNECT. Here is a patch to use
&gt; the 2 second time out during CONNECT phase as well as CONNECTED. Does
&gt; this patch seem reasonable? It looks like just CONNECT || CONNECTED is
&gt; sufficient, but there are other modes like CONNECT2.

I really need to have a BTSnoop trace of this. I am not sure why you end
up in a situation where the timer is active anyway. What kernel version
are you running? Can you re-produce it with a 2.6.27-rc8 one?

The CONNECT2 is the re-try case for concurrent connection attempts where
link manager does not queue up the create connection.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006214248</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-10-06 21:42:48-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

On Mon, Oct 6, 2008 at 6:26 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; &gt;&gt; &gt;&gt; I have memories of one of you talking about a custom change to bluez
&gt;&gt; &gt;&gt; &gt;&gt; to not immediately drop the ACL link once DBUS CreateBonding() has
&gt;&gt; &gt;&gt; &gt;&gt; finished (so that SDP can then be done on that link).
&gt;&gt; &gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; &gt;&gt; Do you know the patch to do this? I am currently experimenting with
&gt;&gt; &gt;&gt; &gt;&gt; changing the timer expiry in hci_conn_put() for disc_timer. Maybe
&gt;&gt; &gt;&gt; &gt;&gt; there's a nicer way.
&gt;&gt; &gt;&gt; &gt;
&gt;&gt; &gt;&gt; &gt; do you have a trace in BTSnoop format for me. We are using L2CAP raw
&gt;&gt; &gt;&gt; &gt; sockets for bonding and thus the default 2 seconds disconnect timeout
&gt;&gt; &gt;&gt; &gt; applies. Enough time to get SDP started on the same link. If the remote
&gt;&gt; &gt;&gt; &gt; side however decides to disconnect us, we are out of luck.
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; For this situation the ACL connection is not complete, so the 10ms
&gt;&gt; &gt;&gt; timeout applies. I have a patch to use the 2 second timeout code path
&gt;&gt; &gt;&gt; for both connecting and connected. I wonder if this would be useful in
&gt;&gt; &gt;&gt; mainline, or if this is just a strange behavior of our BRF6300 (it
&gt;&gt; &gt;&gt; completes pin code and link key before the ACL link is reported as
&gt;&gt; &gt;&gt; connected). I'll send you some logs tomorrow if that would still help.
&gt;&gt; &gt;
&gt;&gt; &gt; that is not strange behavior. That is just a device in security mode 3.
&gt;&gt; &gt; The important question is who disconnects the link.
&gt;&gt;
&gt;&gt; We (bluez kernel stack) disconnect the link due to the 10 ms timeout
&gt;&gt; that applies when the ACL link is in CONNECT. Here is a patch to use
&gt;&gt; the 2 second time out during CONNECT phase as well as CONNECTED. Does
&gt;&gt; this patch seem reasonable? It looks like just CONNECT || CONNECTED is
&gt;&gt; sufficient, but there are other modes like CONNECT2.
&gt;
&gt; I really need to have a BTSnoop trace of this. I am not sure why you end
&gt; up in a situation where the timer is active anyway. What kernel version
&gt; are you running? Can you re-produce it with a 2.6.27-rc8 one?
&gt;

Attached is the btsnoop from the CreateBonding()

Note the "Create Connection Cancel" right after completing bonding.
This is what this patch tries to address - allow 2 seconds before
disconnecting the ACL link instead of 10 ms for this scenario.

Also note that the "Create Connection Cancel" takes 40 seconds to
return from the BRF6300. To me this looks like a unrelated issue with
the TI chip (and I have a separate conversation going on with TI about
it).

This is from a 2.6.25 kernel. I dont have easy access to 2.6.27 to
test at the moment. I dont think any code has changed in this area.



&gt; The CONNECT2 is the re-try case for concurrent connection attempts where
&gt; link manager does not queue up the create connection.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;
&gt;

["dump.log" (application/octet-stream)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081006210310</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 21:03:10-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + SCO headset -&gt; SIGSEGV</subject><body>

Hi Stuart,

&gt; &gt; however could you try to get a backtrace with gdb as well since it seems 
&gt; &gt; that valgrind either distorts or hides some errors.
&gt; 
&gt; I guess that I have forgotten how to use gdb because the backtrace
&gt; doesn't tell me much. Or perhaps I have to recompile with "-g".

if you use ./bootstrap-configure it will automatically enable it. If not
then give --enable-debug to configure. And make sure you do a make clean
before that.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006211049</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 21:10:49-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + SCO headset -&gt; SIGSEGV</subject><body>

hi Marcel

&gt; &gt; &gt; however could you try to get a backtrace with gdb as well since it seems 
&gt; &gt; &gt; that valgrind either distorts or hides some errors.
&gt; &gt; I guess that I have forgotten how to use gdb because the backtrace
&gt; &gt; doesn't tell me much. Or perhaps I have to recompile with "-g".
&gt; if you use ./bootstrap-configure it will automatically enable it. If not
&gt; then give --enable-debug to configure. And make sure you do a make clean
&gt; before that.

This what I did (from history)

    17  git clone git://git.kernel.org/pub/scm/bluetooth/bluez.git &amp;&amp; cd bluez &amp;&amp; \
./bootstrap-configure &amp;&amp; make  18  ./bootstrap-configure &amp;&amp; make

I ran the bootstrap-configure twice because I had to install gtk-doc.

&gt; ; grep ' -g' Makefile
CFLAGS = -Wall -O2 -D_FORTIFY_SOURCE=2 -fPIC -g -O0

I thus think that I did compile with -g and that I cannot get a stack trace
because someone has written all over the stack.

[I'm trying to remove btusb but I think that I'll need a reboot
&gt; ; lsmod | grep btusb
btusb                  12056  11465
bluetooth              49632  1 btusb
]

Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081005175043</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-05 17:50:43-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect(): Connection timed out (110)</subject><body>


On Oct 5, 2008, at 1:24, Stuart Pook wrote:
&gt; not for me :-( I am once again getting the "aplay: set_params:979:
&gt; Unable to install hw params:" message after a 40 second delay.
&gt;
&gt; The headset hisses softly to me during these 40 seconds.
&gt;
&gt; The error message from bluetoothd is "connect(): Connection timed  
&gt; out (110)"

This seems to be some other error than the one that was fixed in 4.11.  
Could you try to get a hcidump of when this happens. It might be able  
to tell more about what's going on.

&gt; Sometimes bluetoothd segfaults.

That's something more serious. Could you please try to produce a  
backtrace, either with gdb or valgrind. Thanks!

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081005191721</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-05 19:17:21-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect():</subject><body>

On 05/10/08 19:50, Johan Hedberg wrote:
&gt; On Oct 5, 2008, at 1:24, Stuart Pook wrote:
&gt; &gt; not for me :-( I am once again getting the "aplay: set_params:979:
&gt; &gt; Unable to install hw params:" message after a 40 second delay.
&gt; &gt; The headset hisses softly to me during these 40 seconds.
&gt; &gt; The error message from bluetoothd is "connect(): Connection timed out 
&gt; &gt; (110)"
&gt; This seems to be some other error than the one that was fixed in 4.11. 
&gt; Could you try to get a hcidump of when this happens. It might be able to 
&gt; tell more about what's going on.

Ok, the dump is attached.  I removed 40 seconds of

 &gt; SCO data: handle 45 flags 0x00 dlen 48
     0000: eb ff ee 00 a7 00 81 00  b4 00 77 00 8d 00 65 00  ..........w...e.
     0010: c3 ff 61 ff fa fe 12 ff  66 ff 3d ff aa ff 1c 00  ..a.....f.=.....
     0020: f0 ff 12 00 40 00 2d 00  21 00 2b 00 3a 00 ec ff  ....@.-.!.+.:...

which made the file a lot shorter. I can send the full 3Mb file if
necessary but perhaps not to the whole list.

&gt; &gt; Sometimes bluetoothd segfaults.
&gt; That's something more serious. Could you please try to produce a 
&gt; backtrace, either with gdb or valgrind. Thanks!

I guess that I'll have to learn how to use valgrind again.

thanks for your help.

Stuart

PS this is still with my old Bluetooth 1.2 0a12:0001 Cambridge Silicon Radio
bluetooth dongle and my Jabra JX10 Series II headset

bluetoothd[28762]: Received AT+CIND=?
bluetoothd[28762]: Received AT+CIND?
bluetoothd[28762]: Received AT+CMER=3, 0, 0, 1
bluetoothd[28762]: Event reporting (CMER): mode=3, ind=1
bluetoothd[28762]: HFP Service Level Connection established
bluetoothd[28762]: telephony-dummy: device 0xb96e64d0 connected
bluetoothd[28762]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[28762]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[28762]: Received AT+VGS=12
bluetoothd[28762]: connect(): Connection timed out (110)
bluetoothd[28762]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[28762]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[28762]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[28762]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[28762]: Audio API: sending BT_STREAMFD_IND
bluetoothd[28762]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[28762]: resume failed
bluetoothd[28762]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[28762]: Unix client disconnected (fd=23)
bluetoothd[28762]: No matching connection for handle 45


["2.6.27-rc8-bluez-4.11.txt-trim" (text/plain)]

HCI sniffer - Bluetooth packet analyzer ver 1.42
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
    bdaddr 00:1A:45:2F:49:98 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
    Packet type: DM1 DM3 DM5 DH1 DH3 DH5 
&gt; HCI Event: Command Status (0x0f) plen 4
    Create Connection (0x01|0x0005) status 0x00 ncmd 1
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 41 bdaddr 00:1A:45:2F:49:98 type ACL encrypt 0x00
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
    handle 41
&gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 0
&gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
    bdaddr 00:1A:45:2F:49:98 mode 1
&gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 41 slots 5
&gt; HCI Event: Command Status (0x0f) plen 4
    Unknown (0x00|0x0000) status 0x00 ncmd 1
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
    bdaddr 00:1A:45:2F:49:98 mode 2 clkoffset 0x0000
&gt; HCI Event: Command Status (0x0f) plen 4
    Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
&gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
    status 0x00 handle 41
    Features: 0xbf 0xfe 0x8b 0xf8 0x1b 0x18 0x00 0x80
&lt; ACL data: handle 41 flags 0x02 dlen 10
    L2CAP(s): Info req: type 2
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 16
    L2CAP(s): Info rsp: type 2 result 0
      Extended feature mask 0x0000
&lt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 3 scid 0x0040
&gt; ACL data: handle 41 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; HCI Event: Remote Name Req Complete (0x07) plen 255
    status 0x00 bdaddr 00:1A:45:2F:49:98 name 'Jabra JX10 series 2'
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Link Key Request (0x17) plen 6
    bdaddr 00:1A:45:2F:49:98
&lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
    bdaddr 00:1A:45:2F:49:98 key F63331CE2D0DBCA190DC73C930CD6117
&gt; HCI Event: Command Complete (0x0e) plen 10
    Link Key Request Reply (0x01|0x000b) ncmd 1
    status 0x00 bdaddr 00:1A:45:2F:49:98
&gt; ACL data: handle 41 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 41 flags 0x02 dlen 16
    L2CAP(s): Config req: dcid 0x0050 flags 0x00 clen 4
      MTU 1013 
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&gt; ACL data: handle 41 flags 0x02 dlen 16
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
      MTU 1013 
&lt; ACL data: handle 41 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0050 flags 0x00 result 0 clen 4
      MTU 1013 
&lt; ACL data: handle 41 flags 0x02 dlen 8
    L2CAP(d): cid 0x0050 len 4 [psm 3]
      RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c 
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 8
    L2CAP(d): cid 0x0040 len 4 [psm 3]
      RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7 
&lt; ACL data: handle 41 flags 0x02 dlen 18
    L2CAP(d): cid 0x0050 len 14 [psm 3]
      RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
      dlci 2 frame_type 0 credit_flow 15 pri 7 ack_timer 0
      frame_size 1008 max_retrans 0 credits 7
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 18
    L2CAP(d): cid 0x0040 len 14 [psm 3]
      RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
      dlci 2 frame_type 0 credit_flow 14 pri 7 ack_timer 0
      frame_size 127 max_retrans 0 credits 0
&lt; ACL data: handle 41 flags 0x02 dlen 8
    L2CAP(d): cid 0x0050 len 4 [psm 3]
      RFCOMM(s): SABM: cr 1 dlci 2 pf 1 ilen 0 fcs 0x59 
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 8
    L2CAP(d): cid 0x0040 len 4 [psm 3]
      RFCOMM(s): UA: cr 1 dlci 2 pf 1 ilen 0 fcs 0x92 
&lt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(d): cid 0x0050 len 8 [psm 3]
      RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&gt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(d): cid 0x0040 len 8 [psm 3]
      RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(d): cid 0x0050 len 8 [psm 3]
      RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(d): cid 0x0040 len 8 [psm 3]
      RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 9
    L2CAP(d): cid 0x0050 len 5 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 1 ilen 0 fcs 0x86 credits 33
&gt; ACL data: handle 41 flags 0x02 dlen 9
    L2CAP(d): cid 0x0040 len 5 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 0 fcs 0x5c credits 15
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 19
    L2CAP(d): cid 0x0040 len 15 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 0 ilen 11 fcs 0x40 
      0000: 41 54 2b 42 52 53 46 3d  32 37 0d                 AT+BRSF=27.
&lt; ACL data: handle 41 flags 0x02 dlen 21
    L2CAP(d): cid 0x0050 len 17 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 13 fcs 0x9a 
      0000: 0d 0a 2b 42 52 53 46 3d  33 35 32 0d 0a           ..+BRSF=352..
&lt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 19
    L2CAP(d): cid 0x0040 len 15 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 2
      0000: 41 54 2b 43 49 4e 44 3d  3f 0d                    AT+CIND=?.
&lt; ACL data: handle 41 flags 0x02 dlen 135
    L2CAP(d): cid 0x0050 len 131 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 127 fcs 0x9a 
      0000: 0d 0a 2b 43 49 4e 44 3a  28 22 62 61 74 74 63 68  ..+CIND:("battch
      0010: 67 22 2c 28 30 2d 35 29  29 2c 28 22 73 69 67 6e  g",(0-5)),("sign
      0020: 61 6c 22 2c 28 30 2d 35  29 29 2c 28 22 73 65 72  al",(0-5)),("ser
      0030: 76 69 63 65 22 2c 28 30  2c 31 29 29 2c 28 22 63  vice",(0,1)),("c
      0040: 61 6c 6c 22 2c 28 30 2c  31 29 29 2c 28 22 63 61  all",(0,1)),("ca
      0050: 6c 6c 73 65 74 75 70 22  2c 28 30 2d 33 29 29 2c  llsetup",(0-3)),
      0060: 28 22 63 61 6c 6c 68 65  6c 64 22 2c 28 30 2d 32  ("callheld",(0-2
      0070: 29 29 2c 28 22 72 6f 61  6d 22 2c 28 30 2c 31     )),("roam",(0,1
&lt; ACL data: handle 41 flags 0x02 dlen 12
    L2CAP(d): cid 0x0050 len 8 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 4 fcs 0x9a 
      0000: 29 29 0d 0a                                       ))..
&lt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 18
    L2CAP(d): cid 0x0040 len 14 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 9 fcs 0x5c credits 3
      0000: 41 54 2b 43 49 4e 44 3f  0d                       AT+CIND?.
&lt; ACL data: handle 41 flags 0x02 dlen 31
    L2CAP(d): cid 0x0050 len 27 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 23 fcs 0x9a 
      0000: 0d 0a 2b 43 49 4e 44 3a  35 2c 35 2c 31 2c 30 2c  ..+CIND:5,5,1,0,
      0010: 30 2c 30 2c 30 0d 0a                              0,0,0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; ACL data: handle 41 flags 0x02 dlen 28
    L2CAP(d): cid 0x0040 len 24 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 19 fcs 0x5c credits 2
      0000: 41 54 2b 43 4d 45 52 3d  33 2c 20 30 2c 20 30 2c  AT+CMER=3, 0, 0,
      0010: 20 31 0d                                           1.
&lt; HCI Command: Add SCO Connection (0x01|0x0007) plen 4
    handle 41 ptype 0x00e0
    Packet type: HV1 HV2 HV3 
&lt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Command Status (0x0f) plen 4
    Add SCO Connection (0x01|0x0007) status 0x00 ncmd 1
&gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 41 slots 1
&gt; ACL data: handle 41 flags 0x02 dlen 17
&gt; ACL data: handle 41 flags 0x01 dlen 2
    L2CAP(d): cid 0x0040 len 15 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 1
      0000: 41 54 2b 56 47 53 3d 31  32 0d                    AT+VGS=12.
&lt; ACL data: handle 41 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 41 packets 1
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 45 bdaddr 00:1A:45:2F:49:98 type SCO encrypt 0x00
&gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 41 slots 3
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
    0020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
[.........]
    0000: 08 00 51 00 4d 00 f2 ff  cf ff 09 00 2b 00 e7 ff  ..Q.M.......+...
    0010: a2 ff bc ff 1f 00 22 00  e4 ff e9 ff e2 ff 05 00  ......".........
    0020: 31 00 13 00 02 00 f5 ff  1f 00 44 00 e5 ff b2 ff  1.........D.....
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: c2 ff c3 ff ef ff fd ff  03 00 1b 00 1e 00 33 00  ..............3.
    0010: 0e 00 ce ff d6 ff cd ff  fb ff 50 00 08 00 e8 ff  ..........P.....
    0020: 12 00 e7 ff 05 00 1a 00  f3 ff fc ff e7 ff e7 ff  ................
&lt; HCI Command: Disconnect (0x01|0x0006) plen 3
    handle 45 reason 0x13
    Reason: Remote User Terminated Connection
&gt; HCI Event: Command Status (0x0f) plen 4
    Disconnect (0x01|0x0006) status 0x00 ncmd 1
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: f0 ff c3 ff ab ff dc ff  22 00 1f 00 18 00 0f 00  ........".......
    0010: dd ff d8 ff fb ff 24 00  21 00 20 00 47 00 15 00  ......$.!. .G...
    0020: cb ff a7 ff cd ff 2d 00  f8 ff d8 ff 08 00 d6 ff  ......-.........
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: f5 ff 1c 00 fd ff 36 00  2a 00 f3 ff 1c 00 03 00  ......6.*.......
    0010: d9 ff 02 00 0b 00 0a 00  fd ff d3 ff d2 ff db ff  ................
    0020: e8 ff 0a 00 2a 00 2f 00  0e 00 bc ff b3 ff 10 00  ....*./.........
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: dc ff c7 ff 23 00 e2 ff  ca ff f4 ff f0 ff fe ff  ....#...........
    0010: f6 ff 0c 00 22 00 1d 00  13 00 13 00 2a 00 04 00  ....".......*...
    0020: 08 00 2a 00 fa ff e3 ff  e5 ff 1a 00 3c 00 f1 ff  ..*.........&lt;...
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: ff ff 0a 00 c4 ff ed ff  14 00 b8 ff 8c ff fb ff  ................
    0010: 09 00 b4 ff f4 ff 0a 00  c3 ff e3 ff 1a 00 03 00  ................
    0020: d8 ff ec ff fe ff 08 00  33 00 0b 00 07 00 47 00  ........3.....G.
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 0a 00 df ff 14 00 27 00  32 00 24 00 fd ff ff ff  ......'.2.$.....
    0010: 02 00 ed ff c5 ff a6 ff  c6 ff 02 00 e8 ff c5 ff  ................
    0020: fb ff f5 ff e5 ff 05 00  0f 00 06 00 df ff 0e 00  ................
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 45 00 17 00 0d 00 fa ff  d8 ff f4 ff 1d 00 47 00  E.............G.
    0010: 39 00 03 00 da ff df ff  00 00 ea ff fe ff 18 00  9...............
    0020: cd ff c3 ff e3 ff cc ff  d0 ff fd ff 17 00 12 00  ................
&gt; HCI Event: Disconn Complete (0x05) plen 4
    status 0x00 handle 45 reason 0x16
    Reason: Connection Terminated by Local Host
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 13 00 f3 ff d6 ff 01 00  21 00 16 00 04 00 00 00  ........!.......
    0010: f5 ff fe ff 24 00 ec ff  d3 ff 15 00 fc ff e7 ff  ....$...........
    0020: 00 00 fa ff f1 ff 0a 00  2f 00 ef ff b6 ff c1 ff  ......../.......
&gt; SCO data: handle 45 flags 0x00 dlen 48
    0000: 9e ff 0f 00 93 00 01 00  c7 ff 21 00 12 00 2e 00  ..........!.....
    0010: 96 ff 24 ff 9d 01 ab 00  0d fd 79 00 8e 00 fc fe  ..$.......y.....
    0020: e4 03 c3 ff 07 fd d7 00  4b fe f5 ff 2a 00 3d fe  ........K...*.=.
&gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 41 slots 5

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081005200711</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-05 20:07:11-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size</subject><body>

&gt; &gt; Sometimes bluetoothd segfaults.
&gt; That's something more serious. Could you please try to produce a 
&gt; backtrace, either with gdb or valgrind. Thanks!

valgrind is easy

BTW, all the files in /usr/local/stow/bluez-4.11 are symlinked
into /usr/local using stow.

I can get this error by running "aplay -D JX10 lib/alarm.wav"
a few times with a 15 second delay before killing aplay with
control-C. It happened three times tonight.

Let me know if I can help in any other way.

This is the interesting output from valgrind:

bluetoothd[15123]: connect(): Connection timed out (110)
==15123== Invalid read of size 4
==15123==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x1361D: error_common_reply (in \
/usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15123==    by 0x4EDAEA2: \
rfcomm_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15123==    by 0x2165E: connect_cb (in /usr/local/stow/bluez-4.11/sbin/bluetoothd) \
==15123==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by \
0x487E1B7: g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    \
by 0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0xA410: main \
(in /usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==  Address 0x464c45b3 is not \
stack'd, malloc'd or (recently) free'd

This what I ran (note where I typed control-C twice)

&gt; ; while sleep 15; do aplay -D JX10 lib/alarm.wav ; done
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
bt_audio_service_open: connect() failed: Connection refused (111)
aplay: main:564: audio open error: Connection refused

Here is the complete log:

&gt; root@kooka; valgrind /usr/local/sbin/bluetoothd -dn
==15123== Memcheck, a memory error detector.
==15123== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
==15123== Using LibVEX rev 1854, a library for dynamic binary translation.
==15123== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
==15123== Using valgrind-3.3.1-Debian, a dynamic binary instrumentation framework.
==15123== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
==15123== For more details, rerun with: -v
==15123==
bluetoothd[15123]: Bluetooth daemon
bluetoothd[15123]: Enabling debug information
bluetoothd[15123]: parsing main.conf
bluetoothd[15123]: offmode=NoScan
bluetoothd[15123]: discovto=0
bluetoothd[15123]: pageto=8192
bluetoothd[15123]: name=%h-%d
bluetoothd[15123]: class=0x000100
bluetoothd[15123]: inqmode=0
bluetoothd[15123]: Starting SDP server
bluetoothd[15123]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[15123]: /usr/local/lib/bluetooth/plugins/audio.so
bluetoothd[15123]: Parsing /etc/bluetooth/audio.conf failed: No such file or \
directory bluetoothd[15123]: Unix socket created: 11
bluetoothd[15123]: Telephony plugin initialized
bluetoothd[15123]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[15123]: \
/usr/local/lib/bluetooth/plugins/serial.so bluetoothd[15123]: \
/usr/local/lib/bluetooth/plugins/hal.so bluetoothd[15123]: \
/usr/local/lib/bluetooth/plugins/service.so bluetoothd[15123]: \
/usr/local/lib/bluetooth/plugins/network.so bluetoothd[15123]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[15123]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true ==15123== \
Warning: noted but unhandled ioctl 0x89a0 with no size/direction hints ==15123==    \
This could cause spurious value errors to appear. ==15123==    See \
README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper. \
bluetoothd[15123]: bridge pan0 created bluetoothd[15123]: \
/usr/local/lib/bluetooth/plugins/input.so bluetoothd[15123]: input.conf: Key file \
does not have key 'IdleTimeout' bluetoothd[15123]: HCI dev 0 registered
bluetoothd[15123]: child 15132 forked
bluetoothd[15123]: HCI dev 0 already up
bluetoothd[15123]: headset_server_probe: path /org/bluez/hci0
bluetoothd[15123]: Adding record with handle 0x10000
==15132==
==15132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 84 from 2)
==15132== malloc/free: in use at exit: 30,100 bytes in 352 blocks.
==15132== malloc/free: 751 allocs, 399 frees, 290,809 bytes allocated.
==15132== For counts of detected errors, rerun with: -v
==15132== searching for pointers to 352 not-freed blocks.
==15132== checked 145,996 bytes.
==15132==
==15132== LEAK SUMMARY:
==15132==    definitely lost: 0 bytes in 0 blocks.
==15132==      possibly lost: 744 bytes in 3 blocks.
==15132==    still reachable: 29,356 bytes in 349 blocks.
==15132==         suppressed: 0 bytes in 0 blocks.
==15132== Rerun with --leak-check=full to see details of leaked memory.
bluetoothd[15123]: Adding record with handle 0x10001
bluetoothd[15123]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[15123]: SEP 0x4b311d0 registered: type:0 codec:0 seid:1
bluetoothd[15123]: Adding record with handle 0x10002
bluetoothd[15123]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[15123]: Adding record with handle 0x10003
bluetoothd[15123]: Adding record with handle 0x10004
bluetoothd[15123]: proxy_probe: path /org/bluez/hci0
bluetoothd[15123]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[15123]: service_probe: path /org/bluez/hci0
bluetoothd[15123]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[15123]: network_server_probe: path /org/bluez/hci0
bluetoothd[15123]: Adding record with handle 0x10005
bluetoothd[15123]: register_server_record: got record id 0x10005
bluetoothd[15123]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[15123]: network_server_probe: path /org/bluez/hci0
bluetoothd[15123]: Adding record with handle 0x10006
bluetoothd[15123]: register_server_record: got record id 0x10006
bluetoothd[15123]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[15123]: network_server_probe: path /org/bluez/hci0
bluetoothd[15123]: Adding record with handle 0x10007
bluetoothd[15123]: register_server_record: got record id 0x10007
bluetoothd[15123]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15123]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15123]: Found Headset record
bluetoothd[15123]: Discovered Headset service on RFCOMM channel 2
bluetoothd[15123]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15123]: Found Hansfree record
bluetoothd[15123]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[15123]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[15123]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[15123]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[15123]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[15123]: Starting security manager 0
bluetoothd[15123]: child 15132 exited
bluetoothd[15123]: Computer is classified as desktop
bluetoothd[15123]: Current device class is 0x4a0104
bluetoothd[15123]: Setting 0x000104 for major/minor device class
bluetoothd[15123]: Accepted new client connection on unix socket (fd=23)
bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: connect(): Connection timed out (110)
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Audio API: received BT_STREAMSTART_REQ bluetoothd[15123]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[15123]: Audio API: sending BT_STREAMFD_IND
bluetoothd[15123]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[15123]: resume failed
bluetoothd[15123]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[15123]: Unix client disconnected (fd=23)
bluetoothd[15123]: Accepted new client connection on unix socket (fd=23)
bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: connect(): Connection reset by peer (104)
bluetoothd[15123]: Unable to lock headset
bluetoothd[15123]: config failed
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Unix client disconnected (fd=23) bluetoothd[15123]: Accepted new client connection on \
unix socket (fd=23) bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: connect(): Connection timed out (110)
bluetoothd[15123]: Unable to lock headset
bluetoothd[15123]: config failed
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Unix client disconnected (fd=23) bluetoothd[15123]: Accepted new client connection on \
unix socket (fd=23) bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: Unix client disconnected (fd=23)
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Accepted new client connection on unix socket (fd=23) bluetoothd[15123]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[15123]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: connect(): Connection timed out \
(110) bluetoothd[15123]: Unable to lock headset
bluetoothd[15123]: config failed
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Unix client disconnected (fd=23) bluetoothd[15123]: Accepted new client connection on \
unix socket (fd=23) bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: connect(): Connection timed out (110)
bluetoothd[15123]: Unable to lock headset
bluetoothd[15123]: config failed
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Unix client disconnected (fd=23) bluetoothd[15123]: Accepted new client connection on \
unix socket (fd=23) bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: connect(): Connection timed \
out (110) bluetoothd[15123]: Unable to lock headset
bluetoothd[15123]: config failed
bluetoothd[15123]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
Unix client disconnected (fd=23) bluetoothd[15123]: Accepted new client connection on \
unix socket (fd=23) bluetoothd[15123]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15123]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15123]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15123]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15123]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15123]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15123]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15123]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15123]: kernel auth \
requirements = 0x04 bluetoothd[15123]: stored link key type = 0x00
bluetoothd[15123]: Unix client disconnected (fd=23)
bluetoothd[15123]: telephony-dummy: device 0x4b707b0 disconnected
bluetoothd[15123]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15123]: \
connect(): Connection timed out (110) ==15123== Invalid read of size 4
==15123==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x1361D: error_common_reply (in \
/usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15123==    by 0x4EDAEA2: \
rfcomm_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15123==    by 0x2165E: connect_cb (in /usr/local/stow/bluez-4.11/sbin/bluetoothd) \
==15123==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by \
0x487E1B7: g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    \
by 0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0xA410: main \
(in /usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==  Address 0x464c45b3 is not \
stack'd, malloc'd or (recently) free'd ==15123==
==15123== Process terminating with default action of signal 11 (SIGSEGV)
==15123==  Access not within mapped region at address 0x464C45B3
==15123==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15123==    by 0x1361D: error_common_reply (in \
/usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15123==    by 0x4EDAEA2: \
rfcomm_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15123==    by 0x2165E: connect_cb (in /usr/local/stow/bluez-4.11/sbin/bluetoothd) \
==15123==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by \
0x487E1B7: g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    \
by 0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15123==    by 0xA410: main \
(in /usr/local/stow/bluez-4.11/sbin/bluetoothd) ==15123==
==15123== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 84 from 2)
==15123== malloc/free: in use at exit: 46,759 bytes in 872 blocks.
==15123== malloc/free: 3,266 allocs, 2,394 frees, 1,953,427 bytes allocated.
==15123== For counts of detected errors, rerun with: -v
==15123== searching for pointers to 872 not-freed blocks.
==15123== checked 161,856 bytes.
==15123==
==15123== LEAK SUMMARY:
==15123==    definitely lost: 594 bytes in 10 blocks.
==15123==      possibly lost: 744 bytes in 3 blocks.
==15123==    still reachable: 45,421 bytes in 859 blocks.
==15123==         suppressed: 0 bytes in 0 blocks.
==15123== Rerun with --leak-check=full to see details of leaked memory.
Segmentation fault

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006084735</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-06 08:47:35-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size 4</subject><body>

Hi Stuart,

On Oct 5, 2008, at 22:07, Stuart Pook wrote:
&gt; bluetoothd[15123]: connect(): Connection timed out (110)
&gt; ==15123== Invalid read of size 4
&gt; ==15123==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
&gt; ==15123==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/ 
&gt; libdbus-1.so.3.4.0)
&gt; ==15123==    by 0x49155C0: dbus_message_new_error (in /usr/lib/ 
&gt; libdbus-1.so.3.4.0)
&gt; ==15123==    by 0x1361D: error_common_reply (in /usr/local/stow/ 
&gt; bluez-4.11/sbin/bluetoothd)
&gt; ==15123==    by 0x4ED9D2C: error_connection_attempt_failed (in /usr/ 
&gt; local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so)
&gt; ==15123==    by 0x4EDAEA2: rfcomm_connect_cb (in /usr/local/stow/ 
&gt; bluez-4.11/lib/bluetooth/plugins/audio.so)
&gt; ==15123==    by 0x2165E: connect_cb (in /usr/local/stow/bluez-4.11/ 
&gt; sbin/bluetoothd)
&gt; ==15123==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6)
&gt; ==15123==    by 0x487E1B7: g_main_context_dispatch (in /usr/lib/ 
&gt; libglib-2.0.so.0.1600.6)
&gt; ==15123==    by 0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6)
&gt; ==15123==    by 0x4881D71: g_main_loop_run (in /usr/lib/ 
&gt; libglib-2.0.so.0.1600.6)
&gt; ==15123==    by 0xA410: main (in /usr/local/stow/bluez-4.11/sbin/ 
&gt; bluetoothd)
&gt; ==15123==  Address 0x464c45b3 is not stack'd, malloc'd or (recently)  
&gt; free'd

Thanks for the valgrind report. It definitely gives some hints at  
what's going on. Apparently there's a bug in one error handling code  
path of the rfcomm_connect_cb function. The weird thing here is that  
the code path (which calls error_connection_attempt_failed) should  
only be taken if the connection attempt was triggered by a D-Bus  
message which is not the case for you (it's the alsa sound player that  
triggers it, right?). I fixed some issues related to the connection  
handling in git but none of it seemed to be directly related to the  
backtrace you gave. Could you give the current git a try (git clone  
git://git.kernel.org/pub/scm/bluetooth/bluez.git; cd bluez; ./ 
bootstrap-configure &amp;&amp; make)? Also, try to run bluetoothd directly  
from the source tree (src/.libs/bluetoothd) so that valgrind can pick  
up the correct file names and line numbers as well.

Regarding why this code path is taken, it seems like your alsa  
application gives up before the bluetooth connection has been created.  
When bluetoothd sees that the alsa client exited it calls close() on  
the connecting RFCOMM socket which in effect terminates the connection  
creation and causes rfcomm_connect_cb to be called with an error code.  
Why your application gives up prematurely is still unclear to me.

Johan


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006105229</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-06 10:52:29-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size 4</subject><body>

Hi Stuart,

I think I managed to fix the segfault issue. The valgrind backtrace  
was actually misleading/incorrect but I managed to get a proper one  
with gdb. Could you try the latest git and see if the segfault is  
gone? Unfortunately this still leaves you with the original issue of  
your player bailing out too early.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006183855</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 18:38:55-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size</subject><body>

hi Johan

&gt; I think I managed to fix the segfault issue. The valgrind backtrace was 
&gt; actually misleading/incorrect but I managed to get a proper one with 
&gt; gdb.

I ran bluetoothd 4.11 from the source directory and the error message is
in fact different. Do you know why?

&gt; Could you try the latest git and see if the segfault is gone? 

next step!

&gt; Unfortunately this still leaves you with the original issue of your 
&gt; player bailing out too early.

yes :-(

bluetoothd[15350]: connect(): Connection timed out (110)
==15350== Invalid read of size 4
==15350==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x1361D: error_common_reply (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15350==    by 0x4EDA117: \
sco_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15350==    by 0x2165E: connect_cb (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x48B465C: \
(within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x487E1B7: \
g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by \
0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0xA410: main \
(in /ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==  Address \
0x464c45b3 is not stack'd, malloc'd or (recently) free'd

&gt; ; while sleep 15; do aplay -D JX10 lib/alarm.wav ; done
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
bt_audio_service_open: connect() failed: Connection refused (111)
aplay: main:564: audio open error: Connection refused

&gt; root@kooka; valgrind bluez-4.11/src/.libs/bluetoothd -dn
==15350== Memcheck, a memory error detector.
==15350== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
==15350== Using LibVEX rev 1854, a library for dynamic binary translation.
==15350== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
==15350== Using valgrind-3.3.1-Debian, a dynamic binary instrumentation framework.
==15350== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
==15350== For more details, rerun with: -v
==15350==
bluetoothd[15350]: Bluetooth daemon
bluetoothd[15350]: Enabling debug information
bluetoothd[15350]: parsing main.conf
bluetoothd[15350]: offmode=NoScan
bluetoothd[15350]: discovto=0
bluetoothd[15350]: pageto=8192
bluetoothd[15350]: name=%h-%d
bluetoothd[15350]: class=0x000100
bluetoothd[15350]: inqmode=0
bluetoothd[15350]: Starting SDP server
bluetoothd[15350]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[15350]: /usr/local/lib/bluetooth/plugins/audio.so
bluetoothd[15350]: Parsing /etc/bluetooth/audio.conf failed: No such file or \
directory bluetoothd[15350]: Unix socket created: 11
bluetoothd[15350]: Telephony plugin initialized
bluetoothd[15350]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[15350]: \
/usr/local/lib/bluetooth/plugins/serial.so bluetoothd[15350]: \
/usr/local/lib/bluetooth/plugins/hal.so bluetoothd[15350]: \
/usr/local/lib/bluetooth/plugins/service.so bluetoothd[15350]: \
/usr/local/lib/bluetooth/plugins/network.so bluetoothd[15350]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[15350]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true ==15350== \
Warning: noted but unhandled ioctl 0x89a0 with no size/direction hints ==15350==    \
This could cause spurious value errors to appear. ==15350==    See \
README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper. \
bluetoothd[15350]: bridge pan0 created bluetoothd[15350]: \
/usr/local/lib/bluetooth/plugins/input.so bluetoothd[15350]: input.conf: Key file \
does not have key 'IdleTimeout' bluetoothd[15350]: HCI dev 0 registered
bluetoothd[15350]: child 15359 forked
bluetoothd[15350]: HCI dev 0 already up
==15359==
==15359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 84 from 2)
==15359== malloc/free: in use at exit: 30,100 bytes in 352 blocks.
==15359== malloc/free: 751 allocs, 399 frees, 290,809 bytes allocated.
==15359== For counts of detected errors, rerun with: -v
==15359== searching for pointers to 352 not-freed blocks.
bluetoothd[15350]: headset_server_probe: path /org/bluez/hci0
==15359== checked 146,028 bytes.
==15359==
==15359== LEAK SUMMARY:
==15359==    definitely lost: 0 bytes in 0 blocks.
==15359==      possibly lost: 744 bytes in 3 blocks.
==15359==    still reachable: 29,356 bytes in 349 blocks.
==15359==         suppressed: 0 bytes in 0 blocks.
==15359== Rerun with --leak-check=full to see details of leaked memory.
bluetoothd[15350]: Adding record with handle 0x10000
bluetoothd[15350]: Adding record with handle 0x10001
bluetoothd[15350]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[15350]: SEP 0x4b31198 registered: type:0 codec:0 seid:1
bluetoothd[15350]: Adding record with handle 0x10002
bluetoothd[15350]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[15350]: Adding record with handle 0x10003
bluetoothd[15350]: Adding record with handle 0x10004
bluetoothd[15350]: proxy_probe: path /org/bluez/hci0
bluetoothd[15350]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[15350]: service_probe: path /org/bluez/hci0
bluetoothd[15350]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[15350]: network_server_probe: path /org/bluez/hci0
bluetoothd[15350]: Adding record with handle 0x10005
bluetoothd[15350]: register_server_record: got record id 0x10005
bluetoothd[15350]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[15350]: network_server_probe: path /org/bluez/hci0
bluetoothd[15350]: Adding record with handle 0x10006
bluetoothd[15350]: register_server_record: got record id 0x10006
bluetoothd[15350]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[15350]: network_server_probe: path /org/bluez/hci0
bluetoothd[15350]: Adding record with handle 0x10007
bluetoothd[15350]: register_server_record: got record id 0x10007
bluetoothd[15350]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15350]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15350]: Found Headset record
bluetoothd[15350]: Discovered Headset service on RFCOMM channel 2
bluetoothd[15350]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15350]: Found Hansfree record
bluetoothd[15350]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[15350]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[15350]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[15350]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[15350]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[15350]: Starting security manager 0
bluetoothd[15350]: child 15359 exited
bluetoothd[15350]: Computer is classified as desktop
bluetoothd[15350]: Current device class is 0x4a0104
bluetoothd[15350]: Setting 0x000104 for major/minor device class
bluetoothd[15350]: Accepted new client connection on unix socket (fd=23)
bluetoothd[15350]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15350]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15350]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15350]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15350]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15350]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15350]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[15350]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[15350]: kernel auth \
requirements = 0x04 bluetoothd[15350]: stored link key type = 0x00
bluetoothd[15350]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[15350]: Received AT+BRSF=27
bluetoothd[15350]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[15350]: \
Received AT+CIND=? bluetoothd[15350]: Received AT+CIND?
bluetoothd[15350]: Received AT+CMER=3, 0, 0, 1
bluetoothd[15350]: Event reporting (CMER): mode=3, ind=1
bluetoothd[15350]: HFP Service Level Connection established
bluetoothd[15350]: telephony-dummy: device 0x4b70708 connected
bluetoothd[15350]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[15350]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[15350]: Received AT+VGS=15
bluetoothd[15350]: connect(): Connection timed out (110)
bluetoothd[15350]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15350]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[15350]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[15350]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[15350]: Audio API: sending BT_STREAMFD_IND
bluetoothd[15350]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[15350]: resume failed
bluetoothd[15350]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[15350]: Unix client disconnected (fd=23)
bluetoothd[15350]: No matching connection for handle 45
bluetoothd[15350]: Accepted new client connection on unix socket (fd=23)
bluetoothd[15350]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[15350]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[15350]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15350]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15350]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[15350]: Unix \
client disconnected (fd=23) bluetoothd[15350]: telephony-dummy: device 0x4b70708 \
disconnected bluetoothd[15350]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[15350]: \
Accepted new client connection on unix socket (fd=23) bluetoothd[15350]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[15350]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[15350]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[15350]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[15350]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[15350]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[15350]: \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[15350]: Received AT+BRSF=27 bluetoothd[15350]: HFP HF features: "EC and/or \
NR function" "Call waiting and 3-way calling" "Voice recognition activation" "Remote \
volume control" bluetoothd[15350]: Received AT+CIND=?
bluetoothd[15350]: Received AT+CIND?
bluetoothd[15350]: Received AT+CMER=3, 0, 0, 1
bluetoothd[15350]: Event reporting (CMER): mode=3, ind=1
bluetoothd[15350]: HFP Service Level Connection established
bluetoothd[15350]: telephony-dummy: device 0x4b70708 connected
bluetoothd[15350]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[15350]: \
connect: Operation not permitted (1) bluetoothd[15350]: config failed
bluetoothd[15350]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[15350]: Unix client disconnected (fd=23)
bluetoothd[15350]: Received AT+VGS=15
bluetoothd[15350]: connect(): Connection timed out (110)
==15350== Invalid read of size 4
==15350==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x1361D: error_common_reply (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15350==    by 0x4EDA117: \
sco_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15350==    by 0x2165E: connect_cb (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x48B465C: \
(within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x487E1B7: \
g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by \
0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0xA410: main \
(in /ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==  Address \
0x464c45b3 is not stack'd, malloc'd or (recently) free'd ==15350==
==15350== Process terminating with default action of signal 11 (SIGSEGV)
==15350==  Access not within mapped region at address 0x464C45B3
==15350==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==15350==    by 0x1361D: error_common_reply (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x4ED9D2C: \
error_connection_attempt_failed (in \
/usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) ==15350==    by 0x4EDA117: \
sco_connect_cb (in /usr/local/stow/bluez-4.11/lib/bluetooth/plugins/audio.so) \
==15350==    by 0x2165E: connect_cb (in \
/ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==    by 0x48B465C: \
(within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x487E1B7: \
g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by \
0x4881852: (within /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0x4881D71: \
g_main_loop_run (in /usr/lib/libglib-2.0.so.0.1600.6) ==15350==    by 0xA410: main \
(in /ws/stuart/install/bluez/bluez-4.11/src/.libs/bluetoothd) ==15350==
==15350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 84 from 2)
==15350== malloc/free: in use at exit: 46,531 bytes in 869 blocks.
==15350== malloc/free: 2,715 allocs, 1,846 frees, 1,361,168 bytes allocated.
==15350== For counts of detected errors, rerun with: -v
==15350== searching for pointers to 869 not-freed blocks.
==15350== checked 162,032 bytes.
==15350==
==15350== LEAK SUMMARY:
==15350==    definitely lost: 204 bytes in 3 blocks.
==15350==      possibly lost: 864 bytes in 4 blocks.
==15350==    still reachable: 45,463 bytes in 862 blocks.
==15350==         suppressed: 0 bytes in 0 blocks.
==15350== Rerun with --leak-check=full to see details of leaked memory.
Segmentation fault

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006195652</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 19:56:52-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size</subject><body>

hi Johan

&gt; I think I managed to fix the segfault issue. The valgrind backtrace was 
&gt; actually misleading/incorrect but I managed to get a proper one with 
&gt; gdb. Could you try the latest git and see if the segfault is gone? 

I still have the segfault. But it took a little longer this time.

I'm a git beginner. Is there a git command that gives me the "version"
of what "git clone" retrieved so that you exactly what code I have?

bluetoothd[2451]: connect(): Connection timed out (110)
==2451== Invalid read of size 4
==2451==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x15677: error_common_reply (error.c:42)
==2451==    by 0x4ED900D: error_connection_attempt_failed (headset.c:175)
==2451==    by 0x4ED9A3B: sco_connect_cb (headset.c:468)
==2451==    by 0x26074: connect_cb (glib-helper.c:707)
==2451==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6)
==2451==    by 0x487E1B7: g_main_context_dispatch (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881852: (within \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881D71: g_main_loop_run (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0xAA93: main (main.c:750)
==2451==  Address 0x464c45b3 is not stack'd, malloc'd or (recently) free'd

&gt; ; while sleep 15; do aplay -D JX10 lib/alarm.wav ; done
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
^CAborted by signal Interrupt...
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]
bt_audio_service_open: connect() failed: Connection refused (111)
aplay: main:564: audio open error: Connection refused
&gt; root@kooka; valgrind src/.libs/bluetoothd -dn
==2451== Memcheck, a memory error detector.
==2451== Copyright (C) 2002-2007, and GNU GPL'd, by Julian Seward et al.
==2451== Using LibVEX rev 1854, a library for dynamic binary translation.
==2451== Copyright (C) 2004-2007, and GNU GPL'd, by OpenWorks LLP.
==2451== Using valgrind-3.3.1-Debian, a dynamic binary instrumentation framework.
==2451== Copyright (C) 2000-2007, and GNU GPL'd, by Julian Seward et al.
==2451== For more details, rerun with: -v
==2451==
bluetoothd[2451]: Bluetooth daemon
bluetoothd[2451]: Enabling debug information
bluetoothd[2451]: parsing main.conf
bluetoothd[2451]: offmode=NoScan
bluetoothd[2451]: discovto=0
bluetoothd[2451]: pageto=8192
bluetoothd[2451]: name=%h-%d
bluetoothd[2451]: class=0x000100
bluetoothd[2451]: inqmode=0
bluetoothd[2451]: Starting SDP server
bluetoothd[2451]: Loading plugins /home/stuart/ws/install/bluez/git/bluez/plugins
bluetoothd[2451]: /home/stuart/ws/install/bluez/git/bluez/plugins/audio.so
bluetoothd[2451]: Parsing /etc/bluetooth/audio.conf failed: No such file or directory
bluetoothd[2451]: Unix socket created: 11
bluetoothd[2451]: Telephony plugin initialized
bluetoothd[2451]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[2451]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/serial.so bluetoothd[2451]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/hal.so bluetoothd[2451]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/service.so bluetoothd[2451]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/network.so bluetoothd[2451]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[2451]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true ==2451== \
Warning: noted but unhandled ioctl 0x89a0 with no size/direction hints ==2451==    \
This could cause spurious value errors to appear. ==2451==    See \
README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper. \
bluetoothd[2451]: Can't create GN bridge bluetoothd[2451]: \
/home/stuart/ws/install/bluez/git/bluez/plugins/input.so bluetoothd[2451]: \
input.conf: Key file does not have key 'IdleTimeout' bluetoothd[2451]: HCI dev 0 \
registered bluetoothd[2451]: child 2452 forked
bluetoothd[2451]: HCI dev 0 already up
bluetoothd[2451]: headset_server_probe: path /org/bluez/hci0
bluetoothd[2451]: Adding record with handle 0x10000
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001112-0000-1000-8000-00805f9
==2452==
==2452== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 104 from 2)
bluetoothd[2451]: Record pattern UUID 00001203-0000-1000-8000-00805f9
==2452== malloc/free: in use at exit: 30,412 bytes in 352 blocks.
==2452== malloc/free: 751 allocs, 399 frees, 292,193 bytes allocated.
==2452== For counts of detected errors, rerun with: -v
==2452== searching for pointers to 352 not-freed blocks.
==2452== checked 146,352 bytes.
==2452==
==2452== LEAK SUMMARY:
==2452==    definitely lost: 0 bytes in 0 blocks.
==2452==      possibly lost: 744 bytes in 3 blocks.
==2452==    still reachable: 29,668 bytes in 349 blocks.
==2452==         suppressed: 0 bytes in 0 blocks.
==2452== Rerun with --leak-check=full to see details of leaked memory.
bluetoothd[2451]: Adding record with handle 0x10001
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[2451]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[2451]: SEP 0x4b42690 registered: type:0 codec:0 seid:1
bluetoothd[2451]: Adding record with handle 0x10002
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[2451]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[2451]: Adding record with handle 0x10003
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[2451]: Adding record with handle 0x10004
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[2451]: proxy_probe: path /org/bluez/hci0
bluetoothd[2451]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[2451]: service_probe: path /org/bluez/hci0
bluetoothd[2451]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[2451]: network_server_probe: path /org/bluez/hci0
bluetoothd[2451]: Adding record with handle 0x10005
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[2451]: register_server_record: got record id 0x10005
bluetoothd[2451]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[2451]: network_server_probe: path /org/bluez/hci0
bluetoothd[2451]: Adding record with handle 0x10006
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[2451]: register_server_record: got record id 0x10006
bluetoothd[2451]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[2451]: network_server_probe: path /org/bluez/hci0
bluetoothd[2451]: Adding record with handle 0x10007
bluetoothd[2451]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[2451]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[2451]: register_server_record: got record id 0x10007
bluetoothd[2451]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[2451]: Probe drivers for \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[2451]: Found Headset record
bluetoothd[2451]: Discovered Headset service on RFCOMM channel 2
bluetoothd[2451]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[2451]: Found Hansfree record
bluetoothd[2451]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[2451]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_2F_49_98
bluetoothd[2451]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_2F_49_98 bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_14_A7_74_D3_AF bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_03_89_B7_F8_D3 bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_0A_94_94_4F_B3 bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_5C_9F bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_03_89_DC_FC_EC bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_03_89_FE_E6_19 bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_0E_6D_8F_91_6A bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_17_E5_E6_25_AB bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_17_E5_16_88_6C bluetoothd[2451]: Creating device \
/org/bluez/hci0/dev_00_17_E5_0C_EA_70 bluetoothd[2451]: Adapter /org/bluez/hci0 has \
been enabled bluetoothd[2451]: Starting security manager 0
bluetoothd[2451]: child 2452 exited
bluetoothd[2451]: Computer is classified as desktop
bluetoothd[2451]: Current device class is 0x4a0104
bluetoothd[2451]: Setting 0x000104 for major/minor device class
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[2451]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[2451]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[2451]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[2451]: kernel auth \
requirements = 0x04 bluetoothd[2451]: stored link key type = 0x00
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[2451]: Received AT+BRSF=27
bluetoothd[2451]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[2451]: \
Received AT+CIND=? bluetoothd[2451]: Received AT+CIND?
bluetoothd[2451]: Received AT+CMER=3, 0, 0, 1
bluetoothd[2451]: Event reporting (CMER): mode=3, ind=1
bluetoothd[2451]: HFP Service Level Connection established
bluetoothd[2451]: telephony-dummy: device 0x4b9f950 connected
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: Received AT+VGS=15
bluetoothd[2451]: connect(): Connection timed out (110)
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Audio \
API: received BT_STREAMSTART_REQ bluetoothd[2451]: Audio API: sending \
BT_STREAMSTART_RSP bluetoothd[2451]: Audio API: sending BT_STREAMFD_IND
bluetoothd[2451]: unix_sendmsg_fd: Bad file descriptor(9)
bluetoothd[2451]: resume failed
bluetoothd[2451]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[2451]: Unix client disconnected (fd=23)
bluetoothd[2451]: No matching connection for handle 45
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 45
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: telephony-dummy: device 0x4b9f950 \
disconnected bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[2451]: \
Accepted new client connection on unix socket (fd=23) bluetoothd[2451]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[2451]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[2451]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[2451]: \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[2451]: connect(): Connection timed out (110) bluetoothd[2451]: Unable to \
lock headset bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: telephony-dummy: device 0x4b9f950 connected
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 45
bluetoothd[2451]: Received AT+BRSF=27
bluetoothd[2451]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[2451]: \
Received AT+CIND=? bluetoothd[2451]: Received AT+CIND?
bluetoothd[2451]: Received AT+CMER=3, 0, 0, 1
bluetoothd[2451]: Event reporting (CMER): mode=3, ind=1
bluetoothd[2451]: Received AT+VGS=15
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 45
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: connect(): Connection timed out (110)
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: No \
matching connection for handle 45 bluetoothd[2451]: telephony-dummy: device 0x4b9f950 \
disconnected bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[2451]: Accepted new \
client connection on unix socket (fd=23) bluetoothd[2451]: Audio API: received \
BT_GETCAPABILITIES_REQ bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[2451]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[2451]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[2451]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[2451]: kernel auth \
requirements = 0x04 bluetoothd[2451]: stored link key type = 0x00
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[2451]: Received AT+BRSF=27
bluetoothd[2451]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[2451]: \
Received AT+CIND=? bluetoothd[2451]: Received AT+CIND?
bluetoothd[2451]: Received AT+CMER=3, 0, 0, 1
bluetoothd[2451]: Event reporting (CMER): mode=3, ind=1
bluetoothd[2451]: HFP Service Level Connection established
bluetoothd[2451]: telephony-dummy: device 0x4b9f950 connected
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: State \
changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: Received AT+VGS=15
bluetoothd[2451]: connect(): Connection timed out (110)
bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: \
connect(): Connection timed out (110) bluetoothd[2451]: Unable to lock headset
bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: No matching connection for handle 41
bluetoothd[2451]: Accepted new client connection on unix socket (fd=23)
bluetoothd[2451]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[2451]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[2451]: Unix \
client disconnected (fd=23) bluetoothd[2451]: telephony-dummy: device 0x4b9f950 \
disconnected bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_DISCONNECTED bluetoothd[2451]: \
Accepted new client connection on unix socket (fd=23) bluetoothd[2451]: Audio API: \
received BT_GETCAPABILITIES_REQ bluetoothd[2451]: Audio API: sending \
BT_GETCAPABILITIES_RSP bluetoothd[2451]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[2451]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[2451]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[2451]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[2451]: \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[2451]: Received AT+BRSF=27 bluetoothd[2451]: HFP HF features: "EC and/or \
NR function" "Call waiting and 3-way calling" "Voice recognition activation" "Remote \
volume control" bluetoothd[2451]: Received AT+CIND=?
bluetoothd[2451]: Received AT+CIND?
bluetoothd[2451]: Received AT+CMER=3, 0, 0, 1
bluetoothd[2451]: Event reporting (CMER): mode=3, ind=1
bluetoothd[2451]: HFP Service Level Connection established
bluetoothd[2451]: telephony-dummy: device 0x4b9f950 connected
bluetoothd[2451]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[2451]: \
connect: Operation not permitted (1) bluetoothd[2451]: config failed
bluetoothd[2451]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[2451]: Unix client disconnected (fd=23)
bluetoothd[2451]: Received AT+VGS=15
bluetoothd[2451]: connect(): Connection timed out (110)
==2451== Invalid read of size 4
==2451==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x15677: error_common_reply (error.c:42)
==2451==    by 0x4ED900D: error_connection_attempt_failed (headset.c:175)
==2451==    by 0x4ED9A3B: sco_connect_cb (headset.c:468)
==2451==    by 0x26074: connect_cb (glib-helper.c:707)
==2451==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6)
==2451==    by 0x487E1B7: g_main_context_dispatch (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881852: (within \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881D71: g_main_loop_run (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0xAA93: main (main.c:750)
==2451==  Address 0x464c45b3 is not stack'd, malloc'd or (recently) free'd
==2451==
==2451== Process terminating with default action of signal 11 (SIGSEGV)
==2451==  Access not within mapped region at address 0x464C45B3
==2451==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x49155C0: dbus_message_new_error (in /usr/lib/libdbus-1.so.3.4.0)
==2451==    by 0x15677: error_common_reply (error.c:42)
==2451==    by 0x4ED900D: error_connection_attempt_failed (headset.c:175)
==2451==    by 0x4ED9A3B: sco_connect_cb (headset.c:468)
==2451==    by 0x26074: connect_cb (glib-helper.c:707)
==2451==    by 0x48B465C: (within /usr/lib/libglib-2.0.so.0.1600.6)
==2451==    by 0x487E1B7: g_main_context_dispatch (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881852: (within \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0x4881D71: g_main_loop_run (in \
/usr/lib/libglib-2.0.so.0.1600.6) ==2451==    by 0xAA93: main (main.c:750)
==2451==
==2451== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 104 from 2)
==2451== malloc/free: in use at exit: 47,875 bytes in 882 blocks.
==2451== malloc/free: 4,077 allocs, 3,195 frees, 3,448,435 bytes allocated.
==2451== For counts of detected errors, rerun with: -v
==2451== searching for pointers to 882 not-freed blocks.
==2451== checked 162,236 bytes.
==2451==
==2451== LEAK SUMMARY:
==2451==    definitely lost: 1,292 bytes in 19 blocks.
==2451==      possibly lost: 864 bytes in 4 blocks.
==2451==    still reachable: 45,719 bytes in 859 blocks.
==2451==         suppressed: 0 bytes in 0 blocks.
==2451== Rerun with --leak-check=full to see details of leaked memory.
Segmentation fault


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006105450</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 10:54:50-0400</timestampReceived><subject>Re: [PATCH] btsdio: fix tx error path</subject><body>

Hi Tomas,

&gt; This patch fixes accumulating of the header
&gt; in case packet was requeued in the error path.
&gt; 
&gt; Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; ---
&gt;  drivers/bluetooth/btsdio.c |    1 +
&gt;  1 files changed, 1 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
&gt; index 58630cc..e4724b8 100644
&gt; --- a/drivers/bluetooth/btsdio.c
&gt; +++ b/drivers/bluetooth/btsdio.c
&gt; @@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data *data, struct sk_buff *skb)
&gt;  
&gt;  	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
&gt;  	if (err &lt; 0) {
&gt; +		skb_pop(skb, 4);
&gt;  		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
&gt;  		return err;
&gt;  	}

please do at least a compile test. It is skb_pull() and not skb_pop().

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081002221258</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-10-02 22:12:58-0400</timestampReceived><subject>Re: fix bug in suspend/resume code of btusb</subject><body>

Hi!

&gt; this fixes an issue in btusb's suspend/resume support that strikes if
&gt; the adapter is suspended while the hci is down.
&gt; This probably fixes the bug Pavel sees with autosuspend and fixes a bug
&gt; for me. I am currently looking at issues with new hardware, but with this patch
&gt; it should work at least for the best hardware.

It seems to fix the problem here.

&gt; What tree should I base a clean patch against?
&gt; 
&gt; Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

Tested-by: Pavel Machek &lt;pavel@suse.cz&gt;

[okay, _lightly_ tested...]
									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003063436</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-03 06:34:36-0400</timestampReceived><subject>Re: fix bug in suspend/resume code of btusb</subject><body>

Hi Oliver,

&gt; this fixes an issue in btusb's suspend/resume support that strikes if
&gt; the adapter is suspended while the hci is down.
&gt; This probably fixes the bug Pavel sees with autosuspend and fixes a bug
&gt; for me. I am currently looking at issues with new hardware, but with this patch
&gt; it should work at least for the best hardware.
&gt; 
&gt; What tree should I base a clean patch against?

give me the weekend to sort out the trees. I want to get two extra fixes
into 2.6.27-rc9 and then we can start working on the suspend stuff for
2.6.28. I have pending patches that your patches should be based on so
we have a clean revision history and see how the evolved. I really hated
the quick fixing inside hci_usb and nobody ever could figure out what
actually made it work and what not.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006062546</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-10-06 06:25:46-0400</timestampReceived><subject>Re: [PATCH] Don't show (null) in wizard</subject><body>

On Mon, 2008-10-06 at 01:21 -0500, Mario_Limonciello@Dell.com wrote:
&gt; I've noticed that the wizard will show (null) if the device name is
&gt; not yet recognized when pairing.  This is a bit confusing to the user
&gt; experience.  The attached patch makes the behavior a little bit
&gt; better.

Thanks; I noticed that too a couple of days ago but hadn't got round to
the patch yet.

Perhaps showing the bdaddr would be better, though?

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006064305</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-06 06:43:05-0400</timestampReceived><subject>Re: [PATCH] Don't show (null) in wizard</subject><body>

On Mon, 2008-10-06 at 07:25 +0100, David Woodhouse wrote:
&gt; On Mon, 2008-10-06 at 01:21 -0500, Mario_Limonciello@Dell.com wrote:
&gt; &gt; I've noticed that the wizard will show (null) if the device name is
&gt; &gt; not yet recognized when pairing.  This is a bit confusing to the user
&gt; &gt; experience.  The attached patch makes the behavior a little bit
&gt; &gt; better.
&gt; 
&gt; Thanks; I noticed that too a couple of days ago but hadn't got round to
&gt; the patch yet.
&gt; 
&gt; Perhaps showing the bdaddr would be better, though?

That should fix both problems:

diff --git a/wizard/main.c b/wizard/main.c
index 3accd7f..3c9e017 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -351,7 +351,7 @@ static void select_callback(GtkTreeSelection *selection, gpointer user_data)
                gtk_tree_model_get(model, &amp;iter,
                                BLUETOOTH_COLUMN_PAIRED, &amp;paired,
                                BLUETOOTH_COLUMN_ADDRESS, &amp;address,
-                               BLUETOOTH_COLUMN_NAME, &amp;name,
+                               BLUETOOTH_COLUMN_ALIAS, &amp;name,
                                BLUETOOTH_COLUMN_TYPE, &amp;type, -1);
 
                if (paired == TRUE)


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081001173039</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-01 17:30:39-0400</timestampReceived><subject>Re: bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect:</subject><body>

On 01/10/08 01:26, David Sainty wrote:
&gt; Stuart Pook wrote:
&gt;&gt; Er, what headsets do work? Please let me know. The Jabra JX10 "features
&gt;&gt; Bluetooth 2.0 and e-SCO for improved audio quality and MultiPoint
&gt;&gt; capability for connecting to 2 devices at once". Could that be
&gt;&gt; what is causing the problem?
&gt; I use a Sony DR-BT20NX stereo headset, with both my kneetop and my phone 
&gt; attached (they don't play at once, but the phone can interrupt the audio 
&gt; playback).  It works great! (*)

I'd like to use my headset to do VoIP via my PC. Do you do that or is 
the communication just from your PC to the headset?

I wonder if my problems are due to my old dongle. I have an old 
Bluetooth 1.2 Linksys USBBT100 USB dongle. Perhaps it has problems 
talking to my Bluetooth 2.0 headset.

I would like a class I Bluetooth 2.x USB dongle. Does anyone have any 
suggestions? I could buy a Belkin F8T012fr1 (class I &amp; v2.0) or a Belkin 
F8T017ng (class I &amp; v2.1). http://www.bluez.org/ mentions the F8T016 and 
its required quirks. I suppose that the F8T017ng is just the class I 
version. Would it require the same quirks I wonder?

Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081004034710</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-10-04 03:47:10-0400</timestampReceived><subject>Re: bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect: Operation not permitted</subject><body>

There is a regression on bluetoothd daemon, we introduce a SCO socket
listen recently which is causing the problem, although it seem that
the driver is also cooperating with the problem.


-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081004112527</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-04 11:25:27-0400</timestampReceived><subject>Re: bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect:</subject><body>

On 04/10/08 05:47, Luiz Augusto von Dentz wrote:
&gt; There is a regression on bluetoothd daemon, we introduce a SCO socket
&gt; listen recently which is causing the problem, although it seem that
&gt; the driver is also cooperating with the problem.

ok. Thanks for the information. Would installing bluez-4.10 help?

Or would changing my USB blueooth dongle help? I have an old Bluetooth 
1.2 Linksys USBBT100 dongle but have ordered a BELKIN F8T017ng 
(Bluetooth v2.1 + EDR + Class I) which should arrive in a few days. 
Perhaps it will work better though it appears that kernel 2.6.27-rc8 
does not include the required quirks (2.6.26-mh6 crashes for me).

I'm keen to get a Bluetooth headset working for VoIP so I could also 
change my headset if necessary. My Jabra JX10 Series II is however quite 
recent so I'd hope to be able to get it to work.

thanks
Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003065311</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-10-03 06:53:11-0400</timestampReceived><subject>Re: Untrusted input devices by default</subject><body>

On Fri, 2008-10-03 at 08:37 +0200, Marcel Holtmann wrote:
&gt; 
&gt; &gt; In my efforts to get BlueZ 4.x into Intrepid a question was posed.  How
&gt; &gt; come input devices don't default to "Trusted" when paired in the
&gt; &gt; Wizard?  This makes for a weird experience the next time you reboot (or
&gt; &gt; disconnect the device for that matter) that you need to give it
&gt; &gt; "authorization".
&gt; 
&gt; that is a bug. We should set the input device as trusted after we
&gt; connected to it. Any chance you have a patch for it?

I thought I was testing this a couple of weeks ago and it was working
fine.

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003063653</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-03 06:36:53-0400</timestampReceived><subject>Re: bluetooth and detection devices actually present</subject><body>

Hi Massimo,

&gt; In Applet 0.26 in Bluetooth devices detected appear, let's say, over time ...
&gt; 
&gt; I want to delete these devices (if I find the file)
&gt; 
&gt; 
&gt; so by "explores devices," of Applet Bluetooth,
&gt; i see devices actually present in the vicinity at that moment.
&gt; 
&gt; and not all those who took over in time BlueZ and that will be saved.
&gt; 
&gt; can you show me the files I try?

this should no longer be the case for bluez-gnome-1.x. We re-discover
them when needed.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081003135129</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-03 13:51:29-0400</timestampReceived><subject>RE: Untrusted input devices by default</subject><body>

Hi David:

I have just verified myself this is still broke with a couple of input devices and \
some folks in Ubuntu are reporting it too.

I don't have a patch ATM, but I'll see what I can come up with.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 



-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org on behalf of David Woodhouse
Sent: Fri 10/3/2008 1:53 AM
To: Marcel Holtmann
Cc: Limonciello, Mario; linux-bluetooth@vger.kernel.org
Subject: Re: Untrusted input devices by default
 
On Fri, 2008-10-03 at 08:37 +0200, Marcel Holtmann wrote:
&gt; 
&gt; &gt; In my efforts to get BlueZ 4.x into Intrepid a question was posed.  How
&gt; &gt; come input devices don't default to "Trusted" when paired in the
&gt; &gt; Wizard?  This makes for a weird experience the next time you reboot (or
&gt; &gt; disconnect the device for that matter) that you need to give it
&gt; &gt; "authorization".
&gt; 
&gt; that is a bug. We should set the input device as trusted after we
&gt; connected to it. Any chance you have a patch for it?

I thought I was testing this a couple of weeks ago and it was working
fine.

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081004115108</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-04 11:51:08-0400</timestampReceived><subject>Re: bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect:</subject><body>

Hi Stuart,

&gt; &gt; There is a regression on bluetoothd daemon, we introduce a SCO socket
&gt; &gt; listen recently which is causing the problem, although it seem that
&gt; &gt; the driver is also cooperating with the problem.
&gt; 
&gt; ok. Thanks for the information. Would installing bluez-4.10 help?

I will release 4.11 over the weekend and that should fix it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081005072558</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-10-05 07:25:58-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11705] New: l2cap_recv_acldata: Unexpected</subject><body>


(switched to email.  Please respond via emailed reply-to-all, not via the
bugzilla web interface).

On Sat,  4 Oct 2008 23:28:41 -0700 (PDT) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11705
&gt; 
&gt;            Summary: l2cap_recv_acldata: Unexpected continuation frame (len
&gt;                     0)
&gt;            Product: Drivers
&gt;            Version: 2.5
&gt;      KernelVersion: 2.6.27-rc6
&gt;           Platform: All
&gt;         OS/Version: Linux
&gt;               Tree: Mainline
&gt;             Status: NEW
&gt;           Severity: normal
&gt;           Priority: P1
&gt;          Component: Bluetooth
&gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;         ReportedBy: cijoml@volny.cz
&gt; 
&gt; 
&gt; Latest working kernel version: unknown
&gt; Earliest failing kernel version: unknown
&gt; Distribution: Debian testing
&gt; Hardware Environment: 
&gt; 
&gt; compaq:/home/cijoml# hciconfig hci0 revision
&gt; hci0:   Type: USB
&gt;         BD Address: 00:1E:37:XX:XX:XX ACL MTU: 1017:8 SCO MTU: 64:8
&gt;         Firmware 41.65 / 207
&gt; compaq:/home/cijoml# hciconfig hci0 features
&gt; hci0:   Type: USB
&gt;         BD Address: 00:1E:37:XX:XX:XX ACL MTU: 1017:8 SCO MTU: 64:8
&gt;         Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
&gt;                 &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
&gt;                 &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
&gt;                 &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
&gt;                 &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
&gt;                 &lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt;
&gt;                 &lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt;
&gt;                 &lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt;
&gt;                 &lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt;
&gt;                 &lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt;
&gt;                 &lt;AFH cap. master&gt; &lt;AFH class. master&gt; &lt;EDR eSCO 2 Mbps&gt;
&gt;                 &lt;EDR eSCO 3 Mbps&gt; &lt;3-slot EDR eSCO&gt; &lt;extended features&gt;
&gt; compaq:/home/cijoml# hciconfig -a
&gt; hci0:   Type: USB
&gt;         BD Address: 00:1E:37:XX:XX:XX ACL MTU: 1017:8 SCO MTU: 64:8
&gt;         UP RUNNING PSCAN ISCAN
&gt;         RX bytes:100912 acl:1363 sco:0 events:13089 errors:0
&gt;         TX bytes:21534098 acl:26024 sco:0 commands:49 errors:0
&gt;         Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
&gt;         Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
&gt;         Link policy: RSWITCH HOLD SNIFF PARK
&gt;         Link mode: SLAVE ACCEPT
&gt;         Name: 'compaq-0'
&gt;         Class: 0x180100
&gt;         Service Classes: Capturing, Object Transfer
&gt;         Device Class: Computer, Uncategorized
&gt;         HCI Ver: 2.0 (0x3) HCI Rev: 0x2129 LMP Ver: 2.0 (0x3) LMP Subver:
&gt; 0x41cf
&gt;         Manufacturer: Broadcom Corporation (15)
&gt; 
&gt; HIFI Motorola:
&gt; compaq:/home/cijoml# hcitool info 00:0C:55:XX:XX:XX
&gt; Requesting information ...
&gt;         BD Address:  00:0C:55:XX:XX:XX
&gt;         Device Name: Motorola S805
&gt;         LMP Version: 2.0 (0x3) LMP Subversion: 0xa41
&gt;         Manufacturer: Cambridge Silicon Radio (10)
&gt;         Features: 0xff 0xff 0x8f 0x78 0x18 0x18 0x00 0x80
&gt;                 &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
&gt;                 &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
&gt;                 &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
&gt;                 &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
&gt;                 &lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt;
&gt;                 &lt;enhanced iscan&gt; &lt;interlaced iscan&gt; &lt;interlaced pscan&gt;
&gt;                 &lt;inquiry with RSSI&gt; &lt;AFH cap. slave&gt; &lt;AFH class. slave&gt;
&gt;                 &lt;AFH cap. master&gt; &lt;AFH class. master&gt; &lt;extended features&gt;
&gt; 
&gt; 
&gt; Software Environment:
&gt; 2.6.27-rc6, 
&gt; compaq:/usr/src# dpkg -l |grep bluez
&gt; ii  bluez-audio                          3.36-1                       
&gt; Bluetooth audio support
&gt; ii  bluez-utils                          3.36-1                       
&gt; Bluetooth tools and daemons
&gt; 
&gt; Problem Description:
&gt; After start of A2DP stream to my Motorola S805,my dmesg log is flooded with
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; l2cap_recv_acldata: Unexpected continuation frame (len 0)
&gt; 
&gt; Sound goes great!
&gt; 
&gt; Steps to reproduce:
&gt; start play
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006080256</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 08:02:56-0400</timestampReceived><subject>Re: [PATCH] Don't show (null) in wizard</subject><body>

Hi Bastien,

&gt; &gt; &gt; I've noticed that the wizard will show (null) if the device name is
&gt; &gt; &gt; not yet recognized when pairing.  This is a bit confusing to the user
&gt; &gt; &gt; experience.  The attached patch makes the behavior a little bit
&gt; &gt; &gt; better.
&gt; &gt; 
&gt; &gt; Thanks; I noticed that too a couple of days ago but hadn't got round to
&gt; &gt; the patch yet.
&gt; &gt; 
&gt; &gt; Perhaps showing the bdaddr would be better, though?
&gt; 
&gt; That should fix both problems:
&gt; 
&gt; diff --git a/wizard/main.c b/wizard/main.c
&gt; index 3accd7f..3c9e017 100644
&gt; --- a/wizard/main.c
&gt; +++ b/wizard/main.c
&gt; @@ -351,7 +351,7 @@ static void select_callback(GtkTreeSelection *selection, gpointer user_data)
&gt;                 gtk_tree_model_get(model, &amp;iter,
&gt;                                 BLUETOOTH_COLUMN_PAIRED, &amp;paired,
&gt;                                 BLUETOOTH_COLUMN_ADDRESS, &amp;address,
&gt; -                               BLUETOOTH_COLUMN_NAME, &amp;name,
&gt; +                               BLUETOOTH_COLUMN_ALIAS, &amp;name,
&gt;                                 BLUETOOTH_COLUMN_TYPE, &amp;type, -1);
&gt;  

this is the right fix. Let bluetoothd do the hard work for you :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006084419</emailId><senderName>"George Kuriakose"</senderName><senderEmail>georgekk@gmail.com</senderEmail><timestampReceived>2008-10-06 08:44:19-0400</timestampReceived><subject>H5 support?</subject><body>

Hello Everybody

I need to implement H5 support in the BlueZ stack. Has anybody already
done any work on H5? I see it as a todo in BlueZ website.

Regards
George
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006110911</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 11:09:11-0400</timestampReceived><subject>Re: fix bug in suspend/resume code of btusb</subject><body>

Hi Oliver,

&gt; this fixes an issue in btusb's suspend/resume support that strikes if
&gt; the adapter is suspended while the hci is down.
&gt; This probably fixes the bug Pavel sees with autosuspend and fixes a bug
&gt; for me. I am currently looking at issues with new hardware, but with this patch
&gt; it should work at least for the best hardware.
&gt; 
&gt; What tree should I base a clean patch against?

can you send patches against my bluetooth-testing tree:

http://git.kernel.org/?p=linux/kernel/git/holtmann/bluetooth-testing.git;a=summary

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006112035</emailId><senderName>"Winkler, Tomas"</senderName><senderEmail>tomas.winkler@intel.com</senderEmail><timestampReceived>2008-10-06 11:20:35-0400</timestampReceived><subject>RE: [PATCH] btsdio: fix tx error path</subject><body>



&gt;-----Original Message-----
&gt;From: Marcel Holtmann [mailto:marcel@holtmann.org]
&gt;Sent: Monday, October 06, 2008 12:55 PM
&gt;To: Winkler, Tomas
&gt;Cc: linux-bluetooth@vger.kernel.org; linux-kernel@vger.kernel.org
&gt;Subject: Re: [PATCH] btsdio: fix tx error path
&gt;
&gt;Hi Tomas,
&gt;
&gt;&gt; This patch fixes accumulating of the header
&gt;&gt; in case packet was requeued in the error path.
&gt;&gt;
&gt;&gt; Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
&gt;&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;&gt; ---
&gt;&gt;  drivers/bluetooth/btsdio.c |    1 +
&gt;&gt;  1 files changed, 1 insertions(+), 0 deletions(-)
&gt;&gt;
&gt;&gt; diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
&gt;&gt; index 58630cc..e4724b8 100644
&gt;&gt; --- a/drivers/bluetooth/btsdio.c
&gt;&gt; +++ b/drivers/bluetooth/btsdio.c
&gt;&gt; @@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data
*data,
&gt;struct sk_buff *skb)
&gt;&gt;
&gt;&gt;  	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
&gt;&gt;  	if (err &lt; 0) {
&gt;&gt; +		skb_pop(skb, 4);
&gt;&gt;  		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
&gt;&gt;  		return err;
&gt;&gt;  	}
&gt;
&gt;please do at least a compile test. It is skb_pull() and not skb_pop().

Sorry, my bad. It was oneliner so I didn't take the patch directly from
the test machine and my server .config was wrong so the file didn't
compile at all :( leading to clean compilation I will resubmit be more
careful next time. 

Tomas 

---------------------------------------------------------------------
Intel Israel (74) Limited

This e-mail and any attachments may contain confidential material for
the sole use of the intended recipient(s). Any review or distribution
by others is strictly prohibited. If you are not the intended
recipient, please contact the sender and delete all copies.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006120541</emailId><senderName>"Winkler, Tomas"</senderName><senderEmail>tomas.winkler@intel.com</senderEmail><timestampReceived>2008-10-06 12:05:41-0400</timestampReceived><subject>RE: [PATCH V2] btsdio: fix tx error path</subject><body>



&gt;-----Original Message-----
&gt;From: Marcel Holtmann [mailto:marcel@holtmann.org]
&gt;Sent: Monday, October 06, 2008 2:02 PM
&gt;To: Winkler, Tomas
&gt;Cc: linux-bluetooth@vger.kernel.org; linux-kernel@vger.kernel.org
&gt;Subject: Re: [PATCH V2] btsdio: fix tx error path
&gt;
&gt;Hi Tomas,
&gt;
&gt;&gt; This patch fixes accumulating of the header
&gt;&gt; in case packet was requeued in the error path.
&gt;&gt;
&gt;&gt; Signed-off-by: Tomas Winkler &lt;tomas.winkler@intel.com&gt;
&gt;&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;&gt; ---
&gt;&gt;  drivers/bluetooth/btsdio.c |    1 +
&gt;&gt;  1 files changed, 1 insertions(+), 0 deletions(-)
&gt;&gt;
&gt;&gt; diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
&gt;&gt; index 58630cc..c422e89 100644
&gt;&gt; --- a/drivers/bluetooth/btsdio.c
&gt;&gt; +++ b/drivers/bluetooth/btsdio.c
&gt;&gt; @@ -91,6 +91,7 @@ static int btsdio_tx_packet(struct btsdio_data
*data,
&gt;struct sk_buff *skb)
&gt;&gt;
&gt;&gt;  	err = sdio_writesb(data-&gt;func, REG_TDAT, skb-&gt;data, skb-&gt;len);
&gt;&gt;  	if (err &lt; 0) {
&gt;&gt; +		skb_pull(skb, 4);
&gt;&gt;  		sdio_writeb(data-&gt;func, 0x01, REG_PC_WRT, NULL);
&gt;&gt;  		return err;
&gt;&gt;  	}
&gt;
&gt;thanks, but I already fixed that one manually in my tree :)

Yeah I guessed that, resubmitted just for the protocol.
Tomas

---------------------------------------------------------------------
Intel Israel (74) Limited

This e-mail and any attachments may contain confidential material for
the sole use of the intended recipient(s). Any review or distribution
by others is strictly prohibited. If you are not the intended
recipient, please contact the sender and delete all copies.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006203117</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-06 20:31:17-0400</timestampReceived><subject>Re: bluez-4.11 + 2.6.27-rc8 + SCO headset -&gt; Invalid read of size 4</subject><body>

Hi Stuart,

On Oct 6, 2008, at 21:56, Stuart Pook wrote:
&gt;&gt; I think I managed to fix the segfault issue. The valgrind backtrace  
&gt;&gt; was actually misleading/incorrect but I managed to get a proper one  
&gt;&gt; with gdb. Could you try the latest git and see if the segfault is  
&gt;&gt; gone?
&gt;
&gt; I still have the segfault. But it took a little longer this time.

Actually it's a different issue than the original segfault (see later  
in this email).

&gt; I'm a git beginner. Is there a git command that gives me the "version"
&gt; of what "git clone" retrieved so that you exactly what code I have?

You won't have any specific version but just the latest development  
tree. Be sure to run "git pull" every now and then to make sure you  
get the latest changes.

&gt; bluetoothd[2451]: connect(): Connection timed out (110)
&gt; ==2451== Invalid read of size 4
&gt; ==2451==    at 0x490CBF3: (within /usr/lib/libdbus-1.so.3.4.0)
&gt; ==2451==    by 0x4911DD1: dbus_message_get_sender (in /usr/lib/ 
&gt; libdbus-1.so.3.4.0)
&gt; ==2451==    by 0x49155C0: dbus_message_new_error (in /usr/lib/ 
&gt; libdbus-1.so.3.4.0)
&gt; ==2451==    by 0x15677: error_common_reply (error.c:42)
&gt; ==2451==    by 0x4ED900D: error_connection_attempt_failed (headset.c: 
&gt; 175)
&gt; ==2451==    by 0x4ED9A3B: sco_connect_cb (headset.c:468)

This is a different trace than the original one. The original one went  
through rfcomm_connect_cb while this one goes through sco_connect_cb,  
i.e. you've already got the (RFCOMM) control connection up and are  
trying to establish the audio (SCO) connection. I will investigate it,  
however could you try to get a backtrace with gdb as well since it  
seems that valgrind either distorts or hides some errors.

Johan



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006212146</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 21:21:46-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + SCO headset -&gt; SIGSEGV</subject><body>

Hi Stuart,

&gt; &gt; &gt; &gt; however could you try to get a backtrace with gdb as well since it seems 
&gt; &gt; &gt; &gt; that valgrind either distorts or hides some errors.
&gt; &gt; &gt; I guess that I have forgotten how to use gdb because the backtrace
&gt; &gt; &gt; doesn't tell me much. Or perhaps I have to recompile with "-g".
&gt; &gt; if you use ./bootstrap-configure it will automatically enable it. If not
&gt; &gt; then give --enable-debug to configure. And make sure you do a make clean
&gt; &gt; before that.
&gt; 
&gt; This what I did (from history)
&gt; 
&gt; 17  git clone git://git.kernel.org/pub/scm/bluetooth/bluez.git &amp;&amp; cd bluez &amp;&amp; \
&gt; ./bootstrap-configure &amp;&amp; make 18  ./bootstrap-configure &amp;&amp; make
&gt; 
&gt; I ran the bootstrap-configure twice because I had to install gtk-doc.
&gt; 
&gt; &gt; ; grep ' -g' Makefile
&gt; CFLAGS = -Wall -O2 -D_FORTIFY_SOURCE=2 -fPIC -g -O0

that is indeed strange. You should be able to get a proper backtrace.

&gt; I thus think that I did compile with -g and that I cannot get a stack trace
&gt; because someone has written all over the stack.
&gt; 
&gt; [I'm trying to remove btusb but I think that I'll need a reboot
&gt; &gt; ; lsmod | grep btusb
&gt; btusb                  12056  11465
&gt; bluetooth              49632  1 btusb
&gt; ]

Normally hciconfig hci0 down and killing bluetoothd should be enough.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081006223355</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-06 22:33:55-0400</timestampReceived><subject>Re: Keeping ACL link around after DBUS CreateBonding()</subject><body>

Hi Nick,

&gt; Attached is the btsnoop from the CreateBonding()
&gt; 
&gt; Note the "Create Connection Cancel" right after completing bonding.
&gt; This is what this patch tries to address - allow 2 seconds before
&gt; disconnecting the ACL link instead of 10 ms for this scenario.

so the actual questions is why we end up here:

&gt; HCI Event: Link Key Notification (0x18) plen 23
    bdaddr 00:19:7F:64:DA:C5 key E3E8A7783875D177851DC9F0EEEB474D type 0
    Type: Combination Key
&lt; HCI Command: Create Connection Cancel (0x01|0x0008) plen 6
    bdaddr 00:19:7F:64:DA:C5
&lt; HCI Command: Create Connection Cancel (0x01|0x0008) plen 6
    bdaddr 00:19:7F:64:DA:C5
&gt; HCI Event: Command Complete (0x0e) plen 10
    Create Connection Cancel (0x01|0x0008) ncmd 1
    status 0x00 bdaddr 00:19:7F:64:DA:C5
&gt; HCI Event: Command Complete (0x0e) plen 10
    Create Connection Cancel (0x01|0x0008) ncmd 1
    status 0x00 bdaddr 00:19:7F:64:DA:C5
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x02 handle 1 bdaddr 00:19:7F:64:DA:C5 type ACL encrypt 0x01
    Error: Unknown Connection Identifier

The problem is not the kernel since the kernel is doing the right thing
here. If the last user goes away and we haven't established ACL then we
cancel it instead of letting it timeout.

So the CreateBonding is actually broken here. CreateBonding should only
close the L2CAP raw socket (the one we use for bonding), when we get
Auth Complete (in that case 2 seconds apply) or when we get the Link Key
Notification before Connect Complete, it has to wait until Connect
Complete to close it.

Johan, please check if your modified code in 4.x actually does the right
thing for security mode 3. Or if we still have the same issue.

&gt; Also note that the "Create Connection Cancel" takes 40 seconds to
&gt; return from the BRF6300. To me this looks like a unrelated issue with
&gt; the TI chip (and I have a separate conversation going on with TI about
&gt; it).

The double Create Connection Cancel and not rejecting one with an error
code is an issue of the TI chip. It should not allow that. Question
still is why do we send it twice.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081006231708</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-10-06 23:17:08-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + Belkin F8T017 -&gt; works with reset=1</subject><body>

hi Marcel

&gt; I doubt it since it is not in yet. Show me the output of hciconfig -a
&gt; for this so I can create a patch for it.

see below

&gt; What is the exact model number of this one. Do you have to have a link
&gt; to the product website by any chance.

Belkin
Bluetooth Adapter
Model:  F8T017
FCC ID: K7SF8T017

When I ordered the dongle I ordered a F8T017ng but the "ng"
is not indicated on the dongle or on the packaging.

http://catalog.belkin.com/IWCatProductPage.process?Product_Id=454427
http://www.belkin.com/uk/support/article/?lid=enu&amp;pid=F8T017ng&amp;aid=10334&amp;scid=0

: root@kooka; hciconfig -a
hci0:	Type: USB
	BD Address: 00:0A:3A:84:94:D9 ACL MTU: 1021:8 SCO MTU: 64:1
	UP RUNNING
	RX bytes:844 acl:0 sco:0 events:46 errors:0
	TX bytes:2609 acl:0 sco:0 commands:46 errors:0
	Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x79 0x83
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
	Link policy: RSWITCH HOLD SNIFF PARK
	Link mode: SLAVE ACCEPT
	Name: 'kooka-0'
	Class: 0x4a0104
	Service Classes: Networking, Capturing, Telephony
	Device Class: Computer, Desktop workstation
	HCI Ver: 2.1 (0x4) HCI Rev: 0x5123 LMP Ver: 2.1 (0x4) LMP Subver: 0x420e
	Manufacturer: Broadcom Corporation (15)

This dongle has a small button. I'm not sure yet but it seemed that
the dongle didn't want to work until I pressed the button.
I'll check next time.

thanks
Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081007053438</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-07 05:34:38-0400</timestampReceived><subject>Re: bluez/git + 2.6.27-rc8 + bluetoothd -&gt; SIGSEGV</subject><body>

Hi Stuart,

On Oct 7, 2008, at 0:40, Stuart Pook wrote:
&gt;&gt;&gt; :; grep ' -g' Makefile
&gt;&gt;&gt; CFLAGS = -Wall -O2 -D_FORTIFY_SOURCE=2 -fPIC -g -O0
&gt;&gt; that is indeed strange. You should be able to get a proper backtrace.
&gt;
&gt; yes. I ran src/.libs/bluetoothd, it core dumped,
&gt; but I still cannot get a reasonable backtrace. Weird.

Please do a "git pull". The segfault shouln't occur anymore (a  
probable cause of it was a bug in common/glib-helper.c which Luiz  
fixed yesterday). Also, if you have the chance come to the #bluez  
channel on freenode where most bluez developers hang out (you'd have  
e.g. found out about the fix much earlier that way).

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081007083103</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-07 08:31:03-0400</timestampReceived><subject>Re: How to disable authentication when using bluetooth on Linux?</subject><body>

Hi,

You can try out couple of steps, to test ...

1. whether the change in "security" settings actually reflect on interface..

Try and pair with the device, with security "none" or "auto", and if you get relevant \
messages on remote device, then its fine.

2. If the above is successful, then it must be something very specific to obex lib \
you are using, I've used obexftp + openObex and didn't find any such problems. [with \
security "none" and "auto"]

Regards,
Pavan

----- Original Message -----
From: chen chong &lt;byrbzdl@gmail.com&gt;
To: pavan savoy &lt;pavan_savoy@indiatimes.com&gt;
Cc: linux-bluetooth@vger.kernel.org, linux-kernel@vger.kernel.org
Sent: Tue, 7 Oct 2008 13:27:54 +0530 (IST)
Subject: Re: How to disable authentication when using bluetooth on Linux?

Hi, Pavan

Thanks for your reply. I had tried this before, and tried it again
just now, but it still doesn't work.

The following are my steps, pls help to check if I missed any steps, THX!

1. change "security user;" to "security none;" in /etc/bluetooth/hcid.conf
2. Restart the bluetooth service:  # /etc/init.d/bluetooth restart
3. (Optional: I tried twice, once with this step, and the other without)
    Start passkey-agent: # passkey-agent --default 1234
4. ussp-push --dev 0 --debug 00:01:02:03:04:05@11 desk.jpg desk.jpg  &amp;

root@debian:~/bluetooth#
pushing file desk.jpg
name=desk.jpg, size=24762
__obex_connect: client_context_t = 0x80540f0
Registered transport
Set user data
Created new objext
cobex_write
Local device 00:01:02:03:04:01
Remote device 00:01:02:03:04:05 (11)
Write error: Transport endpoint is not connected
obex_event: client_context_t = 0x80540f0
cobex_disconnect
Link broken!
Started a new request
cobex_close
__obex_connect: error=-2
Unable to connect to the server
Error


my /etc/bluetooth/hcid.conf configuration are as following:
-------------------------------------------------------------------------
# HCId options
options {
        autoinit yes;
        security none;
        pairing multi;
        passkey "1234";
}

# Default settings for HCI devices
device {
        name "pass1234";
        # Local device class
        class 0x3e0100;
        # Default packet type
        #pkt_type DH1,DM1,HV1;
        # Inquiry and Page scan
        iscan enable; pscan enable;
        # Default link mode
        lm accept;
        # Default link policy
        lp rswitch,hold,sniff,park;
}
-------------------------------------------------------------------------

Is this configuration correct?

My Linux version is:
root@debian:~/bluetooth# uname -a
Linux debian 2.6.18-6-686 #1 SMP Sun Feb 10 22:11:31 UTC 2008 i686 GNU/Linux

Any more information needed?

THX


Kris
2008/10/7  &lt;pavan_savoy@indiatimes.com&gt;:
&gt; 
&gt; Seems you are using BlueZ -3.37, look in the hcid.conf file in /etc/bluetooth, it \
&gt; should have a keyword "security", make the option to none. [I assume its says \
&gt; "user" currently.] 
&gt; 
&gt; Regards,
&gt; Pavan
&gt; 
&gt; ----- Original Message -----
&gt; From: chen chong &lt;byrbzdl@gmail.com&gt;
&gt; To: linux-bluetooth@vger.kernel.org, linux-kernel@vger.kernel.org
&gt; Sent: Tue, 7 Oct 2008 12:25:18 +0530 (IST)
&gt; Subject: How to disable authentication when using bluetooth on Linux?
&gt; 
&gt; Hi, all
&gt; 
&gt; When pushing a file to bluetooth mobile phone from a Linux PC, how to
&gt; disable bluetooth authentication mechanism (in kernel or user level ?
&gt; ), so that the phone won't prompt a window ask for PIN code?
&gt; 
&gt; 
&gt; I'm a freshman on bluez, now I'm trying to write an application on
&gt; Linux PC,  to send files to mobile phones with OBEX. The PC has a USB
&gt; bluetooth stick to communication with the phone.
&gt; 
&gt; Now I have successfully sent a file to phone using the following commands:
&gt; 1. "hcitool scan" and "sdptool browse"
&gt; 2. "passkey-agent --default 1234" and "ussp-push --dev 0
&gt; BTADDR@CHANNEL desk.jpg desk.jpg"
&gt; 
&gt; but the phone ask for a PIN code at the start.
&gt; 
&gt; To get rid of this, I had tried to comment out
&gt; "start_security_manager()" in bluez-utils-3.7/hcid/main.c,  and
&gt; recompile it, then restart the bluetooth service. But PIN code was
&gt; still prompted, and after if I input some characters,  the command
&gt; "ussp-push --dev 0 --debug  BTADDR@CHANNEL desk.jpg desk.jpg", failed
&gt; with the following error:
&gt; 
&gt; root@debian:~/bluetooth# pushing file desk.jpg
&gt; name=desk.jpg, size=24762
&gt; __obex_connect: client_context_t = 0x80540f0
&gt; Registered transport
&gt; Set user data
&gt; Created new objext
&gt; cobex_write
&gt; Local device 00:01:02:03:04:01
&gt; Remote device 00:01:02:03:04:05 (11)
&gt; Write error: Transport endpoint is not connected
&gt; obex_event: client_context_t = 0x80540f0
&gt; cobex_disconnect
&gt; Link broken!
&gt; Started a new request
&gt; cobex_close
&gt; __obex_connect: error=-2
&gt; Unable to connect to the server
&gt; Error
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 
&gt; 
&gt; 
&gt; --
&gt; Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
&gt; on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
&gt;  
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081007083407</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-07 08:34:07-0400</timestampReceived><subject>Make fails during Cross-Compilation</subject><body>



Subject: Make fails during Cross-Compilation

Hi,

The libtool expands the -lbluetooth to /usr/lib/bluetooth.so instead of path for the \
cross-compiled version of the libbluetooth.so.

How can I fix this?

Thanks in Advace,
Pavan


--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081008023034</emailId><senderName>Sam Lin</senderName><senderEmail>itrs.lin@gmail.com</senderEmail><timestampReceived>2008-10-08 02:30:34-0400</timestampReceived><subject>[Bluez] How to get voice input from Headset</subject><body>

Hi All,


Currently I can successfully play a sound file to my headset (Jabra
250v) by setting .asounrc and use "aplay -D bluetooth test.wav".
But I can't get voice from the headset by using "arecord -D bluetooth
record.wav"

The HCI conversation seems ok but no SCO packets occur.

My configuration:

Linux 2.6.24-21-generic (Ubuntu 8.04)
bluez 3.26
sco.ko with force_scofix=1 parameter

hcidump result as attachment.

hciconfig -a :
hci0: Type: USB
BD Address: 00:0B:0D:4C:CB:E1 ACL MTU: 1017:8 SCO MTU: 64:8
UP RUNNING PSCAN ISCAN
RX bytes:6140 acl:133 sco:0 events:153 errors:0
TX bytes:53659 acl:109 sco:1000 commands:63 errors:0
Features: 0xff 0xff 0x8d 0xfe 0x9b 0xf9 0x00 0x80
Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
Link policy: RSWITCH HOLD SNIFF PARK
Link mode: SLAVE ACCEPT
Name: 'ubuntu-home-0'
Class: 0x080104
Service Classes: Capturing
Device Class: Computer, Desktop workstation
HCI Ver: 2.0 (0x3) HCI Rev: 0x40eb LMP Ver: 2.0 (0x3) LMP Subver: 0x430e
Manufacturer: Broadcom Corporation (15)

hcitool info 00:13:17:12:D9:87 (Jabra 250v Headset)
BD Address: 00:13:17:12:D9:87
LMP Version: 1.2 (0x2) LMP Subversion: 0x990
Manufacturer: Cambridge Silicon Radio (10)
Features: 0xfc 0xff 0x0b 0x00 0x00 0x00 0x00 0x00
&lt;encryption&gt; &lt;slot offset&gt; &lt;timing accuracy&gt; &lt;role switch&gt;
&lt;hold mode&gt; &lt;sniff mode&gt; &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt;
&lt;SCO link&gt; &lt;HV2 packets&gt; &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt;
&lt;CVSD&gt; &lt;paging scheme&gt; &lt;transparent SCO&gt;


If you can give some hint I'll appreciate.

Thanks for your time.

Sam Lin




["arecord.log" (text/plain)]

HCI sniffer - Bluetooth packet analyzer ver 1.40
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
    bdaddr 00:13:17:12:D9:87 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
    Packet type: DM1 DM3 DM5 DH1 DH3 DH5 
&gt; HCI Event: Command Status (0x0f) plen 4
    Create Connection (0x01|0x0005) status 0x00 ncmd 1
&gt; HCI Event: Link Key Request (0x17) plen 6
    bdaddr 00:13:17:12:D9:87
&lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
    bdaddr 00:13:17:12:D9:87 key E4E45FE58872160F97A0F3C43088B41A
&gt; HCI Event: Command Complete (0x0e) plen 10
    Link Key Request Reply (0x01|0x000b) ncmd 1
    status 0x00 bdaddr 00:13:17:12:D9:87
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 12 bdaddr 00:13:17:12:D9:87 type ACL encrypt 0x01
&lt; ACL data: handle 12 flags 0x02 dlen 10
    L2CAP(s): Info req: type 2
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
    handle 12
&gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 1
&lt; HCI Command: Write Link Policy Settings (0x02|0x000d) plen 4
    handle 12 policy 0x0f
    Link policy: RSWITCH HOLD SNIFF PARK 
&gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
    status 0x00 handle 12
    Features: 0xfc 0xff 0x0b 0x00 0x00 0x00 0x00 0x00
&gt; HCI Event: Command Complete (0x0e) plen 6
    Write Link Policy Settings (0x02|0x000d) ncmd 1
    status 0x00 handle 12
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
    bdaddr 00:13:17:12:D9:87 mode 2 clkoffset 0x0000
&gt; HCI Event: Command Status (0x0f) plen 4
    Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Info rsp: type 2 result 0
      Extended feature mask 0x0000
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004f scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004f scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004f flags 0x00 clen 0
&gt; HCI Event: Remote Name Req Complete (0x07) plen 255
    status 0x00 bdaddr 00:13:17:12:D9:87 name 'Jabra BT250v'
&gt; ACL data: handle 12 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
      MTU 48 
&lt; ACL data: handle 12 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004f flags 0x00 result 0 clen 4
      Success
      MTU 48 
&lt; ACL data: handle 12 flags 0x02 dlen 17
    L2CAP(d): cid 0x004f len 13 [psm 1]
        SDP SS Req: tid 0x0 len 0x8
          pat uuid-16 0x1108 (Headset)
          max 64
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 4
&gt; ACL data: handle 12 flags 0x02 dlen 18
    L2CAP(d): cid 0x0040 len 14 [psm 1]
        SDP SS Rsp: tid 0x0 len 0x9
          count 1
          handle 0x10000
          cont 00
&lt; ACL data: handle 12 flags 0x02 dlen 23
    L2CAP(d): cid 0x004f len 19 [psm 1]
        SDP SA Req: tid 0x1 len 0xe
          handle 0x10000
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; ACL data: handle 12 flags 0x02 dlen 27
&gt; ACL data: handle 12 flags 0x01 dlen 25
    L2CAP(d): cid 0x0040 len 48 [psm 1]
        SDP SA Rsp: tid 0x1 len 0x2b
          count 38
          cont 02 00 1F
&lt; ACL data: handle 12 flags 0x02 dlen 25
    L2CAP(d): cid 0x004f len 21 [psm 1]
        SDP SA Req: tid 0x2 len 0x10
          handle 0x10000
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 02 00 1F
&gt; ACL data: handle 12 flags 0x02 dlen 27
&gt; ACL data: handle 12 flags 0x01 dlen 16
    L2CAP(d): cid 0x0040 len 39 [psm 1]
        SDP SA Rsp: tid 0x2 len 0x22
          count 31
          aid 0x0000 (SrvRecHndl)
             uint 0x10000
          aid 0x0001 (SrvClassIDList)
             &lt; uuid-16 0x1108 (Headset) uuid-16 0x1203 (Audio) &gt;
          aid 0x0004 (ProtocolDescList)
             &lt; &lt; uuid-16 0x0100 (L2CAP) &gt; &lt;
             uuid-16 0x0003 (RFCOMM) uint 0x1 &gt; &gt;
          aid 0x0009 (BTProfileDescList)
             &lt; &lt; uuid-16 0x1108 (Headset) uint 0x100 &gt; &gt;
          aid 0x0100 (SrvName)
             str "Headset"
          aid 0x0302 (unknown)
             bool 0x1
          cont 00
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 3 scid 0x0041
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004f scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 4
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004f scid 0x0040
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Config req: dcid 0x0050 flags 0x00 clen 4
      MTU 1013 
&gt; ACL data: handle 12 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 4
      MTU 1013 
&lt; ACL data: handle 12 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0050 flags 0x00 result 0 clen 4
      Success
      MTU 1013 
&lt; ACL data: handle 12 flags 0x02 dlen 8
    L2CAP(d): cid 0x0050 len 4 [psm 3]
      RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c 
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 4
&gt; ACL data: handle 12 flags 0x02 dlen 8
    L2CAP(d): cid 0x0041 len 4 [psm 3]
      RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7 
&lt; ACL data: handle 12 flags 0x02 dlen 18
    L2CAP(d): cid 0x0050 len 14 [psm 3]
      RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
      dlci 2 frame_type 0 credit_flow 15 pri 7 ack_timer 0
      frame_size 1008 max_retrans 0 credits 7
&gt; ACL data: handle 12 flags 0x02 dlen 18
    L2CAP(d): cid 0x0041 len 14 [psm 3]
      RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
      dlci 2 frame_type 0 credit_flow 14 pri 7 ack_timer 0
      frame_size 127 max_retrans 0 credits 0
&lt; ACL data: handle 12 flags 0x02 dlen 8
    L2CAP(d): cid 0x0050 len 4 [psm 3]
      RFCOMM(s): SABM: cr 1 dlci 2 pf 1 ilen 0 fcs 0x59 
&gt; ACL data: handle 12 flags 0x02 dlen 8
    L2CAP(d): cid 0x0041 len 4 [psm 3]
      RFCOMM(s): UA: cr 1 dlci 2 pf 1 ilen 0 fcs 0x92 
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(d): cid 0x0050 len 8 [psm 3]
      RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; HCI Command: Setup Synchronous Connection (0x01|0x0028) plen 17
    handle 12 voice setting 0x0060
&gt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(d): cid 0x0041 len 8 [psm 3]
      RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(d): cid 0x0050 len 8 [psm 3]
      RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&gt; HCI Event: Command Status (0x0f) plen 4
    Setup Synchronous Connection (0x01|0x0028) status 0x00 ncmd 1
&gt; HCI Event: Synchronous Connect Complete (0x2c) plen 17
    status 0x00 handle 1 bdaddr 00:13:17:12:D9:87 type SCO
    Air mode: CVSD
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 4
&gt; ACL data: handle 12 flags 0x02 dlen 12
    L2CAP(d): cid 0x0041 len 8 [psm 3]
      RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
      dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 12 flags 0x02 dlen 9
    L2CAP(d): cid 0x0050 len 5 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 1 ilen 0 fcs 0x86 credits 33
&gt; ACL data: handle 12 flags 0x02 dlen 9
    L2CAP(d): cid 0x0041 len 5 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 0 fcs 0x5c credits 15
&lt; ACL data: handle 12 flags 0x02 dlen 19
    L2CAP(d): cid 0x0050 len 15 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 11 fcs 0x9a 
      0000: 0d 0a 2b 56 47 53 3d 31  35 0d 0a                 ..+VGS=15..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 2
&gt; ACL data: handle 12 flags 0x02 dlen 19
    L2CAP(d): cid 0x0041 len 15 [psm 3]
      RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 1
      0000: 41 54 2b 56 47 53 3d 31  35 0d                    AT+VGS=15.
&lt; ACL data: handle 12 flags 0x02 dlen 14
    L2CAP(d): cid 0x0050 len 10 [psm 3]
      RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a 
      0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 1
&gt; HCI Event: Mode Change (0x14) plen 6
    status 0x00 handle 12 mode 0x02 interval 2048
    Mode: Sniff

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081008050834</emailId><senderName>Rogério Brito</senderName><senderEmail>rbrito@ime.usp.br</senderEmail><timestampReceived>2008-10-08 05:08:34-0400</timestampReceived><subject>Help getting bluetooth disabled</subject><body>

Dear developers,

I got this past july a notebook that has what seems to be a strange way
of dealing with wireless devices: there is a button (which I suspect is
called rfkill) that, when pressed, enables *both* bluetooth and wifi,
with the respective leds being lit.

I don't have any bluetooth device. Saving energy here is paramount as
the battery life is quite short.

According to the manual, under Windows Vista (which is what came with
the box, but which I never used), this button is supposed to cycle
between 4 states:

* both disabled;
* bluetooth enabled &amp; wifi enabled;
* bluetooth disabled &amp; wifi enabled;
* bluetooth enabled &amp; wifi disabled.

Unfortunately, under Linux (tested with Ubuntu's 8.10 pre-releases,
which includes a kernel based on 2.6.27-rc*, if I understand it
correctly), it is all or nothing: both disabled or both enabled.

If I launch powertop, it recommends to disable bluetooth with
"hciconfig hci down; rmmod hci_usb", but the led of bluetooth is still
lit and I fear that the device is still drawing power from the battery.

Is there any way to get it to disable completely the device?

Just as extra information, this is an Itautec Note N8320 notebook, with
a Core 2 Duo T7250 CPU, ICH8 chipset and Intel's 3945abg wifi and a
Realtek GigE driven by r8169 module (which I still have not had the
opportunity to use).

If any further information is desired, please let me know. I can post
the dmesg logs, lspci output, lsusb, as I am really willing to get this
situation settled (and possibly working as on Windows as it was reported
by the support people from the manufacturer).

Again, if any further information is needed, please let me know.


Thanks, Rogério Brito.

P.S.: Please, I would kindly ask to be included in Cc'ies, as I am not
subscribed to the list.
-- 
Rogério Brito : rbrito@{mackenzie,ime.usp}.br : GPG key 1024D/7C2CAEB8
http://www.ime.usp.br/~rbrito : http://meusite.mackenzie.com.br/rbrito
Projects: algorithms.berlios.de : lame.sf.net : vrms.alioth.debian.org

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081010133154</emailId><senderName>"sreevani medhahal"</senderName><senderEmail>sreevani.medhahal@gmail.com</senderEmail><timestampReceived>2008-10-10 13:31:54-0400</timestampReceived><subject>regarding headset test</subject><body>

Hi,
 i am resending this mail .Kindly suggest your inputs for the below.

 I have the following query...
1)    Headset Model Number: motorola HT820
when i tried hstest play new.wav &lt;bd_addr&gt; channel_no
here what should be the channel no ?
$./hstest play email.wav  00:07:A4:B7:51:8D 1
Voice setting: 0x0060
RFCOMM channel connected
Can't connect SCO audio channel: Address already in use

output of :$ hciconfig -a
hci0:   Type: USB
       BD Address: 00:02:5B:02:97:76 ACL MTU: 310:10 SCO MTU: 64:8
       UP RUNNING PSCAN
       RX bytes:203468 acl:2048 sco:274 events:9024 errors:5
       TX bytes:1274949 acl:5837 sco:0 commands:740 errors:0
       Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x59 0x83
       Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
       Link policy: RSWITCH HOLD SNIFF PARK
       Link mode: SLAVE ACCEPT
       Name: 'training01-0'
       Class: 0x2a0100
       Service Classes: Networking, Capturing, Audio
       Device Class: Computer, Uncategorized
       HCI Ver: 2.1 (0x4) HCI Rev: 0x1306 LMP Ver: 2.1 (0x4) LMP Subver: 0x1306
       Manufacturer: Cambridge Silicon Radio (10)




I tried mailing on the bluez-users list :but no luck (hence attempting it here)
2)
I am using
   Headset Model Number: motorola HT820

Contents of .asoundrc is as below:
 cat ~/.asoundrc
pcm.bluetooth {
 type bluetooth
 device 00:07:A4:B7:51:8D
}

using bluez4.6 &amp; kernel 2.6.27.rc6

when i use
$aplay -D bluetooth -f S16_LE shutdown1.wav
Playing WAVE 'shutdown1.wav' : Signed 16 bit Little Endian, Rate 44100 Hz, Stere
I am able to hear it in my HT820

where as when i do
1)
arecord -D bluetooth -r 44100 -f S16_LE new.wav
Recording WAVE 'new.wav' : Signed 16 bit Little Endian, Rate 44100 Hz, Mono
I kept the above command running for few seconds &amp; then pressed ctrl-c.
there is new.wav file created of size just 44 bytes &amp; when i try aplay
on this nothing is heard( i think this is due to no recording on this
file).
2) I get the following error For
 I use the below command to hear what i have said in the microphone.!
$ arecord -Dplug:bluetooth -f S16_LE | aplay -D bluetooth -f S16_LE
Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:712:(bluetooth_a2dp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)
arecord: set_params:1015: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 128000
PERIOD_SIZE: 1024
PERIOD_BYTES: 2048
PERIODS: 6
BUFFER_TIME: 768000
BUFFER_SIZE: 6144
BUFFER_BYTES: 12288
TICK_TIME: 0
aplay: playback:2148: read error

Let me know if i need to specify any other information.
regards,
S M
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080601070622</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-06-01 07:06:22-0400</timestampReceived><subject>Re: [PATCH][resend] rfcomm deadlock fix</subject><body>

Hi Dave,

&gt; There's logic in __rfcomm_dlc_close:
&gt; 	rfcomm_dlc_lock(d);
&gt; 	d-&gt;state = BT_CLOSED;
&gt; 	d-&gt;state_changed(d, err);
&gt; 	rfcomm_dlc_unlock(d);
&gt;
&gt; In rfcomm_dev_state_change, it's possible that rfcomm_dev_put try to  
&gt; take the
&gt; dlc lock, then we will deadlock.
&gt;
&gt; Here fixed it by unlock dlc before rfcomm_dev_get in  
&gt; rfcomm_dev_state_change.
&gt;
&gt; why not unlock just before rfcomm_dev_put? it's because there's  
&gt; another problem.
&gt; rfcomm_dev_get/rfcomm_dev_del will take rfcomm_dev_lock, but in  
&gt; rfcomm_dev_add
&gt; the lock order is : rfcomm_dev_lock --&gt; dlc lock
&gt;
&gt; so I unlock dlc before the taken of rfcomm_dev_lock.
&gt;
&gt; Actually it's a regression caused by commit
&gt; 1905f6c736cb618e07eca0c96e60e3c024023428, the dlc state_change could  
&gt; be two
&gt; callbacks : rfcomm_sk_state_change and rfcomm_dev_state_change. I  
&gt; missed the rfcomm_sk_state_change that time.
&gt;
&gt; Thanks Arjan van de Ven &lt;arjan@linux.intel.com&gt; for the effort in  
&gt; commit
&gt; 4c8411f8c115def968820a4df6658ccfd55d7f1a
&gt; but he missed the rfcomm_dev_state_change lock issue.
&gt;
&gt; Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt;
&gt; ---
&gt; net/bluetooth/rfcomm/tty.c |   13 ++++++++++++-
&gt; 1 file changed, 12 insertions(+), 1 deletion(-)
&gt;
&gt; diff -upr linux/net/bluetooth/rfcomm/tty.c linux.new/net/bluetooth/ 
&gt; rfcomm/tty.c
&gt; --- linux/net/bluetooth/rfcomm/tty.c	2008-05-30 15:46:33.000000000  
&gt; +0800
&gt; +++ linux.new/net/bluetooth/rfcomm/tty.c	2008-05-30  
&gt; 17:08:30.000000000 +0800
&gt; @@ -566,11 +566,22 @@ static void rfcomm_dev_state_change(stru
&gt; 	if (dlc-&gt;state == BT_CLOSED) {
&gt; 		if (!dev-&gt;tty) {
&gt; 			if (test_bit(RFCOMM_RELEASE_ONHUP, &amp;dev-&gt;flags)) {
&gt; -				if (rfcomm_dev_get(dev-&gt;id) == NULL)
&gt; +				/* Drop DLC lock here to avoid deadlock
&gt; +				 * 1. rfcomm_dev_get will take rfcomm_dev_lock
&gt; +				 *    but in rfcomm_dev_add there's lock order:
&gt; +				 *    rfcomm_dev_lock -&gt; dlc lock
&gt; +				 * 2. rfcomm_dev_put will deaklock if it's
&gt; +				 *    the last reference

I meant this one :)  s/deaklock/deadlock/

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219072101</emailId><senderName>Chan-Yeol Park</senderName><senderEmail>chanyeol.park@samsung.com</senderEmail><timestampReceived>2008-12-19 07:21:01-0400</timestampReceived><subject>How can I know BlueZ A2DP, AVRCP profile version.?</subject><body>

Dear all

How can I know BlueZ A2DP, AVRCP profile version.?

As far as I search on the web site, A2DP,AVRCP version is 1.0 respectively

But I expect BlueZ version is higher than we search.


Thanks!


Regards

Chanyeol, Park






--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081231160345</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-31 16:03:45-0400</timestampReceived><subject>[PATCH/RFC] SIMD optimizations for SBC encoder analysis filter</subject><body>

Hello all,

This is a preliminary preview of SIMD optimizations for SBC encoder analysis filter.

It already contains MMX optimization for 4 subbands case (yes, all this insane
amount of extra lines of code finally starts to pay off) ;)

Important notice: in order to test MMX optimizations, you need to have
extra '-mmmx' command line option passed to gcc. Runtime MMX autodetection
can be easily added later. Also don't forget to pass -s4 option to sbcenc
because 8 subbands case is still not accelerated. By the way, SSE2 is twice
wider than MMX and should be a lot faster. Though MMX is supported on
virtually every x86 cpu that is in use nowadays and can be considered "lowest
common denominator".

My quick benchmark showed that the performance gets improved about ~10%
overall (and about twice better for the analysis filter function alone) when
compared with bluez-4.23 release which had the old buggy code. Improvement is
much more noticeable over the release 4.25 which contains a new fixed and
mostly nonoptimized filter.

So now the performance is better than ever. And I guess, all the platforms
should use SIMD optimizations nowadays, so they should gain performance
improvements too. Those 'anamatrix' style optimizations in older code feel
so much like the previous century ;)

I'm going to primarily focus on NEON and maybe ARMv6 SIMD optimizations,
these will be submitted a bit later. Also, as I have already written before,
the other parts of code are quite inefficient too and can be optimized. There
are still lots of things to improve.


But right now I would like to hear some opinions about the following things
regarding the attached patch:

The first question is about the use of extra source file for SIMD
optimizations and introduction of 'sbc_encoder_init_simd_optimized_analyze'
function to the global namespace. The rationale for that is the intention to
stop adding changes to 'sbc.c' (otherwise it will become bloated pretty soon
with the addition of multiple optimizations for various platforms). If anyone
has a better idea, I'm very much interested to hear it.

And if the addition of a new source file gets approved, I wonder about what
text should go to the copyright header?

Now we have two "reference" C implementations of analysis filter. Is it OK to
keep both? Or only SIMD-friendly one should remain in the end?

PS. Happy New Year

Best regards,
Siarhei Siamashka

["preview-0002-SIMD-optimizations-for-SBC-encoder-analysis-filter.patch" (text/x-diff)]

From e8f98db87085f8394c68363a4a971aea5b025a9b Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Wed, 31 Dec 2008 16:52:08 +0200
Subject: [PATCH] SIMD optimizations for SBC encoder analysis filter

Added SIMD-friendly "reference" C implementation of SBC
analysis filter (code layout had to be changed a bit and
constants in the tables reshuffled). This code can be used
as a starting point for MMX/SSE2/NEON/ARMv6 and probably
some others (MIPS?, SPARC?, PPC?) platform specific
optimizations. Initial test version of MMX optimization
for 4 subbands case is also included.
---
 sbc/Makefile.am  |    2 +-
 sbc/sbc.c        |   16 +++-
 sbc/sbc.h        |    6 +
 sbc/sbc_simd.c   |  335 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 sbc/sbc_tables.h |  256 ++++++++++++++++++++++++++++++++++++++++-
 5 files changed, 609 insertions(+), 6 deletions(-)
 create mode 100644 sbc/sbc_simd.c

diff --git a/sbc/Makefile.am b/sbc/Makefile.am
index c42f162..45c2e09 100644
--- a/sbc/Makefile.am
+++ b/sbc/Makefile.am
@@ -8,7 +8,7 @@ endif
 if SBC
 noinst_LTLIBRARIES = libsbc.la
 
-libsbc_la_SOURCES = sbc.h sbc.c sbc_math.h sbc_tables.h
+libsbc_la_SOURCES = sbc.h sbc.c sbc_simd.c sbc_math.h sbc_tables.h
 
 libsbc_la_CFLAGS = -finline-functions -funswitch-loops -fgcse-after-reload
 
diff --git a/sbc/sbc.c b/sbc/sbc.c
index 01b4011..e313d4a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -94,7 +94,8 @@ struct sbc_decoder_state {
 struct sbc_encoder_state {
 	int subbands;
 	int position[2];
-	int16_t X[2][256];
+	int16_t buffer[2][256 + 15];
+	int16_t *X[2];
 	void (*sbc_analyze_4b_4s)(int16_t *pcm, int16_t *x,
 				  int32_t *out, int out_stride);
 	void (*sbc_analyze_4b_8s)(int16_t *pcm, int16_t *x,
@@ -1053,9 +1054,22 @@ static void sbc_encoder_init(struct sbc_encoder_state *state,
 	state-&gt;subbands = frame-&gt;subbands;
 	state-&gt;position[0] = state-&gt;position[1] = 12 * frame-&gt;subbands;
 
+	/* Initialize X pointers (ensure 16 byte alignment) */
+	state-&gt;X[0] = state-&gt;buffer[0];
+	state-&gt;X[1] = state-&gt;buffer[1];
+	while ((int) state-&gt;X[0] &amp; 0xF)
+		state-&gt;X[0]++;
+	while ((int) state-&gt;X[1] &amp; 0xF)
+		state-&gt;X[1]++;
+
 	/* Default implementation for analyze function */
 	state-&gt;sbc_analyze_4b_4s = sbc_analyze_4b_4s;
 	state-&gt;sbc_analyze_4b_8s = sbc_analyze_4b_8s;
+
+	/* Try to override it with something faster */
+	sbc_encoder_init_simd_optimized_analyze(
+		&amp;state-&gt;sbc_analyze_4b_4s,
+		&amp;state-&gt;sbc_analyze_4b_8s);
 }
 
 struct sbc_priv {
diff --git a/sbc/sbc.h b/sbc/sbc.h
index ab47e32..fd6f18e 100644
--- a/sbc/sbc.h
+++ b/sbc/sbc.h
@@ -90,6 +90,12 @@ int sbc_get_frame_duration(sbc_t *sbc);
 int sbc_get_codesize(sbc_t *sbc);
 void sbc_finish(sbc_t *sbc);
 
+void sbc_encoder_init_simd_optimized_analyze(
+	void (**sbc_analyze_4b_4s)(int16_t *pcm, int16_t *x,
+				   int32_t *out, int out_stride),
+	void (**sbc_analyze_4b_8s)(int16_t *pcm, int16_t *x,
+				   int32_t *out, int out_stride));
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/sbc/sbc_simd.c b/sbc/sbc_simd.c
new file mode 100644
index 0000000..865f88e
--- /dev/null
+++ b/sbc/sbc_simd.c
@@ -0,0 +1,335 @@
+#include &lt;stdint.h&gt;
+#include &lt;stdio.h&gt;
+#include &lt;limits.h&gt;
+#include "sbc.h"
+#include "sbc_math.h"
+#include "sbc_tables.h"
+
+/*
+ * A reference C code with SIMD-friendly tables reordering and code layout.
+ * This code can be used to develop platform specific SIMD optimizations.
+ * Also it may be theoretically used as some kind of test for compiler
+ * autovectorization capabilities :)
+ */
+
+static inline void _sbc_analyze_four_simd(const int16_t *in, int32_t *out,
+					  const FIXED_T *const_table)
+{
+	FIXED_A t1[4];
+	FIXED_T t2[4];
+	int hop = 0;
+
+	/* rounding coefficient */
+	t1[0] = t1[1] = t1[2] = t1[3] =
+		(FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 40; hop += 8) {
+		t1[0] += (FIXED_A) in[hop] * const_table[hop];
+		t1[0] += (FIXED_A) in[hop + 1] * const_table[hop + 1];
+		t1[1] += (FIXED_A) in[hop + 2] * const_table[hop + 2];
+		t1[1] += (FIXED_A) in[hop + 3] * const_table[hop + 3];
+		t1[2] += (FIXED_A) in[hop + 4] * const_table[hop + 4];
+		t1[2] += (FIXED_A) in[hop + 5] * const_table[hop + 5];
+		t1[3] += (FIXED_A) in[hop + 6] * const_table[hop + 6];
+		t1[3] += (FIXED_A) in[hop + 7] * const_table[hop + 7];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+
+	/* do the cos transform */
+	t1[0]  = (FIXED_A) t2[0] * const_table[40 + 0];
+	t1[0] += (FIXED_A) t2[1] * const_table[40 + 1];
+	t1[1]  = (FIXED_A) t2[0] * const_table[40 + 2];
+	t1[1] += (FIXED_A) t2[1] * const_table[40 + 3];
+
+	t1[2]  = (FIXED_A) t2[0] * const_table[40 + 4];
+	t1[2] += (FIXED_A) t2[1] * const_table[40 + 5];
+	t1[3]  = (FIXED_A) t2[0] * const_table[40 + 6];
+	t1[3] += (FIXED_A) t2[1] * const_table[40 + 7];
+
+	t1[0] += (FIXED_A) t2[2] * const_table[40 + 8];
+	t1[0] += (FIXED_A) t2[3] * const_table[40 + 9];
+	t1[1] += (FIXED_A) t2[2] * const_table[40 + 10];
+	t1[1] += (FIXED_A) t2[3] * const_table[40 + 11];
+	t1[2] += (FIXED_A) t2[2] * const_table[40 + 12];
+	t1[2] += (FIXED_A) t2[3] * const_table[40 + 13];
+	t1[3] += (FIXED_A) t2[2] * const_table[40 + 14];
+	t1[3] += (FIXED_A) t2[3] * const_table[40 + 15];
+
+	out[0] = t1[0] &gt;&gt;
+		(SBC_COS_TABLE_FIXED4_SCALE - SCALE_OUT_BITS);
+	out[1] = t1[1] &gt;&gt;
+		(SBC_COS_TABLE_FIXED4_SCALE - SCALE_OUT_BITS);
+	out[2] = t1[2] &gt;&gt;
+		(SBC_COS_TABLE_FIXED4_SCALE - SCALE_OUT_BITS);
+	out[3] = t1[3] &gt;&gt;
+		(SBC_COS_TABLE_FIXED4_SCALE - SCALE_OUT_BITS);
+}
+
+static inline void _sbc_analyze_eight_simd(const int16_t *in, int32_t *out,
+					   const FIXED_T *consts)
+{
+	FIXED_A t1[8];
+	FIXED_T t2[8];
+	int i, hop;
+
+	/* rounding coefficient */
+	t1[0] = t1[1] = t1[2] = t1[3] = t1[4] = t1[5] = t1[6] = t1[7] =
+		(FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED8_SCALE-1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 80; hop += 16) {
+		t1[0] += (FIXED_A) in[hop] * consts[hop];
+		t1[0] += (FIXED_A) in[hop + 1] * consts[hop + 1];
+		t1[1] += (FIXED_A) in[hop + 2] * consts[hop + 2];
+		t1[1] += (FIXED_A) in[hop + 3] * consts[hop + 3];
+		t1[2] += (FIXED_A) in[hop + 4] * consts[hop + 4];
+		t1[2] += (FIXED_A) in[hop + 5] * consts[hop + 5];
+		t1[3] += (FIXED_A) in[hop + 6] * consts[hop + 6];
+		t1[3] += (FIXED_A) in[hop + 7] * consts[hop + 7];
+		t1[4] += (FIXED_A) in[hop + 8] * consts[hop + 8];
+		t1[4] += (FIXED_A) in[hop + 9] * consts[hop + 9];
+		t1[5] += (FIXED_A) in[hop + 10] * consts[hop + 10];
+		t1[5] += (FIXED_A) in[hop + 11] * consts[hop + 11];
+		t1[6] += (FIXED_A) in[hop + 12] * consts[hop + 12];
+		t1[6] += (FIXED_A) in[hop + 13] * consts[hop + 13];
+		t1[7] += (FIXED_A) in[hop + 14] * consts[hop + 14];
+		t1[7] += (FIXED_A) in[hop + 15] * consts[hop + 15];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[4] = t1[4] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[5] = t1[5] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[6] = t1[6] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[7] = t1[7] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+
+
+	/* do the cos transform */
+	t1[0] = t1[1] = t1[2] = t1[3] = t1[4] = t1[5] = t1[6] = t1[7] = 0;
+
+	for (i = 0; i &lt; 4; i++) {
+		t1[0] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 0];
+		t1[0] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 1];
+		t1[1] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 2];
+		t1[1] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 3];
+		t1[2] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 4];
+		t1[2] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 5];
+		t1[3] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 6];
+		t1[3] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 7];
+		t1[4] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 8];
+		t1[4] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 9];
+		t1[5] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 10];
+		t1[5] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 11];
+		t1[6] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 12];
+		t1[6] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 13];
+		t1[7] += (FIXED_A) t2[i * 2 + 0] * consts[80 + i * 16 + 14];
+		t1[7] += (FIXED_A) t2[i * 2 + 1] * consts[80 + i * 16 + 15];
+	}
+
+	for (i = 0; i &lt; 8; i++)
+		out[i] = t1[i] &gt;&gt;
+			(SBC_COS_TABLE_FIXED8_SCALE - SCALE_OUT_BITS);
+}
+
+static inline void sbc_analyze_4b_4s_simd(int16_t *pcm, int16_t *x,
+					  int32_t *out, int out_stride)
+{
+	int i;
+	/* Input audio samples and do reordering for SIMD */
+	for (i = 0; i &lt; 16; i += 8) {
+		int16_t *pcm1 = pcm + 8 - i;
+		int16_t *pcm2 = pcm + 8 - i + 4;
+		x[i + 64] = x[i + 0] = pcm2[3];
+		x[i + 65] = x[i + 1] = pcm1[3];
+		x[i + 66] = x[i + 2] = pcm2[2];
+		x[i + 67] = x[i + 3] = pcm2[0];
+		x[i + 68] = x[i + 4] = pcm1[0];
+		x[i + 69] = x[i + 5] = pcm1[2];
+		x[i + 70] = x[i + 6] = pcm1[1];
+		x[i + 71] = x[i + 7] = pcm2[1];
+	}
+
+	/* Analyze blocks */
+	_sbc_analyze_four_simd(x + 12, out, analysis_consts_fixed4_simd_odd);
+	out += out_stride;
+	_sbc_analyze_four_simd(x + 8, out, analysis_consts_fixed4_simd_even);
+	out += out_stride;
+	_sbc_analyze_four_simd(x + 4, out, analysis_consts_fixed4_simd_odd);
+	out += out_stride;
+	_sbc_analyze_four_simd(x + 0, out, analysis_consts_fixed4_simd_even);
+}
+
+static inline void sbc_analyze_4b_8s_simd(int16_t *pcm, int16_t *x,
+					  int32_t *out, int out_stride)
+{
+	int i;
+	/* Input audio samples and do reordering for SIMD */
+	for (i = 0; i &lt; 32; i += 16) {
+		int16_t *pcm1 = pcm + 16 - i;
+		int16_t *pcm2 = pcm + 16 - i + 8;
+		x[i + 128] = x[i + 0] = pcm2[7];
+		x[i + 129] = x[i + 1] = pcm1[7];
+		x[i + 130] = x[i + 2] = pcm2[6];
+		x[i + 131] = x[i + 3] = pcm2[0];
+		x[i + 132] = x[i + 4] = pcm2[5];
+		x[i + 133] = x[i + 5] = pcm2[1];
+		x[i + 134] = x[i + 6] = pcm2[4];
+		x[i + 135] = x[i + 7] = pcm2[2];
+		x[i + 136] = x[i + 8] = pcm2[3];
+		x[i + 137] = x[i + 9] = pcm1[3];
+		x[i + 138] = x[i + 10] = pcm1[6];
+		x[i + 139] = x[i + 11] = pcm1[0];
+		x[i + 140] = x[i + 12] = pcm1[5];
+		x[i + 141] = x[i + 13] = pcm1[1];
+		x[i + 142] = x[i + 14] = pcm1[4];
+		x[i + 143] = x[i + 15] = pcm1[2];
+	}
+
+	/* Analyze blocks */
+	_sbc_analyze_eight_simd(x + 24, out, analysis_consts_fixed8_simd_odd);
+	out += out_stride;
+	_sbc_analyze_eight_simd(x + 16, out, analysis_consts_fixed8_simd_even);
+	out += out_stride;
+	_sbc_analyze_eight_simd(x + 8, out, analysis_consts_fixed8_simd_odd);
+	out += out_stride;
+	_sbc_analyze_eight_simd(x + 0, out, analysis_consts_fixed8_simd_even);
+}
+
+/*
+ * MMX optimized implementation
+ */
+
+#if defined(__GNUC__) &amp;&amp; defined(__MMX__) &amp;&amp; !defined(SBC_HIGH_PRECISION)
+#define USE_MMX
+#endif
+
+#ifdef USE_MMX
+
+static inline void _sbc_analyze_four_mmx(const int16_t *in, int32_t *out,
+					 const FIXED_T *const_table)
+{
+	static int32_t round_c[2] = {
+		1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1),
+		1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1),
+	};
+	asm volatile (
+		"movq       (%0), %%mm0\n"
+		"movq      8(%0), %%mm1\n"
+		"pmaddwd    (%1), %%mm0\n"
+		"pmaddwd   8(%1), %%mm1\n"
+		"paddd      (%2), %%mm0\n"
+		"paddd      (%2), %%mm1\n"
+		"\n"
+		"movq     16(%0), %%mm2\n"
+		"movq     24(%0), %%mm3\n"
+		"pmaddwd  16(%1), %%mm2\n"
+		"pmaddwd  24(%1), %%mm3\n"
+		"paddd     %%mm2, %%mm0\n"
+		"paddd     %%mm3, %%mm1\n"
+		"\n"
+		"movq     32(%0), %%mm2\n"
+		"movq     40(%0), %%mm3\n"
+		"pmaddwd  32(%1), %%mm2\n"
+		"pmaddwd  40(%1), %%mm3\n"
+		"paddd     %%mm2, %%mm0\n"
+		"paddd     %%mm3, %%mm1\n"
+		"\n"
+		"movq     48(%0), %%mm2\n"
+		"movq     56(%0), %%mm3\n"
+		"pmaddwd  48(%1), %%mm2\n"
+		"pmaddwd  56(%1), %%mm3\n"
+		"paddd     %%mm2, %%mm0\n"
+		"paddd     %%mm3, %%mm1\n"
+		"\n"
+		"movq     64(%0), %%mm2\n"
+		"movq     72(%0), %%mm3\n"
+		"pmaddwd  64(%1), %%mm2\n"
+		"pmaddwd  72(%1), %%mm3\n"
+		"paddd     %%mm2, %%mm0\n"
+		"paddd     %%mm3, %%mm1\n"
+		"\n"
+		"psrad        %4, %%mm0\n"
+		"psrad        %4, %%mm1\n"
+		"pshufw    $0x88, %%mm0, %%mm0\n"
+		"pshufw    $0x88, %%mm1, %%mm1\n"
+		"\n"
+		"movq      %%mm0, %%mm2\n"
+		"pmaddwd  80(%1), %%mm0\n"
+		"pmaddwd  88(%1), %%mm2\n"
+		"\n"
+		"movq      %%mm1, %%mm3\n"
+		"pmaddwd  96(%1), %%mm1\n"
+		"pmaddwd 104(%1), %%mm3\n"
+		"paddd     %%mm1, %%mm0\n"
+		"paddd     %%mm3, %%mm2\n"
+		"\n"
+		"movq      %%mm0, (%3)\n"
+		"movq      %%mm2, 8(%3)\n"
+		:
+		: "r" (in), "r" (const_table), "r" (&amp;round_c), "r" (out),
+		  "i" (SBC_PROTO_FIXED4_SCALE)
+		: "memory");
+}
+
+static inline void sbc_analyze_4b_4s_mmx(int16_t *pcm, int16_t *x,
+					 int32_t *out, int out_stride)
+{
+	/* Input audio samples and do reordering for SIMD */
+	asm volatile (
+		"pshufw $0x23,  24(%0), %%mm0\n"
+		"pshufw $0x18,  16(%0), %%mm1\n"
+		"pinsrw    $1,  22(%0), %%mm0\n"
+		"pinsrw    $3,  26(%0), %%mm1\n"
+		"movq   %%mm0,   (%1)\n"
+		"movq   %%mm1,  8(%1)\n"
+		"movq   %%mm0, 128(%1)\n"
+		"movq   %%mm1, 136(%1)\n"
+		"\n"
+		"pshufw $0x23,   8(%0), %%mm0\n"
+		"pshufw $0x18,    (%0), %%mm1\n"
+		"pinsrw    $1,   6(%0), %%mm0\n"
+		"pinsrw    $3,  10(%0), %%mm1\n"
+		"movq   %%mm0,  16(%1)\n"
+		"movq   %%mm1,  24(%1)\n"
+		"movq   %%mm0, 144(%1)\n"
+		"movq   %%mm1, 152(%1)\n"
+		:
+		: "r" (pcm), "r" (x)
+		: "memory");
+
+	/* Analyze blocks */
+	_sbc_analyze_four_mmx(x + 12, out, analysis_consts_fixed4_simd_odd);
+	out += out_stride;
+	_sbc_analyze_four_mmx(x + 8, out, analysis_consts_fixed4_simd_even);
+	out += out_stride;
+	_sbc_analyze_four_mmx(x + 4, out, analysis_consts_fixed4_simd_odd);
+	out += out_stride;
+	_sbc_analyze_four_mmx(x + 0, out, analysis_consts_fixed4_simd_even);
+
+	asm volatile ("emms");
+}
+
+#endif
+
+/*
+ * TODO: runtime MMX detection (right now -mmmx gcc option is required)
+ */
+void sbc_encoder_init_simd_optimized_analyze(
+	void (**sbc_analyze_4b_4s)(int16_t *pcm, int16_t *x,
+				   int32_t *out, int out_stride),
+	void (**sbc_analyze_4b_8s)(int16_t *pcm, int16_t *x,
+				   int32_t *out, int out_stride))
+{
+#ifdef USE_MMX
+	*sbc_analyze_4b_4s = sbc_analyze_4b_4s_mmx;
+#endif
+}
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index 8df8c1f..4955f93 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -157,8 +157,9 @@ static const int32_t synmatrix8[16][8] = {
  */
 #define SBC_PROTO_FIXED4_SCALE \
 	((sizeof(FIXED_T) * CHAR_BIT - 1) - SBC_FIXED_EXTRA_BITS + 1)
-#define F(x) (FIXED_A) ((x * 2) * \
+#define F_PROTO4(x) (FIXED_A) ((x * 2) * \
 	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+#define F(x) F_PROTO4(x)
 static const FIXED_T _sbc_proto_fixed4[40] = {
 	 F(0.00000000E+00),  F(5.36548976E-04),
 	-F(1.49188357E-03),  F(2.73370904E-03),
@@ -206,8 +207,9 @@ static const FIXED_T _sbc_proto_fixed4[40] = {
  */
 #define SBC_COS_TABLE_FIXED4_SCALE \
 	((sizeof(FIXED_T) * CHAR_BIT - 1) + SBC_FIXED_EXTRA_BITS)
-#define F(x) (FIXED_A) ((x) * \
+#define F_COS4(x) (FIXED_A) ((x) * \
 	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+#define F(x) F_COS4(x)
 static const FIXED_T cos_table_fixed_4[32] = {
 	 F(0.7071067812),  F(0.9238795325), -F(1.0000000000),  F(0.9238795325),
 	 F(0.7071067812),  F(0.3826834324),  F(0.0000000000),  F(0.3826834324),
@@ -233,8 +235,9 @@ static const FIXED_T cos_table_fixed_4[32] = {
  */
 #define SBC_PROTO_FIXED8_SCALE \
 	((sizeof(FIXED_T) * CHAR_BIT - 1) - SBC_FIXED_EXTRA_BITS + 2)
-#define F(x) (FIXED_A) ((x * 4) * \
+#define F_PROTO8(x) (FIXED_A) ((x * 4) * \
 	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+#define F(x) F_PROTO8(x)
 static const FIXED_T _sbc_proto_fixed8[80] = {
 	 F(0.00000000E+00),  F(1.56575398E-04),
 	 F(3.43256425E-04),  F(5.54620202E-04),
@@ -301,8 +304,9 @@ static const FIXED_T _sbc_proto_fixed8[80] = {
  */
 #define SBC_COS_TABLE_FIXED8_SCALE \
 	((sizeof(FIXED_T) * CHAR_BIT - 1) + SBC_FIXED_EXTRA_BITS)
-#define F(x) (FIXED_A) ((x) * \
+#define F_COS8(x) (FIXED_A) ((x) * \
 	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+#define F(x) F_COS8(x)
 static const FIXED_T cos_table_fixed_8[128] = {
 	 F(0.7071067812),  F(0.8314696123),  F(0.9238795325),  F(0.9807852804),
 	-F(1.0000000000),  F(0.9807852804),  F(0.9238795325),  F(0.8314696123),
@@ -345,3 +349,247 @@ static const FIXED_T cos_table_fixed_8[128] = {
 	-F(0.0000000000), -F(0.1950903220),  F(0.3826834324), -F(0.5555702330),
 };
 #undef F
+
+/*
+ * Constant tables for the use in SIMD optimized analysis filters
+ * Each table consists of two parts:
+ * 1. reordered "proto" table
+ * 2. reordered "cos" table
+ *
+ * Due to non-symmetrical reordering, separate tables for "even"
+ * and "odd" cases are needed
+ */
+
+#ifdef __GNUC__
+#define SIMD_ALIGNED __attribute__((aligned(16)))
+#else
+#define SIMD_ALIGNED
+#endif
+
+static const FIXED_T SIMD_ALIGNED analysis_consts_fixed4_simd_even[40 + 16] = {
+#define F(x) F_PROTO4(x)
+	 F(0.00000000E+00),  F(3.83720193E-03),
+	 F(5.36548976E-04),  F(2.73370904E-03),
+	 F(3.06012286E-03),  F(3.89205149E-03),
+	 F(0.00000000E+00), -F(1.49188357E-03),
+	 F(1.09137620E-02),  F(2.58767811E-02),
+	 F(2.04385087E-02),  F(3.21939290E-02),
+	 F(7.76463494E-02),  F(6.13245186E-03),
+	 F(0.00000000E+00), -F(2.88757392E-02),
+	 F(1.35593274E-01),  F(2.94315332E-01),
+	 F(1.94987841E-01),  F(2.81828203E-01),
+	-F(1.94987841E-01),  F(2.81828203E-01),
+	 F(0.00000000E+00), -F(2.46636662E-01),
+	-F(1.35593274E-01),  F(2.58767811E-02),
+	-F(7.76463494E-02),  F(6.13245186E-03),
+	-F(2.04385087E-02),  F(3.21939290E-02),
+	 F(0.00000000E+00),  F(2.88217274E-02),
+	-F(1.09137620E-02),  F(3.83720193E-03),
+	-F(3.06012286E-03),  F(3.89205149E-03),
+	-F(5.36548976E-04),  F(2.73370904E-03),
+	 F(0.00000000E+00), -F(1.86581691E-03),
+#undef F
+#define F(x) F_COS4(x)
+	 F(0.7071067812),  F(0.9238795325),
+	-F(0.7071067812),  F(0.3826834324),
+	-F(0.7071067812), -F(0.3826834324),
+	 F(0.7071067812), -F(0.9238795325),
+	 F(0.3826834324), -F(1.0000000000),
+	-F(0.9238795325), -F(1.0000000000),
+	 F(0.9238795325), -F(1.0000000000),
+	-F(0.3826834324), -F(1.0000000000),
+#undef F
+};
+
+static const FIXED_T SIMD_ALIGNED analysis_consts_fixed4_simd_odd[40 + 16] = {
+#define F(x) F_PROTO4(x)
+	 F(2.73370904E-03),  F(5.36548976E-04),
+	-F(1.49188357E-03),  F(0.00000000E+00),
+	 F(3.83720193E-03),  F(1.09137620E-02),
+	 F(3.89205149E-03),  F(3.06012286E-03),
+	 F(3.21939290E-02),  F(2.04385087E-02),
+	-F(2.88757392E-02),  F(0.00000000E+00),
+	 F(2.58767811E-02),  F(1.35593274E-01),
+	 F(6.13245186E-03),  F(7.76463494E-02),
+	 F(2.81828203E-01),  F(1.94987841E-01),
+	-F(2.46636662E-01),  F(0.00000000E+00),
+	 F(2.94315332E-01), -F(1.35593274E-01),
+	 F(2.81828203E-01), -F(1.94987841E-01),
+	 F(6.13245186E-03), -F(7.76463494E-02),
+	 F(2.88217274E-02),  F(0.00000000E+00),
+	 F(2.58767811E-02), -F(1.09137620E-02),
+	 F(3.21939290E-02), -F(2.04385087E-02),
+	 F(3.89205149E-03), -F(3.06012286E-03),
+	-F(1.86581691E-03),  F(0.00000000E+00),
+	 F(3.83720193E-03),  F(0.00000000E+00),
+	 F(2.73370904E-03), -F(5.36548976E-04),
+#undef F
+#define F(x) F_COS4(x)
+	 F(0.9238795325), -F(1.0000000000),
+	 F(0.3826834324), -F(1.0000000000),
+	-F(0.3826834324), -F(1.0000000000),
+	-F(0.9238795325), -F(1.0000000000),
+	 F(0.7071067812),  F(0.3826834324),
+	-F(0.7071067812), -F(0.9238795325),
+	-F(0.7071067812),  F(0.9238795325),
+	 F(0.7071067812), -F(0.3826834324),
+#undef F
+};
+
+static const FIXED_T SIMD_ALIGNED analysis_consts_fixed8_simd_even[80 + 64] = {
+#define F(x) F_PROTO8(x)
+	 F(0.00000000E+00),  F(2.01182542E-03),
+	 F(1.56575398E-04),  F(1.78371725E-03),
+	 F(3.43256425E-04),  F(1.47640169E-03),
+	 F(5.54620202E-04),  F(1.13992507E-03),
+	-F(8.23919506E-04),  F(0.00000000E+00),
+	 F(2.10371989E-03),  F(3.49717454E-03),
+	 F(1.99454554E-03),  F(1.64973098E-03),
+	 F(1.61656283E-03),  F(1.78805361E-04),
+	 F(5.65949473E-03),  F(1.29371806E-02),
+	 F(8.02941163E-03),  F(1.53184106E-02),
+	 F(1.04584443E-02),  F(1.62208471E-02),
+	 F(1.27472335E-02),  F(1.59045603E-02),
+	-F(1.46525263E-02),  F(0.00000000E+00),
+	 F(8.85757540E-03),  F(5.31873032E-02),
+	 F(2.92408442E-03),  F(3.90751381E-02),
+	-F(4.91578024E-03),  F(2.61098752E-02),
+	 F(6.79989431E-02),  F(1.46955068E-01),
+	 F(8.29847578E-02),  F(1.45389847E-01),
+	 F(9.75753918E-02),  F(1.40753505E-01),
+	 F(1.11196689E-01),  F(1.33264415E-01),
+	-F(1.23264548E-01),  F(0.00000000E+00),
+	 F(1.45389847E-01), -F(8.29847578E-02),
+	 F(1.40753505E-01), -F(9.75753918E-02),
+	 F(1.33264415E-01), -F(1.11196689E-01),
+	-F(6.79989431E-02),  F(1.29371806E-02),
+	-F(5.31873032E-02),  F(8.85757540E-03),
+	-F(3.90751381E-02),  F(2.92408442E-03),
+	-F(2.61098752E-02), -F(4.91578024E-03),
+	 F(1.46404076E-02),  F(0.00000000E+00),
+	 F(1.53184106E-02), -F(8.02941163E-03),
+	 F(1.62208471E-02), -F(1.04584443E-02),
+	 F(1.59045603E-02), -F(1.27472335E-02),
+	-F(5.65949473E-03),  F(2.01182542E-03),
+	-F(3.49717454E-03),  F(2.10371989E-03),
+	-F(1.64973098E-03),  F(1.99454554E-03),
+	-F(1.78805361E-04),  F(1.61656283E-03),
+	-F(9.02154502E-04),  F(0.00000000E+00),
+	 F(1.78371725E-03), -F(1.56575398E-04),
+	 F(1.47640169E-03), -F(3.43256425E-04),
+	 F(1.13992507E-03), -F(5.54620202E-04),
+#undef F
+#define F(x) F_COS8(x)
+	 F(0.7071067812),  F(0.8314696123),
+	-F(0.7071067812), -F(0.1950903220),
+	-F(0.7071067812), -F(0.9807852804),
+	 F(0.7071067812), -F(0.5555702330),
+	 F(0.7071067812),  F(0.5555702330),
+	-F(0.7071067812),  F(0.9807852804),
+	-F(0.7071067812),  F(0.1950903220),
+	 F(0.7071067812), -F(0.8314696123),
+	 F(0.9238795325),  F(0.9807852804),
+	 F(0.3826834324),  F(0.8314696123),
+	-F(0.3826834324),  F(0.5555702330),
+	-F(0.9238795325),  F(0.1950903220),
+	-F(0.9238795325), -F(0.1950903220),
+	-F(0.3826834324), -F(0.5555702330),
+	 F(0.3826834324), -F(0.8314696123),
+	 F(0.9238795325), -F(0.9807852804),
+	-F(1.0000000000),  F(0.5555702330),
+	-F(1.0000000000), -F(0.9807852804),
+	-F(1.0000000000),  F(0.1950903220),
+	-F(1.0000000000),  F(0.8314696123),
+	-F(1.0000000000), -F(0.8314696123),
+	-F(1.0000000000), -F(0.1950903220),
+	-F(1.0000000000),  F(0.9807852804),
+	-F(1.0000000000), -F(0.5555702330),
+	 F(0.3826834324),  F(0.1950903220),
+	-F(0.9238795325), -F(0.5555702330),
+	 F(0.9238795325),  F(0.8314696123),
+	-F(0.3826834324), -F(0.9807852804),
+	-F(0.3826834324),  F(0.9807852804),
+	 F(0.9238795325), -F(0.8314696123),
+	-F(0.9238795325),  F(0.5555702330),
+	 F(0.3826834324), -F(0.1950903220),
+#undef F
+};
+
+static const FIXED_T SIMD_ALIGNED analysis_consts_fixed8_simd_odd[80 + 64] = {
+#define F(x) F_PROTO8(x)
+	 F(0.00000000E+00), -F(8.23919506E-04),
+	 F(1.56575398E-04),  F(1.78371725E-03),
+	 F(3.43256425E-04),  F(1.47640169E-03),
+	 F(5.54620202E-04),  F(1.13992507E-03),
+	 F(2.01182542E-03),  F(5.65949473E-03),
+	 F(2.10371989E-03),  F(3.49717454E-03),
+	 F(1.99454554E-03),  F(1.64973098E-03),
+	 F(1.61656283E-03),  F(1.78805361E-04),
+	 F(0.00000000E+00), -F(1.46525263E-02),
+	 F(8.02941163E-03),  F(1.53184106E-02),
+	 F(1.04584443E-02),  F(1.62208471E-02),
+	 F(1.27472335E-02),  F(1.59045603E-02),
+	 F(1.29371806E-02),  F(6.79989431E-02),
+	 F(8.85757540E-03),  F(5.31873032E-02),
+	 F(2.92408442E-03),  F(3.90751381E-02),
+	-F(4.91578024E-03),  F(2.61098752E-02),
+	 F(0.00000000E+00), -F(1.23264548E-01),
+	 F(8.29847578E-02),  F(1.45389847E-01),
+	 F(9.75753918E-02),  F(1.40753505E-01),
+	 F(1.11196689E-01),  F(1.33264415E-01),
+	 F(1.46955068E-01), -F(6.79989431E-02),
+	 F(1.45389847E-01), -F(8.29847578E-02),
+	 F(1.40753505E-01), -F(9.75753918E-02),
+	 F(1.33264415E-01), -F(1.11196689E-01),
+	 F(0.00000000E+00),  F(1.46404076E-02),
+	-F(5.31873032E-02),  F(8.85757540E-03),
+	-F(3.90751381E-02),  F(2.92408442E-03),
+	-F(2.61098752E-02), -F(4.91578024E-03),
+	 F(1.29371806E-02), -F(5.65949473E-03),
+	 F(1.53184106E-02), -F(8.02941163E-03),
+	 F(1.62208471E-02), -F(1.04584443E-02),
+	 F(1.59045603E-02), -F(1.27472335E-02),
+	 F(0.00000000E+00), -F(9.02154502E-04),
+	-F(3.49717454E-03),  F(2.10371989E-03),
+	-F(1.64973098E-03),  F(1.99454554E-03),
+	-F(1.78805361E-04),  F(1.61656283E-03),
+	 F(2.01182542E-03),  F(0.00000000E+00),
+	 F(1.78371725E-03), -F(1.56575398E-04),
+	 F(1.47640169E-03), -F(3.43256425E-04),
+	 F(1.13992507E-03), -F(5.54620202E-04),
+#undef F
+#define F(x) F_COS8(x)
+	-F(1.0000000000),  F(0.8314696123),
+	-F(1.0000000000), -F(0.1950903220),
+	-F(1.0000000000), -F(0.9807852804),
+	-F(1.0000000000), -F(0.5555702330),
+	-F(1.0000000000),  F(0.5555702330),
+	-F(1.0000000000),  F(0.9807852804),
+	-F(1.0000000000),  F(0.1950903220),
+	-F(1.0000000000), -F(0.8314696123),
+	 F(0.9238795325),  F(0.9807852804),
+	 F(0.3826834324),  F(0.8314696123),
+	-F(0.3826834324),  F(0.5555702330),
+	-F(0.9238795325),  F(0.1950903220),
+	-F(0.9238795325), -F(0.1950903220),
+	-F(0.3826834324), -F(0.5555702330),
+	 F(0.3826834324), -F(0.8314696123),
+	 F(0.9238795325), -F(0.9807852804),
+	 F(0.7071067812),  F(0.5555702330),
+	-F(0.7071067812), -F(0.9807852804),
+	-F(0.7071067812),  F(0.1950903220),
+	 F(0.7071067812),  F(0.8314696123),
+	 F(0.7071067812), -F(0.8314696123),
+	-F(0.7071067812), -F(0.1950903220),
+	-F(0.7071067812),  F(0.9807852804),
+	 F(0.7071067812), -F(0.5555702330),
+	 F(0.3826834324),  F(0.1950903220),
+	-F(0.9238795325), -F(0.5555702330),
+	 F(0.9238795325),  F(0.8314696123),
+	-F(0.3826834324), -F(0.9807852804),
+	-F(0.3826834324),  F(0.9807852804),
+	 F(0.9238795325), -F(0.8314696123),
+	-F(0.9238795325),  F(0.5555702330),
+	 F(0.3826834324), -F(0.1950903220),
+#undef F
+};
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081215231443</emailId><senderName>event</senderName><senderEmail>event.riga@gmail.com</senderEmail><timestampReceived>2008-12-15 23:14:43-0400</timestampReceived><subject>[PATCH] Gateway profile</subject><body>

Hi all,

I've implemented gateway profile. I've tested basic things, like
place/cancel/answer call. Others are in development. Some could not be
tested as my carrier doesn't provide corresponding services (like
3-way call, etc.) so any help welcome.

Vale,
Leonid Movshovich

["gateway.patch" (application/octet-stream)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081217024853</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-17 02:48:53-0400</timestampReceived><subject>Re: [PATCH] Gateway profile</subject><body>

Hi Leonid,

&gt; I've implemented gateway profile. I've tested basic things, like
&gt; place/cancel/answer call. Others are in development. Some could not be
&gt; tested as my carrier doesn't provide corresponding services (like
&gt; 3-way call, etc.) so any help welcome.

thanks for the works, but can you please base the patch against the
latest GIT tree. It is kinda hard to review things that might already
have been implemented like sco_listen.

 audio/audio-api.txt  |   94 +++++
 audio/device.h       |    7 
 audio/gateway.c      |  938 +++++++++++++++++++++++++++++++++++++++++++++++++++
 audio/gateway.h      |   11 
 audio/manager.c      |  124 ++++--
 common/glib-helper.c |   85 +++-
 common/glib-helper.h |    1 
 7 files changed, 1205 insertions(+), 55 deletions(-)

So any changes to glib-helper.[ch] have to be in a separate patch and
need to be discussed independent from the gateway implementation.

Any audio-api.txt stuff should also go separately since that has to be
discussed. Also we can't send PCM data over D-Bus. It just doesn't work
like that. We do have the internal IPC for that and plugins for ALSA,
GStreamer and PulseAudio that should be used.

However the most important part is that you follow the coding style and
that is the kernel coding style. You make it really hard for us to
review the code like this and it can't be applied. I really want you to
add support for the gateway role to BlueZ, but the overall code in the
project needs to follow the same rules.

So please fix these issues first and then we do a deep review of it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219175224</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 17:52:24-0400</timestampReceived><subject>Re: How can I know BlueZ A2DP, AVRCP profile version.?</subject><body>

Hi Chan-Yeol,

&gt; How can I know BlueZ A2DP, AVRCP profile version.?
&gt; 
&gt; As far as I search on the web site, A2DP,AVRCP version is 1.0 respectively
&gt; 
&gt; But I expect BlueZ version is higher than we search.

I think that Johan and Luiz can give you more detailed answers here.
However normally BlueZ follows the latest specs., but in the case of
AVRCP I am sure we only implement some of the optional features.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201212248</emailId><senderName>Dmitry</senderName><senderEmail>dmitry.jurasov@gmail.com</senderEmail><timestampReceived>2008-12-01 21:22:48-0400</timestampReceived><subject>Intrested student</subject><body>

Hello linux-bluetooth,

My name is Dmitry, I'm a student from Russia. I'm interested in
developing your project and participating in next Summer of Code (2009).
I want to know about ideas, which I can take part in. And I'm going to
make this work to be my master thesis at University.  

-- 
Best regards,
 Dmitry                          mailto:Dmitry.Jurasov@gmail.com

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201220105</emailId><senderName></senderName><senderEmail>akpm</senderEmail><timestampReceived>2008-12-01 22:01:05-0400</timestampReceived><subject>[patch for 2.6.28? 1/1] bluetooth: Dell Wireless 365 requires reset quirk</subject><body>

From: Mario Limonciello &lt;mario_limonciello@dell.com&gt;

This patch causes the BT365 to be reset when the driver is loaded. 
Without it, the machine is unable to connect to other devices or to scan
for devices.

Signed-off-by: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Cc: &lt;stable@kernel.org&gt;
Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
---

 drivers/bluetooth/btusb.c |    3 +++
 1 file changed, 3 insertions(+)

diff -puN drivers/bluetooth/btusb.c~bluetooth-dell-wireless-365-requires-reset-quirk \
                drivers/bluetooth/btusb.c
--- a/drivers/bluetooth/btusb.c~bluetooth-dell-wireless-365-requires-reset-quirk
+++ a/drivers/bluetooth/btusb.c
@@ -125,6 +125,9 @@ static struct usb_device_id blacklist_ta
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
+	/* Dell Wireless 365 */
+	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
+
 	/* Dell Wireless 370 */
 	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
_
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081208015213</emailId><senderName>"J.R. Mauro"</senderName><senderEmail>jrm8005@gmail.com</senderEmail><timestampReceived>2008-12-08 01:52:13-0400</timestampReceived><subject>Apple Mighty Mouse and aluminum keyboard woes</subject><body>

Hello,

I recently purchased an Apple Bluetooth Mighty Mouse and it's been giving me
some grief. Both the mouse and the aluminum bluetooth keyboard I own fail to
show up with hcitool or hidd, but both of them seem to be registering with the
input subsystem as they both work. I can only imagine this is because I paired
them with OS X (since I couldn't pair them with Linux). Despite those hiccups,
both of the devices *work* but the mouse is not sending scroll or squeeze
events. I don't really care about the squeeze events, but the lack of scrolling
is quite aggravating.

I've run evtest and it shows that my mouse has: vendor 0x5ac product 0x820b
version 0x111 for ID numbers. The keyboard has the following: vendor 0x5ac
product 0x820a version 0x111

So obviously they're Apple, and possibly they are new devices and no one has
seen their minor IDs yet, as Apple comes up with slightly-different "new"
devices every few months to give everyone a headache. I know I've seen patches
floating around about the keyboard, but I can't apply them to my kernel. I'm
content to wait for 2.6.28 to come out if issues are fixed there, but I'm
willing to be a guinea pig for anything that will apply to 2.6.27.

In support of my claim, the mouse lists the following events:

Supported events:
Event type 0 (Sync)
Event type 1 (Key)
	Event code 272 (LeftBtn)
	Event code 273 (RightBtn)
	Event code 274 (MiddleBtn)
Event type 2 (Relative)
	Event code 0 (X)
	Event code 1 (Y)
Event type 4 (Misc)
	Event code 4 (ScanCode)

As you can see, there's no scroll, and there should be both vertical and
horizontal scrolling. So we have a couple of mysteries, namely, why the
bluetooth tools can't actually communicate with the devices (although,
sometimes, if there's a full moon or something, I can actually do things like
"hcitool info &lt;BDADDR&gt;" and get real info) and the whole missing-event problem.

As I hinted, I'm using kernel 2.6.27 (though I have a couple of patches applied
for applesmc, I don't think they have any bearing on this problem). I'm not
subscribed to this particular mailing list, so I've added myself to the CC list.

Thanks,
~J.R.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208185751</emailId><senderName>Alban Browaeys</senderName><senderEmail>prahal@yahoo.com</senderEmail><timestampReceived>2008-12-08 18:57:51-0400</timestampReceived><subject>[PATCH] Add parent dev in rfcomm tty sysfs registration</subject><body>

This is an attempt at getting the parent device to be bound to the sysfs 
entry of rfcomm tty.
This let hal detect it properly when connecting. No more.

Thus one have to :
$ rfcomm connect 0
after adding his configuration for the device to connect to in 
/etc/bluetooth/rfcomm.conf
One need a patch to hal (for to add the address and channel data to the 
hald/linux/device.c serial handler) and an fdi for  to add the  
capabilities  to get  the serial line to be recognized as a modem by 
NetworkManager.

Maybe it could be achieved at bind. Though this would either requires a 
change to rfcomm to get the sysfs data available at bind and not connect 
or to have hal poll bluez (I don't know yet if udev send event at rfcomm 
bind /dev/rfcommX creation so if polling could be avoided).


Also this does not address the lack of presence of rfcomm tty in 
/sys/devices. This I am too lost in the different device_move to know if 
it is registered in /sys/devices then moved to /sys/class/bluetooth or 
if something is missing for to get the entries in /sys/devices . Tty 
available documentation implying it should be automatic lead me to think 
device_move is the key of this issue.

So it is not a panacea but with this at least it becomes "possible" to 
get something out of hal and with a single script that rfcomm connect to 
get the bluetooth serial device in NetworkManager.

Greetings
Alban

["rfcomm_addparentdev_insysfs_registration.diff" (text/x-patch)]

diff --git a/net/bluetooth/rfcomm/tty.c b/net/bluetooth/rfcomm/tty.c
index d3340dd..c553acf 100644
--- a/net/bluetooth/rfcomm/tty.c
+++ b/net/bluetooth/rfcomm/tty.c
@@ -205,6 +205,7 @@ static DEVICE_ATTR(channel, S_IRUGO, show_channel, NULL);
 static int rfcomm_dev_add(struct rfcomm_dev_req *req, struct rfcomm_dlc *dlc)
 {
 	struct rfcomm_dev *dev;
+	struct device * hdev;
 	struct list_head *head = &amp;rfcomm_dev_list, *p;
 	int err = 0;
 
@@ -306,7 +307,12 @@ out:
 		return err;
 	}
 
-	dev-&gt;tty_dev = tty_register_device(rfcomm_tty_driver, dev-&gt;id, NULL);
+	hdev = rfcomm_get_device(dev);
+
+	printk("HDEV : %p", hdev);
+
+	dev-&gt;tty_dev = tty_register_device(rfcomm_tty_driver, dev-&gt;id, hdev);
+	//dev-&gt;tty_dev = tty_register_device(rfcomm_tty_driver, dev-&gt;id, NULL);
 
 	if (IS_ERR(dev-&gt;tty_dev)) {
 		err = PTR_ERR(dev-&gt;tty_dev);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081209075511</emailId><senderName>Nigel Cunningham</senderName><senderEmail>ncunningham@crca.org.au</senderEmail><timestampReceived>2008-12-09 07:55:11-0400</timestampReceived><subject>[PATCH] Bluetooth node manager causes up to ~3.25s delay in</subject><body>

Hi all.

The bluetooth nodemanager function "nodemgr_host_thread" contains a loop
that calls try_to_freeze near the top of the loop, but then delays for
up to 3.25 seconds (plus time to do work) before getting back to the top
of the loop. When starting a cycle post-boot, this doesn't seem to bite,
but it is causing a noticeable delay at boot time, when freezing
processes prior to starting to read the image.

The following patch adds invocation of try_to_freeze to the subloops
that are used in the body of this function. With these additions, the
time to freeze when starting to resume at boot time is virtually zero.
I'm no expert on bluetooth, and so don't know that we shouldn't check
the return value and jump back to the top of the loop or such like after
being frozen, but I submit it for your consideration.

Signed-off-by: Nigel Cunningham &lt;nigel@tuxonice.net&gt;

 nodemgr.c |    2 ++
 1 file changed, 2 insertions(+)
diff -ruNp 710-nodemanager-freezing.patch-old/drivers/ieee1394/nodemgr.c \
                710-nodemanager-freezing.patch-new/drivers/ieee1394/nodemgr.c
--- 710-nodemanager-freezing.patch-old/drivers/ieee1394/nodemgr.c	2008-12-06 \
                08:42:08.000000000 +1100
+++ 710-nodemanager-freezing.patch-new/drivers/ieee1394/nodemgr.c	2008-12-09 \
18:49:26.000000000 +1100 @@ -1685,6 +1685,7 @@ static int nodemgr_host_thread(void \
*dat  g = get_hpsb_generation(host);
 		for (i = 0; i &lt; 4 ; i++) {
 			msleep_interruptible(63);
+			try_to_freeze();
 			if (kthread_should_stop())
 				goto exit;
 
@@ -1725,6 +1726,7 @@ static int nodemgr_host_thread(void *dat
 		/* Sleep 3 seconds */
 		for (i = 3000/200; i; i--) {
 			msleep_interruptible(200);
+			try_to_freeze();
 			if (kthread_should_stop())
 				goto exit;
 


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081206121502</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-12-06 12:15:02-0400</timestampReceived><subject>bluez-4.22 + twinkle -&gt; Unable to lock headset</subject><body>

Hi all

I have been getting the dreaded "Unable to lock headset" message with bluez-4.18 so I \
decided to upgrade to bluez-4.22. Now I get the message even more often, in fact I \
can no longer telephone at all using twinkle (1.3.2).

I use bluetooth to make VoIP calls with my Jabra JX10 headset and to connect to my \
Nokia E65 mobile phone to backup it up. The connection to my phone still works. I can \
play music using "aplay -D JX10" and do echo tests using "arecord -D JX10 -f \
S16_LE|aplay -D JX10 -f S16_LE". However using twinkle always fails with the messages \
"Cannot access the speaker (ALSA: JX10)" and "Cannot access the microphone (ALSA: \
JX10)". The log window contains "Critical: Opening ALSA driver failed: \
snd_pcm_prepare failed: Input/output error".

What does "Unable to lock headset" mean?

I have just downgraded to bluez-4.18 and can now make a few calls before I get \
"Unable to lock headset" &amp; "config failed". When I do get this message I have to \
restart bluetoothd.

I have a Belkin F8T017 USB adapter and am running linux 2.6.28-rc6.

My /etc/bluetooth/main.conf contains

[General]
DisablePlugins = network,input,serial
Name = %h-%d
Class = 0x000100
DiscoverableTimeout = 0
PageTimeout = 8192
OffMode = NoScan
DiscoverSchedulerInterval = 0

Should I remove anything or add something (to prohibit incoming connections for \
example)?

thanks!
Stuart

&gt; root@kooka; /usr/local/stow/bluez-4.22/sbin/bluetoothd -dn
bluetoothd[13986]: Bluetooth daemon
bluetoothd[13986]: Enabling debug information
bluetoothd[13986]: parsing main.conf
bluetoothd[13986]: discovto=0
bluetoothd[13986]: Key file does not have key 'PairableTimeout'
bluetoothd[13986]: pageto�92
bluetoothd[13986]: name=%h-%d
bluetoothd[13986]: class=0x000100
bluetoothd[13986]: inqmode=0
bluetoothd[13986]: Starting SDP server
bluetoothd[13986]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[13986]: register_interface: path /org/bluez/13986/any
bluetoothd[13986]: Registered interface org.bluez.Service on path \
/org/bluez/13986/any bluetoothd[13986]: Parsing /etc/bluetooth/audio.conf failed: No \
such file or directory bluetoothd[13986]: Unix socket created: 11
bluetoothd[13986]: Telephony plugin initialized
bluetoothd[13986]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[13986]: HCI dev 0 registered
bluetoothd[13986]: child 13987 forked
bluetoothd[13986]: HCI dev 0 already up
bluetoothd[13986]: Starting security manager 0
bluetoothd[13986]: register_interface: path /org/bluez/13986/hci0
bluetoothd[13986]: Registered interface org.bluez.Service on path \
/org/bluez/13986/hci0 bluetoothd[13986]: headset_server_probe: path \
/org/bluez/13986/hci0 bluetoothd[13986]: Adding record with handle 0x10000
bluetoothd[13986]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[13986]: Adding record with handle 0x10001
bluetoothd[13986]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[13986]: a2dp_server_probe: path /org/bluez/13986/hci0
bluetoothd[13986]: SEP 0xb9e0fb08 registered: type:0 codec:0 seid:1
bluetoothd[13986]: Adding record with handle 0x10002
bluetoothd[13986]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[13986]: avrcp_server_probe: path /org/bluez/13986/hci0
bluetoothd[13986]: Adding record with handle 0x10003
bluetoothd[13986]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[13986]: Adding record with handle 0x10004
bluetoothd[13986]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[13986]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[13986]: Creating device /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98
bluetoothd[13986]: Probe drivers for /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98
bluetoothd[13986]: adapter_get_device(00:1A:45:2F:49:98)
bluetoothd[13986]: Found Headset record
bluetoothd[13986]: Discovered Headset service on RFCOMM channel 2
bluetoothd[13986]: Registered interface org.bluez.Headset on path \
/org/bluez/13986/hci0/dev_00_1A_45_2F_49_98 bluetoothd[13986]: Found Handsfree record
bluetoothd[13986]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[13986]: Creating device /org/bluez/13986/hci0/dev_00_17_E5_0C_EA_70
bluetoothd[13986]: Probe drivers for /org/bluez/13986/hci0/dev_00_17_E5_0C_EA_70
bluetoothd[13986]: adapter_get_device(00:17:E5:0C:EA:70)
bluetoothd[13986]: audio handle_uuid: server not enabled for \
00001112-0000-1000-8000-00805f9b34fb (0x1112) bluetoothd[13986]: audio handle_uuid: \
server not enabled for 0000111f-0000-1000-8000-00805f9b34fb (0x111f) \
bluetoothd[13986]: Found AV Target bluetoothd[13986]: Registered interface \
org.bluez.Control on path /org/bluez/13986/hci0/dev_00_17_E5_0C_EA_70 \
bluetoothd[13986]: Found AV Target bluetoothd[13986]: Adapter /org/bluez/13986/hci0 \
has been enabled bluetoothd[13986]: child 13987 exited
bluetoothd[13986]: Computer is classified as desktop
bluetoothd[13986]: Current device class is 0x480104
bluetoothd[13986]: Setting 0x000104 for major/minor device class
bluetoothd[13986]: Agent registered for hci0 at :1.232:/org/bluez/agent/hci0

# here I try to telephone using twinkle

bluetoothd[13986]: Accepted new client connection on unix socket (fd)
bluetoothd[13986]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[13986]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[13986]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[13986]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[13986]: /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[13986]: State changed \
/org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[13986]: \
/org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98 \
bluetoothd[13986]: Received AT+BRSF' bluetoothd[13986]: HFP HF features: "EC and/or \
NR function" "Call waiting and 3-way calling" "Voice recognition activation" "Remote \
volume control" bluetoothd[13986]: Received AT+CIND=?
bluetoothd[13986]: Received AT+CIND?
bluetoothd[13986]: Received AT+CMER=3, 0, 0, 1
bluetoothd[13986]: Event reporting (CMER): mode=3, ind=1
bluetoothd[13986]: HFP Service Level Connection established
bluetoothd[13986]: telephony-dummy: device 0xb9e11300 connected
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[13986]: Audio \
API: sending BT_SETCONFIGURATION_RSP bluetoothd[13986]: Audio API: received \
BT_STREAMSTART_REQ bluetoothd[13986]: State changed \
/org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[13986]: SCO socket opened for headset \
/org/bluez/13986/hci0/dev_00_1A_45_2F_49_98 bluetoothd[13986]: SCO fd 
bluetoothd[13986]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[13986]: Audio API: sending BT_STREAMFD_IND
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_PLAYING bluetoothd[13986]: Audio API: \
received BT_STREAMSTART_REQ bluetoothd[13986]: Unable to lock headset
bluetoothd[13986]: headset_resume_complete: resume failed
bluetoothd[13986]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[13986]: Unix client disconnected (fd)
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAYING -&gt; HEADSET_STATE_CONNECTED bluetoothd[13986]: Accepted new \
client connection on unix socket (fd) bluetoothd[13986]: Audio API: received \
BT_GETCAPABILITIES_REQ bluetoothd[13986]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[13986]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[13986]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[13986]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[13986]: Audio API: received BT_STREAMSTART_REQ
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[13986]: SCO \
socket opened for headset /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98 \
bluetoothd[13986]: SCO fd  bluetoothd[13986]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[13986]: Audio API: sending BT_STREAMFD_IND
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_PLAYING bluetoothd[13986]: Audio API: \
received BT_STREAMSTART_REQ bluetoothd[13986]: Unable to lock headset
bluetoothd[13986]: headset_resume_complete: resume failed
bluetoothd[13986]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[13986]: Unix client disconnected (fd)
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_PLAYING -&gt; HEADSET_STATE_CONNECTED bluetoothd[13986]: No matching \
connection for handle 6 bluetoothd[13986]: Received AT+VGS
bluetoothd[13986]: telephony-dummy: device 0xb9e11300 disconnected
bluetoothd[13986]: State changed /org/bluez/13986/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_DISCONNECTED

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081209123950</emailId><senderName>Alexander Beregalov</senderName><senderEmail>a.beregalov@gmail.com</senderEmail><timestampReceived>2008-12-09 12:39:50-0400</timestampReceived><subject>[PATCH] rfcomm/sock: fix build problem</subject><body>

net/bluetooth/rfcomm/sock.c: In function 'rfcomm_sock_ioctl':
net/bluetooth/rfcomm/sock.c:795: error: 'sk' undeclared (first use in this function)
net/bluetooth/rfcomm/sock.c:795: error: (Each undeclared identifier is reported only once
net/bluetooth/rfcomm/sock.c:795: error: for each function it appears in.)

It is a conflict between a418b893
(Bluetooth: Enable per-module dynamic debug messages)
and 45555c0e
(bluetooth: fix warning in net/bluetooth/rfcomm/sock.c)

Signed-off-by: Alexander Beregalov &lt;a.beregalov@gmail.com&gt;
---

 net/bluetooth/rfcomm/sock.c |    2 --
 1 files changed, 0 insertions(+), 2 deletions(-)

diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index ad00cbf..d63040f 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -787,9 +787,7 @@ static int rfcomm_sock_getsockopt(struct socket *sock, int level, int optname, c
 
 static int rfcomm_sock_ioctl(struct socket *sock, unsigned int cmd, unsigned long arg)
 {
-#if defined(CONFIG_BT_RFCOMM_TTY) || defined(CONFIG_BT_RFCOMM_DEBUG)
 	struct sock *sk = sock-&gt;sk;
-#endif
 	int err;
 
 	BT_DBG("sk %p cmd %x arg %lx", sk, cmd, arg);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081204230213</emailId><senderName>Luca Santarelli</senderName><senderEmail>hrk@users.sourceforge.net</senderEmail><timestampReceived>2008-12-04 23:02:13-0400</timestampReceived><subject>[PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO support</subject><body>

From: Luca Santarelli &lt;hrk &lt;t&gt; users.sourceforge.net&gt;

As reported at:
http://bugs.gentoo.org/show_bug.cgi?id=249523
and in reference of similar patches such as:
http://thread.gmane.org/gmane.linux.bluez.devel/15067

This patch changes the blacklist entry for the ISSC bluetooth USB
dongle fixing the issue of the repeatedly appearing message

  hci_scodata_packet: hci0 SCO packet for unknown connection handle 92

in the kernel logs.

Sighed-off-by: Luca Santarelli &lt;hrk &lt;at&gt; users.sourceforge.net&gt;
---
This is my first kernel patch ever, I read the docs, but please notify
me if I made any mistake. Thank you all for your work, I'm happy to have
been able to contribute to this!

The patch has been run against 2.6.27.7 and has been tested on three x86
machines, showing no issues. In my own tests, the dongle has been then
used to connect to devices and everything worked fine.

--- linux-2.6.27.7/drivers/bluetooth/hci_usb.c.orig	2008-12-04 20:18:38.000000000 +0100
+++ linux-2.6.27.7/drivers/bluetooth/hci_usb.c	2008-12-04 20:19:37.000000000 +0100
@@ -148,8 +148,8 @@ static struct usb_device_id blacklist_id
 	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
 	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
 
-	/* ISSC Bluetooth Adapter v3.1 */
-	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
+	/* ISSC Bluetooth Adapter v3.1 with buggy SCO support */
+	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET | HCI_BROKEN_ISOC },
 
 	/* RTX Telecom based adapters with buggy SCO support */
 	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081211203428</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-12-11 20:34:28-0400</timestampReceived><subject>Clock control of a Bluetooth UART via hci_ll.c</subject><body>

Hi all,

(expecting to have to post this to LKML, but trying linux-bluetooth first)

On embedded architectures we need to perform clk_enable() and
clk_disable() on the bluetooth uart when the bluetooth chip enters and
exists low power mode. This needs to be independent of tradtional
linux cpu suspend/resume modes that correspond to the linux CPU power
state, because many Bluetooth chips (eg TI BRF6300) have low power
modes that are independent of the linux cpu..

hci_ll.c knows when the bt chip has entered low power mode, as it
contains the HCILL state machine. But the clk_enable() and
clk_disable() should be done from the uart driver since that driver
owns the uart clock.

The question is - what interface should hci_ll.c use to tell the uart
driver when to enter and exit low power modes?

Right now we call new functions in our uart driver directly from
hci_ll.c. We know this not going to get accepted upstream, because we
have bypassed the tty and serial_core layers. We are looking for a
better designed solution, which I expect would have to pass through
these layers and use an existing uart_ops (serial_core.h).

A requirements for this interface are that it cannot sleep (hci_ll.c
needs to make these clock requests while holding a spinlock). This
eliminates many uart_ops including .ioctl (uart_ioctl() grabs a
mutex).

.pm is no good because it gets called during suspend() and resume().

From our investigation, the only really promising option amongst the
existing set of uart_ops seems to be to use .set_termios with a baud
rate of zero. It seems API compliant for the uart driver to then
clk_disable().

clk_enable() could be triggered by hci_ll.c by restoring the old baud
rate. Unfortunately this means hci_ll would need to track the old baud
rate. Also, wakeup can occur via RX traffic on the bluetooth chip in
which case the uart driver needs to trigger the clk_enable(). It would
have to restore the baud rate itself, which may not be API friendly.
It also leaves the question of what happens if userspace changes the
baud rate while the uart is clocked off.

So this approach has its issues, but is the only workable solution we
have right now that uses an existing uart operation.

Any thoughts on this approach? Any other ideas?

Thanks,
Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081211081414</emailId><senderName></senderName><senderEmail>chanyeol.park@samsung.com</senderEmail><timestampReceived>2008-12-11 08:14:14-0400</timestampReceived><subject>Does anyone help me to setup PAN connection?</subject><body>



 Dear All.

Does anyone help me to setup PAN connection?

Environment
NAP Role : Note PC . Windows XP, JABRA a320s stack (BT address 00:16:38:BF:12:C4)
PAN Role : Desktop Linux 2.6.24-22-generic BlueZ 4.22 


I use dbus-send connect command like this.
#&gt;dbus-send --system --type=method_call --print-reply --dest="org.bluez" \
/org/bluez/10043/hci0/dev_00_16_38_BF_12_C4 org.bluez.Network.Connect \
string:"00001116-0000-1000-8000-00805f9b34fb"

But anything would not happen ��.( I expect BNEP connection.. )
***Network Interface is correctly installed on bluez.
#&gt;dbus-send --system --type=method_call --print-reply --dest="org.bluez" \
/org/bluez/10043/hci0/dev_00_16_38_BF_12_C4 org.bluez.Network.GetProperties

However, if Windows initiates the PAN connection, it works well. 

Thanks!
����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081210160730</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-12-10 16:07:30-0400</timestampReceived><subject>Release Note for BlueZ versions</subject><body>

Hi,

How do I know what BlueZ versions refer to what Bluetooth specification &amp; confrom to which version ?
I am particularly interested about BlueZ 3.36.

It shows me a error "Can't read simple pairing mode" on a v2.1 hardware.

regards,
Pavan


--

"KLUB MJ Hunt, Search for India's First Movie Jockey"
For more details log on to http://www.zeecinema.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201214334</emailId><senderName>Erik Stackenland</senderName><senderEmail>erik@mobileinteraction.com</senderEmail><timestampReceived>2008-12-01 21:43:34-0400</timestampReceived><subject>bug in hci_read_remote_name?</subject><body>

I'm new to bluetooth and BlueZ, so it might be that I just don't know what I'm
talking about but this does not seem right.

The problem is in hci_read_remote_name

&lt;code&gt;
...
char bt[20];
ba2str(&amp;bdaddr, bt);
printf("get name: %s\n", bt);

/* Get the name */
if (hci_read_remote_name(dd, &amp;bdaddr, sizeof(name_str), name_str, timeOut) &lt; 0)
{
  return -1;
}

printf("found name: %s\n",name_str);
...
&lt;/code&gt;

&lt;printout&gt;
...
get name: 00:17:D5:5A:86:85
get name: 00:1E:45:08:36:28
found name: SGH-X820
...
&lt;/printout&gt;

The problem here is that I know for a fact that 00:1E:45:08:36:28 is not
SGH-X820, but should be named W910i, and that 00:17:D5:5A:86:85 is SGH-X820.

I'm using 1000 millis timeout for hci_read_remote_name, so my assumption is that
the time runs out before the response is received and when I ask with an other
bt address a few millis later I get the response for the earlier request.

So is it possible that this is a bug?

System is debian-40r5 standard installation installed today. Dont know how to
check BlueZ version.

Thanks!


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209063846</emailId><senderName>"Shi Buyun-FVBP83"</senderName><senderEmail>fvbp83@motorola.com</senderEmail><timestampReceived>2008-12-09 06:38:46-0400</timestampReceived><subject>how bluez supports ESCO link?</subject><body>

hi, all
In the current linux 2.6.25 kernel code, can Bluez setup ESCO link?
I found in net/bluetooth/sco.c, sco_connect defined as:

static int sco_connect(struct sock *sk)
{
 if (lmp_esco_capable(hdev) &amp;&amp; !disable_esco)
  type = ESCO_LINK;
 else
  type = SCO_LINK;
 
 hcon = hci_connect(hdev, type, dst, HCI_AT_NO_BONDING);
 }
this code shows bluez supports ESCO link.
 
But in function struct hci_conn * hci_connect(struct hci_dev *hdev, int
type, bdaddr_t *dst)
{
 if (type == SCO_LINK) {
  struct hci_conn *sco;
 
  if (!(sco = hci_conn_hash_lookup_ba(hdev, SCO_LINK, dst))) {
   if (!(sco = hci_conn_add(hdev, SCO_LINK, dst))) {
    hci_conn_put(acl);
    return NULL;
   }
  }
  acl-&gt;link = sco;
  sco-&gt;link = acl;
 
  hci_conn_hold(sco);
 
  if (acl-&gt;state == BT_CONNECTED &amp;&amp; 
    (sco-&gt;state == BT_OPEN || sco-&gt;state == BT_CLOSED))
   hci_add_sco(sco, acl-&gt;handle);
 
  return sco;
 } else {
  return acl;
 }
} 
the else switch shows it does nothing when type NOT equal to SCO_LINK.
Should this code need to modify or this is intended to designed?
 
Brs
Shi Buyun
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208225937</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-12-08 22:59:37-0400</timestampReceived><subject>ObexFTP killing the Local SDP server</subject><body>

Hi,

I have a blueZ [version 3.35, wrongly claimed as 3.36] hcid daemon running on a \
machine, and I have put on it an ObexFTP daemon application [openobex + obexftp] \
which is statically linked with [bluez-libs-3.36].

The problem I face is, when I start obexftpd it says cannot register with SDP server,
register to SDP Server failed, and comes out &amp; then waits for a connecttion.

When I looked into it, it was failing in the function "sdp_connect_local" in \
bluez-libs/src/sdp.c &amp; it also caused the SDP server to kill, So I cannot even do an \
sdptool browse local after this. [I checked sdptool browse local before running \
obexftpd &amp; it is fine...]

Is it a problem with permissions given to unix domain sockets on platform ? Or \
something to do with the version mis-match ? Or something totally different ?


regards,
Pavan


--

"KLUB MJ Hunt, Search for India's First Movie Jockey"
For more details log on to http://www.zeecinema.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081211035758</emailId><senderName>Bea Lam</senderName><senderEmail>blam@trolltech.com</senderEmail><timestampReceived>2008-12-11 03:57:58-0400</timestampReceived><subject>Adapter API - Devices property not updated if connection initiated by remote device</subject><body>

When using the org.bluez.Adapter interface, if I initiate a connection to a 
remote device, then the adapter's Devices property is updated to include the 
remote device, as expected. However, if the remote device initiates the 
connection to my device instead, it isn't added to the Devices list. This 
would appear to be a bug.

This can be problematic if I am trying to identify whether any remote devices 
are currently connected to the local adapter; it is not possible to identify 
the connected devices if they have initiated the connection.

It would be much appreciated if someone could look into this. Perhaps the 
adapter-&gt;devices list could be updated when adapter_add_active_conn() is 
called, but I'm not sure if this is correct.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208191008</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-08 19:10:08-0400</timestampReceived><subject>How to set link policy with Logitech diNovo dongle</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi everyone,

I recently got a used Logitech diNovo Media Desktop. It has a bluetooth
hub and the Logitech MX900 bluetooth mouse. I first connected everything
to my laptop with integrated Cambridge Silicon Bluetooth and everything
worked fine. Then I plugged the Logitech hub to my desktop PC and used
hid2hci to switch it over to HCI mode. I configured bluetooth for my
system and connected to all the devices. Keyboard and Media Pad work
fine, but the mouse is jumpy, as if some packets get buffered for some
milliseconds before being send.
I googled around and found a message from 2004 [1] stating that the
link policy has to be set correctly. As you can see from my output of
hciconfig -a (see below), it is not. I have a correct lp line in my
/etc/bluetooth/hcid.conf (see below) and the exact same configuration
enables all lp flags on my laptop's internal bluetooth (plugging in the
Logitech hub to my laptop doesn't set the hub to proper lp either, but
the internal bluetooth works!).
Is there a way I can manually set the link policy? I understand that I
can't use much of the tips from the thread refered to in [1], as the
tools used there are outdated (I don't even have a hcid on my Ubuntu
Intrepid Ibex 8.10 with bluez-utils 4.12 and kernel 2.6.27).
Using another bluetooth mouse (Logitech Travel Mouse) on the Logitech
hub connected to my PC works fine, the problem only occurs with the MX900.

Thanks in advance for any help.

Regards,
Thomas

[1] http://osdir.com/ml/linux.bluez.user/2004-03/msg00147.html

Output of hciconfig -a:
hci0:   Type: USB
        BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN
        RX bytes:688561 acl:44090 sco:0 events:194 errors:0
        TX bytes:3136 acl:107 sco:0 commands:60 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy:
        Link mode: SLAVE ACCEPT
        Name: 'Majestix'
        Class: 0x0a0104
        Service Classes: Networking, Capturing
        Device Class: Computer, Desktop workstation
        HCI Ver: 1.1 (0x1) HCI Rev: 0x34e LMP Ver: 1.1 (0x1) LMP Subver:
0x34e
        Manufacturer: Cambridge Silicon Radio (10)


/etc/bluetooth/hcid.conf
#
# HCI daemon configuration file.
#

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security user;

        # Pairing mode
        #   none  - Pairing disabled
        #   multi - Allow pairing with already paired devices
        #   once  - Pair once and deny successive attempts
        pairing multi;

        # Default PIN code for incoming connections
        passkey "1234";
}

# Default settings for HCI devices
device {
        # Local device name
        #   %d - device id
        #   %h - host name
        name "%h-%d";

        # Local device class
        class 0x000100;

        # Default packet type
        #pkt_type DH1,DM1,HV1;

        # Inquiry and Page scan
        iscan enable; pscan enable;
        discovto 0;

        # Default link mode
        #   none   - no specific policy
        #   accept - always accept incoming connections
        #   master - become master on incoming connections,
        #            deny role switch on outgoing connections
        lm accept;

        # Default link policy
        #   none    - no specific policy
        #   rswitch - allow role switch
        #   hold    - allow hold mode
        #   sniff   - allow sniff mode
        #   park    - allow park mode
        lp rswitch,hold,sniff,park;
}


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkk9cRAACgkQxVmZpTAq4IiPVQCfX92BhmnXfIDmQa2IYF3TA7YE
fQMAn0I6DuSTcikL6UYgmfdyxkPbS7RQ
=0OVJ
-----END PGP SIGNATURE-----
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208195147</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-08 19:51:47-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Thomas,

&gt; I recently got a used Logitech diNovo Media Desktop. It has a bluetooth
&gt; hub and the Logitech MX900 bluetooth mouse. I first connected everything
&gt; to my laptop with integrated Cambridge Silicon Bluetooth and everything
&gt; worked fine. Then I plugged the Logitech hub to my desktop PC and used
&gt; hid2hci to switch it over to HCI mode. I configured bluetooth for my
&gt; system and connected to all the devices. Keyboard and Media Pad work
&gt; fine, but the mouse is jumpy, as if some packets get buffered for some
&gt; milliseconds before being send.
&gt; I googled around and found a message from 2004 [1] stating that the
&gt; link policy has to be set correctly. As you can see from my output of
&gt; hciconfig -a (see below), it is not. I have a correct lp line in my
&gt; /etc/bluetooth/hcid.conf (see below) and the exact same configuration
&gt; enables all lp flags on my laptop's internal bluetooth (plugging in the
&gt; Logitech hub to my laptop doesn't set the hub to proper lp either, but
&gt; the internal bluetooth works!).
&gt; Is there a way I can manually set the link policy? I understand that I
&gt; can't use much of the tips from the thread refered to in [1], as the
&gt; tools used there are outdated (I don't even have a hcid on my Ubuntu
&gt; Intrepid Ibex 8.10 with bluez-utils 4.12 and kernel 2.6.27).
&gt; Using another bluetooth mouse (Logitech Travel Mouse) on the Logitech
&gt; hub connected to my PC works fine, the problem only occurs with the MX900.

for the 4.x series we removed the link policy setting and defaulted to
everything enabled. That just makes sense. Also the 2.6.27 kernel uses
the default link policy of Bluetooth and doesn't bother setting it on
every connection attempt. Seems like there might be a bug in bluez-4.12,
but to be honest I don't even bother debugging it since I just released
bluez-4.22 and it works fine for me.

However to be sure what is going on you have to run "hcidump -X -V" and
you can set the link policy manually via "hciconfig hci0 lp".

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208222437</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-08 22:24:37-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Marcel,

Marcel Holtmann schrieb:
&gt; However to be sure what is going on you have to run "hcidump -X -V" and
&gt; you can set the link policy manually via "hciconfig hci0 lp".
Using "hciconfig hci0 lp RSWITCH,SNIFF" results in
| Can't set link policy on hci0: Connection timed out (110)
And I get this output from hcidump when issuing this command:
| HCI sniffer - Bluetooth packet analyzer ver 1.42
| device: hci0 snap_len: 1028 filter: 0xffffffff
| &lt; HCI Command: Write Default Link Policy Settings (0x02|0x000f) plen 2
|     policy 0x05
|     Link policy: RSWITCH SNIFF
| &gt; HCI Event: Command Status (0x0f) plen 4
|     Write Default Link Policy Settings (0x02|0x000f) status 0x01 ncmd 1
|     Error: Unknown HCI Command

I hope I find some time tomorrow to play around with other versions of
bluez-utils.


Regards,
Thomas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkk9nqQACgkQxVmZpTAq4Ij3xgCfZryUQ0LkvPvTiwcMdKEcSOdl
RSAAn38IZwNpeLCQ0mF+Rn5o+i+UPP2N
=zpxU
-----END PGP SIGNATURE-----
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209195228</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-09 19:52:28-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Thomas Liebetraut schrieb:
&gt; I hope I find some time tomorrow to play around with other versions of
&gt; bluez-utils.
I just tried bluez 4.21 as a Debian package and 4.22 compiled by myself
and neither worked. The problem is still the same, my MX900 is jumpy and
 trying to set the link policy with hciconfig results in a "Connection
timed out (110)" error.

Anything else I could try?

Regards,
Thomas



["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212014843</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:48:43-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Thomas,

&gt; &gt; However to be sure what is going on you have to run "hcidump -X -V" and
&gt; &gt; you can set the link policy manually via "hciconfig hci0 lp".
&gt; Using "hciconfig hci0 lp RSWITCH,SNIFF" results in
&gt; | Can't set link policy on hci0: Connection timed out (110)
&gt; And I get this output from hcidump when issuing this command:
&gt; | HCI sniffer - Bluetooth packet analyzer ver 1.42
&gt; | device: hci0 snap_len: 1028 filter: 0xffffffff
&gt; | &lt; HCI Command: Write Default Link Policy Settings (0x02|0x000f) plen 2
&gt; |     policy 0x05
&gt; |     Link policy: RSWITCH SNIFF
&gt; | &gt; HCI Event: Command Status (0x0f) plen 4
&gt; |     Write Default Link Policy Settings (0x02|0x000f) status 0x01 ncmd 1
&gt; |     Error: Unknown HCI Command
&gt; 
&gt; I hope I find some time tomorrow to play around with other versions of
&gt; bluez-utils.

this is a serious problem. Please show me hciconfig -a of your dongle. I
have never seen a dongle that doesn't support Default Link Policy.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212172655</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-12 17:26:55-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Marcel,

Marcel Holtmann schrieb:
&gt; this is a serious problem. Please show me hciconfig -a of your dongle. I
&gt; have never seen a dongle that doesn't support Default Link Policy.

Here is the output from hciconfig -a:
| thomas@Majestix:~/src/bluez-4.22$ hciconfig -a
| hci0:   Type: USB
|         BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
|         UP RUNNING PSCAN
|         RX bytes:27144 acl:1558 sco:0 events:162 errors:0
|         TX bytes:1935 acl:59 sco:0 commands:68 errors:0
|         Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
|         Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
|         Link policy:
|         Link mode: SLAVE ACCEPT
|         Name: 'Majestix-0'
|         Class: 0x0a0104
|         Service Classes: Networking, Capturing
|         Device Class: Computer, Desktop workstation
|         HCI Ver: 1.1 (0x1) HCI Rev: 0x34e LMP Ver: 1.1 (0x1) LMP
Subver: 0x34e
|         Manufacturer: Cambridge Silicon Radio (10)

And the output from lsusb to identify the dongle:
thomas@Majestix:~$ lsusb
Bus 004 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 002 Device 006: ID 046d:c707 Logitech, Inc. Bluetooth wireless hub
Bus 002 Device 005: ID 046d:c704 Logitech, Inc.
Bus 002 Device 004: ID 0451:2036 Texas Instruments, Inc. TUSB2036 Hub
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub

The second Logitech device seems to be the USB HID adapter from the
exact same dongle.


Regards,
Thomas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAklCnt8ACgkQxVmZpTAq4IglkwCfT9LYAKU8t79FYsp/iPzFb7J3
eQAAn1somnyLbLGDSd7kdCRBJf14PAOs
=GOg8
-----END PGP SIGNATURE-----
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212174858</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 17:48:58-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Thomas,

&gt; &gt; this is a serious problem. Please show me hciconfig -a of your dongle. I
&gt; &gt; have never seen a dongle that doesn't support Default Link Policy.
&gt; 
&gt; Here is the output from hciconfig -a:
&gt; | thomas@Majestix:~/src/bluez-4.22$ hciconfig -a
&gt; | hci0:   Type: USB
&gt; |         BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
&gt; |         UP RUNNING PSCAN
&gt; |         RX bytes:27144 acl:1558 sco:0 events:162 errors:0
&gt; |         TX bytes:1935 acl:59 sco:0 commands:68 errors:0
&gt; |         Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
&gt; |         Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
&gt; |         Link policy:
&gt; |         Link mode: SLAVE ACCEPT
&gt; |         Name: 'Majestix-0'
&gt; |         Class: 0x0a0104
&gt; |         Service Classes: Networking, Capturing
&gt; |         Device Class: Computer, Desktop workstation
&gt; |         HCI Ver: 1.1 (0x1) HCI Rev: 0x34e LMP Ver: 1.1 (0x1) LMP
&gt; Subver: 0x34e
&gt; |         Manufacturer: Cambridge Silicon Radio (10)

this is a really old dongle. Check hciconfig hci0 revision (as root) if
it is either a BlueCore01 or BlueCore02.

No idea why the Default Link Policy commands is not implemented here.
That is really strange.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212180254</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-12 18:02:54-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Marcel,

Marcel Holtmann schrieb:
&gt; this is a really old dongle.
Don't know exactly, about 4 years I guess. It's from the first DiNovo
Media Desktop (neither Laser nor 2.0).

&gt; Check hciconfig hci0 revision (as root) if
&gt; it is either a BlueCore01 or BlueCore02.
| thomas@Majestix:~$ sudo hciconfig hci0 revision
| hci0:   Type: USB
|         BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
|         Build 846
|         Chip version: BlueCore02-External
|         Max key size: 56 bit
|         SCO mapping:  HCI

&gt; No idea why the Default Link Policy commands is not implemented here.
&gt; That is really strange.
Isn't there some other way to get smooth communication with my MX900?
After all, the Bluetooth Travel Mouse works fine with the exact same
dongle after just reconnecting it.

Regards,
Thomas


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212180746</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 18:07:46-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Thomas,

&gt; &gt; this is a really old dongle.
&gt; Don't know exactly, about 4 years I guess. It's from the first DiNovo
&gt; Media Desktop (neither Laser nor 2.0).
&gt; 
&gt; &gt; Check hciconfig hci0 revision (as root) if
&gt; &gt; it is either a BlueCore01 or BlueCore02.
&gt; | thomas@Majestix:~$ sudo hciconfig hci0 revision
&gt; | hci0:   Type: USB
&gt; |         BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
&gt; |         Build 846
&gt; |         Chip version: BlueCore02-External
&gt; |         Max key size: 56 bit
&gt; |         SCO mapping:  HCI
&gt; 
&gt; &gt; No idea why the Default Link Policy commands is not implemented here.
&gt; &gt; That is really strange.
&gt; Isn't there some other way to get smooth communication with my MX900?
&gt; After all, the Bluetooth Travel Mouse works fine with the exact same
&gt; dongle after just reconnecting it.

not really. It is tricky and I am not willing to go back to the per
connection link policy setup, because that interferes with how with
setup Bluetooth 2.1 devices.

Problem is that this particular firmware is a custom build for Logitech
(or beta firmware) as it looks like. Also you have other problems with
not having AFH enabled when you have WiFi around.

I think that I do have the exact same mouse and keyboard at home
somewhere. But not supporting Default Link Policy is just pure stupid.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212183059</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-12-12 18:30:59-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Thomas Liebetraut wrote:
&gt; Hi Marcel,
&gt; 
&gt; Marcel Holtmann schrieb:
&gt;&gt; this is a serious problem. Please show me hciconfig -a of your dongle. I
&gt;&gt; have never seen a dongle that doesn't support Default Link Policy.
&gt; 
&gt; Here is the output from hciconfig -a:
&gt; | thomas@Majestix:~/src/bluez-4.22$ hciconfig -a
&gt; | hci0:   Type: USB
&gt; |         BD Address: 00:07:61:19:49:79 ACL MTU: 192:8 SCO MTU: 64:8
&gt; |         UP RUNNING PSCAN
&gt; |         RX bytes:27144 acl:1558 sco:0 events:162 errors:0
&gt; |         TX bytes:1935 acl:59 sco:0 commands:68 errors:0
&gt; |         Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
&gt; |         Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
&gt; |         Link policy:
&gt; |         Link mode: SLAVE ACCEPT
&gt; |         Name: 'Majestix-0'
&gt; |         Class: 0x0a0104
&gt; |         Service Classes: Networking, Capturing
&gt; |         Device Class: Computer, Desktop workstation
&gt; |         HCI Ver: 1.1 (0x1) HCI Rev: 0x34e LMP Ver: 1.1 (0x1) LMP
&gt; Subver: 0x34e
&gt; |         Manufacturer: Cambridge Silicon Radio (10)
&gt; 
&gt; And the output from lsusb to identify the dongle:
&gt; thomas@Majestix:~$ lsusb
&gt; Bus 004 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&gt; Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
&gt; Bus 002 Device 006: ID 046d:c707 Logitech, Inc. Bluetooth wireless hub
&gt; Bus 002 Device 005: ID 046d:c704 Logitech, Inc.
&gt; Bus 002 Device 004: ID 0451:2036 Texas Instruments, Inc. TUSB2036 Hub
&gt; Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
&gt; Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
&gt; 
&gt; The second Logitech device seems to be the USB HID adapter from the
&gt; exact same dongle.
&gt; 

Hi Thomas,

I got a few thoughts about this, I also have a few Logitech devices with
Logitech bluetooth adapters, but they where kind of special and contain
a button that must be used to connect the device I think its some kind
of auto pairing button. Do your dongles contains such buttons?

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212183956</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-12 18:39:56-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Marcel,

Marcel Holtmann schrieb:
&gt; Problem is that this particular firmware is a custom build for Logitech=

&gt; (or beta firmware) as it looks like. Also you have other problems with
&gt; not having AFH enabled when you have WiFi around.
&gt;
&gt; I think that I do have the exact same mouse and keyboard at home
&gt; somewhere. But not supporting Default Link Policy is just pure stupid.
So I better go any buy a new dongle? Or do you see any chance to make
this old one work?
Any recommendations for a new dongle? Are those small cheap noname
dongles for 8 Euros (10 USD) any good? Or does quality have its price?

Regards,
Thomas


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212184353</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 18:43:53-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Thomas,

&gt; &gt; Problem is that this particular firmware is a custom build for Logitech
&gt; &gt; (or beta firmware) as it looks like. Also you have other problems with
&gt; &gt; not having AFH enabled when you have WiFi around.
&gt; &gt;
&gt; &gt; I think that I do have the exact same mouse and keyboard at home
&gt; &gt; somewhere. But not supporting Default Link Policy is just pure stupid.
&gt; So I better go any buy a new dongle? Or do you see any chance to make
&gt; this old one work?
&gt; Any recommendations for a new dongle? Are those small cheap noname
&gt; dongles for 8 Euros (10 USD) any good? Or does quality have its price?

as long as you get one with a CSR or Broadcom chip and Bluetooth 2.1
your are in a good position. The new ones are really really tiny and
stick only out 1cm or so. Personally I prefer CSR based dongles.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212193448</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-12 19:34:48-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Hi Jelle,

&gt; I got a few thoughts about this, I also have a few Logitech devices wit=
h
&gt; Logitech bluetooth adapters, but they where kind of special and contain=

&gt; a button that must be used to connect the device I think its some kind
&gt; of auto pairing button. Do your dongles contains such buttons?
Yes it has, but it seems to have no effect when in HCI mode. In HID
mode, the button is used to connect to the mouse and keyboard, that's rig=
ht.

Regards,
Thomas


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212014317</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:43:17-0400</timestampReceived><subject>Re: Adapter API - Devices property not updated if connection</subject><body>

Hi Bea,

&gt; When using the org.bluez.Adapter interface, if I initiate a connection to a 
&gt; remote device, then the adapter's Devices property is updated to include the 
&gt; remote device, as expected. However, if the remote device initiates the 
&gt; connection to my device instead, it isn't added to the Devices list. This 
&gt; would appear to be a bug.
&gt; 
&gt; This can be problematic if I am trying to identify whether any remote devices 
&gt; are currently connected to the local adapter; it is not possible to identify 
&gt; the connected devices if they have initiated the connection.
&gt; 
&gt; It would be much appreciated if someone could look into this. Perhaps the 
&gt; adapter-&gt;devices list could be updated when adapter_add_active_conn() is 
&gt; called, but I'm not sure if this is correct.

I know that Johan fixed a bug where FindDevice would not give any result
for temporary devices. So you can use FindDevice to get the device
object. Adding it to the device list? I am not sure about that.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212045237</emailId><senderName>Bea Lam</senderName><senderEmail>blam@trolltech.com</senderEmail><timestampReceived>2008-12-12 04:52:37-0400</timestampReceived><subject>Re: Adapter API - Devices property not updated if connection initiated by remote device</subject><body>

Hi Marcel,

Yes, FindDevice() is useful when I need to check whether a particular device 
is connected at the moment. But what if I don't know the address of the 
connecting device? That is, should BlueZ also be able to tell me when some 
random, unknown device connects to me?

thanks

Bea


On Friday 12 December 2008 11:43:17 am Marcel Holtmann wrote:
&gt; Hi Bea,
&gt;
&gt; &gt; When using the org.bluez.Adapter interface, if I initiate a connection to
&gt; &gt; a remote device, then the adapter's Devices property is updated to
&gt; &gt; include the remote device, as expected. However, if the remote device
&gt; &gt; initiates the connection to my device instead, it isn't added to the
&gt; &gt; Devices list. This would appear to be a bug.
&gt; &gt;
&gt; &gt; This can be problematic if I am trying to identify whether any remote
&gt; &gt; devices are currently connected to the local adapter; it is not possible
&gt; &gt; to identify the connected devices if they have initiated the connection.
&gt; &gt;
&gt; &gt; It would be much appreciated if someone could look into this. Perhaps the
&gt; &gt; adapter-&gt;devices list could be updated when adapter_add_active_conn() is
&gt; &gt; called, but I'm not sure if this is correct.
&gt;
&gt; I know that Johan fixed a bug where FindDevice would not give any result
&gt; for temporary devices. So you can use FindDevice to get the device
&gt; object. Adding it to the device list? I am not sure about that.
&gt;
&gt; Regards
&gt;
&gt; Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081211202706</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-11 20:27:06-0400</timestampReceived><subject>[PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi All,

Appears that bitstream packing is also one of the most CPU hungry
operations in SBC encoder, which did not get proper attention yet.
Could somebody review this patch and provide feedback/comments?

Benchmarks were done by running the following script:

./sbcenc -s 8 big_buck_bunny_480p_mono.au &gt; /dev/null
./sbcenc -s 8 big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -s 8 -j big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -s 4 big_buck_bunny_480p_mono.au &gt; /dev/null
./sbcenc -s 4 big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -s 4 -j big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -b 128 -s 8 big_buck_bunny_480p_mono.au &gt; /dev/null
./sbcenc -b 128 -s 8 big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -b 128 -s 8 -j big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -b 64 -s 4 big_buck_bunny_480p_mono.au &gt; /dev/null
./sbcenc -b 64 -s 4 big_buck_bunny_480p_stereo.au &gt; /dev/null
./sbcenc -b 64 -s 4 -j big_buck_bunny_480p_stereo.au &gt; /dev/null

Times from ARM device (ARM11):

before patch:
real    9m 42.98s
user    8m 51.06s
sys     0m 39.50s

after patch:
real    6m 35.55s
user    5m 44.09s
sys     0m 40.43s

Times from x86 PC (Intel Core2):

before patch:
real    0m49.437s
user    0m45.267s
sys     0m3.708s

after patch:
real    0m27.606s
user    0m23.869s
sys     0m3.656s

 
Best regards,
Siarhei Siamashka

["0001-sbc-bitstream-writing-optimization-for-encoder.patch" (text/x-diff)]

From cec91fe56d834109db6280330085832c79ded6b6 Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Thu, 11 Dec 2008 21:21:28 +0200
Subject: [PATCH] sbc: bitstream writing optimization for encoder.

SBC encoder performance improvement up to 1.5x for ARM11
and almost twice faster for Intel Core2 in some cases.

Signed-off-by: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
---
 sbc/sbc.c |   65 ++++++++++++++++++++++++++++++++++--------------------------
 1 files changed, 37 insertions(+), 28 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..9b676e0 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -909,6 +909,29 @@ static int sbc_analyze_audio(struct sbc_encoder_state *state,
 	}
 }
 
+/* Supplementary bitstream writing macros for 'sbc_pack_frame' */
+
+#define PUT_BITS(v, n)\
+	{\
+		bits_cache = (v) | (bits_cache &lt;&lt; (n));\
+		bits_count += (n);\
+		if (bits_count &gt;= 16) {\
+			bits_count -= 8;\
+			*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+			bits_count -= 8;\
+			*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+		}\
+	} while (0);\
+
+#define FLUSH_BITS()\
+	while (bits_count &gt;= 8) {\
+		bits_count -= 8;\
+		*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+	}\
+	if (bits_count &gt; 0) {\
+	    *data_ptr++ = (uint8_t)(bits_cache &lt;&lt; (8 - bits_count));\
+	}\
+
 /*
  * Packs the SBC frame from frame into the memory at data. At most len
  * bytes will be used, should more memory be needed an appropriate
@@ -926,14 +949,18 @@ static int sbc_analyze_audio(struct sbc_encoder_state *state,
 
 static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 {
-	int produced;
+	/* Bitstream writer starts from the fourth byte */
+	uint8_t *data_ptr = data + 4;
+	uint32_t bits_cache = 0;
+	uint32_t bits_count = 0;
+
 	/* Will copy the header parts for CRC-8 calculation here */
 	uint8_t crc_header[11] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 	int crc_pos = 0;
 
 	uint16_t audio_sample;
 
-	int ch, sb, blk, bit;	/* channel, subband, block and bit counters */
+	int ch, sb, blk;	/* channel, subband, block and bit counters */
 	int bits[2][8];		/* bits distribution */
 	int levels[2][8];	/* levels are derived from that */
 
@@ -973,8 +1000,6 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 
 	/* Can't fill in crc yet */
 
-	produced = 32;
-
 	crc_header[0] = data[1];
 	crc_header[1] = data[2];
 	crc_pos = 16;
@@ -999,6 +1024,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 		u_int32_t scalefactor_j[2];
 		uint8_t scale_factor_j[2];
 
+		uint8_t joint = 0;
 		frame-&gt;joint = 0;
 
 		for (sb = 0; sb &lt; frame-&gt;subbands - 1; sb++) {
@@ -1031,6 +1057,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			if ((scalefactor[0][sb] + scalefactor[1][sb]) &gt;
 					(scalefactor_j[0] + scalefactor_j[1]) ) {
 				/* use joint stereo for this subband */
+				joint |= 1 &lt;&lt; (frame-&gt;subbands - 1 - sb);
 				frame-&gt;joint |= 1 &lt;&lt; sb;
 				frame-&gt;scale_factor[0][sb] = scale_factor_j[0];
 				frame-&gt;scale_factor[1][sb] = scale_factor_j[1];
@@ -1045,24 +1072,16 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			}
 		}
 
-		data[4] = 0;
-		for (sb = 0; sb &lt; frame-&gt;subbands - 1; sb++)
-			data[4] |= ((frame-&gt;joint &gt;&gt; sb) &amp; 0x01) &lt;&lt; (frame-&gt;subbands - 1 - sb);
-
-		crc_header[crc_pos &gt;&gt; 3] = data[4];
-
-		produced += frame-&gt;subbands;
+		PUT_BITS(joint, frame-&gt;subbands);
+		crc_header[crc_pos &gt;&gt; 3] = joint;
 		crc_pos += frame-&gt;subbands;
 	}
 
 	for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 		for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
-			data[produced &gt;&gt; 3] &lt;&lt;= 4;
+			PUT_BITS(frame-&gt;scale_factor[ch][sb] &amp; 0x0F, 4);
 			crc_header[crc_pos &gt;&gt; 3] &lt;&lt;= 4;
-			data[produced &gt;&gt; 3] |= frame-&gt;scale_factor[ch][sb] &amp; 0x0F;
 			crc_header[crc_pos &gt;&gt; 3] |= frame-&gt;scale_factor[ch][sb] &amp; 0x0F;
-
-			produced += 4;
 			crc_pos += 4;
 		}
 	}
@@ -1088,25 +1107,15 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 						(uint16_t) ((((frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
 									(frame-&gt;scale_factor[ch][sb] + 1)) +
 								levels[ch][sb]) &gt;&gt; 1);
-					audio_sample &lt;&lt;= 16 - bits[ch][sb];
-					for (bit = 0; bit &lt; bits[ch][sb]; bit++) {
-						data[produced &gt;&gt; 3] &lt;&lt;= 1;
-						if (audio_sample &amp; 0x8000)
-							data[produced &gt;&gt; 3] |= 0x1;
-						audio_sample &lt;&lt;= 1;
-						produced++;
-					}
+					PUT_BITS(audio_sample, bits[ch][sb]);
 				}
 			}
 		}
 	}
 
-	/* align the last byte */
-	if (produced % 8) {
-		data[produced &gt;&gt; 3] &lt;&lt;= 8 - (produced % 8);
-	}
+	FLUSH_BITS();
 
-	return (produced + 7) &gt;&gt; 3;
+	return data_ptr - data;
 }
 
 struct sbc_priv {
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212013934</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:39:34-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi Siarhei,

&gt; Appears that bitstream packing is also one of the most CPU hungry
&gt; operations in SBC encoder, which did not get proper attention yet.
&gt; Could somebody review this patch and provide feedback/comments?

again thanks for working on this. I am actually willing to include your
patches quickly in one of the next releases to get more wider testing
audience.

One comment from my side is that this should work with little-endian and
big-endian as input streams. Please keep that in mind.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212093717</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-12 09:37:17-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

On Friday 12 December 2008 03:39:34 ext Marcel Holtmann wrote:
&gt; Hi Siarhei,
&gt;
&gt; &gt; Appears that bitstream packing is also one of the most CPU hungry
&gt; &gt; operations in SBC encoder, which did not get proper attention yet.
&gt; &gt; Could somebody review this patch and provide feedback/comments?
&gt;
&gt; again thanks for working on this. I am actually willing to include your
&gt; patches quickly in one of the next releases to get more wider testing
&gt; audience.

Thanks. Are the contributors of the last SBC-related modifications reachable
nowadays? They could probably help with the review of our patches.

SBC code still can be improved in many ways from the performance point of
view. The current implementation follows SBC specification pretty much
literally. But rearranging the code a bit and getting rid of multidimentional
arrays can provide identical output, but work noticeably faster. Also SBC
can benefit from ARM assembly optimizations (for ARM11 and Cortex-A8),
so these could be applied a bit later once all the high level stuff is in
place.

Current implementation only needs to be checked to ensure that it is correct
and fully adheres to the specification before applying large scale
optimizations.

&gt; One comment from my side is that this should work with little-endian and
&gt; big-endian as input streams. Please keep that in mind.

Yes, it should work fine on both big and little endian systems, though I did
not test it on big-endian hardware myself. Actually SBC bitstream packer
favors big-endian systems, because the following part...

+               if (bits_count &gt;= 16) {\
+                       bits_count -= 8;\
+                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+                       bits_count -= 8;\
+                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+               }\

...could be implemented as something like this for big-endian systems
(provided that we additionally take care of alignment and convert 'data_ptr'
into a pointer to uint16_t):

+               if (bits_count &gt;= 16) {\
+                       bits_count -= 16;\
+                       *data_ptr++ = (uint16_t)(bits_cache &gt;&gt; bits_count);\
+               }\

But for little endian-systems and also to ensure endian neutrality, data
writes are done one byte at a time.


And Just an additional comment about portability, there are also systems where
uint8_t data type is not supported (and CHAR_BIT is different from 8). For
example, there is a port SBC encoder from bluez to C55x DSP [1].  I'm in no
way involved in this project, but they could probably want to submit some
changes to mainline SBC code to make it usable on such systems with a bit
less tweaks.

1. https://garage.maemo.org/projects/dsp-sbc


Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212110409</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 11:04:09-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi Siarhei,

&gt; &gt; &gt; Appears that bitstream packing is also one of the most CPU hungry
&gt; &gt; &gt; operations in SBC encoder, which did not get proper attention yet.
&gt; &gt; &gt; Could somebody review this patch and provide feedback/comments?
&gt; &gt;
&gt; &gt; again thanks for working on this. I am actually willing to include your
&gt; &gt; patches quickly in one of the next releases to get more wider testing
&gt; &gt; audience.
&gt; 
&gt; Thanks. Are the contributors of the last SBC-related modifications reachable
&gt; nowadays? They could probably help with the review of our patches.

they should be at least all subscribed to this mailing list now. Since I
will actually close the other ones in two weeks.

&gt; SBC code still can be improved in many ways from the performance point of
&gt; view. The current implementation follows SBC specification pretty much
&gt; literally. But rearranging the code a bit and getting rid of multidimentional
&gt; arrays can provide identical output, but work noticeably faster. Also SBC
&gt; can benefit from ARM assembly optimizations (for ARM11 and Cortex-A8),
&gt; so these could be applied a bit later once all the high level stuff is in
&gt; place.
&gt; 
&gt; Current implementation only needs to be checked to ensure that it is correct
&gt; and fully adheres to the specification before applying large scale
&gt; optimizations.

I agree. So lets get a fully compliant Linux version first and then we
go from there.

&gt; &gt; One comment from my side is that this should work with little-endian and
&gt; &gt; big-endian as input streams. Please keep that in mind.
&gt; 
&gt; Yes, it should work fine on both big and little endian systems, though I did
&gt; not test it on big-endian hardware myself. Actually SBC bitstream packer
&gt; favors big-endian systems, because the following part...
&gt; 
&gt; +               if (bits_count &gt;= 16) {\
&gt; +                       bits_count -= 8;\
&gt; +                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
&gt; +                       bits_count -= 8;\
&gt; +                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
&gt; +               }\
&gt; 
&gt; ...could be implemented as something like this for big-endian systems
&gt; (provided that we additionally take care of alignment and convert 'data_ptr'
&gt; into a pointer to uint16_t):
&gt; 
&gt; +               if (bits_count &gt;= 16) {\
&gt; +                       bits_count -= 16;\
&gt; +                       *data_ptr++ = (uint16_t)(bits_cache &gt;&gt; bits_count);\
&gt; +               }\
&gt; 
&gt; But for little endian-systems and also to ensure endian neutrality, data
&gt; writes are done one byte at a time.

Lets keep doing it byte by byte for now. However keep in mind that the
input stream can also be in big endian even it is runs on a little
machine. And vice-versa.

&gt; And Just an additional comment about portability, there are also systems where
&gt; uint8_t data type is not supported (and CHAR_BIT is different from 8). For
&gt; example, there is a port SBC encoder from bluez to C55x DSP [1].  I'm in no
&gt; way involved in this project, but they could probably want to submit some
&gt; changes to mainline SBC code to make it usable on such systems with a bit
&gt; less tweaks.

We are doing Linux first and then worry about other systems.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212152333</emailId><senderName>"Christian Hoene"</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-12 15:23:33-0400</timestampReceived><subject>RE: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi all,

next week I will discuss the bug fixing of SBC with Jaska Uimonen, who is
ill this week.

The sound quality of the fix point implementation still remains below of the
quality of the floating point version.

Maybe, we shall support both depending on the performance requirements?

Regards,
 
Christian


&gt; -----Original Message-----
&gt; From: linux-bluetooth-owner@vger.kernel.org [mailto:linux-bluetooth-
&gt; owner@vger.kernel.org] On Behalf Of Marcel Holtmann
&gt; Sent: Friday, December 12, 2008 12:04 PM
&gt; To: Siarhei Siamashka
&gt; Cc: linux-bluetooth@vger.kernel.org
&gt; Subject: Re: [PATCH] sbc: bitstream packing optimization for encoder.
&gt; 
&gt; Hi Siarhei,
&gt; 
&gt; &gt; &gt; &gt; Appears that bitstream packing is also one of the most CPU hungry
&gt; &gt; &gt; &gt; operations in SBC encoder, which did not get proper attention
&gt; yet.
&gt; &gt; &gt; &gt; Could somebody review this patch and provide feedback/comments?
&gt; &gt; &gt;
&gt; &gt; &gt; again thanks for working on this. I am actually willing to include
&gt; your
&gt; &gt; &gt; patches quickly in one of the next releases to get more wider
&gt; testing
&gt; &gt; &gt; audience.
&gt; &gt;
&gt; &gt; Thanks. Are the contributors of the last SBC-related modifications
&gt; reachable
&gt; &gt; nowadays? They could probably help with the review of our patches.
&gt; 
&gt; they should be at least all subscribed to this mailing list now. Since
&gt; I
&gt; will actually close the other ones in two weeks.
&gt; 
&gt; &gt; SBC code still can be improved in many ways from the performance
&gt; point of
&gt; &gt; view. The current implementation follows SBC specification pretty
&gt; much
&gt; &gt; literally. But rearranging the code a bit and getting rid of
&gt; multidimentional
&gt; &gt; arrays can provide identical output, but work noticeably faster. Also
&gt; SBC
&gt; &gt; can benefit from ARM assembly optimizations (for ARM11 and Cortex-
&gt; A8),
&gt; &gt; so these could be applied a bit later once all the high level stuff
&gt; is in
&gt; &gt; place.
&gt; &gt;
&gt; &gt; Current implementation only needs to be checked to ensure that it is
&gt; correct
&gt; &gt; and fully adheres to the specification before applying large scale
&gt; &gt; optimizations.
&gt; 
&gt; I agree. So lets get a fully compliant Linux version first and then we
&gt; go from there.
&gt; 
&gt; &gt; &gt; One comment from my side is that this should work with little-
&gt; endian and
&gt; &gt; &gt; big-endian as input streams. Please keep that in mind.
&gt; &gt;
&gt; &gt; Yes, it should work fine on both big and little endian systems,
&gt; though I did
&gt; &gt; not test it on big-endian hardware myself. Actually SBC bitstream
&gt; packer
&gt; &gt; favors big-endian systems, because the following part...
&gt; &gt;
&gt; &gt; +               if (bits_count &gt;= 16) {\
&gt; &gt; +                       bits_count -= 8;\
&gt; &gt; +                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt;
&gt; bits_count);\
&gt; &gt; +                       bits_count -= 8;\
&gt; &gt; +                       *data_ptr++ = (uint8_t)(bits_cache &gt;&gt;
&gt; bits_count);\
&gt; &gt; +               }\
&gt; &gt;
&gt; &gt; ...could be implemented as something like this for big-endian systems
&gt; &gt; (provided that we additionally take care of alignment and convert
&gt; 'data_ptr'
&gt; &gt; into a pointer to uint16_t):
&gt; &gt;
&gt; &gt; +               if (bits_count &gt;= 16) {\
&gt; &gt; +                       bits_count -= 16;\
&gt; &gt; +                       *data_ptr++ = (uint16_t)(bits_cache &gt;&gt;
&gt; bits_count);\
&gt; &gt; +               }\
&gt; &gt;
&gt; &gt; But for little endian-systems and also to ensure endian neutrality,
&gt; data
&gt; &gt; writes are done one byte at a time.
&gt; 
&gt; Lets keep doing it byte by byte for now. However keep in mind that the
&gt; input stream can also be in big endian even it is runs on a little
&gt; machine. And vice-versa.
&gt; 
&gt; &gt; And Just an additional comment about portability, there are also
&gt; systems where
&gt; &gt; uint8_t data type is not supported (and CHAR_BIT is different from
&gt; 8). For
&gt; &gt; example, there is a port SBC encoder from bluez to C55x DSP [1].  I'm
&gt; in no
&gt; &gt; way involved in this project, but they could probably want to submit
&gt; some
&gt; &gt; changes to mainline SBC code to make it usable on such systems with a
&gt; bit
&gt; &gt; less tweaks.
&gt; 
&gt; We are doing Linux first and then worry about other systems.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-
&gt; bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212153047</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 15:30:47-0400</timestampReceived><subject>RE: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi Christian,

can we please keep this mailing a top-posting free zone. I know it is
hard for Outlock to get this right, but it is possible.

&gt; next week I will discuss the bug fixing of SBC with Jaska Uimonen, who is
&gt; ill this week.
&gt; 
&gt; The sound quality of the fix point implementation still remains below of the
&gt; quality of the floating point version.
&gt; 
&gt; Maybe, we shall support both depending on the performance requirements?

I think we should focus a fixed point version. There should be no need
for floating point at all. If fixed point isn't good enough, then we
screwed it up.

And in case of embedded devices we are seriously limited with floating
point and doing that in software just doesn't work out. And this is
mostly not directly a performance problem. It is more a power
consumption problem. We don't wanna have A2DP drain the battery.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212154908</emailId><senderName>"Christian Hoene"</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-12 15:49:08-0400</timestampReceived><subject>RE: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

&gt; &gt; The sound quality of the fix point implementation still remains below
&gt; of the
&gt; &gt; quality of the floating point version.
&gt; &gt;
&gt; &gt; Maybe, we shall support both depending on the performance
&gt; requirements?
&gt; 
&gt; I think we should focus a fixed point version. There should be no need
&gt; for floating point at all. If fixed point isn't good enough, then we
&gt; screwed it up.
&gt; 
&gt; And in case of embedded devices we are seriously limited with floating
&gt; point and doing that in software just doesn't work out. And this is
&gt; mostly not directly a performance problem. It is more a power
&gt; consumption problem. We don't wanna have A2DP drain the battery.
&gt;

It would help if we use 64 bit integers if a good sound is required but this
is again a problem for embedded devices.

Regards
 Christian


&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212155656</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 15:56:56-0400</timestampReceived><subject>RE: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

Hi Christian,

&gt; &gt; &gt; The sound quality of the fix point implementation still remains below
&gt; &gt; of the
&gt; &gt; &gt; quality of the floating point version.
&gt; &gt; &gt;
&gt; &gt; &gt; Maybe, we shall support both depending on the performance
&gt; &gt; requirements?
&gt; &gt; 
&gt; &gt; I think we should focus a fixed point version. There should be no need
&gt; &gt; for floating point at all. If fixed point isn't good enough, then we
&gt; &gt; screwed it up.
&gt; &gt; 
&gt; &gt; And in case of embedded devices we are seriously limited with floating
&gt; &gt; point and doing that in software just doesn't work out. And this is
&gt; &gt; mostly not directly a performance problem. It is more a power
&gt; &gt; consumption problem. We don't wanna have A2DP drain the battery.
&gt; &gt;
&gt; 
&gt; It would help if we use 64 bit integers if a good sound is required but this
&gt; is again a problem for embedded devices.

depends on. Looking at the libmad library, they do a pretty good job in
just using integers.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212160101</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-12 16:01:01-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

On Friday 12 December 2008 17:30:47 ext Marcel Holtmann wrote:
&gt; Hi Christian,
&gt;
&gt; can we please keep this mailing a top-posting free zone. I know it is
&gt; hard for Outlock to get this right, but it is possible.
&gt;
&gt; &gt; next week I will discuss the bug fixing of SBC with Jaska Uimonen, who is
&gt; &gt; ill this week.
&gt; &gt;
&gt; &gt; The sound quality of the fix point implementation still remains below of
&gt; &gt; the quality of the floating point version.
&gt; &gt;
&gt; &gt; Maybe, we shall support both depending on the performance requirements?

Well, it is quite natural that sound quality for 16 bit fixed point version
can't be better than the quality of the floating point one. But when
dealing with lossy compression, it is not always strictly necessary to
precisely match the output of the reference implementation, carefully
reproducing all the compression artefacts :)

More important is whether this implementation passes a standard SBC
conformance test. If it does, it would be good to have 16 bit fixed point
implementation.

Sound quality of Jaska's patch can be probably tweaked a bit by trying
different bias for coefficient values (not just clip values to 16 bit, but
also try different directions for rounding).

&gt; I think we should focus a fixed point version. There should be no need
&gt; for floating point at all. If fixed point isn't good enough, then we
&gt; screwed it up.
&gt;
&gt; And in case of embedded devices we are seriously limited with floating
&gt; point and doing that in software just doesn't work out. And this is
&gt; mostly not directly a performance problem. It is more a power
&gt; consumption problem. We don't wanna have A2DP drain the battery.

At least for ARM, performance of the possible polyphase filter implementations
can be approximately ranged in the following way (from fastest to slowest):
1. 16-bit*16-bit-&gt;32-bit integer multiplications (the best for any 
ARM cores &gt;=armv5te)
2. single precision floating point multiplications (if floating point math is 
supported by hardware)
3. 32-bit*32-bit-&gt;32-bit  integer multiplications
4. double precision floating point multiplications (if floating point math is 
supported by hardware and FPU is pipelined for this kind of operation - not 
the case for Cortex-A8 unfortunately)
5. 32-bit*32-bit-&gt;64-bit integer multiplications

Currently SBC contains ARM inline assembly macros to utilize 
32-bit*32-bit-&gt;32-bit multiplication (multiply-accumulate variant) which
is not the fastest option. It is only good for armv4 cores which do not
support anything better. Even quite an old Nokia 770 internet tablet 
has support for armv5te instructions.

For x86 platform, 16-bit integer multiplications can be done quite efficiently
using MMX or SSE2.

To sum up, the 16-bit fixed point version will be the fastest and is the best
variant if it can provide the required precision. Otherwise single precision
floating point version is the next natural choice.

Surely there are also other factors to consider and raw multiplications
throughput performance is not the only thing. The need of scaling values for
fixed point versions and int-&gt;float/float-&gt;int conversions for the floating
point ones also plays some role.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212160728</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-12 16:07:28-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

On Friday 12 December 2008 13:04:09 ext Marcel Holtmann wrote:
[...]
&gt; &gt; But for little endian-systems and also to ensure endian neutrality, data
&gt; &gt; writes are done one byte at a time.
&gt;
&gt; Lets keep doing it byte by byte for now. However keep in mind that the
&gt; input stream can also be in big endian even it is runs on a little
&gt; machine. And vice-versa.

Yes I know, thanks for reminding :) This patch does not touch endian
conversion for the input data, so everything should be OK. Anyway, it's
better to do some real tests on big-endian systems just to be sure.

The endian conversion and channels deinterleaving part for the input data
is actually another performance bottleneck in SBC and can be also optimized.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081216214638</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-16 21:46:38-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

On Friday 12 December 2008 03:39:34 ext Marcel Holtmann wrote:
&gt; Hi Siarhei,
&gt;
&gt; &gt; Appears that bitstream packing is also one of the most CPU hungry
&gt; &gt; operations in SBC encoder, which did not get proper attention yet.
&gt; &gt; Could somebody review this patch and provide feedback/comments?
&gt;
&gt; again thanks for working on this. I am actually willing to include your
&gt; patches quickly in one of the next releases to get more wider testing
&gt; audience.

Well, after doing a bit more testing, appears that a bug slipped in:
+					PUT_BITS(audio_sample, bits[ch][sb]);

There should be the following line instead:
+					PUT_BITS(audio_sample &amp; levels[ch][sb], bits[ch][sb]);

Updated patch is attached. Any additional testing/feedback is very much
welcome.

Best regards
Siarhei Siamashka

["0001-sbc-bitstream-writing-optimization-for-encoder-try2.patch" (text/x-diff)]

From 0a3818bd86342c60cda2fa87c59ecd5f9d6d4591 Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Thu, 11 Dec 2008 21:21:28 +0200
Subject: [PATCH] sbc: bitstream writing optimization for encoder.

SBC encoder performance improvement up to 1.5x for ARM11
and almost twice faster for Intel Core2 in some cases.

Signed-off-by: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
---
 sbc/sbc.c |   65 ++++++++++++++++++++++++++++++++++--------------------------
 1 files changed, 37 insertions(+), 28 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..c495a75 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -909,6 +909,29 @@ static int sbc_analyze_audio(struct sbc_encoder_state *state,
 	}
 }
 
+/* Supplementary bitstream writing macros for 'sbc_pack_frame' */
+
+#define PUT_BITS(v, n)\
+	{\
+		bits_cache = (v) | (bits_cache &lt;&lt; (n));\
+		bits_count += (n);\
+		if (bits_count &gt;= 16) {\
+			bits_count -= 8;\
+			*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+			bits_count -= 8;\
+			*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+		}\
+	} while (0);\
+
+#define FLUSH_BITS()\
+	while (bits_count &gt;= 8) {\
+		bits_count -= 8;\
+		*data_ptr++ = (uint8_t)(bits_cache &gt;&gt; bits_count);\
+	}\
+	if (bits_count &gt; 0) {\
+	    *data_ptr++ = (uint8_t)(bits_cache &lt;&lt; (8 - bits_count));\
+	}\
+
 /*
  * Packs the SBC frame from frame into the memory at data. At most len
  * bytes will be used, should more memory be needed an appropriate
@@ -926,14 +949,18 @@ static int sbc_analyze_audio(struct sbc_encoder_state *state,
 
 static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 {
-	int produced;
+	/* Bitstream writer starts from the fourth byte */
+	uint8_t *data_ptr = data + 4;
+	uint32_t bits_cache = 0;
+	uint32_t bits_count = 0;
+
 	/* Will copy the header parts for CRC-8 calculation here */
 	uint8_t crc_header[11] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 	int crc_pos = 0;
 
 	uint16_t audio_sample;
 
-	int ch, sb, blk, bit;	/* channel, subband, block and bit counters */
+	int ch, sb, blk;	/* channel, subband, block and bit counters */
 	int bits[2][8];		/* bits distribution */
 	int levels[2][8];	/* levels are derived from that */
 
@@ -973,8 +1000,6 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 
 	/* Can't fill in crc yet */
 
-	produced = 32;
-
 	crc_header[0] = data[1];
 	crc_header[1] = data[2];
 	crc_pos = 16;
@@ -999,6 +1024,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 		u_int32_t scalefactor_j[2];
 		uint8_t scale_factor_j[2];
 
+		uint8_t joint = 0;
 		frame-&gt;joint = 0;
 
 		for (sb = 0; sb &lt; frame-&gt;subbands - 1; sb++) {
@@ -1031,6 +1057,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			if ((scalefactor[0][sb] + scalefactor[1][sb]) &gt;
 					(scalefactor_j[0] + scalefactor_j[1]) ) {
 				/* use joint stereo for this subband */
+				joint |= 1 &lt;&lt; (frame-&gt;subbands - 1 - sb);
 				frame-&gt;joint |= 1 &lt;&lt; sb;
 				frame-&gt;scale_factor[0][sb] = scale_factor_j[0];
 				frame-&gt;scale_factor[1][sb] = scale_factor_j[1];
@@ -1045,24 +1072,16 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			}
 		}
 
-		data[4] = 0;
-		for (sb = 0; sb &lt; frame-&gt;subbands - 1; sb++)
-			data[4] |= ((frame-&gt;joint &gt;&gt; sb) &amp; 0x01) &lt;&lt; (frame-&gt;subbands - 1 - sb);
-
-		crc_header[crc_pos &gt;&gt; 3] = data[4];
-
-		produced += frame-&gt;subbands;
+		PUT_BITS(joint, frame-&gt;subbands);
+		crc_header[crc_pos &gt;&gt; 3] = joint;
 		crc_pos += frame-&gt;subbands;
 	}
 
 	for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 		for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
-			data[produced &gt;&gt; 3] &lt;&lt;= 4;
+			PUT_BITS(frame-&gt;scale_factor[ch][sb] &amp; 0x0F, 4);
 			crc_header[crc_pos &gt;&gt; 3] &lt;&lt;= 4;
-			data[produced &gt;&gt; 3] |= frame-&gt;scale_factor[ch][sb] &amp; 0x0F;
 			crc_header[crc_pos &gt;&gt; 3] |= frame-&gt;scale_factor[ch][sb] &amp; 0x0F;
-
-			produced += 4;
 			crc_pos += 4;
 		}
 	}
@@ -1088,25 +1107,15 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 						(uint16_t) ((((frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
 									(frame-&gt;scale_factor[ch][sb] + 1)) +
 								levels[ch][sb]) &gt;&gt; 1);
-					audio_sample &lt;&lt;= 16 - bits[ch][sb];
-					for (bit = 0; bit &lt; bits[ch][sb]; bit++) {
-						data[produced &gt;&gt; 3] &lt;&lt;= 1;
-						if (audio_sample &amp; 0x8000)
-							data[produced &gt;&gt; 3] |= 0x1;
-						audio_sample &lt;&lt;= 1;
-						produced++;
-					}
+					PUT_BITS(audio_sample &amp; levels[ch][sb], bits[ch][sb]);
 				}
 			}
 		}
 	}
 
-	/* align the last byte */
-	if (produced % 8) {
-		data[produced &gt;&gt; 3] &lt;&lt;= 8 - (produced % 8);
-	}
+	FLUSH_BITS();
 
-	return (produced + 7) &gt;&gt; 3;
+	return data_ptr - data;
 }
 
 struct sbc_priv {
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212105847</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 10:58:47-0400</timestampReceived><subject>Re: Adapter API - Devices property not updated if connection</subject><body>

Hi Bea,

can you please stop top-posting. Like every other open source mailing
list we are using bottom-posting and you are just destroying the flow of
the replies with top-posting. And KMail is perfectly capable of doing
so ;)

&gt; Yes, FindDevice() is useful when I need to check whether a particular device 
&gt; is connected at the moment. But what if I don't know the address of the 
&gt; connecting device? That is, should BlueZ also be able to tell me when some 
&gt; random, unknown device connects to me?

I think we do create a temporary device structure for incoming
connections in all cases since that is needed for pairing. However we
might not add this to the Devices list.

Johan, any comments here. Should we just send out signals? I think the
current reason for not doing so is that in most cases this is during a
pairing event and we do wanna wait until it succeeds. However I don't
see the big harm in adding it to the list.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212132850</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-12-12 13:28:50-0400</timestampReceived><subject>Re: Adapter API - Devices property not updated if connection</subject><body>

Hi,

On Fri, Dec 12, 2008, Marcel Holtmann wrote:
&gt; I think we do create a temporary device structure for incoming
&gt; connections in all cases since that is needed for pairing. However we
&gt; might not add this to the Devices list.
&gt; 
&gt; Johan, any comments here. Should we just send out signals? I think the
&gt; current reason for not doing so is that in most cases this is during a
&gt; pairing event and we do wanna wait until it succeeds. However I don't
&gt; see the big harm in adding it to the list.

There definitely needs to be a way to know that a remote device has
connected to us even if it is not paired. I think we should just
populate the Devices list in this case and then remove the device from
it once it disconnects (if it didn't pair before that) and also send all
appropriate signals while doing this. For knowing if the device is
paired or not we already have the separate Paired property.

Johna
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212014739</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:47:39-0400</timestampReceived><subject>Re: ObexFTP killing the Local SDP server</subject><body>

Hi Pavan,

&gt; I have a blueZ [version 3.35, wrongly claimed as 3.36] hcid daemon running on a \
&gt; machine, and I have put on it an ObexFTP daemon application [openobex + obexftp] \
&gt; which is statically linked with [bluez-libs-3.36]. 
&gt; The problem I face is, when I start obexftpd it says cannot register with SDP \
&gt; server, register to SDP Server failed, and comes out &amp; then waits for a \
&gt; connecttion. 
&gt; When I looked into it, it was failing in the function "sdp_connect_local" in \
&gt; bluez-libs/src/sdp.c &amp; it also caused the SDP server to kill, So I cannot even do \
&gt; an sdptool browse local after this. [I checked sdptool browse local before running \
&gt; obexftpd &amp; it is fine...] 
&gt; Is it a problem with permissions given to unix domain sockets on platform ? Or \
&gt; something to do with the version mis-match ? Or something totally different ?

I don't know. Your system seems to be screwed up. Why don't you start
using something more recent like 4.22.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081212014641</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:46:41-0400</timestampReceived><subject>Re: how bluez supports ESCO link?</subject><body>

Hi,

&gt; In the current linux 2.6.25 kernel code, can Bluez setup ESCO link?
&gt; I found in net/bluetooth/sco.c, sco_connect defined as:
&gt; 
&gt; static int sco_connect(struct sock *sk)
&gt; {
&gt;  if (lmp_esco_capable(hdev) &amp;&amp; !disable_esco)
&gt;   type = ESCO_LINK;
&gt;  else
&gt;   type = SCO_LINK;
&gt;  
&gt;  hcon = hci_connect(hdev, type, dst, HCI_AT_NO_BONDING);
&gt;  }
&gt; this code shows bluez supports ESCO link.
&gt;  
&gt; But in function struct hci_conn * hci_connect(struct hci_dev *hdev, int
&gt; type, bdaddr_t *dst)
&gt; {
&gt;  if (type == SCO_LINK) {
&gt;   struct hci_conn *sco;
&gt;  
&gt;   if (!(sco = hci_conn_hash_lookup_ba(hdev, SCO_LINK, dst))) {
&gt;    if (!(sco = hci_conn_add(hdev, SCO_LINK, dst))) {
&gt;     hci_conn_put(acl);
&gt;     return NULL;
&gt;    }
&gt;   }
&gt;   acl-&gt;link = sco;
&gt;   sco-&gt;link = acl;
&gt;  
&gt;   hci_conn_hold(sco);
&gt;  
&gt;   if (acl-&gt;state == BT_CONNECTED &amp;&amp; 
&gt;     (sco-&gt;state == BT_OPEN || sco-&gt;state == BT_CLOSED))
&gt;    hci_add_sco(sco, acl-&gt;handle);
&gt;  
&gt;   return sco;
&gt;  } else {
&gt;   return acl;
&gt;  }
&gt; } 
&gt; the else switch shows it does nothing when type NOT equal to SCO_LINK.
&gt; Should this code need to modify or this is intended to designed?

the hci_connect from a 2.6.27 kernel looks different. So you might wanna
test with a later kernel.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081207081953</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-12-07 08:19:53-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO</subject><body>

On Fri, 5 Dec 2008 00:02:13 +0100 Luca Santarelli &lt;hrk@users.sourceforge.net&gt; wrote:

&gt; From: Luca Santarelli &lt;hrk &lt;t&gt; users.sourceforge.net&gt;
&gt; 
&gt; As reported at:
&gt; http://bugs.gentoo.org/show_bug.cgi?id=249523
&gt; and in reference of similar patches such as:
&gt; http://thread.gmane.org/gmane.linux.bluez.devel/15067
&gt; 
&gt; This patch changes the blacklist entry for the ISSC bluetooth USB
&gt; dongle fixing the issue of the repeatedly appearing message
&gt; 
&gt;   hci_scodata_packet: hci0 SCO packet for unknown connection handle 92
&gt; 
&gt; in the kernel logs.
&gt; 
&gt; Sighed-off-by: Luca Santarelli &lt;hrk &lt;at&gt; users.sourceforge.net&gt;
&gt; ---
&gt; This is my first kernel patch ever, I read the docs, but please notify
&gt; me if I made any mistake. Thank you all for your work, I'm happy to have
&gt; been able to contribute to this!
&gt; 
&gt; The patch has been run against 2.6.27.7 and has been tested on three x86
&gt; machines, showing no issues. In my own tests, the dongle has been then
&gt; used to connect to devices and everything worked fine.
&gt; 
&gt; --- linux-2.6.27.7/drivers/bluetooth/hci_usb.c.orig	2008-12-04 20:18:38.000000000 +0100
&gt; +++ linux-2.6.27.7/drivers/bluetooth/hci_usb.c	2008-12-04 20:19:37.000000000 +0100
&gt; @@ -148,8 +148,8 @@ static struct usb_device_id blacklist_id
&gt;  	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
&gt;  	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt;  
&gt; -	/* ISSC Bluetooth Adapter v3.1 */
&gt; -	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
&gt; +	/* ISSC Bluetooth Adapter v3.1 with buggy SCO support */
&gt; +	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET | HCI_BROKEN_ISOC },
&gt;  
&gt;  	/* RTX Telecom based adapters with buggy SCO support */
&gt;  	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },

linux-next has:

commit 12421b40b81d101d7535e03f1af197365adc932b
Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Date:   Sun Nov 30 12:17:21 2008 +0100

    Bluetooth: Remove deprecated hci_usb driver
    
    The old hci_usb driver has been fully replaced with the new btusb driver
    and all major distributions switched to the new driver now. This removes
    it since it should not be used at all anymore.

so please confirm that btusb correctly supports that hardware?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081207125845</emailId><senderName>Daniel Drake</senderName><senderEmail>dsd@gentoo.org</senderEmail><timestampReceived>2008-12-07 12:58:45-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO  support</subject><body>

Andrew Morton wrote:
&gt; commit 12421b40b81d101d7535e03f1af197365adc932b
&gt; Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Date:   Sun Nov 30 12:17:21 2008 +0100
&gt; 
&gt;     Bluetooth: Remove deprecated hci_usb driver
&gt;     
&gt;     The old hci_usb driver has been fully replaced with the new btusb driver
&gt;     and all major distributions switched to the new driver now. This removes
&gt;     it since it should not be used at all anymore.
&gt; 
&gt; so please confirm that btusb correctly supports that hardware?

And if it doesn't, it should be trivial to come up with an equivalent 
patch to modify blacklist_table in btusb.

Daniel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208230735</emailId><senderName>Luca Santarelli</senderName><senderEmail>hrk@users.sourceforge.net</senderEmail><timestampReceived>2008-12-08 23:07:35-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO  support</subject><body>


Il giorno 07/dic/08, alle ore 09:19, Andrew Morton ha scritto:

&gt; linux-next has:
&gt;
&gt; commit 12421b40b81d101d7535e03f1af197365adc932b
&gt; Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Date:   Sun Nov 30 12:17:21 2008 +0100
&gt;
&gt;    Bluetooth: Remove deprecated hci_usb driver
&gt;
&gt;    The old hci_usb driver has been fully replaced with the new btusb  
&gt; driver
&gt;    and all major distributions switched to the new driver now. This  
&gt; removes
&gt;    it since it should not be used at all anymore.
&gt;
&gt; so please confirm that btusb correctly supports that hardware?


Thanks for the heads up! I'll compile the new sources and let you know  
if it's supported. However, since the hci_usb is being deprecated but  
not removed, shouldn't the patch be incorporated nonetheless?

Luca
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209123141</emailId><senderName>Markos Chandras</senderName><senderEmail>markos.chandras@gmail.com</senderEmail><timestampReceived>2008-12-09 12:31:41-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO support</subject><body>

On Sunday 07 December 2008 10:19:53 Andrew Morton wrote:
&gt; On Fri, 5 Dec 2008 00:02:13 +0100 Luca Santarelli 
&lt;hrk@users.sourceforge.net&gt; wrote:
&gt; &gt; From: Luca Santarelli &lt;hrk &lt;t&gt; users.sourceforge.net&gt;
&gt; &gt;
&gt; &gt; As reported at:
&gt; &gt; http://bugs.gentoo.org/show_bug.cgi?id=249523
&gt; &gt; and in reference of similar patches such as:
&gt; &gt; http://thread.gmane.org/gmane.linux.bluez.devel/15067
&gt; &gt;
&gt; &gt; This patch changes the blacklist entry for the ISSC bluetooth USB
&gt; &gt; dongle fixing the issue of the repeatedly appearing message
&gt; &gt;
&gt; &gt;   hci_scodata_packet: hci0 SCO packet for unknown connection handle 92
&gt; &gt;
&gt; &gt; in the kernel logs.
&gt; &gt;
&gt; &gt; Sighed-off-by: Luca Santarelli &lt;hrk &lt;at&gt; users.sourceforge.net&gt;
&gt; &gt; ---
&gt; &gt; This is my first kernel patch ever, I read the docs, but please notify
&gt; &gt; me if I made any mistake. Thank you all for your work, I'm happy to have
&gt; &gt; been able to contribute to this!
&gt; &gt;
&gt; &gt; The patch has been run against 2.6.27.7 and has been tested on three x86
&gt; &gt; machines, showing no issues. In my own tests, the dongle has been then
&gt; &gt; used to connect to devices and everything worked fine.
&gt; &gt;
&gt; &gt; --- linux-2.6.27.7/drivers/bluetooth/hci_usb.c.orig	2008-12-04
&gt; &gt; 20:18:38.000000000 +0100 +++
&gt; &gt; linux-2.6.27.7/drivers/bluetooth/hci_usb.c	2008-12-04 20:19:37.000000000
&gt; &gt; +0100 @@ -148,8 +148,8 @@ static struct usb_device_id blacklist_id
&gt; &gt;  	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
&gt; &gt;  	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET |
&gt; &gt; HCI_WRONG_SCO_MTU },
&gt; &gt;
&gt; &gt; -	/* ISSC Bluetooth Adapter v3.1 */
&gt; &gt; -	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
&gt; &gt; +	/* ISSC Bluetooth Adapter v3.1 with buggy SCO support */
&gt; &gt; +	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET |
&gt; &gt; HCI_BROKEN_ISOC },
&gt; &gt;
&gt; &gt;  	/* RTX Telecom based adapters with buggy SCO support */
&gt; &gt;  	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
&gt;
&gt; linux-next has:
&gt;
&gt; commit 12421b40b81d101d7535e03f1af197365adc932b
&gt; Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Date:   Sun Nov 30 12:17:21 2008 +0100
&gt;
&gt;     Bluetooth: Remove deprecated hci_usb driver
&gt;
&gt;     The old hci_usb driver has been fully replaced with the new btusb
&gt; driver and all major distributions switched to the new driver now. This
&gt; removes it since it should not be used at all anymore.
&gt;
&gt; so please confirm that btusb correctly supports that hardware?
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; Please read the FAQ at  http://www.tux.org/lkml/
Unfortunatelly it doesnt work here. The new driver cant recognize my device. I 
am using gentoo-sources-2.6.26-r4 ( which means linux-sources-2.6.26-5).

I ll post again my device info from lsusb. I ll try to come up with a patch is 
possible

Bus 002 Device 002: ID 1131:1001 Integrated System Solution Corp. KY-BT100 
Bluetooth Adapter

Thanks
-- 
Markos Chandras
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209134919</emailId><senderName>Markos Chandras</senderName><senderEmail>markos.chandras@gmail.com</senderEmail><timestampReceived>2008-12-09 13:49:19-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO  support</subject><body>

On Tuesday 09 December 2008 01:07:35 Luca Santarelli wrote:
&gt; Il giorno 07/dic/08, alle ore 09:19, Andrew Morton ha scritto:
&gt; &gt; linux-next has:
&gt; &gt;
&gt; &gt; commit 12421b40b81d101d7535e03f1af197365adc932b
&gt; &gt; Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; &gt; Date:   Sun Nov 30 12:17:21 2008 +0100
&gt; &gt;
&gt; &gt;    Bluetooth: Remove deprecated hci_usb driver
&gt; &gt;
&gt; &gt;    The old hci_usb driver has been fully replaced with the new btusb
&gt; &gt; driver
&gt; &gt;    and all major distributions switched to the new driver now. This
&gt; &gt; removes
&gt; &gt;    it since it should not be used at all anymore.
&gt; &gt;
&gt; &gt; so please confirm that btusb correctly supports that hardware?
&gt;
&gt; Thanks for the heads up! I'll compile the new sources and let you know
&gt; if it's supported. However, since the hci_usb is being deprecated but
&gt; not removed, shouldn't the patch be incorporated nonetheless?
&gt;
&gt; Luca
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; Please read the FAQ at  http://www.tux.org/lkml/
Seems to work fine on gentoo-sources-2.6.27-r5. Thank you all  :)
-- 
Markos Chandras
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208184223</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-08 18:42:23-0400</timestampReceived><subject>Re: bluez-4.22 + twinkle -&gt; Unable to lock headset</subject><body>

You basically already answer your question, if arecord -D JX10 -f
S16_LE | aplay -D JX10 -f S16_LE does work, twinkle should work too.
The problem seems to be that twinkle leaves the connection open and
attempt to acquire the lock again and again, this is probably a bad
use of alsa API by twinkle as snd_pcm_prepare should not be called
more than once.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209112403</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-09 11:24:03-0400</timestampReceived><subject>Re: [PATCH] Bluetooth node manager causes up to ~3.25s delay in</subject><body>

Hi Nigel,

&gt; The bluetooth nodemanager function "nodemgr_host_thread" contains a loop
&gt; that calls try_to_freeze near the top of the loop, but then delays for
&gt; up to 3.25 seconds (plus time to do work) before getting back to the top
&gt; of the loop. When starting a cycle post-boot, this doesn't seem to bite,
&gt; but it is causing a noticeable delay at boot time, when freezing
&gt; processes prior to starting to read the image.

I don't wanna disappoint you, but IEEE1394 is actually Firewire and not
Bluetooth :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208092729</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-12-08 09:27:29-0400</timestampReceived><subject>Re: Apple Mighty Mouse and aluminum keyboard woes</subject><body>

On Sun, 2008-12-07 at 20:52 -0500, J.R. Mauro wrote:
&gt; Hello,
&gt; 
&gt; I recently purchased an Apple Bluetooth Mighty Mouse and it's been giving me
&gt; some grief. Both the mouse and the aluminum bluetooth keyboard I own fail to
&gt; show up with hcitool or hidd, but both of them seem to be registering with the
&gt; input subsystem as they both work. I can only imagine this is because I paired
&gt; them with OS X (since I couldn't pair them with Linux).

You couldn't pair them in Linux because you forgot to enable the
Bluetooth adapter, eg. hciconfig's output is empty.

Start the hid2hci daemon, and you will have Bluetooth.

&gt;  Despite those hiccups,
&gt; both of the devices *work* but the mouse is not sending scroll or squeeze
&gt; events. I don't really care about the squeeze events, but the lack of scrolling
&gt; is quite aggravating.

It doesn't have scrolling because you're currently using the device in
"boot mode". Set it up properly using Bluetooth, and it'll work just
fine.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201220350</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-01 22:03:50-0400</timestampReceived><subject>Re: [patch for 2.6.28? 1/1] bluetooth: Dell Wireless 365 requires</subject><body>

Hi Andrew,

&gt; This patch causes the BT365 to be reset when the driver is loaded. 
&gt; Without it, the machine is unable to connect to other devices or to scan
&gt; for devices.
&gt; 
&gt; Signed-off-by: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Cc: &lt;stable@kernel.org&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;

NAK. I fixed this differently by making the reset quirk default.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081202001225</emailId><senderName>Tim Gardner</senderName><senderEmail>tcanonical@tpi.com</senderEmail><timestampReceived>2008-12-02 00:12:25-0400</timestampReceived><subject>Re: [patch for 2.6.28? 1/1] bluetooth: Dell Wireless 365 requires</subject><body>

Marcel Holtmann wrote:
&gt; Hi Andrew,
&gt; 
&gt;&gt; This patch causes the BT365 to be reset when the driver is loaded. 
&gt;&gt; Without it, the machine is unable to connect to other devices or to scan
&gt;&gt; for devices.
&gt;&gt;
&gt;&gt; Signed-off-by: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt;&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt;&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt;&gt; Cc: &lt;stable@kernel.org&gt;
&gt;&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt; 
&gt; NAK. I fixed this differently by making the reset quirk default.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 
&gt; 

Does that mean the devices in blacklist_table that have _only_
BTUSB_RESET should be removed? It would get rid of roughly half of the
entries.

rtg
-- 
Tim Gardner tim.gardner@canonical.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201020220</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-12-01 02:02:20-0400</timestampReceived><subject>Re: patch: Respect HCI_UART_DEBUG config in hci_ll.c</subject><body>

Author: Nick Pelly &lt;npelly@google.com&gt;
Date:   Mon Apr 21 12:18:51 2008 -0700

  bluetooth: Respect HCI_UART_DEBUG config in hci_ll.c

  Following the pattern from hci_*.c, turn off BT_DBG messages unless
  they have been requested via HCI_UART_DEBUG

  Signed-off-by: Nick Pelly &lt;npelly@google.com&gt;
  Acked-by: Brian Swetland &lt;swetland@google.com&gt;

diff --git a/drivers/bluetooth/hci_ll.c b/drivers/bluetooth/hci_ll.c
index b91d45a..2d2f66e 100644
--- a/drivers/bluetooth/hci_ll.c
+++ b/drivers/bluetooth/hci_ll.c
@@ -51,6 +51,11 @@

 #include "hci_uart.h"

+#ifndef CONFIG_BT_HCIUART_DEBUG
+#undef  BT_DBG
+#define BT_DBG( A... )
+#endif
+
 /* HCILL commands */
 #define HCILL_GO_TO_SLEEP_IND  0x30
 #define HCILL_GO_TO_SLEEP_ACK  0x31
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201170544</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-01 17:05:44-0400</timestampReceived><subject>Re: New property for DeviceFound signals to distinguish EIR devices</subject><body>

Hi Johan,

&gt; &gt; so I do like the idea of a boolean property. That is pretty simple. So
&gt; &gt; my current proposal would be "LegacyPairing". Since the Simple Pairing
&gt; &gt; should become the default and handles all the use cases right, we only
&gt; &gt; need to detect the cases for the old 2.0 and before devices.
&gt; &gt; 
&gt; &gt; However this has a limitation. We make the assumption that we always get
&gt; &gt; the Extended Inquiry Result. So setting LegacyPairing=True doesn't mean
&gt; &gt; that we are not doing Simple Pairing. It just means that we don't know
&gt; &gt; at this point of time if the remote device supports its. In practice we
&gt; &gt; might not be seeing this, but it is not mandatory for 2.1 devices to
&gt; &gt; enable Extended Inquiry Response.
&gt; 
&gt; I'd be fine with adding a LecacyPairing boolean both to the DeviceFound
&gt; signal and the Device interface. I don't think the false-positive case
&gt; is too bad since it shouldn't happen often and the UI can simply fall
&gt; back to SSP then (which is a potential source of confusion for the user
&gt; but at least the pairing can proceed).

okay. Then lets add a boolean "LegacyPairing" property and see how far
this helps us with improving the wizard.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081201224617</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-01 22:46:17-0400</timestampReceived><subject>Re: Intrested student</subject><body>

Hi Dmitry,

We don't have yet the projects for 2009, but you can check for some
ideas from 2008 here:
http://wiki.bluez.org/wiki/GSoC2008

And of course you can also suggest project ideas and see if there
someone interested in mentoring. You got plenty of time for this, I
guess the program will only start on April maybe March.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081202002219</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-02 00:22:19-0400</timestampReceived><subject>Re: [patch for 2.6.28? 1/1] bluetooth: Dell Wireless 365 requires</subject><body>

Hi Tim,

&gt; &gt;&gt; This patch causes the BT365 to be reset when the driver is loaded. 
&gt; &gt;&gt; Without it, the machine is unable to connect to other devices or to scan
&gt; &gt;&gt; for devices.
&gt; &gt;&gt;
&gt; &gt;&gt; Signed-off-by: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt; &gt;&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; &gt;&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; &gt;&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; &gt;&gt; Cc: &lt;stable@kernel.org&gt;
&gt; &gt;&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt; &gt; 
&gt; &gt; NAK. I fixed this differently by making the reset quirk default.
&gt;
&gt; Does that mean the devices in blacklist_table that have _only_
&gt; BTUSB_RESET should be removed? It would get rid of roughly half of the
&gt; entries.

that has already been done. See the pull request I sent to Dave.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081204082324</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-12-04 08:23:24-0400</timestampReceived><subject>[RFC] Support for getting rfcomm connection information before setting</subject><body>

Hi,

In order to implement HFP profile correctly the gateway needs to know 
address off the the HF device before accepting the connection. Currently 
there is no way to check the address without calling accept(). This 
patch creates a socket option which can be used change the behavior of 
the socket. Server still calls accept() but the actual connection setup 
will be done only after calling recv() for the first time. In between 
the server can use other getsockopts to get the needed information.

I also attached patch against rctest.c as an example how test this feature.

Waiting for comments :)

-- 
Ville



["0001--BLUETOOTH-Support-for-deferring-rfcomm-connection.patch" (text/x-patch)]

From 746b1179efe09bf4ba5ec0d2b954e2b2c8ab80c5 Mon Sep 17 00:00:00 2001
From: Ville Tervo &lt;ville.tervo@nokia.com&gt;
Date: Wed, 3 Dec 2008 14:20:55 +0200
Subject: [PATCH] [BLUETOOTH] Support for deferring rfcomm connection

In order to decide if listening rfcomm socket should be accept()ed
the bd_addr of remote device needs to be known. This patch add
a socket option which defines timeout for deferring connection setup.

The connection is actually allowed after reading from socket first
time. Until reading first time writing to socket returns -ENOTCONN.
---
 include/net/bluetooth/bluetooth.h |    4 +
 include/net/bluetooth/rfcomm.h    |    6 ++-
 net/bluetooth/rfcomm/core.c       |   48 ++++++++++++++--
 net/bluetooth/rfcomm/sock.c       |  112 ++++++++++++++++++++++++++-----------
 4 files changed, 131 insertions(+), 39 deletions(-)

diff --git a/include/net/bluetooth/bluetooth.h b/include/net/bluetooth/bluetooth.h
index 6f8418b..1a0fa21 100644
--- a/include/net/bluetooth/bluetooth.h
+++ b/include/net/bluetooth/bluetooth.h
@@ -53,6 +53,10 @@
 #define SOL_SCO		17
 #define SOL_RFCOMM	18
 
+#define BT_INFORMATION	0x01
+
+#define BT_DEFER_SETUP	0x02
+
 #define BT_INFO(fmt, arg...) printk(KERN_INFO "Bluetooth: " fmt "\n" , ## arg)
 #define BT_DBG(fmt, arg...)  printk(KERN_INFO "%s: " fmt "\n" , __FUNCTION__ , ## arg)
 #define BT_ERR(fmt, arg...)  printk(KERN_ERR  "%s: " fmt "\n" , __FUNCTION__ , ## arg)
diff --git a/include/net/bluetooth/rfcomm.h b/include/net/bluetooth/rfcomm.h
index 4dc8d92..eaa1365 100644
--- a/include/net/bluetooth/rfcomm.h
+++ b/include/net/bluetooth/rfcomm.h
@@ -184,6 +184,7 @@ struct rfcomm_dlc {
 	u8            mscex;
 	u8            out;
 
+	u32           defer_setup;
 	u32           link_mode;
 
 	uint          mtu;
@@ -202,10 +203,11 @@ struct rfcomm_dlc {
 #define RFCOMM_RX_THROTTLED 0
 #define RFCOMM_TX_THROTTLED 1
 #define RFCOMM_TIMED_OUT    2
-#define RFCOMM_MSC_PENDING  3 
+#define RFCOMM_MSC_PENDING  3
 #define RFCOMM_AUTH_PENDING 4
 #define RFCOMM_AUTH_ACCEPT  5
 #define RFCOMM_AUTH_REJECT  6
+#define RFCOMM_DEFER_SETUP  7
 
 /* Scheduling flags and events */
 #define RFCOMM_SCHED_STATE  0
@@ -239,6 +241,7 @@ int  rfcomm_dlc_close(struct rfcomm_dlc *d, int reason);
 int  rfcomm_dlc_send(struct rfcomm_dlc *d, struct sk_buff *skb);
 int  rfcomm_dlc_set_modem_status(struct rfcomm_dlc *d, u8 v24_sig);
 int  rfcomm_dlc_get_modem_status(struct rfcomm_dlc *d, u8 *v24_sig);
+int  rfcomm_dlc_accept_conn(struct rfcomm_dlc *d);
 
 #define rfcomm_dlc_lock(d)     spin_lock(&amp;d-&gt;lock)
 #define rfcomm_dlc_unlock(d)   spin_unlock(&amp;d-&gt;lock)
@@ -305,6 +308,7 @@ struct rfcomm_pinfo {
 	struct rfcomm_dlc   *dlc;
 	u8     channel;
 	u32    link_mode;
+	u32    defer_setup;
 };
 
 int  rfcomm_init_sockets(void);
diff --git a/net/bluetooth/rfcomm/core.c b/net/bluetooth/rfcomm/core.c
index ba537fa..7878e3c 100644
--- a/net/bluetooth/rfcomm/core.c
+++ b/net/bluetooth/rfcomm/core.c
@@ -84,6 +84,8 @@ static struct rfcomm_session *rfcomm_session_create(bdaddr_t *src, bdaddr_t *dst
 static struct rfcomm_session *rfcomm_session_get(bdaddr_t *src, bdaddr_t *dst);
 static void rfcomm_session_del(struct rfcomm_session *s);
 
+static void rfcomm_dlc_accept(struct rfcomm_dlc *d);
+
 /* ---- RFCOMM frame parsing macros ---- */
 #define __get_dlci(b)     ((b &amp; 0xfc) &gt;&gt; 2)
 #define __get_channel(b)  ((b &amp; 0xf8) &gt;&gt; 3)
@@ -228,6 +230,11 @@ static int rfcomm_l2sock_create(struct socket **sock)
 	return err;
 }
 
+static inline u32 rfcomm_defer_setup(struct rfcomm_dlc *d)
+{
+	return d-&gt;defer_setup;
+}
+
 static inline int rfcomm_check_link_mode(struct rfcomm_dlc *d)
 {
 	struct sock *sk = d-&gt;session-&gt;sock-&gt;sk;
@@ -426,6 +433,7 @@ static int __rfcomm_dlc_close(struct rfcomm_dlc *d, int err)
 			d, d-&gt;state, d-&gt;dlci, err, s);
 
 	switch (d-&gt;state) {
+	case BT_OPEN:
 	case BT_CONNECTED:
 	case BT_CONFIG:
 	case BT_CONNECT:
@@ -540,6 +548,16 @@ int rfcomm_dlc_get_modem_status(struct rfcomm_dlc *d, u8 *v24_sig)
 	return 0;
 }
 
+
+int rfcomm_dlc_accept_conn(struct rfcomm_dlc *d)
+{
+	if (!d || !d-&gt;session || !d-&gt;session-&gt;sock || !d-&gt;session-&gt;sock-&gt;sk)
+		return -ENOTCONN;
+
+	rfcomm_dlc_accept(d);
+	return 0;
+}
+
 /* ---- RFCOMM sessions ---- */
 static struct rfcomm_session *rfcomm_session_add(struct socket *sock, int state)
 {
@@ -1190,6 +1208,7 @@ static int rfcomm_recv_sabm(struct rfcomm_session *s, u8 dlci)
 {
 	struct rfcomm_dlc *d;
 	u8 channel;
+	u32 defer_to;
 
 	BT_DBG("session %p state %ld dlci %d", s, s-&gt;state, dlci);
 
@@ -1211,8 +1230,14 @@ static int rfcomm_recv_sabm(struct rfcomm_session *s, u8 dlci)
 			if (rfcomm_check_link_mode(d)) {
 				set_bit(RFCOMM_AUTH_PENDING, &amp;d-&gt;flags);
 				rfcomm_dlc_set_timer(d, RFCOMM_AUTH_TIMEOUT);
-			} else
-				rfcomm_dlc_accept(d);
+			} else {
+				defer_to = rfcomm_defer_setup(d);
+				if (defer_to) {
+					set_bit(RFCOMM_DEFER_SETUP, &amp;d-&gt;flags);
+					rfcomm_dlc_set_timer(d, msecs_to_jiffies(defer_to));
+				} else
+					rfcomm_dlc_accept(d);
+			}
 		}
 		return 0;
 	}
@@ -1227,8 +1252,15 @@ static int rfcomm_recv_sabm(struct rfcomm_session *s, u8 dlci)
 		if (rfcomm_check_link_mode(d)) {
 			set_bit(RFCOMM_AUTH_PENDING, &amp;d-&gt;flags);
 			rfcomm_dlc_set_timer(d, RFCOMM_AUTH_TIMEOUT);
-		} else
-			rfcomm_dlc_accept(d);
+		} else {
+			defer_to = rfcomm_defer_setup(d);
+			if (defer_to) {
+				set_bit(RFCOMM_DEFER_SETUP, &amp;d-&gt;flags);
+				rfcomm_dlc_set_timer(d, msecs_to_jiffies(defer_to));
+			} else {
+				rfcomm_dlc_accept(d);
+			}
+		}
 	} else {
 		rfcomm_send_dm(s, dlci);
 	}
@@ -1722,8 +1754,12 @@ static inline void rfcomm_process_dlcs(struct rfcomm_session *s)
 			if (d-&gt;out) {
 				rfcomm_send_pn(s, 1, d);
 				rfcomm_dlc_set_timer(d, RFCOMM_CONN_TIMEOUT);
-			} else
-				rfcomm_dlc_accept(d);
+			} else {
+				if (test_bit(RFCOMM_DEFER_SETUP, &amp;d-&gt;flags))
+					return;
+				else
+					rfcomm_dlc_accept(d);
+			}
 			if (d-&gt;link_mode &amp; RFCOMM_LM_SECURE) {
 				struct sock *sk = s-&gt;sock-&gt;sk;
 				hci_conn_change_link_key(l2cap_pi(sk)-&gt;conn-&gt;hcon);
diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 8a972b6..9f3f259 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -103,9 +103,10 @@ static void rfcomm_sk_state_change(struct rfcomm_dlc *d, int err)
 			sock_set_flag(sk, SOCK_ZAPPED);
 			bt_accept_unlink(sk);
 		}
+		parent-&gt;sk_state = BT_CLOSED;
 		parent-&gt;sk_data_ready(parent, 0);
 	} else {
-		if (d-&gt;state == BT_CONNECTED)
+		if (d-&gt;state == BT_CONNECTED &amp;&amp; d-&gt;defer_setup)
 			rfcomm_session_getaddr(d-&gt;session, &amp;bt_sk(sk)-&gt;src, NULL);
 		sk-&gt;sk_state_change(sk);
 	}
@@ -267,11 +268,14 @@ static void rfcomm_sock_init(struct sock *sk, struct sock *parent)
 	if (parent) {
 		sk-&gt;sk_type = parent-&gt;sk_type;
 		pi-&gt;link_mode = rfcomm_pi(parent)-&gt;link_mode;
+		pi-&gt;defer_setup = rfcomm_pi(parent)-&gt;defer_setup;
 	} else {
 		pi-&gt;link_mode = 0;
+		pi-&gt;defer_setup = 0;
 	}
 
 	pi-&gt;dlc-&gt;link_mode = pi-&gt;link_mode;
+	pi-&gt;dlc-&gt;defer_setup = pi-&gt;defer_setup;
 }
 
 static struct proto rfcomm_proto = {
@@ -526,7 +530,7 @@ static int rfcomm_sock_accept(struct socket *sock, struct socket *newsock, int f
 
 	newsock-&gt;state = SS_CONNECTED;
 
-	BT_DBG("new socket %p", nsk);
+	BT_DBG("new socket %p, sock-&gt;state %d", nsk, sk-&gt;sk_state);
 
 done:
 	release_sock(sk);
@@ -567,6 +571,9 @@ static int rfcomm_sock_sendmsg(struct kiocb *iocb, struct socket *sock,
 
 	BT_DBG("sock %p, sk %p", sock, sk);
 
+	if (test_bit(RFCOMM_DEFER_SETUP, &amp;d-&gt;flags))
+		return -ENOTCONN;
+
 	lock_sock(sk);
 
 	while (len) {
@@ -635,6 +642,7 @@ static int rfcomm_sock_recvmsg(struct kiocb *iocb, struct socket *sock,
 			       struct msghdr *msg, size_t size, int flags)
 {
 	struct sock *sk = sock-&gt;sk;
+	struct rfcomm_dlc *d = rfcomm_pi(sk)-&gt;dlc;
 	int err = 0;
 	size_t target, copied = 0;
 	long timeo;
@@ -646,6 +654,9 @@ static int rfcomm_sock_recvmsg(struct kiocb *iocb, struct socket *sock,
 
 	BT_DBG("sk %p size %d", sk, size);
 
+	if (test_and_clear_bit(RFCOMM_DEFER_SETUP, &amp;d-&gt;flags))
+		return rfcomm_dlc_accept_conn(d);
+
 	lock_sock(sk);
 
 	target = sock_rcvlowat(sk, flags &amp; MSG_WAITALL, size);
@@ -725,20 +736,38 @@ static int rfcomm_sock_setsockopt(struct socket *sock, int level, int optname, c
 
 	lock_sock(sk);
 
-	switch (optname) {
-	case RFCOMM_LM:
-		if (get_user(opt, (u32 __user *) optval)) {
-			err = -EFAULT;
+	if (level == SOL_BLUETOOTH) {
+		switch (optname) {
+		case BT_DEFER_SETUP:
+			if (get_user(opt, (u32 __user *) optval)) {
+				err = -EFAULT;
+				break;
+			}
+
+			rfcomm_pi(sk)-&gt;defer_setup = opt;
+			break;
+
+		default:
+			err = -ENOPROTOOPT;
 			break;
 		}
+	} else if (level == SOL_RFCOMM) {
+		switch (optname) {
+		case RFCOMM_LM:
+			if (get_user(opt, (u32 __user *) optval)) {
+				err = -EFAULT;
+				break;
+			}
 
-		rfcomm_pi(sk)-&gt;link_mode = opt;
-		break;
+			rfcomm_pi(sk)-&gt;link_mode = opt;
+			break;
 
-	default:
+		default:
+			err = -ENOPROTOOPT;
+			break;
+		}
+	} else
 		err = -ENOPROTOOPT;
-		break;
-	}
 
 	release_sock(sk);
 	return err;
@@ -758,33 +787,47 @@ static int rfcomm_sock_getsockopt(struct socket *sock, int level, int optname, c
 
 	lock_sock(sk);
 
-	switch (optname) {
-	case RFCOMM_LM:
-		if (put_user(rfcomm_pi(sk)-&gt;link_mode, (u32 __user *) optval))
-			err = -EFAULT;
-		break;
-
-	case RFCOMM_CONNINFO:
-		if (sk-&gt;sk_state != BT_CONNECTED) {
-			err = -ENOTCONN;
+	if (level == SOL_RFCOMM) {
+		switch (optname) {
+		case RFCOMM_LM:
+			if (put_user(rfcomm_pi(sk)-&gt;link_mode, (u32 __user *) optval))
+				err = -EFAULT;
 			break;
-		}
 
-		l2cap_sk = rfcomm_pi(sk)-&gt;dlc-&gt;session-&gt;sock-&gt;sk;
+		case RFCOMM_CONNINFO:
+			if (sk-&gt;sk_state != BT_CONNECTED) {
+				err = -ENOTCONN;
+				break;
+			}
 
-		cinfo.hci_handle = l2cap_pi(l2cap_sk)-&gt;conn-&gt;hcon-&gt;handle;
-		memcpy(cinfo.dev_class, l2cap_pi(l2cap_sk)-&gt;conn-&gt;hcon-&gt;dev_class, 3);
+			l2cap_sk = rfcomm_pi(sk)-&gt;dlc-&gt;session-&gt;sock-&gt;sk;
 
-		len = min_t(unsigned int, len, sizeof(cinfo));
-		if (copy_to_user(optval, (char *) &amp;cinfo, len))
-			err = -EFAULT;
+			cinfo.hci_handle = l2cap_pi(l2cap_sk)-&gt;conn-&gt;hcon-&gt;handle;
+			memcpy(cinfo.dev_class, l2cap_pi(l2cap_sk)-&gt;conn-&gt;hcon-&gt;dev_class, 3);
 
-		break;
+			len = min_t(unsigned int, len, sizeof(cinfo));
+			if (copy_to_user(optval, (char *) &amp;cinfo, len))
+				err = -EFAULT;
 
-	default:
+			break;
+
+		default:
+			err = -ENOPROTOOPT;
+			break;
+		}
+	} else if (level == SOL_BLUETOOTH) {
+		switch (optname) {
+		case BT_DEFER_SETUP:
+			if (put_user(rfcomm_pi(sk)-&gt;defer_setup, (u32 __user *) optval))
+				err = -EFAULT;
+			break;
+
+		default:
+			err = -ENOPROTOOPT;
+			break;
+		}
+	} else
 		err = -ENOPROTOOPT;
-		break;
-	}
 
 	release_sock(sk);
 	return err;
@@ -884,7 +927,10 @@ int rfcomm_connect_ind(struct rfcomm_session *s, u8 channel, struct rfcomm_dlc *
 	bacpy(&amp;bt_sk(sk)-&gt;dst, &amp;dst);
 	rfcomm_pi(sk)-&gt;channel = channel;
 
-	sk-&gt;sk_state = BT_CONFIG;
+	if (rfcomm_pi(sk)-&gt;dlc-&gt;defer_setup)
+		sk-&gt;sk_state = BT_CONNECTED;
+	else
+		sk-&gt;sk_state = BT_CONFIG;
 	bt_accept_enqueue(parent, sk);
 
 	/* Accept connection and return socket DLC */
@@ -893,6 +939,8 @@ int rfcomm_connect_ind(struct rfcomm_session *s, u8 channel, struct rfcomm_dlc *
 
 done:
 	bh_unlock_sock(parent);
+	parent-&gt;sk_state_change(parent);
+
 	return result;
 }
 
-- 
1.6.0.4


["0001-hack-to-test-connection-defer-feature.patch" (text/x-patch)]

From d6510a66b1df0ff6da1049b8d3a8ba61ccc2cd6f Mon Sep 17 00:00:00 2001
From: Ville Tervo &lt;ville.tervo@nokia.com&gt;
Date: Wed, 3 Dec 2008 14:00:56 +0200
Subject: [PATCH] hack to test connection defer feature

---
 test/rctest.c |   32 +++++++++++++++++++++++++++++---
 1 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/test/rctest.c b/test/rctest.c
index 08620d4..11bc97f 100644
--- a/test/rctest.c
+++ b/test/rctest.c
@@ -81,6 +81,9 @@ static int secure = 0;
 static int socktype = SOCK_STREAM;
 static int linger = 0;
 static int timestamp = 0;
+static int defer_setup = 0;
+
+#define BT_DEFER_SETUP 0x02
 
 static float tv2fl(struct timeval tv)
 {
@@ -231,6 +234,16 @@ static void do_listen(void (*handler)(int sk))
 		goto error;
 	}
 
+	/* Enable deferred connection setup */
+	if (defer_setup &gt; 0) {
+		if (setsockopt(sk, SOL_BLUETOOTH, BT_DEFER_SETUP, &amp;defer_setup,
+			       sizeof(defer_setup))) {
+			syslog(LOG_ERR, "Can't enable BT_DEFER_SETUP: %s (%d)",
+							strerror(errno), errno);
+			goto error;
+		}
+	}
+
 	/* Listen for connections */
 	if (listen(sk, 10)) {
 		syslog(LOG_ERR,"Can not listen on the socket: %s (%d)",
@@ -286,6 +299,14 @@ static void do_listen(void (*handler)(int sk))
 			ba, conn.hci_handle,
 			conn.dev_class[2], conn.dev_class[1], conn.dev_class[0]);
 
+		if (defer_setup &gt; 0) {
+			syslog(LOG_INFO, "Waiting for %d msecs before making connection active",
+					  defer_setup - 1000);
+			usleep((defer_setup - 1000) * 1000);
+			close(nsk);
+			goto error;
+		}
+
 #if 0
 		/* Enable SO_TIMESTAMP */
 		if (timestamp) {
@@ -353,7 +374,7 @@ static void recv_mode(int sk)
 			//uint16_t l;
 			int r;
 
-			if ((r = recv(sk, buf, data_size, 0)) &lt;= 0) {
+			if ((r = recv(sk, buf, data_size, 0)) &lt; 0) {
 				if (r &lt; 0)
 					syslog(LOG_ERR, "Read failed: %s (%d)",
 							strerror(errno), errno);
@@ -510,7 +531,8 @@ static void usage(void)
 		"\t[-E] request encryption\n"
 		"\t[-S] secure connection\n"
 		"\t[-M] become master\n"
-		"\t[-T] enable timestamps\n");
+		"\t[-T] enable timestamps\n"
+		"\t[-F] deFerrred setup\n");
 }
 
 int main(int argc, char *argv[])
@@ -520,7 +542,7 @@ int main(int argc, char *argv[])
 
 	bacpy(&amp;bdaddr, BDADDR_ANY);
 
-	while ((opt=getopt(argc,argv,"rdscuwmnb:i:P:B:N:MAESL:C:D:T")) != EOF) {
+	while ((opt=getopt(argc,argv,"rdscuwmnb:i:P:B:N:MAESL:C:D:TF:")) != EOF) {
 		switch (opt) {
 		case 'r':
 			mode = RECV;
@@ -614,6 +636,10 @@ int main(int argc, char *argv[])
 			timestamp = 1;
 			break;
 
+		case 'F':
+			defer_setup = atoi(optarg);
+			break;
+
 		default:
 			usage();
 			exit(1);
-- 
1.6.0.4


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081205181114</emailId><senderName>Christian Birchinger</senderName><senderEmail>joker@netswarm.net</senderEmail><timestampReceived>2008-12-05 18:11:14-0400</timestampReceived><subject>How to avoid PS3 SIXAXIS mouse functionality</subject><body>

Hello

After some nasty workarounds i managed to configure the
Playstation 3 gamepad in bluetooth mode in a way that a
single press on the "PS" button registers the device as
bluetooth HID gamepad and is ready to use.

I'm using bluez-utils-3.36 with the input plugin.

The problem is that the gamepad also re registred as
a mouse input device:

/proc/bus/input/devices:
N: Name="PLAYSTATION(R)3 Controller"
H: Handlers=mouse1 event7 js2 

dbus info:
method return sender=:1.51 -&gt; dest=:1.70 reply_serial=2
array [
  string "/org/bluez/input/gamepad0"
]

While js and event is perfect, the mouse part causes
problems because it's not really a mouse device. You
cannot relativly control the mouse pointer. It only
gets temporarily moved when the left analog stick gets
moved then snaps back.

The big annoyance here is that i depend on evdev support
in X and that automaticaly adds everything as mouse when
detected. I did not manage to stop that behavious yet
(tested with AutoAddDevices==false in ServerFlags).

The old "hidd" daemon did only add js and event (no mouse).
This somehow tells me the gamepad doesn't tell the daemon
that it's also a mouse, but the new input plugin makes
something up (of course i could be wrong here).

In USB mode those gamepads also only get registred as
event and js devices (not mouse).

Can i somehow avoid that input.so in bluez-utils-3.36 adds
mouse support to gamepads?

Thanks for your help
Christian
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208160919</emailId><senderName>"J.R. Mauro"</senderName><senderEmail>jrm8005@gmail.com</senderEmail><timestampReceived>2008-12-08 16:09:19-0400</timestampReceived><subject>Re: Apple Mighty Mouse and aluminum keyboard woes</subject><body>

On Mon, Dec 8, 2008 at 4:27 AM, Bastien Nocera &lt;hadess@hadess.net&gt; wrote:
&gt; On Sun, 2008-12-07 at 20:52 -0500, J.R. Mauro wrote:
&gt;&gt; Hello,
&gt;&gt;
&gt;&gt; I recently purchased an Apple Bluetooth Mighty Mouse and it's been giving me
&gt;&gt; some grief. Both the mouse and the aluminum bluetooth keyboard I own fail to
&gt;&gt; show up with hcitool or hidd, but both of them seem to be registering with the
&gt;&gt; input subsystem as they both work. I can only imagine this is because I paired
&gt;&gt; them with OS X (since I couldn't pair them with Linux).
&gt;
&gt; You couldn't pair them in Linux because you forgot to enable the
&gt; Bluetooth adapter, eg. hciconfig's output is empty.

No, it's been on the whole time.

&gt;
&gt; Start the hid2hci daemon, and you will have Bluetooth.

I get "No devices in [HID, HCI] mode found" no matter what I run.

&gt;
&gt;&gt;  Despite those hiccups,
&gt;&gt; both of the devices *work* but the mouse is not sending scroll or squeeze
&gt;&gt; events. I don't really care about the squeeze events, but the lack of scrolling
&gt;&gt; is quite aggravating.
&gt;
&gt; It doesn't have scrolling because you're currently using the device in
&gt; "boot mode". Set it up properly using Bluetooth, and it'll work just
&gt; fine.

That's a bit of a chicken and egg problem, because things like hcitool
scan literally can't find the devices. I put both devices in
/etc/bluetooth/hcid.conf, is there something else I have to do to set
them up? The guides on the web were pretty vague.

Sorry if I'm asking newbie questions here. If there's a particular
guide I should look at, I'd appreciate an "RTFM" with a link :)

&gt;
&gt; Cheers
&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081208190751</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-08 19:07:51-0400</timestampReceived><subject>Re: [PATCH] Add parent dev in rfcomm tty sysfs registration</subject><body>

Hi Alban,

&gt; This is an attempt at getting the parent device to be bound to the sysfs 
&gt; entry of rfcomm tty.
&gt; This let hal detect it properly when connecting. No more.
&gt; 
&gt; Thus one have to :
&gt; $ rfcomm connect 0
&gt; after adding his configuration for the device to connect to in 
&gt; /etc/bluetooth/rfcomm.conf
&gt; One need a patch to hal (for to add the address and channel data to the 
&gt; hald/linux/device.c serial handler) and an fdi for  to add the  
&gt; capabilities  to get  the serial line to be recognized as a modem by 
&gt; NetworkManager.
&gt; 
&gt; Maybe it could be achieved at bind. Though this would either requires a 
&gt; change to rfcomm to get the sysfs data available at bind and not connect 
&gt; or to have hal poll bluez (I don't know yet if udev send event at rfcomm 
&gt; bind /dev/rfcommX creation so if polling could be avoided).
&gt; 
&gt; 
&gt; Also this does not address the lack of presence of rfcomm tty in 
&gt; /sys/devices. This I am too lost in the different device_move to know if 
&gt; it is registered in /sys/devices then moved to /sys/class/bluetooth or 
&gt; if something is missing for to get the entries in /sys/devices . Tty 
&gt; available documentation implying it should be automatic lead me to think 
&gt; device_move is the key of this issue.
&gt; 
&gt; So it is not a panacea but with this at least it becomes "possible" to 
&gt; get something out of hal and with a single script that rfcomm connect to 
&gt; get the bluetooth serial device in NetworkManager.

so how do you handle the case where we have BDADDR_ANY as source and
multiple adapters attached. At time of binding the RFCOMM TTY we don't
know which adapter it will use when actually opening it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209113715</emailId><senderName>Nigel Cunningham</senderName><senderEmail>ncunningham@crca.org.au</senderEmail><timestampReceived>2008-12-09 11:37:15-0400</timestampReceived><subject>Re: [PATCH] Bluetooth node manager causes up to ~3.25s delay in</subject><body>

Hi.

On Tue, 2008-12-09 at 12:24 +0100, Marcel Holtmann wrote:
&gt; Hi Nigel,
&gt; 
&gt; &gt; The bluetooth nodemanager function "nodemgr_host_thread" contains a loop
&gt; &gt; that calls try_to_freeze near the top of the loop, but then delays for
&gt; &gt; up to 3.25 seconds (plus time to do work) before getting back to the top
&gt; &gt; of the loop. When starting a cycle post-boot, this doesn't seem to bite,
&gt; &gt; but it is causing a noticeable delay at boot time, when freezing
&gt; &gt; processes prior to starting to read the image.
&gt; 
&gt; I don't wanna disappoint you, but IEEE1394 is actually Firewire and not
&gt; Bluetooth :)

Aww. Sorry. All these newfangled technologies confuse an old-timer like
me. Oh, wait. I'm not even 40 yet.

I'll try the right list this time, I hope!

Nigel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209123556</emailId><senderName>"sreevani medhahal"</senderName><senderEmail>sreevani.medhahal@gmail.com</senderEmail><timestampReceived>2008-12-09 12:35:56-0400</timestampReceived><subject>Re: bluez-4.22 + twinkle -&gt; Unable to lock headset</subject><body>

Hi,
 I too face the similar issue with Skype. Is there any workaround to
sort this issue.
contents of asoundrc:
Headset used Planetronics:P590
pcm.bluetooth {
        type bluetooth
        device 00:19:7F:22:B7:8A
        profile "voice"
}

version of Bluez used:4.17
kernel:2.6.27

Snippet of the /var/log/messages
Dec  9 14:34:07 training01 bluetoothd[15235]: Accepted new client
connection on unix socket (fd=25)
Dec  9 14:34:07 training01 bluetoothd[15235]: Audio API: received
BT_GETCAPABILITIES_REQ
Dec  9 14:34:07 training01 bluetoothd[15235]: Audio API: sending
BT_GETCAPABILITIES_RSP
Dec  9 14:34:07 training01 bluetoothd[15235]: Unix client disconnected (fd=25)
Dec  9 14:34:07 training01 bluetoothd[15235]: Accepted new client
connection on unix socket (fd=25)
Dec  9 14:34:07 training01 bluetoothd[15235]: Audio API: received
BT_GETCAPABILITIES_REQ
Dec  9 14:34:07 training01 bluetoothd[15235]: Audio API: sending
BT_GETCAPABILITIES_RSP
Dec  9 14:34:07 training01 bluetoothd[15235]: Audio API: received
BT_SETCONFIGURATION_REQ
Dec  9 14:34:07 training01 bluetoothd[15235]: config sco - device =
00:19:7F:22:B7:8A access_mode = 2
Dec  9 14:34:07 training01 bluetoothd[15235]: State changed
/org/bluez/hci0/dev_00_19_7F_22_B7_8A: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Dec  9 14:34:47 training01 bluetoothd[15235]: connect(): Connection
timed out (110)
Dec  9 14:34:47 training01 bluetoothd[15235]: Unable to lock headset
Dec  9 14:34:47 training01 bluetoothd[15235]: config failed
Dec  9 14:34:47 training01 bluetoothd[15235]: Audio API: sending
BT_SETCONFIGURATION_RSP

Regards,
Sreevani M
On Tue, Dec 9, 2008 at 12:12 AM, Luiz Augusto von Dentz
&lt;luiz.dentz@gmail.com&gt; wrote:
&gt; You basically already answer your question, if arecord -D JX10 -f
&gt; S16_LE | aplay -D JX10 -f S16_LE does work, twinkle should work too.
&gt; The problem seems to be that twinkle leaves the connection open and
&gt; attempt to acquire the lock again and again, this is probably a bad
&gt; use of alsa API by twinkle as snd_pcm_prepare should not be called
&gt; more than once.
&gt;
&gt; --
&gt; Luiz Augusto von Dentz
&gt; Engenheiro de Computação
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209124424</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-12-09 12:44:24-0400</timestampReceived><subject>Re: [PATCH] rfcomm/sock: fix build problem</subject><body>

From: Alexander Beregalov &lt;a.beregalov@gmail.com&gt;
Date: Tue, 9 Dec 2008 15:39:50 +0300

&gt; net/bluetooth/rfcomm/sock.c: In function 'rfcomm_sock_ioctl':
&gt; net/bluetooth/rfcomm/sock.c:795: error: 'sk' undeclared (first use in this function)
&gt; net/bluetooth/rfcomm/sock.c:795: error: (Each undeclared identifier is reported only once
&gt; net/bluetooth/rfcomm/sock.c:795: error: for each function it appears in.)
&gt; 
&gt; It is a conflict between a418b893
&gt; (Bluetooth: Enable per-module dynamic debug messages)
&gt; and 45555c0e
&gt; (bluetooth: fix warning in net/bluetooth/rfcomm/sock.c)
&gt; 
&gt; Signed-off-by: Alexander Beregalov &lt;a.beregalov@gmail.com&gt;

Already fixed in net-next-2.6.

BTW, your patch reintroduces a warning.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081209192227</emailId><senderName>Luca Santarelli</senderName><senderEmail>hrk@users.sourceforge.net</senderEmail><timestampReceived>2008-12-09 19:22:27-0400</timestampReceived><subject>Re: [PATCH] bluetooth usb hci: ISSC usb dongle with buggy SCO  support</subject><body>


Il giorno 09/dic/08, alle ore 00:07, Luca Santarelli ha scritto:

&gt;
&gt; Il giorno 07/dic/08, alle ore 09:19, Andrew Morton ha scritto:
&gt;
&gt;&gt; linux-next has:
&gt;&gt;
&gt;&gt; commit 12421b40b81d101d7535e03f1af197365adc932b
&gt;&gt; Author: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;&gt; Date:   Sun Nov 30 12:17:21 2008 +0100
&gt;&gt;
&gt;&gt;   Bluetooth: Remove deprecated hci_usb driver
&gt;&gt;
&gt;&gt;   The old hci_usb driver has been fully replaced with the new btusb  
&gt;&gt; driver
&gt;&gt;   and all major distributions switched to the new driver now. This  
&gt;&gt; removes
&gt;&gt;   it since it should not be used at all anymore.
&gt;&gt;
&gt;&gt; so please confirm that btusb correctly supports that hardware?
&gt;
&gt;
&gt; Thanks for the heads up! I'll compile the new sources and let you  
&gt; know if it's supported. However, since the hci_usb is being  
&gt; deprecated but not removed, shouldn't the patch be incorporated  
&gt; nonetheless?
&gt;
&gt; Luca

Ok, I'm back. I compiled the latest sources and the device is  
recognized and works with the new btusb driver. What about the  
deprecated driver? Will it be fixed or kept as it is?

Luca
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212013647</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:36:47-0400</timestampReceived><subject>Re: Clock control of a Bluetooth UART via hci_ll.c</subject><body>

Hi Nick,

&gt; (expecting to have to post this to LKML, but trying linux-bluetooth first)

the simple answer is yes, this is LKML stuff. And make sure that you
have Alan Cox on your CC list. He is the man that knows the TTY layer
the best.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212014114</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:41:14-0400</timestampReceived><subject>Re: Does anyone help me to setup PAN connection?</subject><body>

Hi,

&gt; Does anyone help me to setup PAN connection?
&gt; 
&gt; Environment
&gt; NAP Role : Note PC . Windows XP, JABRA a320s stack (BT address 00:16:38:BF:12:C4)
&gt; PAN Role : Desktop Linux 2.6.24-22-generic BlueZ 4.22 
&gt; 
&gt; 
&gt; I use dbus-send connect command like this.
&gt; #&gt;dbus-send --system --type=method_call --print-reply --dest="org.bluez" \
&gt; /org/bluez/10043/hci0/dev_00_16_38_BF_12_C4 org.bluez.Network.Connect \
&gt; string:"00001116-0000-1000-8000-00805f9b34fb"

might be a bug with the UUID. Try using "nap".

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081218155032</emailId><senderName>"Jeroen Egelmeers"</senderName><senderEmail>jeroen.egelmeers@tomtom.com</senderEmail><timestampReceived>2008-12-18 15:50:32-0400</timestampReceived><subject>BlueZ and Secure Simple Pairing</subject><body>

Hi.
I am using BlueZ 3.24 and
I am trying to enable Secure Simple Pairing. Does version 3.24 contain
proper functionality for SSP ? If not, which version does?
Furthermore, can you give a quick start how to use SSP with BlueZ
between my 2 devices? How should I determine/set the IO capabilities?

Thanks,
Kind regards,
   Jeroen
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212122044</emailId><senderName>Folkert van Heusden</senderName><senderEmail>folkert@vanheusden.com</senderEmail><timestampReceived>2008-12-12 12:20:44-0400</timestampReceived><subject>doing hcitool name [addr] while a hcitool inq is running</subject><body>

Hi,

Am I right that one cannot do a
	hcitool name 00:11:22:33:44:55
while a
	hcitool inq
is running on the same bluetooth device?


Folkert van Heusden

-- 
MultiTail is a versatile tool for watching logfiles and output of
commands. Filtering, coloring, merging, diff-view, etc.
http://www.vanheusden.com/multitail/
----------------------------------------------------------------------
Phone: +31-6-41278122, PGP-key: 1F28D8AE, www.vanheusden.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081218144833</emailId><senderName>"Victor Shcherbatyuk"</senderName><senderEmail>victor.shcherbatyuk@tomtom.com</senderEmail><timestampReceived>2008-12-18 14:48:33-0400</timestampReceived><subject>[PATCH] rfcomm/sock.c: rfcomm_sock_sendmsg() does not return error on a connection faulure</subject><body>

Hi,

We noticed a problem, when a connection from the remote device is
dropper the write() function does not return the error in the user
space, returning 0 instead - indicating that 0 bytes are sent. We've
also noticed that with some older kernels it used to work (2.6.13 vs
2.6.23-17). The patch fixes the problem.

Regards,
    Victor.

["sock.c.patch" (application/octet-stream)]

--- a/net/bluetooth/rfcomm/sock.c	2008-12-18 15:20:15.000000000 +0100
+++ b/net/bluetooth/rfcomm/sock.c	2008-12-18 15:18:00.000000000 +0100
@@ -575,8 +575,11 @@
 
 		skb = sock_alloc_send_skb(sk, size + RFCOMM_SKB_RESERVE,
 				msg-&gt;msg_flags &amp; MSG_DONTWAIT, &amp;err);
-		if (!skb)
+		if (!skb) {
+			if (sent == 0)
+				sent = err;
 			break;
+		}
 		skb_reserve(skb, RFCOMM_SKB_HEAD_RESERVE);
 
 		err = memcpy_fromiovec(skb_put(skb, size), msg-&gt;msg_iov, size);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219112712</emailId><senderName>Baptiste Mille-Mathias</senderName><senderEmail>baptiste.millemathias@gmail.com</senderEmail><timestampReceived>2008-12-19 11:27:12-0400</timestampReceived><subject>[bluez-gnome/proximity] replace g_timeout_add with</subject><body>

Hello,

Please find attached a patch to replace the usage of g_timeout_add with
g_timeout_add_seconds in the proximity application in bluez-gnome.
g_timeout_add_seconds does less wake up, ans so saves a little bit of
power.

Could someone review it and commit it?

thanks a lot.

Cheers.

-- 
Baptiste Mille-Mathias &lt;baptiste.millemathias@gmail.com&gt;

["bluez-gnome_565084.diff" (bluez-gnome_565084.diff)]

diff --git a/proximity/main.c b/proximity/main.c
index d295be5..71e9128 100644
--- a/proximity/main.c
+++ b/proximity/main.c
@@ -80,7 +80,7 @@ static void clicked_callback(GtkWidget *button, gpointer user_data)
 	if (error != NULL) {
 		gtk_statusbar_push(GTK_STATUSBAR(statusbar), 0,
 							error-&gt;message);
-		g_timeout_add(3000, message_remove, NULL);
+		g_timeout_add_seconds(3, message_remove, NULL);
 		g_error_free(error);
 	}
 }
@@ -100,7 +100,7 @@ static void cancel_callback(GtkWidget *button, gpointer user_data)
 	if (error != NULL) {
 		gtk_statusbar_push(GTK_STATUSBAR(statusbar), 0,
 							error-&gt;message);
-		g_timeout_add(3000, message_remove, NULL);
+		g_timeout_add_seconds(3, message_remove, NULL);
 		g_error_free(error);
 	}
 }
@@ -127,7 +127,7 @@ static void periodic_callback(GtkWidget *widget, gpointer user_data)
 		if (error != NULL) {
 			gtk_statusbar_push(GTK_STATUSBAR(statusbar), 0,
 							error-&gt;message);
-			g_timeout_add(3000, message_remove, NULL);
+			g_timeout_add_seconds(3, message_remove, NULL);
 			g_error_free(error);
 
 			gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(widget),
@@ -140,7 +140,7 @@ static void periodic_callback(GtkWidget *widget, gpointer user_data)
 		if (error != NULL) {
 			gtk_statusbar_push(GTK_STATUSBAR(statusbar), 0,
 							error-&gt;message);
-			g_timeout_add(3000, message_remove, NULL);
+			g_timeout_add_seconds(3, message_remove, NULL);
 			g_error_free(error);
 
 			gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(widget),

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081212015244</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-12 01:52:44-0400</timestampReceived><subject>To enablue DID in coming bluez release</subject><body>

Hi all,
Could you please enable this profile in the coming release?
To update:
Add VID,PID,VER setting in main.conf

I think the parse_config also need add code in order to parse these value to main_opt.did.

Thanks

Zhigang
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212015531</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:55:31-0400</timestampReceived><subject>Re: To enablue DID in coming bluez release</subject><body>

Hi Zhigang,

&gt; Could you please enable this profile in the coming release?
&gt; To update:
&gt; Add VID,PID,VER setting in main.conf
&gt; 
&gt; I think the parse_config also need add code in order to parse these value to main_opt.did.

I was expecting that you send me a patch for it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081216075551</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-16 07:55:51-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

[Attachment #2 (text/plain)]

Please see the attached 
The patch is validated in my pc with 4.18 version and works fine.
If it's ok for you please merge it into upstream.
Thanks


-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org] 
Sent: 2008Äê12Ô 12ÈÕ 9:56
To: Li, Zhigang
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: To enablue DID in coming bluez release

Hi Zhigang,

&gt; Could you please enable this profile in the coming release?
&gt; To update:
&gt; Add VID,PID,VER setting in main.conf
&gt; 
&gt; I think the parse_config also need add code in order to parse these value to main_opt.did.

I was expecting that you send me a patch for it.

Regards

Marcel



["main.conf" (application/octet-stream)]
["main.c" (text/plain)]

/*
 *
 *  BlueZ - Bluetooth protocol stack for Linux
 *
 *  Copyright (C) 2000-2001  Qualcomm Incorporated
 *  Copyright (C) 2002-2003  Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;
 *  Copyright (C) 2002-2008  Marcel Holtmann &lt;marcel@holtmann.org&gt;
 *
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

#ifdef HAVE_CONFIG_H
#include &lt;config.h&gt;
#endif

#include &lt;stdio.h&gt;
#include &lt;errno.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;signal.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/wait.h&gt;

#include &lt;bluetooth/bluetooth.h&gt;
#include &lt;bluetooth/hci.h&gt;
#include &lt;bluetooth/hci_lib.h&gt;

#include &lt;glib.h&gt;

#include &lt;dbus/dbus.h&gt;

#include "logging.h"

#include "hcid.h"
#include "sdpd.h"
#include "adapter.h"
#include "dbus-hci.h"
#include "dbus-common.h"
#include "agent.h"
#include "manager.h"
#include "storage.h"

#define HCID_DEFAULT_DISCOVERABLE_TIMEOUT 180 /* 3 minutes */

enum {
	HCID_SET_NAME,
	HCID_SET_CLASS,
	HCID_SET_PAGETO,
	HCID_SET_DISCOVTO,
};

struct main_opts main_opts;

static int child_pipe[2];

static GKeyFile *load_config(const char *file)
{
	GError *err = NULL;
	GKeyFile *keyfile;

	keyfile = g_key_file_new();

	g_key_file_set_list_separator(keyfile, ',');

	if (!g_key_file_load_from_file(keyfile, file, 0, &amp;err)) {
		error("Parsing %s failed: %s", file, err-&gt;message);
		g_error_free(err);
		g_key_file_free(keyfile);
		return NULL;
	}

	return keyfile;
}

static void parse_config(GKeyFile *config)
{
	GError *err = NULL;
	char *str;
	int val;

	if (!config)
		return;

	debug("parsing main.conf");

	str = g_key_file_get_string(config, "General",
					"OffMode", &amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("offmode=%s", str);
		if (g_str_equal(str, "DevDown"))
			main_opts.offmode = HCID_OFFMODE_DEVDOWN;
		g_free(str);
	}

	val = g_key_file_get_integer(config, "General",
					"DiscoverableTimeout",
					&amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("discovto=%d", val);
		main_opts.discovto = val;
		main_opts.flags |= 1 &lt;&lt; HCID_SET_DISCOVTO;
	}

	val = g_key_file_get_integer(config, "General",
					"PageTimeout",
					&amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("pageto=%d", val);
		main_opts.pageto = val;
		main_opts.flags |= 1 &lt;&lt; HCID_SET_PAGETO;
	}

	str = g_key_file_get_string(config, "General",
					"Name", &amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("name=%s", str);
		g_free(main_opts.name);
		main_opts.name = g_strdup(str);
		main_opts.flags |= 1 &lt;&lt; HCID_SET_NAME;
		g_free(str);
	}

	str = g_key_file_get_string(config, "General",
					"Class", &amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("class=%s", str);
		main_opts.class = strtol(str, NULL, 16);
		main_opts.flags |= 1 &lt;&lt; HCID_SET_CLASS;
		g_free(str);
	}

	val = g_key_file_get_integer(config, "General",
					"DiscoverSchedulerInterval",
					&amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("inqmode=%d", val);
		main_opts.inqmode = val;
	}
	str = g_key_file_get_string(config, "General",
					"VID/PID/VER", &amp;err);
	if (err) {
		debug("%s", err-&gt;message);
		g_clear_error(&amp;err);
	} else {
		debug("vid/pid/ver=%s", str);
		strcpy( main_opts.deviceid,str);
		g_free(str);
	}

	main_opts.link_mode = HCI_LM_ACCEPT;

	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |
						HCI_LP_HOLD | HCI_LP_PARK;
}

static void update_service_classes(const bdaddr_t *bdaddr, uint8_t value)
{
	struct hci_dev_list_req *dl;
	struct hci_dev_req *dr;
	int i, sk;

	sk = socket(AF_BLUETOOTH, SOCK_RAW, BTPROTO_HCI);
	if (sk &lt; 0)
		return;

	dl = g_malloc0(HCI_MAX_DEV * sizeof(*dr) + sizeof(*dl));

	dl-&gt;dev_num = HCI_MAX_DEV;
	dr = dl-&gt;dev_req;

	if (ioctl(sk, HCIGETDEVLIST, dl) &lt; 0) {
		close(sk);
		g_free(dl);
		return;
	}

	dr = dl-&gt;dev_req;

	for (i = 0; i &lt; dl-&gt;dev_num; i++, dr++) {
		struct hci_dev_info di;
		uint8_t cls[3];
		int dd;

		if (hci_devinfo(dr-&gt;dev_id, &amp;di) &lt; 0)
			continue;

		if (hci_test_bit(HCI_RAW, &amp;di.flags))
			continue;

		if (!hci_test_bit(HCI_UP, &amp;di.flags))
			continue;

		if (manager_get_adapter_class(di.dev_id, cls) &lt; 0)
			continue;

		dd = hci_open_dev(di.dev_id);
		if (dd &lt; 0)
			continue;

		set_service_classes(dd, cls, value);

		hci_close_dev(dd);

		manager_update_adapter(di.dev_id);
	}

	g_free(dl);

	close(sk);
}

/*
 * Device name expansion
 *   %d - device id
 */
static char *expand_name(char *dst, int size, char *str, int dev_id)
{
	register int sp, np, olen;
	char *opt, buf[10];

	if (!str &amp;&amp; !dst)
		return NULL;

	sp = np = 0;
	while (np &lt; size - 1 &amp;&amp; str[sp]) {
		switch (str[sp]) {
		case '%':
			opt = NULL;

			switch (str[sp+1]) {
			case 'd':
				sprintf(buf, "%d", dev_id);
				opt = buf;
				break;

			case 'h':
				opt = main_opts.host_name;
				break;

			case '%':
				dst[np++] = str[sp++];
				/* fall through */
			default:
				sp++;
				continue;
			}

			if (opt) {
				/* substitute */
				olen = strlen(opt);
				if (np + olen &lt; size - 1)
					memcpy(dst + np, opt, olen);
				np += olen;
			}
			sp += 2;
			continue;

		case '\\':
			sp++;
			/* fall through */
		default:
			dst[np++] = str[sp++];
			break;
		}
	}
	dst[np] = '\0';
	return dst;
}

static gboolean child_exit(GIOChannel *io, GIOCondition cond, void *user_data)
{
	int status, fd = g_io_channel_unix_get_fd(io);
	pid_t child_pid;

	if (read(fd, &amp;child_pid, sizeof(child_pid)) != sizeof(child_pid)) {
		error("child_exit: unable to read child pid from pipe");
		return TRUE;
	}

	if (waitpid(child_pid, &amp;status, 0) != child_pid)
		error("waitpid(%d) failed", child_pid);
	else
		debug("child %d exited", child_pid);

	return TRUE;
}

static void at_child_exit(void)
{
	pid_t pid = getpid();

	if (write(child_pipe[1], &amp;pid, sizeof(pid)) != sizeof(pid))
		error("unable to write to child pipe");
}

static void configure_device(int dev_id)
{
	struct hci_dev_info di;
	uint16_t policy;
	int dd;

	if (hci_devinfo(dev_id, &amp;di) &lt; 0)
		return;

	if (hci_test_bit(HCI_RAW, &amp;di.flags))
		return;

	dd = hci_open_dev(dev_id);
	if (dd &lt; 0) {
		error("Can't open device hci%d: %s (%d)",
						dev_id, strerror(errno), errno);
		return;
	}

	/* Set device name */
	if ((main_opts.flags &amp; (1 &lt;&lt; HCID_SET_NAME)) &amp;&amp; main_opts.name) {
		change_local_name_cp cp;

		memset(cp.name, 0, sizeof(cp.name));
		expand_name((char *) cp.name, sizeof(cp.name),
						main_opts.name, dev_id);

		hci_send_cmd(dd, OGF_HOST_CTL, OCF_CHANGE_LOCAL_NAME,
					CHANGE_LOCAL_NAME_CP_SIZE, &amp;cp);
	}

	/* Set device class */
	if ((main_opts.flags &amp; (1 &lt;&lt; HCID_SET_CLASS))) {
		write_class_of_dev_cp cp;
		uint32_t class;
		uint8_t cls[3];

		if (read_local_class(&amp;di.bdaddr, cls) &lt; 0) {
			class = htobl(main_opts.class);
			cls[2] = get_service_classes(&amp;di.bdaddr);
			memcpy(cp.dev_class, &amp;class, 3);
		} else {
			if (!(main_opts.scan &amp; SCAN_INQUIRY))
				cls[1] &amp;= 0xdf; /* Clear discoverable bit */
			cls[2] = get_service_classes(&amp;di.bdaddr);
			memcpy(cp.dev_class, cls, 3);
		}

		hci_send_cmd(dd, OGF_HOST_CTL, OCF_WRITE_CLASS_OF_DEV,
					WRITE_CLASS_OF_DEV_CP_SIZE, &amp;cp);
	}

	/* Set page timeout */
	if ((main_opts.flags &amp; (1 &lt;&lt; HCID_SET_PAGETO))) {
		write_page_timeout_cp cp;

		cp.timeout = htobs(main_opts.pageto);
		hci_send_cmd(dd, OGF_HOST_CTL, OCF_WRITE_PAGE_TIMEOUT,
					WRITE_PAGE_TIMEOUT_CP_SIZE, &amp;cp);
	}

	/* Set default link policy */
	policy = htobs(main_opts.link_policy);
	hci_send_cmd(dd, OGF_LINK_POLICY,
				OCF_WRITE_DEFAULT_LINK_POLICY, 2, &amp;policy);
}

static void init_device(int dev_id)
{
	struct hci_dev_req dr;
	struct hci_dev_info di;
	pid_t pid;
	int dd;

	/* Do initialization in the separate process */
	pid = fork();
	switch (pid) {
		case 0:
			atexit(at_child_exit);
			break;
		case -1:
			error("Fork failed. Can't init device hci%d: %s (%d)",
					dev_id, strerror(errno), errno);
		default:
			debug("child %d forked", pid);
			return;
	}

	dd = hci_open_dev(dev_id);
	if (dd &lt; 0) {
		error("Can't open device hci%d: %s (%d)",
					dev_id, strerror(errno), errno);
		exit(1);
	}

	memset(&amp;dr, 0, sizeof(dr));
	dr.dev_id = dev_id;

	/* Set link mode */
	dr.dev_opt = main_opts.link_mode;
	if (ioctl(dd, HCISETLINKMODE, (unsigned long) &amp;dr) &lt; 0) {
		error("Can't set link mode on hci%d: %s (%d)",
					dev_id, strerror(errno), errno);
	}

	/* Set link policy */
	dr.dev_opt = main_opts.link_policy;
	if (ioctl(dd, HCISETLINKPOL, (unsigned long) &amp;dr) &lt; 0 &amp;&amp;
							errno != ENETDOWN) {
		error("Can't set link policy on hci%d: %s (%d)",
					dev_id, strerror(errno), errno);
	}

	/* Start HCI device */
	if (ioctl(dd, HCIDEVUP, dev_id) &lt; 0 &amp;&amp; errno != EALREADY) {
		error("Can't init device hci%d: %s (%d)",
					dev_id, strerror(errno), errno);
		goto fail;
	}

	if (hci_devinfo(dev_id, &amp;di) &lt; 0)
		goto fail;

	if (hci_test_bit(HCI_RAW, &amp;di.flags))
		goto done;

done:
	hci_close_dev(dd);
	exit(0);

fail:
	hci_close_dev(dd);
	exit(1);
}

static void device_devreg_setup(int dev_id)
{
	struct hci_dev_info di;

	init_device(dev_id);

	if (hci_devinfo(dev_id, &amp;di) &lt; 0)
		return;

	if (!hci_test_bit(HCI_RAW, &amp;di.flags))
		manager_register_adapter(dev_id);
}

static void device_devup_setup(int dev_id)
{
	configure_device(dev_id);

	manager_start_adapter(dev_id);
	start_security_manager(dev_id);
}

static void init_all_devices(int ctl)
{
	struct hci_dev_list_req *dl;
	struct hci_dev_req *dr;
	int i;

	dl = g_try_malloc0(HCI_MAX_DEV * sizeof(struct hci_dev_req) + sizeof(uint16_t));
	if (!dl) {
		info("Can't allocate devlist buffer: %s (%d)",
							strerror(errno), errno);
		exit(1);
	}

	dl-&gt;dev_num = HCI_MAX_DEV;
	dr = dl-&gt;dev_req;

	if (ioctl(ctl, HCIGETDEVLIST, (void *) dl) &lt; 0) {
		info("Can't get device list: %s (%d)",
							strerror(errno), errno);
		exit(1);
	}

	for (i = 0; i &lt; dl-&gt;dev_num; i++, dr++) {
		info("HCI dev %d registered", dr-&gt;dev_id);
		device_devreg_setup(dr-&gt;dev_id);
		if (hci_test_bit(HCI_UP, &amp;dr-&gt;dev_opt)) {
			info("HCI dev %d already up", dr-&gt;dev_id);
			device_devup_setup(dr-&gt;dev_id);
		}
	}

	g_free(dl);
}

static void init_defaults(void)
{
	/* Default HCId settings */
	memset(&amp;main_opts, 0, sizeof(main_opts));
	main_opts.offmode	= HCID_OFFMODE_NOSCAN;
	main_opts.scan	= SCAN_PAGE;
	main_opts.mode	= MODE_CONNECTABLE;
	main_opts.name	= g_strdup("BlueZ");
	main_opts.discovto	= HCID_DEFAULT_DISCOVERABLE_TIMEOUT;

	if (gethostname(main_opts.host_name, sizeof(main_opts.host_name) - 1) &lt; 0)
		strcpy(main_opts.host_name, "noname");
}

static inline void device_event(GIOChannel *chan, evt_stack_internal *si)
{
	evt_si_device *sd = (void *) &amp;si-&gt;data;

	switch (sd-&gt;event) {
	case HCI_DEV_REG:
		info("HCI dev %d registered", sd-&gt;dev_id);
		device_devreg_setup(sd-&gt;dev_id);
		break;

	case HCI_DEV_UNREG:
		info("HCI dev %d unregistered", sd-&gt;dev_id);
		manager_unregister_adapter(sd-&gt;dev_id);
		break;

	case HCI_DEV_UP:
		info("HCI dev %d up", sd-&gt;dev_id);
		device_devup_setup(sd-&gt;dev_id);
		break;

	case HCI_DEV_DOWN:
		info("HCI dev %d down", sd-&gt;dev_id);
		manager_stop_adapter(sd-&gt;dev_id);
		stop_security_manager(sd-&gt;dev_id);
		break;
	}
}

static gboolean io_stack_event(GIOChannel *chan, GIOCondition cond, gpointer data)
{
	unsigned char buf[HCI_MAX_FRAME_SIZE], *ptr;
	evt_stack_internal *si;
	hci_event_hdr *eh;
	int type;
	size_t len;
	GIOError err;

	ptr = buf;

	if ((err = g_io_channel_read(chan, (gchar *) buf, sizeof(buf), &amp;len))) {
		if (err == G_IO_ERROR_AGAIN)
			return TRUE;

		error("Read from control socket failed: %s (%d)",
							strerror(errno), errno);
		return FALSE;
	}

	type = *ptr++;

	if (type != HCI_EVENT_PKT)
		return TRUE;

	eh = (hci_event_hdr *) ptr;
	if (eh-&gt;evt != EVT_STACK_INTERNAL)
		return TRUE;

	ptr += HCI_EVENT_HDR_SIZE;

	si = (evt_stack_internal *) ptr;
	switch (si-&gt;type) {
	case EVT_SI_DEVICE:
		device_event(chan, si);
		break;
	}

	return TRUE;
}

static GMainLoop *event_loop;

static void sig_term(int sig)
{
	g_main_loop_quit(event_loop);
}

static void sig_debug(int sig)
{
	toggle_debug();
}

static gboolean option_detach = TRUE;
static gboolean option_debug = FALSE;

static GOptionEntry options[] = {
	{ "nodaemon", 'n', G_OPTION_FLAG_REVERSE,
				G_OPTION_ARG_NONE, &amp;option_detach,
				"Don't run as daemon in background" },
	{ "debug", 'd', 0, G_OPTION_ARG_NONE, &amp;option_debug,
				"Enable debug information output" },
	{ NULL },
};

int main(int argc, char *argv[])
{
	GOptionContext *context;
	GError *err = NULL;
	struct sockaddr_hci addr;
	struct hci_filter flt;
	struct sigaction sa;
	GIOChannel *ctl_io, *child_io;
	uint16_t mtu = 0;
	GKeyFile *config;

	init_defaults();

	context = g_option_context_new(NULL);
	g_option_context_add_main_entries(context, options, NULL);

	if (g_option_context_parse(context, &amp;argc, &amp;argv, &amp;err) == FALSE) {
		if (err != NULL) {
			g_printerr("%s\n", err-&gt;message);
			g_error_free(err);
		} else
			g_printerr("An unknown error occurred\n");
		exit(1);
	}

	g_option_context_free(context);

	if (option_detach == TRUE) {
		if (daemon(0, 0)) {
			perror("Can't start daemon");
			exit(1);
		}
	}

	umask(0077);

	start_logging("bluetoothd", "Bluetooth daemon");

	memset(&amp;sa, 0, sizeof(sa));
	sa.sa_flags = SA_NOCLDSTOP;
	sa.sa_handler = sig_term;
	sigaction(SIGTERM, &amp;sa, NULL);
	sigaction(SIGINT,  &amp;sa, NULL);

	sa.sa_handler = sig_debug;
	sigaction(SIGUSR2, &amp;sa, NULL);

	sa.sa_handler = SIG_IGN;
	sigaction(SIGPIPE, &amp;sa, NULL);

	if (option_debug == TRUE) {
		info("Enabling debug information");
		enable_debug();
	}

	/* Create and bind HCI socket */
	if ((main_opts.sock = socket(AF_BLUETOOTH, SOCK_RAW, BTPROTO_HCI)) &lt; 0) {
		error("Can't open HCI socket: %s (%d)",
							strerror(errno), errno);
		exit(1);
	}

	/* Set filter */
	hci_filter_clear(&amp;flt);
	hci_filter_set_ptype(HCI_EVENT_PKT, &amp;flt);
	hci_filter_set_event(EVT_STACK_INTERNAL, &amp;flt);
	if (setsockopt(main_opts.sock, SOL_HCI, HCI_FILTER, &amp;flt, sizeof(flt)) &lt; 0) {
		error("Can't set filter: %s (%d)",
							strerror(errno), errno);
		exit(1);
	}

	addr.hci_family = AF_BLUETOOTH;
	addr.hci_dev = HCI_DEV_NONE;
	if (bind(main_opts.sock, (struct sockaddr *) &amp;addr, sizeof(addr)) &lt; 0) {
		error("Can't bind HCI socket: %s (%d)",
							strerror(errno), errno);
		exit(1);
	}

	config = load_config(CONFIGDIR "/main.conf");

	parse_config(config);

	if (pipe(child_pipe) &lt; 0) {
		error("pipe(): %s (%d)", strerror(errno), errno);
		exit(1);
	}

	child_io = g_io_channel_unix_new(child_pipe[0]);
	g_io_channel_set_close_on_unref(child_io, TRUE);
	g_io_add_watch(child_io,
			G_IO_IN | G_IO_ERR | G_IO_HUP | G_IO_NVAL,
			child_exit, NULL);
	g_io_channel_unref(child_io);

	agent_init();

	if (hcid_dbus_init() &lt; 0) {
		error("Unable to get on D-Bus");
		exit(1);
	}

	start_sdp_server(mtu, main_opts.deviceid, SDP_SERVER_COMPAT);
	set_service_classes_callback(update_service_classes);

	/* Loading plugins has to be done after D-Bus has been setup since
	 * the plugins might wanna expose some paths on the bus. However the
	 * best order of how to init various subsystems of the Bluetooth
	 * daemon needs to be re-worked. */
	plugin_init(config);

	event_loop = g_main_loop_new(NULL, FALSE);

	ctl_io = g_io_channel_unix_new(main_opts.sock);
	g_io_channel_set_close_on_unref(ctl_io, TRUE);

	g_io_add_watch(ctl_io, G_IO_IN, io_stack_event, NULL);

	g_io_channel_unref(ctl_io);

	/* Initialize already connected devices */
	init_all_devices(main_opts.sock);

	g_main_loop_run(event_loop);

	hcid_dbus_unregister();

	plugin_cleanup();

	stop_sdp_server();

	agent_exit();

	hcid_dbus_exit();

	g_main_loop_unref(event_loop);

	if (config)
		g_key_file_free(config);

	info("Exit");

	stop_logging();

	return 0;
}

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081216095957</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-16 09:59:57-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Resend:

--- a/main.c	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.c	Tue Dec 16 17:44:43 2008 +0800
@@ -173,6 +173,16 @@ static void parse_config(GKeyFile *confi
 		debug("inqmode=%d", val);
 		main_opts.inqmode = val;
 	}
+	str = g_key_file_get_string(config, "General",
+					"VID/PID/VER", &amp;err);
+	if (err) {
+		debug("%s", err-&gt;message);
+		g_clear_error(&amp;err);
+	} else {
+		debug("vid/pid/ver=%s", str);
+		strcpy( main_opts.deviceid,str);
+		g_free(str);
+	}
 
 	main_opts.link_mode = HCI_LM_ACCEPT;

--- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.conf	Tue Dec 16 17:50:31 2008 +0800
@@ -28,3 +28,9 @@ OffMode = NoScan
 # Discover scheduler interval used in Adapter.DiscoverDevices
 # The value is in seconds. Defaults is 0 to use controller scheduler
 DiscoverSchedulerInterval = 0
+
+
+# User verndor and product and version information are used in DID profile
+# ":" to identify the value. FFFF is reserved for VendorId by default.
+VID/PID/VER = 1234:5678:abcd
+


Thanks


-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] On Behalf Of Li, \
                Zhigang
Sent: 2008��12� 16�� 15:56
To: Marcel Holtmann
Cc: linux-bluetooth@vger.kernel.org
Subject: RE: To enablue DID in coming bluez release

Please see the attached 
The patch is validated in my pc with 4.18 version and works fine.
If it's ok for you please merge it into upstream.
Thanks


-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org] 
Sent: 2008��12� 12�� 9:56
To: Li, Zhigang
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: To enablue DID in coming bluez release

Hi Zhigang,

&gt; Could you please enable this profile in the coming release?
&gt; To update:
&gt; Add VID,PID,VER setting in main.conf
&gt; 
&gt; I think the parse_config also need add code in order to parse these value to \
&gt; main_opt.did.

I was expecting that you send me a patch for it.

Regards

Marcel


����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081216102928</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-12-16 10:29:28-0400</timestampReceived><subject>Re: To enablue DID in coming bluez release</subject><body>

Hi,

Couple of comments:

On Tue, Dec 16, 2008, Li, Zhigang wrote:
&gt;  		main_opts.inqmode = val;
&gt;  	}
&gt; +	str = g_key_file_get_string(config, "General",

Coding style: add empty line after the closing bracket.

&gt; +					"VID/PID/VER", &amp;err);

Did you agree with this "VID/PID/VER" name with Marcel? I'd have used
something like "DeviceID", "DeviceIDInfo" or "DIDInfo".

&gt; +		strcpy( main_opts.deviceid,str);

First, coding style: remove the extra space after the opening
parenthesis and add the missing one after the comma. Second, you're
overflowing main_opts.deviceid if the string provided in main.conf is
longer than 14 characters. So the call should be:
strncpy(main_opts.deviceid, src, sizeof(main_opts.deviceid));

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081217021709</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-17 02:17:09-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Please check it again.
Marcel mention it in IRC for VID/PID/VER

--- a/main.c	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.c	Wed Dec 17 09:57:37 2008 +0800
@@ -174,6 +174,17 @@ static void parse_config(GKeyFile *confi
 		main_opts.inqmode = val;
 	}
 
+	str = g_key_file_get_string(config, "General",
+					"VID/PID/VER", &amp;err);
+	if (err) {
+		debug("%s", err-&gt;message);
+		g_clear_error(&amp;err);
+	} else {
+		debug("vid/pid/ver=%s", str);
+		strncpy(main_opts.deviceid, str, sizeof(main_opts.deviceid));
+		g_free(str);
+	}
+
 	main_opts.link_mode = HCI_LM_ACCEPT;
 
 	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |
diff -r 65556502911d main.conf
--- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.conf	Tue Dec 16 17:50:31 2008 +0800
@@ -28,3 +28,9 @@ OffMode = NoScan
 # Discover scheduler interval used in Adapter.DiscoverDevices
 # The value is in seconds. Defaults is 0 to use controller scheduler
 DiscoverSchedulerInterval = 0
+
+
+# User verndor and product and version information are used in DID profile
+# ":" to identify the value. FFFF is reserved for VendorId by default.
+VID/PID/VER = 1234:5678:abcd
+

Thanks

-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] On Behalf Of Johan \
                Hedberg
Sent: 2008��12� 16�� 18:29
To: linux-bluetooth@vger.kernel.org
Subject: Re: To enablue DID in coming bluez release

Hi,

Couple of comments:

On Tue, Dec 16, 2008, Li, Zhigang wrote:
&gt; 		main_opts.inqmode = val;
&gt; 	}
&gt; +	str = g_key_file_get_string(config, "General",

Coding style: add empty line after the closing bracket.

&gt; +					"VID/PID/VER", &amp;err);

Did you agree with this "VID/PID/VER" name with Marcel? I'd have used
something like "DeviceID", "DeviceIDInfo" or "DIDInfo".

&gt; +		strcpy( main_opts.deviceid,str);

First, coding style: remove the extra space after the opening
parenthesis and add the missing one after the comma. Second, you're
overflowing main_opts.deviceid if the string provided in main.conf is
longer than 14 characters. So the call should be:
strncpy(main_opts.deviceid, src, sizeof(main_opts.deviceid));

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081217022502</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-12-17 02:25:02-0400</timestampReceived><subject>Re: To enablue DID in coming bluez release</subject><body>

Typo in main.conf: "verndor"


Li, Zhigang wrote:
&gt; Please check it again.
&gt; Marcel mention it in IRC for VID/PID/VER
&gt; 
&gt; --- a/main.c	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.c	Wed Dec 17 09:57:37 2008 +0800
&gt; @@ -174,6 +174,17 @@ static void parse_config(GKeyFile *confi
&gt; 		main_opts.inqmode = val;
&gt; 	}
&gt; 
&gt; +	str = g_key_file_get_string(config, "General",
&gt; +					"VID/PID/VER", &amp;err);
&gt; +	if (err) {
&gt; +		debug("%s", err-&gt;message);
&gt; +		g_clear_error(&amp;err);
&gt; +	} else {
&gt; +		debug("vid/pid/ver=%s", str);
&gt; +		strncpy(main_opts.deviceid, str, sizeof(main_opts.deviceid));
&gt; +		g_free(str);
&gt; +	}
&gt; +
&gt; 	main_opts.link_mode = HCI_LM_ACCEPT;
&gt; 
&gt; 	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |
&gt; diff -r 65556502911d main.conf
&gt; --- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.conf	Tue Dec 16 17:50:31 2008 +0800
&gt; @@ -28,3 +28,9 @@ OffMode = NoScan
&gt; # Discover scheduler interval used in Adapter.DiscoverDevices
&gt; # The value is in seconds. Defaults is 0 to use controller scheduler
&gt; DiscoverSchedulerInterval = 0
&gt; +
&gt; +
&gt; +# User verndor and product and version information are used in DID profile
&gt; +# ":" to identify the value. FFFF is reserved for VendorId by default.
&gt; +VID/PID/VER = 1234:5678:abcd
&gt; +
&gt; 
&gt; Thanks
&gt; 
&gt; -----Original Message-----
&gt; From: linux-bluetooth-owner@vger.kernel.org \
&gt;                 [mailto:linux-bluetooth-owner@vger.kernel.org] On Behalf Of Johan \
&gt;                 Hedberg
&gt; Sent: 2008��12� 16�� 18:29
&gt; To: linux-bluetooth@vger.kernel.org
&gt; Subject: Re: To enablue DID in coming bluez release
&gt; 
&gt; Hi,
&gt; 
&gt; Couple of comments:
&gt; 
&gt; On Tue, Dec 16, 2008, Li, Zhigang wrote:
&gt; 
&gt; &gt; 		main_opts.inqmode = val;
&gt; &gt; 	}
&gt; &gt; +	str = g_key_file_get_string(config, "General",
&gt; &gt; 
&gt; 
&gt; Coding style: add empty line after the closing bracket.
&gt; 
&gt; 
&gt; &gt; +					"VID/PID/VER", &amp;err);
&gt; &gt; 
&gt; 
&gt; Did you agree with this "VID/PID/VER" name with Marcel? I'd have used
&gt; something like "DeviceID", "DeviceIDInfo" or "DIDInfo".
&gt; 
&gt; 
&gt; &gt; +		strcpy( main_opts.deviceid,str);
&gt; &gt; 
&gt; 
&gt; First, coding style: remove the extra space after the opening
&gt; parenthesis and add the missing one after the comma. Second, you're
&gt; overflowing main_opts.deviceid if the string provided in main.conf is
&gt; longer than 14 characters. So the call should be:
&gt; strncpy(main_opts.deviceid, src, sizeof(main_opts.deviceid));
&gt; 
&gt; Johan
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; N�����r��y����b�X����v�^�)��{.n�+����{�n[���-�)����w*jg����������j/���z����������&amp;�)���a�����G���h��j:+v���w����
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081217023812</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-17 02:38:12-0400</timestampReceived><subject>Re: To enablue DID in coming bluez release</subject><body>

Hi Johan,

&gt; Couple of comments:
&gt; 
&gt; On Tue, Dec 16, 2008, Li, Zhigang wrote:
&gt; &gt;  		main_opts.inqmode = val;
&gt; &gt;  	}
&gt; &gt; +	str = g_key_file_get_string(config, "General",
&gt; 
&gt; Coding style: add empty line after the closing bracket.
&gt; 
&gt; &gt; +					"VID/PID/VER", &amp;err);
&gt; 
&gt; Did you agree with this "VID/PID/VER" name with Marcel? I'd have used
&gt; something like "DeviceID", "DeviceIDInfo" or "DIDInfo".

I think "DeviceID" sounds reasonable. Lets use that one.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081217031040</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-17 03:10:40-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Updated:
--- a/main.c	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.c	Wed Dec 17 11:57:47 2008 +0800
@@ -174,6 +174,17 @@ static void parse_config(GKeyFile *confi
 		main_opts.inqmode = val;
 	}
 
+	str = g_key_file_get_string(config, "General",
+					"DeviceID", &amp;err);
+	if (err) {
+		debug("%s", err-&gt;message);
+		g_clear_error(&amp;err);
+	} else {
+		debug("deviceid=%s", str);
+		strncpy(main_opts.deviceid, str, sizeof(main_opts.deviceid));
+		g_free(str);
+	}
+
 	main_opts.link_mode = HCI_LM_ACCEPT;
 
 	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |
diff -r 65556502911d main.conf
--- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
+++ b/main.conf	Tue Dec 17 11:57:51 2008 +0800
@@ -28,3 +28,9 @@ OffMode = NoScan
 # Discover scheduler interval used in Adapter.DiscoverDevices
 # The value is in seconds. Defaults is 0 to use controller scheduler
 DiscoverSchedulerInterval = 0
+
+
+# User verndor and product and version information are used in DID profile
+# ":" to identify the value. FFFF is reserved for VendorId by default.
+DeviceID = 1234:5678:abcd
+

-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] On Behalf Of Marcel \
                Holtmann
Sent: 2008��12� 17�� 10:38
To: Johan Hedberg
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: To enablue DID in coming bluez release

Hi Johan,

&gt; Couple of comments:
&gt; 
&gt; On Tue, Dec 16, 2008, Li, Zhigang wrote:
&gt; &gt; 		main_opts.inqmode = val;
&gt; &gt; 	}
&gt; &gt; +	str = g_key_file_get_string(config, "General",
&gt; 
&gt; Coding style: add empty line after the closing bracket.
&gt; 
&gt; &gt; +					"VID/PID/VER", &amp;err);
&gt; 
&gt; Did you agree with this "VID/PID/VER" name with Marcel? I'd have used
&gt; something like "DeviceID", "DeviceIDInfo" or "DIDInfo".

I think "DeviceID" sounds reasonable. Lets use that one.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081217195913</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-17 19:59:13-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Hi Zhigang,

so first things first. NO top-posting on this mailing list.

&gt; Updated:
&gt; --- a/main.c	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.c	Wed Dec 17 11:57:47 2008 +0800
&gt; @@ -174,6 +174,17 @@ static void parse_config(GKeyFile *confi
&gt;  		main_opts.inqmode = val;
&gt;  	}
&gt;  
&gt; +	str = g_key_file_get_string(config, "General",
&gt; +					"DeviceID", &amp;err);
&gt; +	if (err) {
&gt; +		debug("%s", err-&gt;message);
&gt; +		g_clear_error(&amp;err);
&gt; +	} else {
&gt; +		debug("deviceid=%s", str);
&gt; +		strncpy(main_opts.deviceid, str, sizeof(main_opts.deviceid));
&gt; +		g_free(str);
&gt; +	}
&gt; +
&gt;  	main_opts.link_mode = HCI_LM_ACCEPT;
&gt;  
&gt;  	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |

I always need patches against the latest GIT tree. Otherwise I can't
merge them and submitting them in a proper format helps me to apply
them.

&gt; diff -r 65556502911d main.conf
&gt; --- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.conf	Tue Dec 17 11:57:51 2008 +0800
&gt; @@ -28,3 +28,9 @@ OffMode = NoScan
&gt;  # Discover scheduler interval used in Adapter.DiscoverDevices
&gt;  # The value is in seconds. Defaults is 0 to use controller scheduler
&gt;  DiscoverSchedulerInterval = 0
&gt; +
&gt; +
&gt; +# User verndor and product and version information are used in DID profile
&gt; +# ":" to identify the value. FFFF is reserved for VendorId by default.
&gt; +DeviceID = 1234:5678:abcd

So the option should be commented out by default since otherwise every
installation now uses vendor id 1234 and that is actually a valid one.
Also the description above makes no sense.

I committed a patch by myself to the GIT tree now that should fix this.
However there is one thing missing. The DID supports USB based vendor
ids and Bluetooth based ones. So we need to support both. Feel free to
come up with something.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081218055546</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-12-18 05:55:46-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Hi Marcel,
If USB Vendor ID and Bluetooth Vendor ID are both exist which one you prefer in DID? \
We can't add both right? Thanks


-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org] 
Sent: 2008��12� 18�� 3:59
To: Li, Zhigang
Cc: Johan Hedberg; linux-bluetooth@vger.kernel.org
Subject: RE: To enablue DID in coming bluez release

Hi Zhigang,

so first things first. NO top-posting on this mailing list.

&gt; Updated:
&gt; --- a/main.c	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.c	Wed Dec 17 11:57:47 2008 +0800
&gt; @@ -174,6 +174,17 @@ static void parse_config(GKeyFile *confi
&gt; 		main_opts.inqmode = val;
&gt; 	}
&gt; 
&gt; +	str = g_key_file_get_string(config, "General",
&gt; +					"DeviceID", &amp;err);
&gt; +	if (err) {
&gt; +		debug("%s", err-&gt;message);
&gt; +		g_clear_error(&amp;err);
&gt; +	} else {
&gt; +		debug("deviceid=%s", str);
&gt; +		strncpy(main_opts.deviceid, str, sizeof(main_opts.deviceid));
&gt; +		g_free(str);
&gt; +	}
&gt; +
&gt; 	main_opts.link_mode = HCI_LM_ACCEPT;
&gt; 
&gt; 	main_opts.link_policy = HCI_LP_RSWITCH | HCI_LP_SNIFF |

I always need patches against the latest GIT tree. Otherwise I can't
merge them and submitting them in a proper format helps me to apply
them.

&gt; diff -r 65556502911d main.conf
&gt; --- a/main.conf	Tue Dec 16 17:43:24 2008 +0800
&gt; +++ b/main.conf	Tue Dec 17 11:57:51 2008 +0800
&gt; @@ -28,3 +28,9 @@ OffMode = NoScan
&gt; # Discover scheduler interval used in Adapter.DiscoverDevices
&gt; # The value is in seconds. Defaults is 0 to use controller scheduler
&gt; DiscoverSchedulerInterval = 0
&gt; +
&gt; +
&gt; +# User verndor and product and version information are used in DID profile
&gt; +# ":" to identify the value. FFFF is reserved for VendorId by default.
&gt; +DeviceID = 1234:5678:abcd

So the option should be commented out by default since otherwise every
installation now uses vendor id 1234 and that is actually a valid one.
Also the description above makes no sense.

I committed a patch by myself to the GIT tree now that should fix this.
However there is one thing missing. The DID supports USB based vendor
ids and Bluetooth based ones. So we need to support both. Feel free to
come up with something.

Regards

Marcel


����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081219070042</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 07:00:42-0400</timestampReceived><subject>Re: [PATCH] rfcomm/sock.c: rfcomm_sock_sendmsg() does not return</subject><body>

Hi Victor,

&gt; We noticed a problem, when a connection from the remote device is
&gt; dropper the write() function does not return the error in the user
&gt; space, returning 0 instead - indicating that 0 bytes are sent. We've
&gt; also noticed that with some older kernels it used to work (2.6.13 vs
&gt; 2.6.23-17). The patch fixes the problem.

that is a bug and your patch looks good. However can you use
git-format-patch and sent it again with proper Signed-off-by line for me
to apply.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212014427</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:44:27-0400</timestampReceived><subject>Re: Release Note for BlueZ versions</subject><body>

Hi Pavan,

&gt; How do I know what BlueZ versions refer to what Bluetooth specification &amp; confrom to which version ?
&gt; I am particularly interested about BlueZ 3.36.
&gt; 
&gt; It shows me a error "Can't read simple pairing mode" on a v2.1 hardware.

make sure you use hcidump -X -V to capture what is going on there. Maybe
your hardware doesn't support Simple Pairing. It is possible to built
2.1 devices without Simple Pairing support.

Also you should switch to 4.22 or something more recent.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212015253</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-12 01:52:53-0400</timestampReceived><subject>Re: bug in hci_read_remote_name?</subject><body>

Hi Erik,

&gt; I'm new to bluetooth and BlueZ, so it might be that I just don't know what I'm
&gt; talking about but this does not seem right.
&gt; 
&gt; The problem is in hci_read_remote_name
&gt; 
&gt; &lt;code&gt;
&gt; ...
&gt; char bt[20];
&gt; ba2str(&amp;bdaddr, bt);
&gt; printf("get name: %s\n", bt);
&gt; 
&gt; /* Get the name */
&gt; if (hci_read_remote_name(dd, &amp;bdaddr, sizeof(name_str), name_str, timeOut) &lt; 0)
&gt; {
&gt;   return -1;
&gt; }
&gt; 
&gt; printf("found name: %s\n",name_str);
&gt; ...
&gt; &lt;/code&gt;
&gt; 
&gt; &lt;printout&gt;
&gt; ...
&gt; get name: 00:17:D5:5A:86:85
&gt; get name: 00:1E:45:08:36:28
&gt; found name: SGH-X820
&gt; ...
&gt; &lt;/printout&gt;
&gt; 
&gt; The problem here is that I know for a fact that 00:1E:45:08:36:28 is not
&gt; SGH-X820, but should be named W910i, and that 00:17:D5:5A:86:85 is SGH-X820.
&gt; 
&gt; I'm using 1000 millis timeout for hci_read_remote_name, so my assumption is that
&gt; the time runs out before the response is received and when I ask with an other
&gt; bt address a few millis later I get the response for the earlier request.
&gt; 
&gt; So is it possible that this is a bug?
&gt; 
&gt; System is debian-40r5 standard installation installed today. Dont know how to
&gt; check BlueZ version.

you could call this a bug, but it is just a limitation with the name
request that is always problematic. Use the D-Bus interface to get the
names and this will be not a problem anymore.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212032244</emailId><senderName>"shy"</senderName><senderEmail>shyboysby@hotmail.com</senderEmail><timestampReceived>2008-12-12 03:22:44-0400</timestampReceived><subject>RE: how bluez supports ESCO link?</subject><body>

Hi, Marcel
Thanks for your response. In the latest stable kernel code, this code has
been modified and can answer for my question.
Brs
Shi Buyun 

-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org] 
Sent: 2008Äê12Ô 12ÈÕ 09:47
To: Shi Buyun-FVBP83
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: how bluez supports ESCO link?

Hi,

&gt; In the current linux 2.6.25 kernel code, can Bluez setup ESCO link?
&gt; I found in net/bluetooth/sco.c, sco_connect defined as:
&gt; 
&gt; static int sco_connect(struct sock *sk) {  if (lmp_esco_capable(hdev) 
&gt; &amp;&amp; !disable_esco)
&gt;   type = ESCO_LINK;
&gt;  else
&gt;   type = SCO_LINK;
&gt;  
&gt;  hcon = hci_connect(hdev, type, dst, HCI_AT_NO_BONDING);  } this code 
&gt; shows bluez supports ESCO link.
&gt;  
&gt; But in function struct hci_conn * hci_connect(struct hci_dev *hdev, 
&gt; int type, bdaddr_t *dst) {  if (type == SCO_LINK) {
&gt;   struct hci_conn *sco;
&gt;  
&gt;   if (!(sco = hci_conn_hash_lookup_ba(hdev, SCO_LINK, dst))) {
&gt;    if (!(sco = hci_conn_add(hdev, SCO_LINK, dst))) {
&gt;     hci_conn_put(acl);
&gt;     return NULL;
&gt;    }
&gt;   }
&gt;   acl-&gt;link = sco;
&gt;   sco-&gt;link = acl;
&gt;  
&gt;   hci_conn_hold(sco);
&gt;  
&gt;   if (acl-&gt;state == BT_CONNECTED &amp;&amp; 
&gt;     (sco-&gt;state == BT_OPEN || sco-&gt;state == BT_CLOSED))
&gt;    hci_add_sco(sco, acl-&gt;handle);
&gt;  
&gt;   return sco;
&gt;  } else {
&gt;   return acl;
&gt;  }
&gt; }
&gt; the else switch shows it does nothing when type NOT equal to SCO_LINK.
&gt; Should this code need to modify or this is intended to designed?

the hci_connect from a 2.6.27 kernel looks different. So you might wanna
test with a later kernel.

Regards

Marcel



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212091129</emailId><senderName>Per Thomas Jahr</senderName><senderEmail>perja@extern.uio.no</senderEmail><timestampReceived>2008-12-12 09:11:29-0400</timestampReceived><subject>Re: ObexFTP killing the Local SDP server</subject><body>

On Fri, 2008-12-12 at 02:47 +0100, Marcel Holtmann wrote:
&gt; Hi Pavan,
&gt; 
&gt; &gt; I have a blueZ [version 3.35, wrongly claimed as 3.36] hcid daemon running on a \
&gt; &gt; machine, and I have put on it an ObexFTP daemon application [openobex + obexftp] \
&gt; &gt; which is statically linked with [bluez-libs-3.36]. 
&gt; &gt; The problem I face is, when I start obexftpd it says cannot register with SDP \
&gt; &gt; server, register to SDP Server failed, and comes out &amp; then waits for a \
&gt; &gt; connecttion. 
&gt; &gt; When I looked into it, it was failing in the function "sdp_connect_local" in \
&gt; &gt; bluez-libs/src/sdp.c &amp; it also caused the SDP server to kill, So I cannot even do \
&gt; &gt; an sdptool browse local after this. [I checked sdptool browse local before \
&gt; &gt; running obexftpd &amp; it is fine...] 
&gt; &gt; Is it a problem with permissions given to unix domain sockets on platform ? Or \
&gt; &gt; something to do with the version mis-match ? Or something totally different ?
&gt; 
&gt; I don't know. Your system seems to be screwed up. Why don't you start
&gt; using something more recent like 4.22.

If you are on Fedora, there was an security update of dbus a couple of
days ago that screwed up bluetooth (and a couple of other things) for
most users. Maybe that is the problem.

http://forums.fedoraforum.org/showthread.php?t=207069 

-- 
Cheers
Per Thomas

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081212220036</emailId><senderName>Clemens Cap</senderName><senderEmail>clemens.cap@uni-rostock.de</senderEmail><timestampReceived>2008-12-12 22:00:36-0400</timestampReceived><subject>Re: Question about power tables or other transmit power limit</subject><body>

Hello Florian,

we are researching a similar issue.

Marcel Holtmann wrote:
&gt;&gt; we are looking into limiting transmit power for our bluetooth file 
&gt;&gt; server project. The idea is to limit sending radius so that people 
&gt;&gt; don't feel harassed if they do not want to receive files.
&gt;&gt;
&gt;&gt; First we tried to read the RSSI during device discovery and base our 
&gt;&gt; decision on that. But the readings varied too much because of power 
&gt;&gt; saving methods like power tables.

RSSI does not work - power regulation mechanisms compensate signal 
strength loss and you only get indications of signal break down near at 
the limit of the range. Better approaches may be LQ, BER, inquiry 
response rates, l2ping delay rates and others. There are plenty of 
recent research papers on this at ieee or acm digital libraries which do 
not go rather deep but are proofs of concepts. We have a student digging 
into fusion concepts of the various indicators using statistical 
filtering approaches.

&gt;&gt; power tables with the bccmd. Unfortunately, the dongle doesn't seem to 
&gt;&gt; accept the change. After setting the value and re-reading it, the 
&gt;&gt; change is gone:
&gt;&gt;
&gt;&gt; [root@horst Desktop]# bccmd psget 0x0017
&gt;&gt; Maximum transmit power: 0x0004 (4)

First, make sure that you write into the correct memory bank (find out 
the memory structure using bccmd).

Second make sure you warmstart the dongle after adaption and be aware 
that the bluecore only reacts to a PS key value at certain moments 
during the operation cycle. There is not an immediate reaction of the bc 
to the ps key value.

&gt;&gt; I also tried dump all PS keys and restoring the modified dump - same 
&gt;&gt; issue.

Which dongles are you using?

This does not work with most class 2 dongles. Took us a while to figure 
that out as well.

&gt;&gt; Does anybody have experience with this? Do we need special BT dongles? 
&gt;&gt; We are also inquiring with CSR at the moment, but using a windows 
&gt;&gt; software is not an option, as our project is using embedded Linux (of 
&gt;&gt; course :).
&gt; 
&gt; this is a hardware detail that you better discuss with CSR people since 
&gt; while I know a lot about their hardware, I am not that deep into all the 
&gt; details. And messing with PS keys can result in unexpected things.

Beware of this remark... We already "consumed" 3 dongles by typos and 
mistakes in setting up incorrect ps keys. We got them working again, but 
it took us a while to "unbrick" them.


Please let me know if you get some results regarding the power table. We 
currently are trying this approach but without much success lately.

Best regards
Clemens.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081213010246</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-13 01:02:46-0400</timestampReceived><subject>Re: Adapter API - Devices property not updated if connection initiated by remote device</subject><body>

Hi

On Fri, Dec 12, 2008 at 10:28 AM, Johan Hedberg &lt;johan.hedberg@nokia.com&gt; wrote:
&gt; There definitely needs to be a way to know that a remote device has
&gt; connected to us even if it is not paired. I think we should just
&gt; populate the Devices list in this case and then remove the device from
&gt; it once it disconnects (if it didn't pair before that) and also send all
&gt; appropriate signals while doing this. For knowing if the device is
&gt; paired or not we already have the separate Paired property.

We could create the device object, but we should be careful to not
start a service discovery and end up with this device on the storage.
Note that this can be a security problem, since normally connections
should at least trigger authorization which requires the object
anyway, so someone is not really asking to the agent to authorize a
incoming connection.


-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081213164141</emailId><senderName>Thomas Liebetraut</senderName><senderEmail>thomas@tommie-lie.de</senderEmail><timestampReceived>2008-12-13 16:41:41-0400</timestampReceived><subject>Re: How to set link policy with Logitech diNovo dongle</subject><body>

Marcel Holtmann schrieb:
&gt; as long as you get one with a CSR or Broadcom chip and Bluetooth 2.1
&gt; your are in a good position. The new ones are really really tiny and
&gt; stick only out 1cm or so. Personally I prefer CSR based dongles.
Everything works now with a new CSR dongle. And it sticks out less than
a centimeter ;-)

Thanks for all your help.

Regards,
Thomas


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081217141652</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-17 14:16:52-0400</timestampReceived><subject>Re: [PATCH] sbc: bitstream packing optimization for encoder.</subject><body>

On Friday 12 December 2008 17:23:33 ext Christian Hoene wrote:
&gt; Hi all,
&gt;
&gt; next week I will discuss the bug fixing of SBC with Jaska Uimonen, who is
&gt; ill this week.
&gt;
&gt; The sound quality of the fix point implementation still remains below of
&gt; the quality of the floating point version.

Has the sound quality improved with the latest patches?

By the way, which floating point version do you have in mind? Is it btsco,
which is referenced from this wiki page: http://wiki.bluez.org/wiki/SBC ?

I tried to have a look at btsco, but it seems to be much worse quality wise
than the fixed point version with an updated filtering function. I tried to
encode some audio sample, decode it back and compare result with the
original file in both cases.

Also I compared 32-bit fixed point vs. 16-bit fixed point, and looks like
16-bit fixed point version has a sufficient precision. Anyway, the values,
received from the filter, are quantized later and much more information
about lower order bits is usually lost at this stage.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219065857</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 06:58:57-0400</timestampReceived><subject>Re: BlueZ and Secure Simple Pairing</subject><body>

Hi Jeroen,

&gt; I am using BlueZ 3.24 and
&gt; I am trying to enable Secure Simple Pairing. Does version 3.24 contain
&gt; proper functionality for SSP ? If not, which version does?
&gt; Furthermore, can you give a quick start how to use SSP with BlueZ
&gt; between my 2 devices? How should I determine/set the IO capabilities?

it is a better idea to use 4.22 for Simple Pairing support and it will
be enabled by default if the hardware supports it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219070202</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 07:02:02-0400</timestampReceived><subject>Re: doing hcitool name [addr] while a hcitool inq is running</subject><body>

Hi Folkert,

&gt; Am I right that one cannot do a
&gt; 	hcitool name 00:11:22:33:44:55
&gt; while a
&gt; 	hcitool inq
&gt; is running on the same bluetooth device?

and that is expected. You can do a page, while doing inquiry and vice
versa.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219073633</emailId><senderName>event</senderName><senderEmail>event.riga@gmail.com</senderEmail><timestampReceived>2008-12-19 07:36:33-0400</timestampReceived><subject>Re: [PATCH] Gateway profile</subject><body>

Hello Marcel,

Thank you for your comments. Here are reworked fixed patches attached.
I've missed when you changed repo :).

I've noticed IPC infrastructure and going to make use of it in future version.

I fully agree for code style. Sorry for that. Was too stupid to setup
my editor correctly :).

Vale,
event



On Wed, Dec 17, 2008 at 04:48, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Leonid,
&gt;
&gt;&gt; I've implemented gateway profile. I've tested basic things, like
&gt;&gt; place/cancel/answer call. Others are in development. Some could not be
&gt;&gt; tested as my carrier doesn't provide corresponding services (like
&gt;&gt; 3-way call, etc.) so any help welcome.
&gt;
&gt; thanks for the works, but can you please base the patch against the
&gt; latest GIT tree. It is kinda hard to review things that might already
&gt; have been implemented like sco_listen.
&gt;
&gt;  audio/audio-api.txt  |   94 +++++
&gt;  audio/device.h       |    7
&gt;  audio/gateway.c      |  938 +++++++++++++++++++++++++++++++++++++++++++++++++++
&gt;  audio/gateway.h      |   11
&gt;  audio/manager.c      |  124 ++++--
&gt;  common/glib-helper.c |   85 +++-
&gt;  common/glib-helper.h |    1
&gt;  7 files changed, 1205 insertions(+), 55 deletions(-)
&gt;
&gt; So any changes to glib-helper.[ch] have to be in a separate patch and
&gt; need to be discussed independent from the gateway implementation.
&gt;
&gt; Any audio-api.txt stuff should also go separately since that has to be
&gt; discussed. Also we can't send PCM data over D-Bus. It just doesn't work
&gt; like that. We do have the internal IPC for that and plugins for ALSA,
&gt; GStreamer and PulseAudio that should be used.
&gt;
&gt; However the most important part is that you follow the coding style and
&gt; that is the kernel coding style. You make it really hard for us to
&gt; review the code like this and it can't be applied. I really want you to
&gt; add support for the gateway role to BlueZ, but the overall code in the
&gt; project needs to follow the same rules.
&gt;
&gt; So please fix these issues first and then we do a deep review of it.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;
&gt;

["gateway.patch" (application/octet-stream)]
["audio-api.patch" (application/octet-stream)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219130407</emailId><senderName>"Victor Shcherbatyuk"</senderName><senderEmail>victor.shcherbatyuk@tomtom.com</senderEmail><timestampReceived>2008-12-19 13:04:07-0400</timestampReceived><subject>RE: [PATCH] rfcomm/sock.c: rfcomm_sock_sendmsg() does not return error on a connection faulure</subject><body>

Hi Marcel,

Is this ok?

Regards,
   Victor.

-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org]=20
Sent: Friday, December 19, 2008 8:01 AM
To: Victor Shcherbatyuk
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: [PATCH] rfcomm/sock.c: rfcomm_sock_sendmsg() does not
return error on a connection faulure

Hi Victor,

&gt; We noticed a problem, when a connection from the remote device is
&gt; dropper the write() function does not return the error in the user
&gt; space, returning 0 instead - indicating that 0 bytes are sent. We've
&gt; also noticed that with some older kernels it used to work (2.6.13 vs
&gt; 2.6.23-17). The patch fixes the problem.

that is a bug and your patch looks good. However can you use
git-format-patch and sent it again with proper Signed-off-by line for me
to apply.

Regards

Marcel



["0001-Fixed-rfcomm_sock_sendmsg-to-return-an-error-on-th.patch" (application/octet-stream)]

From 7abbaf127fd62f5bd3b2a7fc02b5253bac299b40 Mon Sep 17 00:00:00 2001
From: Victor Shcherbatyuk &lt;Victor.Shcherbatyuk@tomtom.com&gt;
Date: Fri, 19 Dec 2008 13:56:58 +0100
Subject: [PATCH] Fixed rfcomm_sock_sendmsg() to return an error on the connection failure


Signed-off-by: Victor Shcherbatyuk &lt;Victor.Shcherbatyuk@tomtom.com&gt;
---
 net/bluetooth/rfcomm/sock.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 8a972b6..99e65af 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -575,8 +575,11 @@ static int rfcomm_sock_sendmsg(struct kiocb *iocb, struct socket *sock,
 
 		skb = sock_alloc_send_skb(sk, size + RFCOMM_SKB_RESERVE,
 				msg-&gt;msg_flags &amp; MSG_DONTWAIT, &amp;err);
-		if (!skb)
+		if (!skb) {
+			if (sent == 0)
+				sent = err;
 			break;
+		}
 		skb_reserve(skb, RFCOMM_SKB_HEAD_RESERVE);
 
 		err = memcpy_fromiovec(skb_put(skb, size), msg-&gt;msg_iov, size);
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219175140</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 17:51:40-0400</timestampReceived><subject>Re: [bluez-gnome/proximity] replace g_timeout_add with</subject><body>

Hi Baptiste,

&gt; Please find attached a patch to replace the usage of g_timeout_add with
&gt; g_timeout_add_seconds in the proximity application in bluez-gnome.
&gt; g_timeout_add_seconds does less wake up, ans so saves a little bit of
&gt; power.

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219180040</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 18:00:40-0400</timestampReceived><subject>RE: To enablue DID in coming bluez release</subject><body>

Hi Zhigang,

please stop top-posting. This is an open source mailing list and we do
bottom posting and inline quoting.

&gt; If USB Vendor ID and Bluetooth Vendor ID are both exist which one you prefer in \
&gt; DID? We can't add both right?

Default is Bluetooth since we are doing Bluetooth here and not USB. USB
would need a specific prefix. So I prefer usb:1223:1233:1223 for
indicating USB ids and without we default to Bluetooth. Care to send a
patch for it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081101000409</emailId><senderName>Fiorellino</senderName><senderEmail>fiorellino@gmail.com</senderEmail><timestampReceived>2008-11-01 00:04:09-0400</timestampReceived><subject>Re: any TFM to read about BlueZ 4.x setup? (almost solved)</subject><body>

Hi,

and thanks a lot Sreevani.

Thanks to your hint I got much closer. I think now the pairing is
done, I just need to work on xorg.conf configuration to accept the
keyboard input. Now I see the led blinking when I press buttons, but
they don't seem to reach my X.

Anyway, some hints for future people in trouble like me. Sorry if some
steps are missing, but I didn't trace everything so I will use my
memory a lot.

My aim was to pair my wireless keyboard using just command line tools.
For some reason, using 3.xx the pairing was not asking me any PIN.

First, compile the main package (latest bluez-4.xx.tar.gz from
http://www.bluez.org/download/)

If you don't usually compile you need a lot of additional packages
(check README for a list of packages).

after compiling hciconfig will list your devices.

type hciconfig &lt;yourdev&gt; up (e.g. hciconfig hci0 up)

search for available devices: hcitool scan (remember to put your
device in discoverable mode)

so far so good... now it's were it got tricky for me. hcid (from bluez
3.xx) got renamed bluetoothd in bluez 4.xx ...

you can run it FOR NOW this way: bluetooth -nd for your tests...

then go in the test folder and run:

voyage:~/bluez-4.17/test# ./simple-agent hci0 00:18:00:00:78:86
(obviously this will be the HW address you got from hcitool scan)
RequestPinCode (/org/bluez/hci0/dev_00_18_00_00_78_86)
Enter PIN Code: 2233
Release
New device (/org/bluez/hci0/dev_00_18_00_00_78_86)

Again, if you don't have python you might need to install some stuff
(I needed python python-gtk2 python-dbus)

Is that simple... :)

Cheers,

alfonso

On Fri, Oct 31, 2008 at 11:46 AM, sreevani medhahal
&lt;sreevani.medhahal@gmail.com&gt; wrote:
&gt; Hi,
&gt;  Under the test folder in bluez. there is a python script
&gt; simple-agent which allows to do pairing on the command line.
&gt; format:./simple-agent hci0 &lt;bd_addr&gt;
&gt;
&gt; let me know if it doesnt work.
&gt; Regards,
&gt; Sreevani
&gt;
&gt; On Fri, Oct 31, 2008 at 3:10 PM, Fiorellino &lt;fiorellino@gmail.com&gt; wrote:
&gt;&gt; Hi there,
&gt;&gt;
&gt;&gt; http://wiki.bluez.org/wiki/HOWTO/Bonding refers to bluez-gnome
&gt;&gt; (graphical tool) and passkey-agent.c which is not any more in any
&gt;&gt; package (checked bluez-4.17.tar.gz bluez-gnome-1.8.tar.gz
&gt;&gt; bluez-firmware-1.2.tar.gz and bluez-hcidump-1.42.tar.gz).
&gt;&gt;
&gt;&gt; Is there any way to do pairing using command line tools?
&gt;&gt;
&gt;&gt; Can anyone please post an example of pure command line bonding / pairing?
&gt;&gt;
&gt;&gt; Thank you,
&gt;&gt;
&gt;&gt; alfonso
&gt;&gt; --
&gt;&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt;&gt; the body of a message to majordomo@vger.kernel.org
&gt;&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081101011930</emailId><senderName>Fiorellino</senderName><senderEmail>fiorellino@gmail.com</senderEmail><timestampReceived>2008-11-01 01:19:30-0400</timestampReceived><subject>wireless keyboard still not working after "supposedly" correct pairing</subject><body>

Hi,

seems I was too quick to judge.

I realized that under Windows no led blinks when the keyboard works
properly, so I suspect there is still some problem.

Also, after the "correct" pairing happens, hcidump does not show
anything when I press keys on the keboard. I don't have anything else
as a reference, but that doesn't sound right.

Some output for debugging, if someone with more experience has the
chance to look into it.

Thanks for any hint,

alfonso

##########################
voyage:~/bluez-4.17/test# ./simple-agent hci0 00:18:00:00:78:86
##########################
Creating device failed: org.bluez.Error.ConnectionAttemptFailed: Network is down
voyage:~/bluez-4.17/test# ./simple-agent hci0 00:18:00:00:78:86
RequestPinCode (/org/bluez/hci0/dev_00_18_00_00_78_86)
Enter PIN Code: 123456
Release
New device (/org/bluez/hci0/dev_00_18_00_00_78_86)


##########################
voyage:~# bluetoothd -nd
##########################
bluetoothd[7029]: Bluetooth daemon
bluetoothd[7029]: Enabling debug information
bluetoothd[7029]: parsing main.conf
bluetoothd[7029]: offmode=NoScan
bluetoothd[7029]: discovto=0
bluetoothd[7029]: pageto=8192
bluetoothd[7029]: name=%h-%d
bluetoothd[7029]: class=0x000100
bluetoothd[7029]: inqmode=0
bluetoothd[7029]: Starting SDP server
bluetoothd[7029]: Loading plugins /usr/local/lib/bluetooth/plugins
bluetoothd[7029]: Parsing /etc/bluetooth/network.conf failed: No such
file or directory
bluetoothd[7029]: Config options: InterfacePrefix=bnep%d,
PANU_Script=(null), GN_Script=(null), NAP_Script=(null),
GN_Interface=pan0, NAP_Interface=pan1, Security=true
bluetoothd[7029]: bridge pan0 created
bluetoothd[7029]: Parsing /etc/bluetooth/input.conf failed: No such
file or directory
bluetoothd[7029]: Parsing /etc/bluetooth/audio.conf failed: No such
file or directory
bluetoothd[7029]: Unix socket created: 13
bluetoothd[7029]: Telephony plugin initialized
bluetoothd[7029]: HFP AG features: "Ability to reject a call"
"Enhanced call status" "Extended Error Result Codes"
bluetoothd[7029]: HCI dev 0 registered
bluetoothd[7029]: child 7035 forked
bluetoothd[7029]: HCI dev 0 already up
bluetoothd[7029]: service_probe: path /org/bluez/hci0
bluetoothd[7029]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[7029]: network_server_probe: path /org/bluez/hci0
bluetoothd[7029]: Adding record with handle 0x10000
bluetoothd[7029]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[7029]: register_server_record: got record id 0x10000
bluetoothd[7029]: Registered interface org.bluez.NetworkPeer on path
/org/bluez/hci0
bluetoothd[7029]: network_server_probe: path /org/bluez/hci0
bluetoothd[7029]: Adding record with handle 0x10001
bluetoothd[7029]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[7029]: register_server_record: got record id 0x10001
bluetoothd[7029]: Registered interface org.bluez.NetworkHub on path
/org/bluez/hci0
bluetoothd[7029]: network_server_probe: path /org/bluez/hci0
bluetoothd[7029]: Adding record with handle 0x10002
bluetoothd[7029]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[7029]: register_server_record: got record id 0x10002
bluetoothd[7029]: Registered interface org.bluez.NetworkRouter on path
/org/bluez/hci0
bluetoothd[7029]: proxy_probe: path /org/bluez/hci0
bluetoothd[7029]: Registered interface org.bluez.SerialProxyManager on
path /org/bluez/hci0
bluetoothd[7029]: headset_server_probe: path /org/bluez/hci0
bluetoothd[7029]: Adding record with handle 0x10003
bluetoothd[7029]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[7029]: Adding record with handle 0x10004
bluetoothd[7029]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[7029]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[7029]: SEP 0xb7fe8db8 registered: type:0 codec:0 seid:1
bluetoothd[7029]: Adding record with handle 0x10005
bluetoothd[7029]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[7029]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[7029]: Adding record with handle 0x10006
bluetoothd[7029]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[7029]: Adding record with handle 0x10007
bluetoothd[7029]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[7029]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[7029]: Creating device /org/bluez/hci0/dev_00_1E_37_FC_F7_99
bluetoothd[7029]: Probe drivers for /org/bluez/hci0/dev_00_1E_37_FC_F7_99
bluetoothd[7029]: serial_probe: path /org/bluez/hci0/dev_00_1E_37_FC_F7_99
bluetoothd[7029]: Registered interface org.bluez.Serial on path
/org/bluez/hci0/dev_00_1E_37_FC_F7_99
bluetoothd[7029]: adapter_get_device(00:1E:37:FC:F7:99)
bluetoothd[7029]: audio handle_uuid: server not enabled for
00001112-0000-1000-8000-00805f9b34fb (0x1112)
bluetoothd[7029]: audio handle_uuid: server not enabled for
0000110a-0000-1000-8000-00805f9b34fb (0x110a)
bluetoothd[7029]: Found Audio Sink
bluetoothd[7029]: Registered interface org.bluez.AudioSink on path
/org/bluez/hci0/dev_00_1E_37_FC_F7_99
bluetoothd[7029]: Adapter /org/bluez/hci0 has been enabled
bluetoothd[7029]: Starting security manager 0
bluetoothd[7029]: child 7035 exited
bluetoothd[7029]: Failed to access HAL
bluetoothd[7029]: bonding_request_new(00:18:00:00:78:86)
bluetoothd[7029]: adapter_get_device(00:18:00:00:78:86)
bluetoothd[7029]: adapter_create_device(00:18:00:00:78:86)
bluetoothd[7029]: Creating device /org/bluez/hci0/dev_00_18_00_00_78_86
bluetoothd[7029]: Temporary agent registered for
hci0/00:18:00:00:78:86 at :1.62:/test/agent
bluetoothd[7029]: adapter_get_device(00:18:00:00:78:86)
bluetoothd[7029]: Hangup or error on bonding IO channel
bluetoothd[7029]: Releasing agent :1.62, /test/agent
bluetoothd[7029]: Removing device /org/bluez/hci0/dev_00_18_00_00_78_86
bluetoothd[7029]: bonding_request_new(00:18:00:00:78:86)
bluetoothd[7029]: adapter_get_device(00:18:00:00:78:86)
bluetoothd[7029]: adapter_create_device(00:18:00:00:78:86)
bluetoothd[7029]: Creating device /org/bluez/hci0/dev_00_18_00_00_78_86
bluetoothd[7029]: Temporary agent registered for
hci0/00:18:00:00:78:86 at :1.63:/test/agent
bluetoothd[7029]: adapter_get_device(00:18:00:00:78:86)
bluetoothd[7029]: link_key_request (sba=00:1B:DC:0F:74:09,
dba=00:18:00:00:78:86)
bluetoothd[7029]: kernel auth requirements = 0x00
bluetoothd[7029]: pin_code_request (sba=00:1B:DC:0F:74:09,
dba=00:18:00:00:78:86)
bluetoothd[7029]: hcid_dbus_new_auth_request
bluetoothd[7029]: link_key_notify (sba=00:1B:DC:0F:74:09, dba=00:18:00:00:78:86)
bluetoothd[7029]: hcid_dbus_bonding_process_complete: status=00
bluetoothd[7029]: adapter_get_device(00:18:00:00:78:86)
bluetoothd[7029]: Releasing agent :1.63, /test/agent
bluetoothd[7029]: Probe drivers for /org/bluez/hci0/dev_00_18_00_00_78_86
bluetoothd[7029]: hid_device_probe: path /org/bluez/hci0/dev_00_18_00_00_78_86
bluetoothd[7029]: Registered interface org.bluez.Input on path
/org/bluez/hci0/dev_00_18_00_00_78_86

##########################
hcidump:
##########################
voyage:~/bluez-4.17/test# hcidump -r btdump.bin
HCI sniffer - Bluetooth packet analyzer ver 1.42
&lt; HCI Command: Write Local Name (0x03|0x0013) plen 248
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Page Timeout (0x03|0x0018) plen 2
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Default Link Policy Settings (0x02|0x000f) plen 2
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Read Local Version Information (0x04|0x0001) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 12
&lt; HCI Command: Read Local Supported Features (0x04|0x0003) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 12
&lt; HCI Command: Read Class of Device (0x03|0x0023) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 7
&lt; HCI Command: Read Local Name (0x03|0x0014) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 252
&lt; HCI Command: Read Default Link Policy Settings (0x02|0x000e) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 6
&lt; HCI Command: Set Event Mask (0x03|0x0001) plen 8
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Inquiry Mode (0x03|0x0045) plen 1
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Scan Enable (0x03|0x001a) plen 1
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Write Class of Device (0x03|0x0024) plen 3
&gt; HCI Event: Command Complete (0x0e) plen 4
&lt; HCI Command: Read Stored Link Key (0x03|0x000d) plen 7
&gt; HCI Event: Command Complete (0x0e) plen 8
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
&gt; HCI Event: Command Status (0x0f) plen 4
&gt; HCI Event: Connect Complete (0x03) plen 11
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
&gt; HCI Event: Command Status (0x0f) plen 4
&gt; HCI Event: Connect Complete (0x03) plen 11
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
&lt; ACL data: handle 42 flags 0x02 dlen 10
    L2CAP(s): Info req: type 2
&gt; HCI Event: Command Status (0x0f) plen 4
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
&gt; HCI Event: Max Slots Change (0x1b) plen 3
&gt; HCI Event: Command Status (0x0f) plen 4
&lt; HCI Command: Write Link Policy Settings (0x02|0x000d) plen 4
&gt; HCI Event: Command Complete (0x0e) plen 6
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Info rsp: type 2 result 0
      Extended feature mask 0x0007
&gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
&gt; HCI Event: Command Status (0x0f) plen 4
&lt; HCI Command: Authentication Requested (0x01|0x0011) plen 2
&gt; HCI Event: Command Status (0x0f) plen 4
&gt; HCI Event: Link Key Request (0x17) plen 6
&lt; HCI Command: Link Key Request Negative Reply (0x01|0x000c) plen 6
&gt; HCI Event: Command Complete (0x0e) plen 10
&gt; HCI Event: PIN Code Request (0x16) plen 6
&gt; HCI Event: Remote Name Req Complete (0x07) plen 255
&lt; HCI Command: PIN Code Request Reply (0x01|0x000d) plen 23
&gt; HCI Event: Command Complete (0x0e) plen 10
&gt; HCI Event: Link Key Notification (0x18) plen 23
&gt; HCI Event: Auth Complete (0x06) plen 3
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0041 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0041 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0041 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1002 (PubBrwsGrp)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0041 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0041 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0042 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0042 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0042 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0042 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0042 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1200 (PNPInfo)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 137
    L2CAP(d): cid 0x0041 len 133 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x80
          count 125
          record #0
              aid 0x0000 (SrvRecHndl)
                 uint 0x10001
              aid 0x0001 (SrvClassIDList)
                 &lt; uuid-16 0x1200 (PNPInfo) &gt;
              aid 0x0004 (ProtocolDescList)
                 &lt; &lt; uuid-16 0x0100 (L2CAP) uint 0x1 &gt; &lt;
                 uuid-16 0x0001 (SDP) &gt; &gt;
              aid 0x0006 (LangBaseAttrIDList)
                 &lt; uint 0x656e uint 0x6a uint 0x100 &gt;
              aid 0x0009 (BTProfileDescList)
                 &lt; &lt; uuid-16 0x1200 (PNPInfo) uint 0x100 &gt; &gt;
              aid 0x0101 (SrvDesc)
                 str "Bluetooth Keyboard"
              aid 0x0200 (VersionNumList)
                 uint 0x100
              aid 0x0201 (SrvDBState)
                 uint 0xdc6
              aid 0x0202 (unknown)
                 uint 0x3752
              aid 0x0203 (unknown)
                 uint 0x100
              aid 0x0204 (unknown)
                 bool 0x1
              aid 0x0205 (unknown)
                 uint 0x2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0042 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0042 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0043 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0043 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0043 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0043 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0043 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1124 (HID)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 367
&gt; ACL data: handle 42 flags 0x01 dlen 100
    L2CAP(d): cid 0x0040 len 463 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x1ca
          count 455
          record #0
              aid 0x0000 (SrvRecHndl)
                 uint 0x10000
              aid 0x0001 (SrvClassIDList)
                 &lt; uuid-16 0x1124 (HID) &gt;
              aid 0x0004 (ProtocolDescList)
                 &lt; &lt; uuid-16 0x0100 (L2CAP) uint 0x11 &gt; &lt;
                 uuid-16 0x0011 (HIDP) &gt; &gt;
              aid 0x0006 (LangBaseAttrIDList)
                 &lt; uint 0x656e uint 0x6a uint 0x100 &gt;
              aid 0x0009 (BTProfileDescList)
                 &lt; &lt; uuid-16 0x1124 (HID) uint 0x100 &gt; &gt;
              aid 0x000d (IconURL)
                 &lt; &lt; &lt; uuid-16 0x0100 (L2CAP) uint 0x13 &gt; &lt; uuid-16
0x0011 (HIDP) &gt; &gt; &gt;
              aid 0x0100 (SrvName)
                 str "Bluetooth Keyboard"
              aid 0x0101 (SrvDesc)
                 str "Bluetooth Keyboard"
              aid 0x0102 (ProviderName)
                 str "PSTC"
              aid 0x0200 (VersionNumList)
                 uint 0x110
              aid 0x0201 (SrvDBState)
                 uint 0x100
              aid 0x0202 (unknown)
                 uint 0x40
              aid 0x0203 (unknown)
                 uint 0x21
              aid 0x0204 (unknown)
                 bool 0x1
              aid 0x0205 (unknown)
                 bool 0x1
              aid 0x0206 (unknown)
                 &lt; &lt; uint 0x22 str 05 01 09 06 a1 01 05 07 85 01 19 e0
29 e7 15 00 25 01 75 01 95 08 81 02 95 01 75 08 81 01 95 05 75 01 05
08 85 01 19 01 29 05 91 02 95 01 75 03 91 03 95 06 75 08 15 00 25 e7
05 07 19 00 29 e7 81 00 05 06 09 20 15 00 25 ff 75 08 95 01 85 47 b1
22 05 06 85 ff 95 01 75 02 09 24 09 26 81 02 75 06 81 01 c0 05 0c 09
01 a1 01 85 03 05 0c 15 00 25 01 0a 23 02 0a 8a 01 0a 21 02 0a 24 02
0a 25 02 0a 26 02 0a 27 02 0a 2a 02 09 b5 09 b6 09 b7 09 cd 09 e2 09
e9 09 ea 75 01 95 0f 81 02 75 01 95 01 81 01 c0 05 01 09 02 a1 01 09
01 a1 00 85 02 05 09 19 01 29 03 15 00 25 01 95 03 75 01 81 02 95 01
75 05 81 03 05 01 09 30 09 31 09 38 15 81 25 7f 75 08 95 03 81 06 c0
c0 &gt; &gt;
              aid 0x0207 (unknown)
                 &lt; &lt; uint 0x409 uint 0x100 &gt; &gt;
              aid 0x0208 (unknown)
                 bool 0x0
              aid 0x0209 (unknown)
                 bool 0x1
              aid 0x020a (unknown)
                 bool 0x1
              aid 0x020b (unknown)
                 uint 0x100
              aid 0x020c (unknown)
                 uint 0x1f40
              aid 0x020d (unknown)
                 bool 0x0
              aid 0x020e (unknown)
                 bool 0x1
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0043 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0043 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0044 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0044 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0044 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0044 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0044 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1203 (Audio)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0044 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0044 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0045 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0045 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0045 flags 0x00 clen 0
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0045 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0045 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x110d (AdvAudio)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0045 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0045 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0046 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0046 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0046 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0046 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0046 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x110e (AVRemote)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0046 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0046 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0047 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0047 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0047 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0047 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0047 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1115 (PANU)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0047 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0047 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0048 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0048 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0048 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0048 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0048 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1117 (GN)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0048 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0048 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0049 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0049 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0049 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0049 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x0049 len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1116 (NAP)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0049 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0049 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004a scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004a scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004a flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004a flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 24
    L2CAP(d): cid 0x004a len 20 [psm 1]
        SDP SSA Req: tid 0x0 len 0xf
          pat uuid-16 0x1101 (SP)
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004a scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004a scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004b scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004b scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004b flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004b flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x004b len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001115-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004b scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004b scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004c scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004c scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004c flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004c flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x004c len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001117-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004c scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004c scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004d scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004d scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004d flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004d flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x004d len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001116-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004d scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004d scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004e scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004e scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004e flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004e flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x004e len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001101-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004e scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004e scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004f scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x004f scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x004f flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x004f flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x004f len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001103-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x004f scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x004f scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0050 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0050 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0050 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0050 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001108-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0050 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0050 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0051 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0051 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0051 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0051 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0051 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000111e-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0051 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0051 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0052 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0052 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0052 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0052 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0052 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 00001112-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0052 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0052 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0053 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0053 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0053 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0053 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0053 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000111f-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0053 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0053 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0054 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0054 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0054 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0054 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0054 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000110d-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0054 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0054 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0055 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0055 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0055 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0055 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0055 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000110a-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0055 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0055 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0056 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0056 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0056 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0056 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0056 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000110b-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0056 scid 0x0041
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0040
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0056 scid 0x0041
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0057 scid 0x0040 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0057 scid 0x0040 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0057 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0057 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0057 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000110c-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0040 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0057 scid 0x0040
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Connect req: psm 1 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0057 scid 0x0040
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0041 result 1 status 2
      Connection pending - Authorization pending
&gt; ACL data: handle 42 flags 0x02 dlen 16
    L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0041 result 0 status 0
      Connection successful
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0058 flags 0x00 clen 0
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Config req: dcid 0x0041 flags 0x00 clen 0
&lt; ACL data: handle 42 flags 0x02 dlen 18
    L2CAP(s): Config rsp: scid 0x0058 flags 0x00 result 0 clen 4
      MTU 672
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(s): Config rsp: scid 0x0041 flags 0x00 result 0 clen 0
      Success
&lt; ACL data: handle 42 flags 0x02 dlen 38
    L2CAP(d): cid 0x0058 len 34 [psm 1]
        SDP SSA Req: tid 0x0 len 0x1d
          pat uuid-128 0000110e-0000-1000-8000-00805f9b34fb
          max 65535
          aid(s) 0x0000 - 0xffff
          cont 00
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 14
    L2CAP(d): cid 0x0041 len 10 [psm 1]
        SDP SSA Rsp: tid 0x0 len 0x5
          count 2
          cont 00
&lt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn req: dcid 0x0058 scid 0x0041
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
&gt; ACL data: handle 42 flags 0x02 dlen 12
    L2CAP(s): Disconn rsp: dcid 0x0058 scid 0x0041
&gt; HCI Event: Disconn Complete (0x05) plen 4
voyage:~/bluez-4.17/test#
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081103220640</emailId><senderName>Isaías_Martínez_Yelmo</senderName><senderEmail>isaiasmy@gmail.com</senderEmail><timestampReceived>2008-11-03 22:06:40-0400</timestampReceived><subject>Re: Dell 365 Bluetooth</subject><body>

El Monday 03 November 2008 22:08:49 Mario Limonciello escribió:
&gt; Isaias:
&gt;
&gt; Isaías Martínez Yelmo wrote:
&gt; &gt; El Monday 03 November 2008 20:03:51 Mario Limonciello escribió:
&gt; &gt;
&gt; &gt;
&gt; &gt; Hello,
&gt; &gt;
&gt; &gt; I'm not very sure on how to enable the option that you mention, sorry.
&gt; &gt; I've include in /etc/modprobe.d/options the next line:
&gt; &gt;
&gt; &gt; options btusb=1
&gt; &gt;
&gt; &gt; but I don't know if this is right. The dmesg command shows these lines
&gt; &gt; related with hid2hci:
&gt; &gt;
&gt; &gt; [   12.458741] usb 1-1.2: usbfs: process 2746 (hid2hci) did not claim
&gt; &gt; interface 0 before use
&gt; &gt; [   24.365796] usb 1-1.2: usbfs: process 5909 (hid2hci) did not claim
&gt; &gt; interface 0 before use
&gt; &gt;
&gt; &gt; Perhaps, it could be relevant.
&gt; &gt;
&gt; &gt; Let me know, if I have to enable the option in other way.
&gt; &gt;
&gt; &gt; Regards,
&gt; &gt;
&gt; &gt; Isaias
&gt;
&gt; Sorry, I mistyped before.  The modprobe options should be:
&gt;
&gt; options btusb reset=1
&gt;
&gt; See if that does your device any good.
&gt;
&gt; Regards

Hi,


things are going better, the device is detected:

[   11.974093] Bluetooth: Core ver 2.13
[   11.986233] Bluetooth: HCI device and connection manager initialized
[   11.986235] Bluetooth: HCI socket layer initialized
[   11.989265] Bluetooth: Generic Bluetooth USB driver ver 0.3
[   22.193174] Bluetooth: L2CAP ver 2.11
[   22.193188] Bluetooth: L2CAP socket layer initialized
[   22.244021] Bluetooth: SCO (Voice Link) ver 0.6
[   22.244037] Bluetooth: SCO socket layer initialized
[   22.287679] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[   22.287693] Bluetooth: BNEP filters: protocol multicast
[   22.393267] Bluetooth: RFCOMM socket layer initialized
[   22.393300] Bluetooth: RFCOMM TTY layer initialized
[   22.393305] Bluetooth: RFCOMM ver 1.10

I can pair with my mobilephone, but I cannot see the services between the 
laptop and the mobilephone or to transfer some file :( I have tried to  look 
for some thing but I have not found any relevant yet.  Some Idea? Fortunately, 
at least is recognised :)

Regards,

Isaias
-- 
Isaías Martínez Yelmo
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081103222115</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-11-03 22:21:15-0400</timestampReceived><subject>[PATCH] Add reset quirk for Dell 365 Bluetooth</subject><body>

[Attachment #2 (multipart/mixed)]


Since Isaías confirmed that the reset quirk is necessary for supporting
the Dell BT365, here is a patch to add it.
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["btusb.patch" (text/x-patch)]

Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
--- a/drivers/bluetooth/btusb.c.orig	2008-11-03 16:15:33.000000000 -0600
+++ b/drivers/bluetooth/btusb.c	2008-11-03 16:16:42.000000000 -0600
@@ -125,6 +125,9 @@
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
+	/* Dell Wireless 365 */
+	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
+
 	/* Dell Wireless 370 */
 	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081104123342</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-11-04 12:33:42-0400</timestampReceived><subject>Re: compiling error</subject><body>

On Tue, Nov 04, 2008, mike wrote:
&gt; device.c:(.text+0x1847): undefined reference to `g_timeout_add_seconds'

&gt; its an multilib environment and its the same for 64 bit. anyone a idea?

Yes. You've got a too old GLib version. If you check the GLib
documentation you'll see that g_timeout_add_seconds was added in version
2.14.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081104203510</emailId><senderName>"George F. Nemeyer"</senderName><senderEmail>tigerwolf@tigerden.com</senderEmail><timestampReceived>2008-11-04 20:35:10-0400</timestampReceived><subject>compiling text only</subject><body>

A couple of us have reported issues with compiling on systems with older
Glib packages.  There's likely quite a few others having the problem, but
who haven't bothered to join this list to report.

At least on the production systems I'm dealing with, an upgrade to Glib
isn't really possible.  I looked into it, but it leads to dependency hell,
and would cause unnecessary bloat for systems which rely only on an
absolute bare minimum of Gnome.  They're XFCE-based to keep operation
simple and fast.

At least for our application, we don't need *any* graphical interface for
bluetooth.  The setups could be just as easily done from shell scripts.
Indeed, since these systems are *NOT* configured by end users, having a
graphical user interface is not only superfluous, but is something we'd
rather avoid. (They're in a kiosk-type environment so quite locked down.)

Is it possible to have a more backward-compatible (and therefore more
widely applicable) compile, or is the needed bit from newer Glib really
critical?  Even a less capable result would be vastly better than a dead
end.

If the Gnome parts can't be built at all without the newest Glib, is it
possible to add a configure option that would allow the basic bluetooth
interface libs and utilities to be built without Gnome altogether so they
could be used in a command line environment?

Regards,

George Nemeyer
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081105163726</emailId><senderName>"Daniel Roesler"</senderName><senderEmail>diafygi@gmail.com</senderEmail><timestampReceived>2008-11-05 16:37:26-0400</timestampReceived><subject>Default PIN for bluez-gnome wizard</subject><body>

Howdy all,

I was wondering if there was a reason for using random numbers between
1000 and 9999 as the fallback pincode to try when attempting to
connect to a bluetooth device via the wizard?

http://git.kernel.org/?p=bluetooth/bluez-gnome.git;a=blob_plain;f=wizard/main.c;hb=HEAD
------LINE 548-------
target_pincode = g_strdup_printf("%d", g_random_int_range(1000, 9999));
--------------------------

Many devices use "0000" as their default, and I've noticed that "0000"
is continually being added to the pincode_callback function for
special devices. Why not set "0000" as the default to catch most of
the devices that aren't able to customize their own pins?

Avast!
Daniel Roesler
diafygi@gmail.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081106144439</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-11-06 14:44:39-0400</timestampReceived><subject>Re: [PATCH] Netlink patch.</subject><body>

Hi Alok,

ext Alok wrote:
&gt; Hi Marcel, 
&gt; 
&gt; Attaching a patch which implements a generic netlink command
&gt; GET_DEVLIST(HCIGETDEVLIST). 

I don't know anything about netlink stuff but I'll give some generic comments :)


+	
+	if (info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]) {
+		dev_num = nla_get_u16(info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]);
+		if (!dev_num)
+			return -EINVAL;
+	} else
+		return -EINVAL;
+

I would prefer this kind code paths. Easier to read.

	if (!info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM])
		return -EINVAL;

	dev_num = nla_get_u16(info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]);
	if (!dev_num)
		return -EINVAL;

+	msg = nlmsg_new(NLMSG_GOODSIZE, GFP_KERNEL);
+
+	if (!msg)
+		return -ENOBUFS;
+
+	hdr = genlmsg_put(msg, 0, info-&gt;snd_seq+1, &amp;nlbluetooth_fam, 0, NLBLUETOOTH_CMD_GET_DEVLIST);
+
+	if (hdr == NULL)
+		return -ENOMEM;

Is msg left unfreed here?

+
+	nl_list = nla_nest_start(msg, NLBLUETOOTH_ATTR_DEVLIST);
+	if (!nl_list)
+		goto nla_put_failure;

And here? I cannot find skb_free or friends from genlmsg_cancel() path.


-- 
Ville

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081106193131</emailId><senderName>Rogério Brito</senderName><senderEmail>rbrito@ime.usp.br</senderEmail><timestampReceived>2008-11-06 19:31:31-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11779] New: No way to disable bluetooth</subject><body>

Hi, David.

I have not received any response from you in the last few weeks.

On Oct 21 2008, David Sainty wrote:
&gt; Rogério Brito wrote:
&gt; 
&gt; &gt;I may test it latter, but I'm scared.

(...)

&gt; &gt;I can't think of
&gt; &gt;anything else that I can provice, but I'm willing to help here.
&gt; 
&gt; It sounds like you have much worse issues with it than whether the
&gt; bluetooth adapter is drawing idle current - which should be dwarfed by
&gt; more heavyweight sinks like the WiFi transceiver.

I don't know how much wifi would use of power, but I guess, in my layman
way of seeing things, that it would, indeed, use more power.

But I would like to save any corners that I can here. And just correcting
the behaviour would make me extremely happy.

Again, I can provide any information needed. Just ask and I will do my
best (I guess that you can't get many bug reporters willing to do as many
tests and experiments as I do; and I don't disappear). :-)


Regards, Rogério Brito.

-- 
Rogério Brito : rbrito@{mackenzie,ime.usp}.br : GPG key 1024D/7C2CAEB8
http://www.ime.usp.br/~rbrito : http://meusite.mackenzie.com.br/rbrito
Projects: algorithms.berlios.de : lame.sf.net : vrms.alioth.debian.org
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081107065939</emailId><senderName>Alok</senderName><senderEmail>alokbarsode@gmail.com</senderEmail><timestampReceived>2008-11-07 06:59:39-0400</timestampReceived><subject>[PATCH] Netlink patch.(modified)</subject><body>

Hi Marcel,

Attaching a modified netlink patch.
Forgot to free the buffer :) Thanks to ville for spotting it. 

-Alok. 

["0001-Adding-netlink-support-to-bluetooth.patch" (0001-Adding-netlink-support-to-bluetooth.patch)]

From 7e3014a5514fa009ba40a95a9a86723564cc5302 Mon Sep 17 00:00:00 2001
From: Alok Barsode &lt;alok.barsode@azingo.com&gt;
Date: Fri, 7 Nov 2008 12:06:43 +0530
Subject: [PATCH] Adding netlink support to bluetooth.
 Adding files netlink.c and netlink.h to net/bluetooth for netlink support.
 Adding support for GET_DEVLIST.

Signed-off-by: Alok Barsode &lt;alok.barsode@azingo.com&gt;
---
 include/net/bluetooth/bluetooth.h |    3 +
 net/bluetooth/Makefile            |    2 +-
 net/bluetooth/af_bluetooth.c      |    6 ++
 net/bluetooth/netlink.c           |  124 +++++++++++++++++++++++++++++++++++++
 net/bluetooth/netlink.h           |   30 +++++++++
 5 files changed, 164 insertions(+), 1 deletions(-)
 create mode 100644 net/bluetooth/netlink.c
 create mode 100644 net/bluetooth/netlink.h

diff --git a/include/net/bluetooth/bluetooth.h b/include/net/bluetooth/bluetooth.h
index 6f8418b..b02c7aa 100644
--- a/include/net/bluetooth/bluetooth.h
+++ b/include/net/bluetooth/bluetooth.h
@@ -178,4 +178,7 @@ extern void bt_sysfs_cleanup(void);
 
 extern struct class *bt_class;
 
+extern int nlbluetooth_init(void);
+extern void nlbluetooth_cleanup(void);
+
 #endif /* __BLUETOOTH_H */
diff --git a/net/bluetooth/Makefile b/net/bluetooth/Makefile
index d1e433f..f014d48 100644
--- a/net/bluetooth/Makefile
+++ b/net/bluetooth/Makefile
@@ -10,4 +10,4 @@ obj-$(CONFIG_BT_BNEP)	+= bnep/
 obj-$(CONFIG_BT_CMTP)	+= cmtp/
 obj-$(CONFIG_BT_HIDP)	+= hidp/
 
-bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o hci_sock.o \
hci_sysfs.o lib.o +bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o \
                hci_sock.o hci_sysfs.o lib.o netlink.o
diff --git a/net/bluetooth/af_bluetooth.c b/net/bluetooth/af_bluetooth.c
index 8907eff..b6487dc 100644
--- a/net/bluetooth/af_bluetooth.c
+++ b/net/bluetooth/af_bluetooth.c
@@ -436,6 +436,10 @@ static int __init bt_init(void)
 	if (err &lt; 0)
 		return err;
 
+	err = nlbluetooth_init();
+	if (err &lt; 0)
+		return err;
+
 	err = sock_register(&amp;bt_sock_family_ops);
 	if (err &lt; 0) {
 		bt_sysfs_cleanup();
@@ -456,6 +460,8 @@ static void __exit bt_exit(void)
 	sock_unregister(PF_BLUETOOTH);
 
 	bt_sysfs_cleanup();
+
+	nlbluetooth_cleanup();
 }
 
 subsys_initcall(bt_init);
diff --git a/net/bluetooth/netlink.c b/net/bluetooth/netlink.c
new file mode 100644
index 0000000..5c9166f
--- /dev/null
+++ b/net/bluetooth/netlink.c
@@ -0,0 +1,124 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+
+#include &lt;asm/system.h&gt;
+#include &lt;asm/uaccess.h&gt;
+#include &lt;asm/unaligned.h&gt;
+  
+#include &lt;net/genetlink.h&gt;
+#include &lt;linux/module.h&gt;
+#include &lt;linux/kernel.h&gt;
+
+#include &lt;net/bluetooth/bluetooth.h&gt;
+#include &lt;net/bluetooth/hci_core.h&gt;
+#include "netlink.h"
+
+/* family definition */
+static struct genl_family nlbluetooth_fam = {
+	.id = GENL_ID_GENERATE,
+	.hdrsize = 0,
+	.name = "bluetooth",
+	.version = VERSION,
+	.maxattr = NLBLUETOOTH_ATTR_MAX
+};
+
+static struct nla_policy nlbluetooth_policy[NLBLUETOOTH_ATTR_MAX + 1] = {
+	[NLBLUETOOTH_ATTR_DEVID] = { .type = NLA_U16 },
+	[NLBLUETOOTH_ATTR_DEVNUM] = { .type = NLA_U16 },
+	[NLBLUETOOTH_ATTR_DEVOPT] = { .type = NLA_U32 },
+	[NLBLUETOOTH_ATTR_DEVLIST] = { .type = NLA_NESTED },
+};
+
+static int nlbluetooth_get_devinfo(struct sk_buff *skb, struct genl_info *info)
+{
+	__u16 dev_num;
+	int num = 0;
+	void *hdr;
+	struct sk_buff *msg;
+	struct list_head *p;
+	struct nlattr *nl_list;
+	
+	if (!info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM])
+		return -EINVAL;
+
+	dev_num = nla_get_u16(info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]);
+
+	if (!dev_num)
+		return -EINVAL;
+
+	msg = nlmsg_new(NLMSG_GOODSIZE, GFP_KERNEL);
+
+	if (!msg)
+		goto out_err;
+
+	hdr = genlmsg_put(msg, 0, info-&gt;snd_seq+1, &amp;nlbluetooth_fam, 0, \
NLBLUETOOTH_CMD_GET_DEVLIST); +
+	if (hdr == NULL)
+		goto out_free;
+
+	nl_list = nla_nest_start(msg, NLBLUETOOTH_ATTR_DEVLIST);
+	if (!nl_list)
+		goto out_free;
+
+	read_lock_bh(&amp;hci_dev_list_lock);
+	list_for_each(p, &amp;hci_dev_list) {
+		struct hci_dev *hdev;
+
+		hdev = list_entry(p, struct hci_dev, list);
+
+		nla_put_u16(msg, NLBLUETOOTH_ATTR_DEVID, hdev-&gt;id);
+		nla_put_u32(msg, NLBLUETOOTH_ATTR_DEVOPT, hdev-&gt;flags);
+		if (++num &gt;= dev_num)
+			break;
+	}
+	read_unlock_bh(&amp;hci_dev_list_lock);
+
+	nla_nest_end(msg, nl_list);
+
+	nla_put_u16(msg, NLBLUETOOTH_ATTR_DEVNUM, num);
+
+	genlmsg_end(msg, hdr);
+
+	return genlmsg_unicast(msg, info-&gt;snd_pid);
+
+out_free:
+	nlmsg_free(msg);
+out_err:
+	return -ENOBUFS;
+}
+
+static struct genl_ops nlbluetooth_ops = {
+	.cmd = NLBLUETOOTH_CMD_GET_DEVLIST,
+	.flags = 0,
+	.policy = nlbluetooth_policy,
+	.doit = nlbluetooth_get_devinfo,
+	.dumpit = NULL,
+};
+
+/* initialisation/exit functions */
+int __init nlbluetooth_init(void)
+{
+	int err;
+
+	err = genl_register_family(&amp;nlbluetooth_fam);
+	if (err)
+		return err;
+
+	err = genl_register_ops(&amp;nlbluetooth_fam, &amp;nlbluetooth_ops);
+	if (err)
+		goto err_out;
+
+	return 0;
+
+err_out:
+	genl_unregister_family(&amp;nlbluetooth_fam);
+	return err;
+}
+
+void nlbluetooth_cleanup(void)
+{
+	genl_unregister_family(&amp;nlbluetooth_fam);
+}
diff --git a/net/bluetooth/netlink.h b/net/bluetooth/netlink.h
new file mode 100644
index 0000000..2b81037
--- /dev/null
+++ b/net/bluetooth/netlink.h
@@ -0,0 +1,30 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+#ifndef __NETLINK_H
+#define __NETLINK_H
+
+#define VERSION 1
+
+enum nlbluetooth_attr {
+	NLBLUETOOTH_ATTR_UNSPEC,
+	NLBLUETOOTH_ATTR_DEVID,
+	NLBLUETOOTH_ATTR_DEVNUM,
+	NLBLUETOOTH_ATTR_DEVOPT,
+	NLBLUETOOTH_ATTR_DEVLIST,
+	/* Add attributes here */
+	__NLBLUETOOTH_ATTR_MAX,
+	NLBLUETOOTH_ATTR_MAX  =  __NLBLUETOOTH_ATTR_MAX - 1
+};
+
+enum nlbluetooth_cmds {
+	NLBLUETOOTH_CMD_UNSPEC,
+	NLBLUETOOTH_CMD_GET_DEVLIST,
+	/* Add command here */
+	__NLBLUETOOTH_CMD_MAX,
+	NLBLUETOOTH_CMD_MAX  = __NLBLUETOOTH_CMD_MAX - 1
+};
+
+#endif /* __NETLINK_H */
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081104115916</emailId><senderName>mike</senderName><senderEmail>ascona@kleiderschrank51.de</senderEmail><timestampReceived>2008-11-04 11:59:16-0400</timestampReceived><subject>compiling error</subject><body>

hi all,

i would compile the actually bluez-package version 4.17 but a error 
occurs during make:

Making all in common
make[2]: Entering directory `/sources/BLFS/bluez-4.17/common'
make[2]: Für das Ziel »all« ist nichts zu tun.
make[2]: Leaving directory `/sources/BLFS/bluez-4.17/common'
Making all in src
make[2]: Entering directory `/sources/BLFS/bluez-4.17/src'
/bin/sh ../libtool --tag=CC   --mode=link gcc -m32 -I../include
-I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -I../gdbus
-DPLUGINDIR=\""/pkg/usr/lib/bluetooth/plugins"\" -Wall -O2
-D_FORTIFY_SOURCE=2 -fPIC -Wl,--export-dynamic -pie -o bluetoothd main.o
security.o sdpd-server.o sdpd-request.o sdpd-service.o sdpd-database.o
plugin.o storage.o agent.o error.o manager.o adapter.o device.o
dbus-common.o dbus-hci.o ../common/libhelper.a ../gdbus/libgdbus.la
-lglib-2.0   -ldbus-1   ../lib/libbluetooth.la -ldl
gcc -m32 -I../include -I/usr/include/dbus-1.0
-I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0
-I/usr/lib/glib-2.0/include -I../gdbus
-DPLUGINDIR=\"/pkg/usr/lib/bluetooth/plugins\" -Wall -O2
-D_FORTIFY_SOURCE=2 -fPIC -Wl,--export-dynamic -pie -o .libs/bluetoothd
main.o security.o sdpd-server.o sdpd-request.o sdpd-service.o
sdpd-database.o plugin.o storage.o agent.o error.o manager.o adapter.o
device.o dbus-common.o dbus-hci.o  ../common/libhelper.a
../gdbus/.libs/libgdbus.a /usr/lib/libglib-2.0.so /usr/lib/libdbus-1.so
../lib/.libs/libbluetooth.so -ldl  -Wl,--rpath -Wl,/pkg/usr/lib
device.o: In function `disconnect':
device.c:(.text+0x1847): undefined reference to `g_timeout_add_seconds'
collect2: ld returned 1 exit status
make[2]: *** [bluetoothd] Fehler 1
make[2]: Leaving directory `/sources/BLFS/bluez-4.17/src'
make[1]: *** [all-recursive] Fehler 1
make[1]: Leaving directory `/sources/BLFS/bluez-4.17'
make: *** [all] Fehler 2
root@:notbug:/sources/BLFS/bluez-4.17$

its an multilib environment and its the same for 64 bit. anyone a idea?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081110010850</emailId><senderName>Damon Hastings</senderName><senderEmail>damonhastings@yahoo.com</senderEmail><timestampReceived>2008-11-10 01:08:50-0400</timestampReceived><subject>Re: Possible to send audio to multiple bluetooth headsets at once?</subject><body>

A perhaps more important question: how many bluetooth headsets can be actively \
receiving audio in the same 200 square foot space at the same time?

If the Bluetooth band simply can't handle 20 headsets streaming all at once, then I'm \
wasting my (and your) time trying to get multiple headsets to work in the first \
place!  I understand that Bluetooth 2.0 (am I using 2.0?) provides 1 to 2 Mbps of \
bandwidth, which should be enough to fit 8 to 16 uncompressed 8000Hz 16-bit mono \
streams, ignoring data redundancy, collision retransmits, and other overhead -- and 8 \
to 16 isn't good enough.  I can use multiple dongles on multiple computers, but \
they'd just interfere.

Let me break this down into sub-topics...  Don't spend too much time on each if you \
can't answer it off the top of your head -- the most important question is at the \
end!

1) I don't need good (or even decent) quality -- how do I configure for lowest \
bandwidth usage?  My latency requirements are also fairly relaxed -- 100ms or less \
should be fine.

2) I'll be sending audio *to* the headsets only; I'd like to make sure no bandwidth \
is wasted trying to read audio *from* them.

3) Each audio stream will be absolute digital silence (i.e. a sequence of zeroes) 90% \
of the time, with short bursts of speech the other 10%.  Can you tell me whether the \
relevant protocol/profile/whatever is smart enough to compress all those zeroes away \
before sending them over the air?  Or is there a config change I can make to enable \
such compression?  I don't think I can afford to just disconnect over the silences \
and reconnect on speech; the reconnect delay would probably be too long.

And now, the big question:  Given all of the above optimizations, do you think \
Bluetooth could fit 20 headsets?  40?  100?  I'm not going to hold you to any \
estimate, of course -- but I just want to know whether now is the time to forget \
about bluetooth altogether.  If so, then maybe I could look into WiFi headsets or \
something...?  I'll use wired headsets if necessary, though it would make life much \
more difficult for the wearers, who need at least some mobility.  Maybe I can find \
desktop speakers which are capable of outputting highly directional sound in a tight \
sound cone.  Basically, I plan to have 20 workers in a 200 sq ft space who each need \
their own isolated audio at their own workstation.  Each worker leaves his \
workstation very frequently but very briefly to perform other tasks, and he only \
needs the audio while he is at his workstation.

Thanks again!  :-)

Damon Hastings


--- On Sun, 11/9/08, Johan Hedberg &lt;johan.hedberg@gmail.com&gt; wrote:

&gt; From: Johan Hedberg &lt;johan.hedberg@gmail.com&gt;
&gt; Subject: Re: Possible to send audio to multiple bluetooth headsets at
once?
&gt; To: "BlueZ development" &lt;linux-bluetooth@vger.kernel.org&gt;
&gt; Date: Sunday, November 9, 2008, 1:35 AM
&gt; Hi Damon,
&gt; 
&gt; In theory what you're trying to do should be possible,
&gt; though you  
&gt; might run into bandwidth issues (and there's not much
&gt; BlueZ can do to  
&gt; help with that). However, you do need some configuration
&gt; file changes  
&gt; since the defaults are for one headset only. If you're
&gt; trying to use  
&gt; HSP/HFP add MaxConnections=2 to the [Headset] section in
&gt; /etc/ 
&gt; bluetooth/audio.conf. If you're trying to use A2DP add
&gt; SBCSources=2 to  
&gt; the [A2DP] section of the same file. You might also want to
&gt; experiment  
&gt; with forcing BlueZ to use the profile you want in the case
&gt; of multi- 
&gt; profile headsets. For HSP/HFP you need profile=voice in
&gt; your .asoundrc  
&gt; entries and for A2DP you need profile=hifi.
&gt; 
&gt; Johan
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line
&gt; "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at 
&gt; http://vger.kernel.org/majordomo-info.html



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081110111215</emailId><senderName>"Daniel Roesler"</senderName><senderEmail>diafygi@gmail.com</senderEmail><timestampReceived>2008-11-10 11:12:15-0400</timestampReceived><subject></subject><body>

unsubscribe linux-bluetooth
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081111053256</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-11-11 05:32:56-0400</timestampReceived><subject>Re: [PATCH] Add support for pairing a few GPS devices</subject><body>

Hi,

ext Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt;&gt; Add support for hard-coded pincodes for a few GPS devices, one being
&gt;&gt; mine, the other being mentioned by Ralph Loader in
&gt;&gt; https://bugzilla.redhat.com/show_bug.cgi?id=464446
&gt; 
&gt; patch has been applied. Thanks.

I have never followed bluez-gnome developement and I might have some
gaps in knowlegde of made decisions.

Is it really intentional not to have user specified passkey as an
option? Of course there can be a list of "known pincodes" but frankly
I don't believe all the codes will be there in some point. At least
the list should be editable by the user?

-- 
Ville
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081112191025</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-12 19:10:25-0400</timestampReceived><subject>Problem using CSR module with Bluez</subject><body>

Hi,

I am trying to use an iMX31PDK bluetooth module (powered by CSR) and I
am getting error to use it with Linux bluez.

Please, follow my steps below:

root@freescale ~$ modprobe hci_uart
Bluetooth: HCI UART driver ver 2.2
Bluetooth: HCI H4 protocol initialized
Bluetooth: HCI BCSP protocol initialized
Bluetooth: HCILL protocol initialized

root@freescale ~$ modprobe rfcomm
Bluetooth: L2CAP ver 2.9
Bluetooth: L2CAP socket layer initialized
Bluetooth: RFCOMM socket layer initialized
Bluetooth: RFCOMM TTY layer initialized
Bluetooth: RFCOMM ver 1.8

root@freescale ~$ modprobe mxc_bt
(note: mxc_bt modules just power-on and reset APM6628 module)

root@freescale ~$ hciattach /dev/ttymxc1 bcsp 115200 flow

root@freescale ~$ hciconfig -a
hci0:   Type: UART
        BD Address: 00:00:00:00:00:00 ACL MTU: 0:0 SCO MTU: 0:0
        DOWN
        RX bytes:15 acl:0 sco:0 events:0 errors:0
        TX bytes:8 acl:0 sco:0 commands:0 errors:0

root@freescale ~$ hciconfig hci0 up

root@freescale ~$ hciconfig -a
hci0:   Type: UART
        BD Address: 00:02:5B:00:A5:A5 ACL MTU: 310:10 SCO MTU: 64:8
        UP RUNNING
        RX bytes:519 acl:0 sco:0 events:10 errors:0
        TX bytes:214 acl:0 sco:0 commands:11 errors:0
        Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy:
        Link mode: SLAVE ACCEPT
        Name: 'CSR - bc4'
        Class: 0x000000
        Service Classes: Unspecified
        Device Class: Miscellaneous,
        HCI Ver: 2.0 (0x3) HCI Rev: 0xc5c LMP Ver: 2.0 (0x3) LMP Subver: 0xc5c
        Manufacturer: Cambridge Silicon Radio (10)

root@freescale ~$ hcitool scan
Scanning …
root@freescale ~$
(note: it doesn't detect any bluetooth devices around it)


root@freescale ~$ bccmd -t hci psload -r /home/apm6628BT-UART.mx31.psr
Loading PSKEY_LC_COMBO_DISABLE_PIO_MASK ... done
Loading PSKEY_LC_COMBO_DOT11_CHANNEL_PIO_BASE ... done
Loading PSKEY_LC_ENHANCED_POWER_TABLE ... done
Loading PSKEY_UART_BAUDRATE ... done
Loading PSKEY_HOST_INTERFACE ... done
Loading PSKEY_ANA_FREQ ... done
Loading PSKEY_USE_EXTERNAL_CLOCK ... done
Loading PSKEY_CLOCK_REQUEST_ENABLE ... done
Loading PSKEY_CLOCK_REQUEST_FEATURES ... done
Loading PSKEY_PCM_CONFIG32 ... done
root@freescale ~$ bcsp_recv: Error in BCSP hdr checksum

root@freescale ~$ hciconfig -a
hci0:   Type: UART
        BD Address: 00:02:5B:00:A5:A5 ACL MTU: 310:10 SCO MTU: 64:8
        UP RUNNING
        RX bytes:1317 acl:0 sco:0 events:24 errors:0
        TX bytes:759 acl:0 sco:0 commands:28 errors:0
        Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy:
        Link mode: SLAVE ACCEPT
bcsp_recv: Error in BCSP hdr checksum
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
Can't read local name on hci0: Connection timed out (110)
root@freescale ~$ bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet
bcsp_recv: Short BCSP packet



The i.MX31PDK board uses APM6628 bluetooth module.
I want to use Bluez because already have some programs developed using
this API,
but Freescale is using CSR soft stack on this board. I am using
bluez-lib and bluez-utils 3.26.

I think it is some error in my PSKEY file, maybe this version doesn't
match to firmware
version or some problem on bluez detection.

This is the content of my apm6628BT-UART.mx31.psr file:

// PSKEY_LC_COMBO_DISABLE_PIO_MASK
&amp;0028 = 0200
// PSKEY_LC_COMBO_DOT11_CHANNEL_PIO_BASE
&amp;002a = 0011
// PSKEY_LC_ENHANCED_POWER_TABLE
&amp;0031 = 0400 0000 3f00 4500 e800 0900 0000 3f00 4700 ec00 0f00 0000
3f00 4a00 f000 1600 0000 3f00 4d00 f400 1e00 0000 3f00 5000 f800 2600
0000 3f00 5500 fc00 2e00 0000 3f00 5b00 0000 5000 0000 3f00 6900 0400
// PSKEY_UART_BAUDRATE
&amp;01be = 075f// 460.8 kbaud
// PSKEY_HOST_INTERFACE
&amp;01f9 = 0001// BCSP link
// PSKEY_ANA_FREQ
&amp;01fe = 4e20
//PSKEY_USE_EXTERNAL_CLOCK
&amp;023b = 0001//true
//PSKEY_CLOCK_REQUEST_ENABLE
&amp;0246 = 0003
// PSKEY_CLOCK_REQUEST_FEATURES
&amp;03b6 = 0000
// PSKEY_PCM_CONFIG32
&amp;01b3 = 00c0 0006

Please, can you give me some tips to fix this issue?

Thank you very much,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081113094021</emailId><senderName>Sebastian Spaeth</senderName><senderEmail>sebastian@sspaeth.de</senderEmail><timestampReceived>2008-11-13 09:40:21-0400</timestampReceived><subject>Re: bluez-gnome wizard deficiencies make it mostly useless</subject><body>

Bastien Nocera wrote:
&gt; You didn't cause a ruckus, people that don't actually read the comments
&gt; did.
:-)

&gt; Mice, tablets, keyboards, headsets, hands-free, phones work. Only GPS
&gt; devices and mice, and headsets that don't use '0000' as the PIN codes
&gt; don't work.

-Nahh, if you read some of the descriptions in the downstream Ubuntu bug
there are many devices that fail: the Ubuntu bug lists gps, headsets,
keyboards, modems, printer as failing, so currently it's more than a few
devices.

-A whole range of headsets seems to compute a fixed PIN based on their
serial number, so hardcoding wouldn't work at all.

-For some devices the random PIN seems generated on the device: "[my]
bluetooth headset generates a random PIN code each time it is put in
pairing mode (has an LCD display)"

&gt; We know about that problem. I have a patch in my tree for your
&gt; particular GPS device, I'm still waiting for you to file a bug with the
&gt; details spelled out.

This GPS device is a no-brand thing that is 2 years old and probably not
even sold anymore. Is it really worth adding special cases for such
niche products? I'd rather this were done in a way that helped all those
devices rather than just mine. (But yes, I'll file a bug on my device,
thanks :-))

&gt; I didn't say it was a bad idea to allow users to enter a fixed PIN, I
&gt; said it would be a bad idea to replace random PINs altogether with
&gt; user-provided PINs.

Sorry, I understood your "Because if we don't force users to use random
PIN codes, they'll always enter
the same "easy" PIN codes." as 'don't ever allow people to enter
nonrandom codes'. But I am happy that this was a misunderstanding.

&gt;&gt; I see 2 solutions and I would like input in what bluez-gnome devs think:
&gt;&gt; 1) Try to pair with random PIN if that fails try "0000", "1234", "1111".
&gt;&gt; This would at least cover about 90% of all devices and only special case
&gt;&gt; the rest.
&gt; That wouldn't work, a lot of devices will get out of pairing mode after
&gt; an unsuccesful pairing.

OK this is not feasible then. I'll happily admit I don't know a lot
about bluetooth, I just want it to get to work :-)

&gt; My solution would be to have a button at the bottom of the device
&gt; selection page called "PIN options" (or similar). The button would popup
&gt; a dialogue with options:
&gt; [X] Automatic PIN selection
&gt; 
&gt; [ ] Force a random PIN number
&gt; 
&gt; [ ] Use fixed PIN code:
&gt;         [X] '0000' (most headsets, mice and GPS devices)
&gt;         [ ] '1111'
&gt;         [ ] '1234'
&gt;         [ ] Custom: ___________

This would work just as well for me. I don't think the selection of
"0000" "1111" "1234" is needed, it makes the dialog quite wordy and
long. Why not just:

 [X] Automatic PIN selection
 [ ] Force a random PIN number
 [ ] Use fixed PIN code: ___________
     (many devices use 0000 or 1234)

I don't really get the difference between "automatic" and "force
random". I take it that automatic would include the special casing as is
done now, while random would only ever do random numbers?

I'd just go for:

 [X] Random PIN
 [ ] Use fixed PIN code: ___________ (prepopulate with 0000?)

and don't try to keep a list of special cases in code. Yes it does mean
that everyone needs to enter "0000" the first time the use their headset
but it makes things easy and transparent.

Will your solution work for above mentioned headsets that generate a PIN
on the headset and display it there?

&gt; Wording is obviously up for discussion. The code is probably an
&gt; afternoon's work for somebody comfortable with GTK+, maybe a bit longer
&gt; to get Marcel happy with it ;)

I've never done anything GTK beyond following the GTK tutorials and my C
is quite rusty by now. If you want me to, I could try my luck, but I'd
rather if someone more proficient went for it first :-).

spaetz
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081113101142</emailId><senderName>martin f krafft</senderName><senderEmail>madduck@madduck.net</senderEmail><timestampReceived>2008-11-13 10:11:42-0400</timestampReceived><subject>Re: btusb+sco: unable to install hw params (set_params:979)</subject><body>

also sprach martin f krafft &lt;madduck@madduck.net&gt; [2008.11.07.1727 +0100]:
&gt;   $ strace -f -o /tmp/arecord.strace arecord -f S16_LE -D bt250 &gt;/tmp/test.wav
&gt;   Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono

On my last try with the voice profile, I found this in the syslog:

  hcid[30479]: Audio API: received BT_GETCAPABILITIES_REQ
  hcid[30479]: Audio API: sending BT_GETCAPABILITIES_RSP
  hcid[30479]: Audio API: received BT_SETCONFIGURATION_REQ
  hcid[30479]: config sco - device = 00:1A:45:14:EE:D7 access_mode = 1
  hcid[30479]: connect(): Connection timed out (110)
  hcid[30479]: Unable to lock headset
  hcid[30479]: config failed
  hcid[30479]: Audio API: sending BT_SETCONFIGURATION_RSP

If I use the sco profile, I get:

  hcid[30479]: Audio API: received BT_GETCAPABILITIES_REQ
  hcid[30479]: Audio API: sending BT_GETCAPABILITIES_RSP
  hcid[30479]: Audio API: received BT_SETCONFIGURATION_REQ
  hcid[30479]: config sco - device = 00:1A:45:14:EE:D7 access_mode = 1
  kernel: [600899.137535] hci_scodata_packet: hci0 SCO packet for unknown connection handle 42

This last message comes in at a rate of 100/s while the bluetooth
LED on the headset flashes 1/s, until I remove hci0 or kill hcid.

-- 
martin | http://madduck.net/ | http://two.sentenc.es/
 
tempt not a desperate man.
                                                -- william shakespeare
 
spamtraps: madduck.bogus@madduck.net

["digital_signature_gpg.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081116211733</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-16 21:17:33-0400</timestampReceived><subject>Re: [Bluez-devel] dell bluetooth mouse and keyboard do not work	after</subject><body>

Dick wrote:
&gt; Hi Jelle,
&gt; 
&gt; Have you tried using hidd --search or hidd --connect?
&gt; If you don't have hidd try the following hidtool.py python script.
&gt; 
&gt; Succes er mee!
&gt; 
&gt; #!/usr/bin/python
&gt; import sys
&gt; import getopt
&gt; import dbus
&gt; 
&gt; bus = dbus.SystemBus()
&gt; 
&gt; bmgr = dbus.Interface(bus.get_object('org.bluez', '/org/bluez'),
&gt; 'org.bluez.Manager')
&gt; bus_id = bmgr.ActivateService('input')
&gt; 
&gt; imgr = dbus.Interface(bus.get_object(bus_id, '/org/bluez/input'),
&gt; 'org.bluez.input.Manager')
&gt; 
&gt; optlist, args = getopt.getopt(sys.argv[1:], '',
&gt; ['list','connect=','disconnect=','help'])
&gt; 
&gt; for opt,val in optlist:
&gt; 	if opt == '--list':
&gt; 		for path in imgr.ListDevices():
&gt; 			idev = dbus.Interface (bus.get_object(bus_id, path), 'org.bluez.input.Device')
&gt; 			print "%s Name: \"%s\" ID: %04x:%04x Connected: %i" % (path, idev.GetName(),
&gt; idev.GetProductId(), idev.GetVendorId(), idev.IsConnected())
&gt; 	elif opt == '--connect':
&gt; 		path = ''
&gt; 		if (val[0] == '/'):
&gt; 			path = val
&gt; 		else:
&gt; 			path = imgr.CreateDevice(val)
&gt; 		idev = dbus.Interface (bus.get_object(bus_id, path), 'org.bluez.input.Device')
&gt; 		idev.Connect()
&gt; 	elif opt == '--disconnect':
&gt; 		imgr.RemoveDevice(val)
&gt; 	else:
&gt; 		print 'usage: ', sys.argv[0], '[ --list, --connect=[XX:XX:XX:XX:XX,
&gt; /org/bluez/input/device0], --disconnect=/org/bluez/input/device0, --help ]'
&gt; 		break
&gt; 

Thank you Dick for taking the time to response. Two small comments, the
developers list is moving to linux-bluetooth@vger.kernel.org and the
hidd program is being replaced/depreciated.

I will try your python script, where can i find the upstream source
place? is it somewhere in the testing directory of the bluez git?

Thanks in advance,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081106135235</emailId><senderName>Alok</senderName><senderEmail>alokbarsode@gmail.com</senderEmail><timestampReceived>2008-11-06 13:52:35-0400</timestampReceived><subject>[PATCH] Netlink patch.</subject><body>

Hi Marcel, 

Attaching a patch which implements a generic netlink command
GET_DEVLIST(HCIGETDEVLIST). 
 
1. Will the netlink plugin expose an API like 
int hci_get_devlist(struct hci_dev_list_req *dl) ? 

2. If netlink registration fails would we fallback to raw sockets in the
plugin ?

Let me know if anything in the patch needs modification. 

Thanks, 
Alok.

["0001-Adding-netlink-support-to-bluetooth.patch" (0001-Adding-netlink-support-to-bluetooth.patch)]

From 6033fdc20d549e8b67dea76e3a644fd0d4a7e1d9 Mon Sep 17 00:00:00 2001
From: Alok Barsode &lt;alok.barsode@azingo.com&gt;
Date: Thu, 6 Nov 2008 17:33:05 +0530
Subject: [PATCH] Adding netlink support to bluetooth.
 Adding files netlink.c and netlink.h to net/bluetooth for netlink support.
 Adding support for GET_DEVLIST.

Signed-off-by: Alok Barsode &lt;alok.barsode@azingo.com&gt;
---
 include/net/bluetooth/bluetooth.h |    3 +
 net/bluetooth/Makefile            |    2 +-
 net/bluetooth/af_bluetooth.c      |    6 ++
 net/bluetooth/netlink.c           |  122 +++++++++++++++++++++++++++++++++++++
 net/bluetooth/netlink.h           |   30 +++++++++
 5 files changed, 162 insertions(+), 1 deletions(-)
 create mode 100644 net/bluetooth/netlink.c
 create mode 100644 net/bluetooth/netlink.h

diff --git a/include/net/bluetooth/bluetooth.h b/include/net/bluetooth/bluetooth.h
index 6f8418b..b02c7aa 100644
--- a/include/net/bluetooth/bluetooth.h
+++ b/include/net/bluetooth/bluetooth.h
@@ -178,4 +178,7 @@ extern void bt_sysfs_cleanup(void);
 
 extern struct class *bt_class;
 
+extern int nlbluetooth_init(void);
+extern void nlbluetooth_cleanup(void);
+
 #endif /* __BLUETOOTH_H */
diff --git a/net/bluetooth/Makefile b/net/bluetooth/Makefile
index d1e433f..f014d48 100644
--- a/net/bluetooth/Makefile
+++ b/net/bluetooth/Makefile
@@ -10,4 +10,4 @@ obj-$(CONFIG_BT_BNEP)	+= bnep/
 obj-$(CONFIG_BT_CMTP)	+= cmtp/
 obj-$(CONFIG_BT_HIDP)	+= hidp/
 
-bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o hci_sock.o \
hci_sysfs.o lib.o +bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o \
                hci_sock.o hci_sysfs.o lib.o netlink.o
diff --git a/net/bluetooth/af_bluetooth.c b/net/bluetooth/af_bluetooth.c
index 8907eff..b6487dc 100644
--- a/net/bluetooth/af_bluetooth.c
+++ b/net/bluetooth/af_bluetooth.c
@@ -436,6 +436,10 @@ static int __init bt_init(void)
 	if (err &lt; 0)
 		return err;
 
+	err = nlbluetooth_init();
+	if (err &lt; 0)
+		return err;
+
 	err = sock_register(&amp;bt_sock_family_ops);
 	if (err &lt; 0) {
 		bt_sysfs_cleanup();
@@ -456,6 +460,8 @@ static void __exit bt_exit(void)
 	sock_unregister(PF_BLUETOOTH);
 
 	bt_sysfs_cleanup();
+
+	nlbluetooth_cleanup();
 }
 
 subsys_initcall(bt_init);
diff --git a/net/bluetooth/netlink.c b/net/bluetooth/netlink.c
new file mode 100644
index 0000000..1739bf0
--- /dev/null
+++ b/net/bluetooth/netlink.c
@@ -0,0 +1,122 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+
+#include &lt;asm/system.h&gt;
+#include &lt;asm/uaccess.h&gt;
+#include &lt;asm/unaligned.h&gt;
+  
+#include &lt;net/genetlink.h&gt;
+#include &lt;linux/module.h&gt;
+#include &lt;linux/kernel.h&gt;
+
+#include &lt;net/bluetooth/bluetooth.h&gt;
+#include &lt;net/bluetooth/hci_core.h&gt;
+#include "netlink.h"
+
+/* family definition */
+static struct genl_family nlbluetooth_fam = {
+	.id = GENL_ID_GENERATE,
+	.hdrsize = 0,
+	.name = "bluetooth",
+	.version = VERSION,
+	.maxattr = NLBLUETOOTH_ATTR_MAX
+};
+
+static struct nla_policy nlbluetooth_policy[NLBLUETOOTH_ATTR_MAX + 1] = {
+	[NLBLUETOOTH_ATTR_DEVID] = { .type = NLA_U16 },
+	[NLBLUETOOTH_ATTR_DEVNUM] = { .type = NLA_U16 },
+	[NLBLUETOOTH_ATTR_DEVOPT] = { .type = NLA_U32 },
+	[NLBLUETOOTH_ATTR_DEVLIST] = { .type = NLA_NESTED },
+};
+
+static int nlbluetooth_get_devinfo(struct sk_buff *skb, struct genl_info *info)
+{
+	__u16 dev_num;
+	int num = 0;
+	void *hdr;
+	struct sk_buff *msg;
+	struct list_head *p;
+	struct nlattr *nl_list;
+	
+	if (info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]) {
+		dev_num = nla_get_u16(info-&gt;attrs[NLBLUETOOTH_ATTR_DEVNUM]);
+		if (!dev_num)
+			return -EINVAL;
+	} else
+		return -EINVAL;
+
+	msg = nlmsg_new(NLMSG_GOODSIZE, GFP_KERNEL);
+
+	if (!msg)
+		return -ENOBUFS;
+
+	hdr = genlmsg_put(msg, 0, info-&gt;snd_seq+1, &amp;nlbluetooth_fam, 0, \
NLBLUETOOTH_CMD_GET_DEVLIST); +
+	if (hdr == NULL)
+		return -ENOMEM;
+
+	nl_list = nla_nest_start(msg, NLBLUETOOTH_ATTR_DEVLIST);
+	if (!nl_list)
+		goto nla_put_failure;
+
+	read_lock_bh(&amp;hci_dev_list_lock);
+	list_for_each(p, &amp;hci_dev_list) {
+		struct hci_dev *hdev;
+
+		hdev = list_entry(p, struct hci_dev, list);
+
+		NLA_PUT_U16(msg, NLBLUETOOTH_ATTR_DEVID, hdev-&gt;id);
+		NLA_PUT_U32(msg, NLBLUETOOTH_ATTR_DEVOPT, hdev-&gt;flags);
+		if (++num &gt;= dev_num)
+			break;
+	}
+	read_unlock_bh(&amp;hci_dev_list_lock);
+
+	nla_nest_end(msg, nl_list);
+
+	NLA_PUT_U16(msg, NLBLUETOOTH_ATTR_DEVNUM, num);
+
+	genlmsg_end(msg, hdr);
+
+	return genlmsg_unicast(msg, info-&gt;snd_pid);
+
+nla_put_failure:
+	genlmsg_cancel(msg, hdr);
+	return -EMSGSIZE;
+}
+
+static struct genl_ops nlbluetooth_ops = {
+	.cmd = NLBLUETOOTH_CMD_GET_DEVLIST,
+	.flags = 0,
+	.policy = nlbluetooth_policy,
+	.doit = nlbluetooth_get_devinfo,
+	.dumpit = NULL,
+};
+
+/* initialisation/exit functions */
+int __init nlbluetooth_init(void)
+{
+	int err;
+
+	err = genl_register_family(&amp;nlbluetooth_fam);
+	if (err)
+		return err;
+
+	err = genl_register_ops(&amp;nlbluetooth_fam, &amp;nlbluetooth_ops);
+	if (err)
+		goto err_out;
+
+	return 0;
+
+err_out:
+	genl_unregister_family(&amp;nlbluetooth_fam);
+	return err;
+}
+
+void nlbluetooth_cleanup(void)
+{
+	genl_unregister_family(&amp;nlbluetooth_fam);
+}
diff --git a/net/bluetooth/netlink.h b/net/bluetooth/netlink.h
new file mode 100644
index 0000000..2b81037
--- /dev/null
+++ b/net/bluetooth/netlink.h
@@ -0,0 +1,30 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+#ifndef __NETLINK_H
+#define __NETLINK_H
+
+#define VERSION 1
+
+enum nlbluetooth_attr {
+	NLBLUETOOTH_ATTR_UNSPEC,
+	NLBLUETOOTH_ATTR_DEVID,
+	NLBLUETOOTH_ATTR_DEVNUM,
+	NLBLUETOOTH_ATTR_DEVOPT,
+	NLBLUETOOTH_ATTR_DEVLIST,
+	/* Add attributes here */
+	__NLBLUETOOTH_ATTR_MAX,
+	NLBLUETOOTH_ATTR_MAX  =  __NLBLUETOOTH_ATTR_MAX - 1
+};
+
+enum nlbluetooth_cmds {
+	NLBLUETOOTH_CMD_UNSPEC,
+	NLBLUETOOTH_CMD_GET_DEVLIST,
+	/* Add command here */
+	__NLBLUETOOTH_CMD_MAX,
+	NLBLUETOOTH_CMD_MAX  = __NLBLUETOOTH_CMD_MAX - 1
+};
+
+#endif /* __NETLINK_H */
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081109071936</emailId><senderName>Damon Hastings</senderName><senderEmail>damonhastings@yahoo.com</senderEmail><timestampReceived>2008-11-09 07:19:36-0400</timestampReceived><subject>Possible to send audio to multiple bluetooth headsets at once?</subject><body>

Hi there,

Is it possible to stream audio to multiple bluetooth headsets on the same dongle, \
simultaneously?  Details of my setup and failed attempts are below if anyone wishes \
to help -- but honestly, even a one-line response "yes it's possible" would at least \
tell me I'm not wasting my time!  What I've read elsewhere suggests that what I'm \
trying to do may not even be possible in Linux.  (In case you're curious, I'll have \
too many headsets to have a separate dongle for each -- probably dozens of headsets, \
assuming the Bluetooth band can handle that many, which I'm also unsure about and \
pretty nervous about too.  Each stream will be 90% silent, with only occasional \
bursts of speech, but, still.  Oh well, I guess I'll find whether it works *after* I \
invest tons of coding time into this.)  I don't need to receive any audio from the \
headsets.

About my setup and my failed attempts:

I'm running Fedora 9 and have tried its built-in bluez (version 3.35) as well as \
bluez-4.17, and I'm using alsa.  I'm using the Motorola H680 and Jabra BT2040 \
headsets with an Aluratek ABD2020 dongle.  I can pair both headsets at once, and I \
can stream audio to one of them at a time just fine.  But if I try streaming to both \
at once, I get this error from aplay on the second one:

  damon@localhost [/home/damon]&gt; aplay -D bluetooth_mot_h680 bmtl.wav  
  Playing WAVE '/home/damon/bmtl.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, \
Mono  ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION \
failed : Input/output error(5)  aplay: set_params:1015: Unable to install hw params:
  ACCESS:  RW_INTERLEAVED
  FORMAT:  S16_LE
  SUBFORMAT:  STD
  SAMPLE_BITS: 16
  FRAME_BITS: 16
  CHANNELS: 1
  RATE: 8000
  PERIOD_TIME: 125000
  PERIOD_SIZE: 1000
  PERIOD_BYTES: 2000
  PERIODS: 4
  BUFFER_TIME: 500000
  BUFFER_SIZE: 4000
  BUFFER_BYTES: 8000
  TICK_TIME: [0 0]

I also get this in /var/log/messages (with bluez 3.35):

  Nov  7 21:08:14 scanners hcid[4512]: Audio API: received BT_GETCAPABILITIES_REQ
  Nov  7 21:08:14 scanners hcid[4512]: Audio API: sending BT_GETCAPABILITIES_RSP
  Nov  7 21:08:14 scanners hcid[4512]: Audio API: received BT_SETCONFIGURATION_REQ
  Nov  7 21:08:14 scanners hcid[4512]: config sco - device = 00:1A:0E:82:35:D5 \
                access_mode = 2
  Nov  7 21:08:14 scanners hcid[4512]: connect: Operation not permitted (1)
  Nov  7 21:08:14 scanners kernel: hcid[4512]: segfault at 10 ip 003e818f sp bfcb08d0 \
error 6 in audio.so[3de000+21000]

And for bluez-4.17 I got all fancy and ran bluetoothd (which I take it replaces hcid) \
manually as root in debug mode.  I got the same error from aplay, and bluetoothd gave \
me this (note it doesn't segault like hcid did):

  bluetoothd[2925]: Accepted new client connection on unix socket (fd=27)
  bluetoothd[2925]: Audio API: received BT_GETCAPABILITIES_REQ
  bluetoothd[2925]: Audio API: sending BT_GETCAPABILITIES_RSP
  bluetoothd[2925]: Audio API: received BT_SETCONFIGURATION_REQ
  bluetoothd[2925]: config sco - device = 00:1A:0E:B8:B3:7F access_mode = 2
  bluetoothd[2925]: connect: Operation not permitted (1)
  bluetoothd[2925]: config failed
  bluetoothd[2925]: Audio API: sending BT_SETCONFIGURATION_RSP
  bluetoothd[2925]: Unix client disconnected (fd=27)

Same result if I don't run as root.  The original headset kept playing just fine, but \
the second headset remained quiet.  Reversing order of playing makes no difference.  \
Pairing second while first is already playing makes no difference.

And here's a bunch of info that may or may not be relevant:

My .asoundrc:

  pcm.bluetooth_jab_bt2040 {
      type bluetooth
      device 00:1A:45:31:47:69
      profile "auto"
  }
  pcm.bluetooth_mot_h680 {
      type bluetooth
      device 00:1A:0E:B8:B3:7F
      profile "auto"
  }

My /etc/bluetooth/main.conf (unchanged from defaults):

  [General]
  Name = %h-%d
  Class = 0x000100
  DiscoverableTimeout = 0
  PageTimeout = 8192
  OffMode = NoScan
  DiscoverSchedulerInterval = 0

Hardware info:

  root@localhost [/root]&gt; hciconfig hci0 features
  hci0:	Type: USB
  	BD Address: 00:15:83:02:4F:E7 ACL MTU: 310:10 SCO MTU: 64:8
  	Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
  		&lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt; 
  		&lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt; 
  		&lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt; 
  		&lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt; 
  		&lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt; 
  		&lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt; 
  		&lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt; 
  		&lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt; 
  		&lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt; 
  		&lt;AFH cap. master&gt; &lt;AFH class. master&gt; &lt;EDR eSCO 2 Mbps&gt; 
  		&lt;EDR eSCO 3 Mbps&gt; &lt;3-slot EDR eSCO&gt; &lt;extended features&gt; 

  root@localhost [/root]&gt; hcitool info 00:1A:45:31:47:69 
  Requesting information ...
  	BD Address:  00:1A:45:31:47:69
  	OUI Company: GN Netcom as (00-1A-45)
  	Device Name: Jabra BT2040
  	LMP Version: 2.0 (0x3) LMP Subversion: 0xbf9
  	Manufacturer: Cambridge Silicon Radio (10)
  	Features: 0xbc 0xfe 0x0f 0x86 0x8b 0xe9 0x00 0x00
  		&lt;encryption&gt; &lt;slot offset&gt; &lt;timing accuracy&gt; &lt;role switch&gt; 
  		&lt;sniff mode&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt; 
  		&lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt; 
  		&lt;power control&gt; &lt;transparent SCO&gt; &lt;EDR ACL 2 Mbps&gt; 
  		&lt;EDR ACL 3 Mbps&gt; &lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; 
  		&lt;AFH cap. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt; 
  		&lt;AFH cap. master&gt; &lt;EDR eSCO 2 Mbps&gt; &lt;EDR eSCO 3 Mbps&gt; 
  		&lt;3-slot EDR eSCO&gt; 

  root@localhost [/root]&gt; hcitool info 00:1A:0E:B8:B3:7F 
  Requesting information ...
  	BD Address:  00:1A:0E:B8:B3:7F
  	OUI Company: Cheng Uei Precision Industry Co.,Ltd (00-1A-0E)
  	Device Name: Motorola H680
  	LMP Version: 2.0 (0x3) LMP Subversion: 0x109d
  	Manufacturer: Cambridge Silicon Radio (10)
  	Features: 0xfc 0xfc 0x0b 0x80 0x0b 0x88 0x00 0x00
  		&lt;encryption&gt; &lt;slot offset&gt; &lt;timing accuracy&gt; &lt;role switch&gt; 
  		&lt;hold mode&gt; &lt;sniff mode&gt; &lt;channel quality&gt; &lt;SCO link&gt; 
  		&lt;HV2 packets&gt; &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; 
  		&lt;paging scheme&gt; &lt;transparent SCO&gt; &lt;extended SCO&gt; &lt;EV4 packets&gt; 
  		&lt;EV5 packets&gt; &lt;AFH cap. slave&gt; &lt;AFH cap. master&gt; 
  		&lt;3-slot EDR eSCO&gt; 

Thanks for any help -- I'm at wits' end!  :-P

Damon Hastings


      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081109093554</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-11-09 09:35:54-0400</timestampReceived><subject>Re: Possible to send audio to multiple bluetooth headsets at once?</subject><body>

Hi Damon,

In theory what you're trying to do should be possible, though you  
might run into bandwidth issues (and there's not much BlueZ can do to  
help with that). However, you do need some configuration file changes  
since the defaults are for one headset only. If you're trying to use  
HSP/HFP add MaxConnections=2 to the [Headset] section in /etc/ 
bluetooth/audio.conf. If you're trying to use A2DP add SBCSources=2 to  
the [A2DP] section of the same file. You might also want to experiment  
with forcing BlueZ to use the profile you want in the case of multi- 
profile headsets. For HSP/HFP you need profile=voice in your .asoundrc  
entries and for A2DP you need profile=hifi.

Johan

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081112091730</emailId><senderName>Sebastian Spaeth</senderName><senderEmail>sebastian@sspaeth.de</senderEmail><timestampReceived>2008-11-12 09:17:30-0400</timestampReceived><subject>bluez-gnome wizard deficiencies make it mostly useless</subject><body>

I caused quite a ruckus in this gnome bug yesterday:
http://bugzilla.gnome.org/show_bug.cgi?id=560315

Currently the bluez-gnome connection wizard fails invariably for all BT
devices that don't have a keyboard and are not special cased in source code.

In my case this happens:
I select the "setup new device" from the bluetooth-applet. Select
"eGPS-397" which is my BT GPS device. Next, the "connecting" page comes
up with a brief flash of some "type in random PIN" or something. It
dissappears within a fraction of a second without giving me the chance
to interact at all, leading to the page "pairing failed". This makes the
wizard useless for all BT devices that cannot enter PINs and that are
not special cased.

Bastien Haddess thinks it would be a bad idea to allow users to enter a
fixed pin (as a second choice to a default random PIN) via dialog and
asked to enter a new bug for each device to add it as another special
case. This is the wrong approach IMHO. Tracking all the devices out
there and their PINs will be a losing battle and bloat the code. With a
GPS device product lifecycle of a year, those devices will be outdated
until the code ships in a Linux distribution.

I see 2 solutions and I would like input in what bluez-gnome devs think:
1) Try to pair with random PIN if that fails try "0000", "1234", "1111".
This would at least cover about 90% of all devices and only special case
the rest.

2) Prepopulate a Random PIN in a field but allow the user to override
that PIN. After all he should know best what PIN to use.

Thanks.
spaetz



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081107162741</emailId><senderName>martin f krafft</senderName><senderEmail>madduck@madduck.net</senderEmail><timestampReceived>2008-11-07 16:27:41-0400</timestampReceived><subject>btusb+sco: unable to install hw params (set_params:979)</subject><body>

Hi folks,

I am trying to get btusb to work with my two SCO headsets (BT250 and BT500v) on
two different machines (i386 and amd64), both running 2.6.26. I am
pretty much following the instructions at
http://wiki.bluez.org/wiki/HOWTO/AudioDevices, which are "valid for
bluez-utils-3.16 or newer". I am using Debian's 3.36-1 on both
machines.

My .asoundrc has this content:

  pcm.bt250 {
    type bluetooth
    device "00:07:A4:01:AB:A3"
    profile "sco"
  }
  ctl.bt250 {
    type bluetooth
  }

and I put the headset into pairing mode, then ran this command:

  $ strace -f -o /tmp/arecord.strace arecord -f S16_LE -D bt250 &gt;/tmp/test.wav
  Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono

This caused bluetooth-applet to prompt me for the passkey and
finally to tell me that the bonding had been established, just as
there's a little tone in the headset to acknowledge the connection.

However, /tmp/test.wav won't grow, and after a few seconds, arecord
exits with $?=0 (!!) after spouting to the terminal:

ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : Input/output error(5)
arecord: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]

/tmp/test.wav is size 0. :(

I see precisely the same behaviour with any combination of the two
machines, the two headsets and three bluetooth dongles. Yes, I tried
them all. Yes, I am somewhat desperate by now.

I have bluez-audio installed, but /etc/bluetooth/audio.conf is
default. No PulseAudio or anything other than plain ALSA here...

Any clues what could be going on?

-- 
martin | http://madduck.net/ | http://two.sentenc.es/
 
"i wish i hadn't slept all day, it's really lowered my productivity"
                                                   -- robert mcqueen
 
spamtraps: madduck.bogus@madduck.net

["digital_signature_gpg.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081111220655</emailId><senderName>"XazZ XazZ"</senderName><senderEmail>xazz.xazz@googlemail.com</senderEmail><timestampReceived>2008-11-11 22:06:55-0400</timestampReceived><subject>Problem with bluez and a bluetooth headset</subject><body>

good evening everyone

Few days ago I got a new, beautiful bluetooth headset.
It's a Nokia BH-503
My PC got an "ID 1131:1001 Integrated System Solution Corp. KY-BT100
Bluetooth Adapter"
For the usb dongle part from lsusb -vv check the link at the bottom (lsusb)

Sadly I'm having some trouble getting my headset to work with my PC.
Neither I can play music over my headset nor can I record something over it.

When I'm trying to record sound via `arecord -D plug:bluetooth -f
S16_LE test.wav` I get the following output:
Recording WAVE 'test.wav' : Signed 16 bit Little Endian, Rate 8000 Hz,
Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)
arecord: set_params:1022: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: 0

skype tells me:
ALSA lib pcm_bluetooth.c:1619:(bluetooth_init) BT_GETCAPABILITIES
failed : Input/output error(5)

I've added a link to bluetoothd's logfile when trying to record via arecord
(link name is bluetoothd.log)
I also added bluetoothd's logfile when trying to do the sound
test in skype (link name is bluetoothd.log.0)

The bluez version I'm running: 4.17

I also tried to get my headset working with bluez 3.32
with 3.32 I could play music over my headset - but I could NOT record sound.
I googled and some people came up with the fact that pulseaudio might
break bluetooth sound: I do not have pulseaudio installed or running

I also tried changing the bluetooth section in my ~/.asoundrc
I changed profile to: "voice" then to "hifi" and then to "auto" -&gt; it
never worked

In my dmesg I get "hci_scodata_packet: hci0 SCO packet for unknown
connection handle 2" and "hci_scodata_packet: hci0 SCO packet for
unknown connection handle 65398"
according to jhe from IRC: &lt;jhe&gt; that error sounds like its sending
SCO packets without having informed the host (bluez) that there's a
SCO connection
NOTE: its == my bluetooth dongle

Earlier I also got some stack traces - but I couldn't reproduce those
on a non-tainted system yet:
http://nopaste.ch/3992403666920ab.html

As soon as I'm able to reproduce on a non-tainted kernel I'll post an update

If you need more information please feel free to ask - I'll post it as
soon as I can.

Thanks in advance
XazZ

dmesg.log: http://nopaste.ch/25dd0e4b29d440a.html
bluetoothd.log: http://nopaste.ch/e395401980f8100.html
bluetoothd.log.1: http://nopaste.ch/fe11fe7cbe6a598.html
lsusb: http://nopaste.ch/408c541369cfd9f.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116024127</emailId><senderName>"XazZ XazZ"</senderName><senderEmail>xazz.xazz@googlemail.com</senderEmail><timestampReceived>2008-11-16 02:41:27-0400</timestampReceived><subject>Re: Problem with bluez and a bluetooth headset</subject><body>

good evening again

I got one step further after deleting my whole bluetooth-configuration
and setting everything bluetooth-related up from scratch :)

I got audio output on my headset working.
Audio input (recording) is sadly still not possible

bluetootd says the following when trying to record audio:
a2dp_source_cfg: no available SEP found
config failed

skype and arecord say the following as soon as I try to record audio:
ALSA lib pcm_bluetooth.c:712:(bluetooth_a2dp_hw_params)
BT_SETCONFIGURATION failed : Input/output error(5)

You can get the full bluetoothd log here: http://nopaste.ch/64aa1a77e7813e4.html

I also noticed that I can neither play nor record something when I set
profile "voice" in ~/.asoundrc
When I set it to profile "hifi" audio playback works fine.

Thanks for any help in advance
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116115258</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-16 11:52:58-0400</timestampReceived><subject>possible sbc codec bug with audio glitches</subject><body>

Hello everybody,

At celinux 2008 this month I talked to Marcel Holtmann and showed him
some issues I encountered with bluez.

One of my bigger issues is that I got audio glitches when listing to
high quality audio (dvds) with an sensitive DJ bluetooth headset.

I let Marcel listen to the problem and he also hears them and things it
may be something with the SBC codec. But since Marcel is no expert on
the SBC codec part, we would like to ask for the help of others to solve
this issue.

The glitches/distortions can be heard on a Motorola Bluetooth S805
stereo headset and listing to a dvd audio for example intro music of
Stargate Atlantis.

The strange thing is that I can only hear the glitches on the right side
of the headset.

I reported my first encounter with the issue on may 2008:
http://sourceforge.net/mailarchive/message.php?msg_name=4819B1A7.2070702%40powercraft.nl

I hope somebody would be willing/able to help out. I have seen some very
nice post about the bad performance of the SBC codec, and I hope you
guys can also have a look at this.

Best regards,

Jelle


["setup-bluetooth-motorola-s805.sh" (application/x-sh)]

#!/bin/bash

echo "setup-bluetooth-motorola-s805.sh"

echo 'pcm.headset {
    type bluetooth
    #~ device 00:0D:18:A0:35:70
    #~ device 00:53:53:FB:7E:9C # Nokia BH-801
    device 00:0C:55:D1:C9:78 # Motorola S805
    #~ device 00:0D:FD:18:6E:3C # Motorola S9
    #~ device 20:07:09:15:A9:5A # Samsung WEP210
    profile hifi
    #~ profile voice
    #profile auto
}
pcm.softvol {
    type softvol
    slave.pcm headset
    control.name Headset
    control.card 0
}
pcm.!default {
    #~ type hw
    #~ card 0
    type plug
    slave.pcm softvol
}' &gt; ~/.asoundrc

#~ sudo /etc/init.d/bluetooth restart
#~ sudo /etc/init.d/alsa-utils restart

echo "done, you can close this windows now"

exit


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081116142908</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-11-16 14:29:08-0400</timestampReceived><subject>Re: possible sbc codec bug with audio glitches</subject><body>

Jelle

&gt; The strange thing is that I can only hear the glitches on the right side
&gt; of the headset.

That is very strange it is only on one side. Do you know if you were
you using the joint stereo setting in the codec?

-- 
Brad Midgley
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116213730</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-16 21:37:30-0400</timestampReceived><subject>Re: possible sbc codec bug with audio glitches</subject><body>

Brad Midgley wrote:
&gt; Jelle
&gt; 
&gt;&gt; The strange thing is that I can only hear the glitches on the right side
&gt;&gt; of the headset.
&gt; 
&gt; That is very strange it is only on one side. Do you know if you were
&gt; you using the joint stereo setting in the codec?
&gt; 

Thank you Brad for taking the time to read and answer to my question,
this is really appreciated. I dont exactly know what you mean with joint
stereo settings in the code?

I use the bluez git build on 2008-11-06. The only info I got is from the
bluetoothd running in debug mode, please see the attachment for more
information.

I hope the below section is the most relevant?

config a2dp - device = 00:0C:55:D1:C9:78 access_mode = 2
codec sbc - frequency = 1 channel_mode = 1 allocation = 1 subbands = 1
blocks = 1 bitpool = 44
a2dp_source_config: selected SEP 0xb81b1020
avdtp_ref(0xb81acbf0): ref=3
setup_ref(0xb81b62a8): ref=1
avdtp_set_configuration(0xb81acbf0): int_seid=1, acp_seid=1

Thanks in advance,

Jelle

["bluez-glitches-debug.txt.tar.gz" (application/x-gzip)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081117011500</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-11-17 01:15:00-0400</timestampReceived><subject>Re: possible sbc codec bug with audio glitches</subject><body>

Jelle,

Everything in the codec is symmetrical between the two channels unless
using joint stereo mode. In joint stereo, if it saves space, we encode
the difference between and the sum of the channels instead of the
individual channel content. It's conceivable that an overflow here
might be manifest differently between the two channels.

It looks like you can use a parameter "mode" in the alsa config and
set it to either "stereo" or "joint"

If you can narrow down the distortion to one of these cases that would be handy.

Do you have an mp3 I could try to hear the problem?

Brad

On Sun, Nov 16, 2008 at 2:37 PM, Jelle de Jong
&lt;jelledejong@powercraft.nl&gt; wrote:
&gt; Brad Midgley wrote:
&gt;&gt; Jelle
&gt;&gt;
&gt;&gt;&gt; The strange thing is that I can only hear the glitches on the right side
&gt;&gt;&gt; of the headset.
&gt;&gt;
&gt;&gt; That is very strange it is only on one side. Do you know if you were
&gt;&gt; you using the joint stereo setting in the codec?
&gt;&gt;
&gt;
&gt; Thank you Brad for taking the time to read and answer to my question,
&gt; this is really appreciated. I dont exactly know what you mean with joint
&gt; stereo settings in the code?
&gt;
&gt; I use the bluez git build on 2008-11-06. The only info I got is from the
&gt; bluetoothd running in debug mode, please see the attachment for more
&gt; information.
&gt;
&gt; I hope the below section is the most relevant?
&gt;
&gt; config a2dp - device = 00:0C:55:D1:C9:78 access_mode = 2
&gt; codec sbc - frequency = 1 channel_mode = 1 allocation = 1 subbands = 1
&gt; blocks = 1 bitpool = 44
&gt; a2dp_source_config: selected SEP 0xb81b1020
&gt; avdtp_ref(0xb81acbf0): ref=3
&gt; setup_ref(0xb81b62a8): ref=1
&gt; avdtp_set_configuration(0xb81acbf0): int_seid=1, acp_seid=1
&gt;
&gt; Thanks in advance,
&gt;
&gt; Jelle
&gt;



-- 
Brad Midgley
Senior Architect
Surgeworks
801-272-9800
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116043553</emailId><senderName>Brian Rogers</senderName><senderEmail>brian_rogers@comcast.net</senderEmail><timestampReceived>2008-11-16 04:35:53-0400</timestampReceived><subject>Re: Problem with bluez and a bluetooth headset</subject><body>

XazZ XazZ wrote:
&gt; good evening everyone
&gt;
&gt; Few days ago I got a new, beautiful bluetooth headset.
&gt; It's a Nokia BH-503
&gt; My PC got an "ID 1131:1001 Integrated System Solution Corp. KY-BT100
&gt; Bluetooth Adapter"
&gt;   
I've got that same exact dongle on my desktop. It can't talk to my 
headset either, or my phone, or my laptop, or a Wiimote. I suspect it 
has issues with the new btusb in 2.6.27. I can list devices, but when I 
try to pair, it just waits until eventually the following appears in dmesg:
hci_cmd_task: hci0 command tx timeout

I had that dongle working in an earlier kernel version. On 2.6.27, my 
laptop's Bluetooth is working fine.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116221651</emailId><senderName>"XazZ XazZ"</senderName><senderEmail>xazz.xazz@googlemail.com</senderEmail><timestampReceived>2008-11-16 22:16:51-0400</timestampReceived><subject>Re: Problem with bluez and a bluetooth headset</subject><body>

Hi

&gt; So BlueZ is trying to connect to A2DP. No wonder recording doesn't work (you
&gt; need HSP/HFP for that). You can force HSP/HFP by adding a "profile voice"
&gt; line to your .asoundrc entry.

Okay, I tried this again.
As soon as I change "profile hifi" to "profile voice" sound playback
stops working

[XazZ@darklight ~]$ hciconfig hci0
hci0:   Type: USB
       BD Address: 00:11:67:8F:29:0E ACL MTU: 1021:8 SCO MTU: 48:10
       UP RUNNING PSCAN
       RX bytes:2487 acl:33 sco:0 events:110 errors:0
       TX bytes:2126 acl:36 sco:0 commands:65 errors:0

That suggests that no sco packets have been sent (although there
should have been one)
I also get two hci_cmd_task: hci0 command tx timeout in my dmesg as
Brian Rogers said

Again the output of bluetoothd -nd:
http://nopaste.ch/502c8ee33709a6d.html (I hope it helps)
Maybe my device needs some quirk?

Oh, and I'm using the btusb driver which comes with 2.6.28 rc3 (Brian
Rogers uses the same driver)

XazZ
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081107163737</emailId><senderName>martin f krafft</senderName><senderEmail>madduck@madduck.net</senderEmail><timestampReceived>2008-11-07 16:37:37-0400</timestampReceived><subject>Re: btusb+sco: unable to install hw params (set_params:979)</subject><body>

[Attachment #2 (multipart/mixed)]


also sprach martin f krafft &lt;madduck@madduck.net&gt; [2008.11.07.1727 +0100]:
&gt;   $ strace -f -o /tmp/arecord.strace arecord -f S16_LE -D bt250 &gt;/tmp/test.wav
&gt;   Recording WAVE 'stdin' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono

strace attached, with -tt.

FWIW, I let dbus-monitor run alongside and there was not a single
event between running the above and seeing the error.

-- 
martin | http://madduck.net/ | http://two.sentenc.es/
 
.   `___
(o-    (o-    (o-    (o-   (o-    (o-    (o-           /\/| | |
//\    //\    //\    //\   //\    //\    //\      `  /\/\/l-+-|
v_/_   v_/_   v_/_   v_/_  v_/_   v_/_   v_/_    .`  /\/\/|_|_|
 
spamtraps: madduck.bogus@madduck.net

["arecord.strace.bz2" (application/octet-stream)]
["digital_signature_gpg.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081112104336</emailId><senderName>Sebastian Spaeth</senderName><senderEmail>sebastian@sspaeth.de</senderEmail><timestampReceived>2008-11-12 10:43:36-0400</timestampReceived><subject>bluez-gnome wizard deficiencies make it mostly useless</subject><body>

Sorry if this gets through twice, it was sent once before my
subscription to this list became active so it might have been lost.
------------------------------------
I caused quite a ruckus in this gnome bug yesterday:
http://bugzilla.gnome.org/show_bug.cgi?id=560315

Currently the bluez-gnome connection wizard fails invariably for all BT
devices that don't have a keyboard and are not special cased in source code.

In my case this happens:
I select the "setup new device" from the bluetooth-applet. Select
"eGPS-397" which is my BT GPS device. Next, the "connecting" page comes
up with a brief flash of some "type in random PIN" or something. It
dissappears within a fraction of a second without giving me the chance
to interact at all, leading to the page "pairing failed". This makes the
wizard useless for all BT devices that cannot enter PINs and that are
not special cased.

Bastien Nocera thinks it would be a bad idea to allow users to enter a
fixed pin (as a second choice to a default random PIN) via dialog and
asked to enter a new bug for each device to add it as another special
case. This is the wrong approach IMHO. Tracking all the devices out
there and their PINs will be a losing battle and bloat the code. With a
GPS device product lifecycle of a year, those devices will be outdated
until the code ships in a Linux distribution.

I see 2 solutions and I would like input in what bluez-gnome devs think:
1) Try to pair with random PIN if that fails try "0000", "1234", "1111".
This would at least cover about 90% of all devices and only special case
the rest.

2) Prepopulate a Random PIN in a field but allow the user to override
that PIN. After all he should know best what PIN to use.

Thanks.
spaetz




--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081112183907</emailId><senderName>Jim Carter</senderName><senderEmail>jimc@math.ucla.edu</senderEmail><timestampReceived>2008-11-12 18:39:07-0400</timestampReceived><subject>Re: bluez-gnome wizard deficiencies make it mostly useless</subject><body>

On Wed, 12 Nov 2008, Sebastian Spaeth wrote:

&gt; I see 2 solutions and I would like input in what bluez-gnome devs think:
&gt; 1) Try to pair with random PIN if that fails try "0000", "1234", "1111".
&gt; This would at least cover about 90% of all devices and only special case
&gt; the rest.
&gt; 
&gt; 2) Prepopulate a Random PIN in a field but allow the user to override
&gt; that PIN. After all he should know best what PIN to use.

3)  A little more complicated: if the device class suggests no keyboard,
try the hardwired codes listed above, and in the 10% of cases where that 
fails (or if the device class suggests that there is a keyboard), then pop 
the dialog box for solution #2.  Particularly crappy devices may have a 
problem if pairing fails, so it could be helpful to have an override to 
bypass the hardwired codes even for device classes where they would 
normally be tried.

James F. Carter          Voice 310 825 2897    FAX 310 206 6673
UCLA-Mathnet;  6115 MSA; 520 Portola Plaza; Los Angeles, CA, USA  90095-1555
Email: jimc@math.ucla.edu    http://www.math.ucla.edu/~jimc (q.v. for PGP key)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081112192957</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-12 19:29:57-0400</timestampReceived><subject>Re: bluez-gnome wizard deficiencies make it mostly useless</subject><body>

On Wed, 2008-11-12 at 11:43 +0100, Sebastian Spaeth wrote:
&lt;snip&gt;
&gt; I caused quite a ruckus in this gnome bug yesterday:
&gt; http://bugzilla.gnome.org/show_bug.cgi?id=560315

You didn't cause a ruckus, people that don't actually read the comments
did.

&gt; Currently the bluez-gnome connection wizard fails invariably for all BT
&gt; devices that don't have a keyboard and are not special cased in source code.

Mice, tablets, keyboards, headsets, hands-free, phones work. Only GPS
devices and mice, and headsets that don't use '0000' as the PIN codes
don't work.

That's not very many, and I managed to pair every single one of my
devices without a problem (and I have quite a lot of them).

&gt; In my case this happens:
&gt; I select the "setup new device" from the bluetooth-applet. Select
&gt; "eGPS-397" which is my BT GPS device. Next, the "connecting" page comes
&gt; up with a brief flash of some "type in random PIN" or something. It
&gt; dissappears within a fraction of a second without giving me the chance
&gt; to interact at all, leading to the page "pairing failed". This makes the
&gt; wizard useless for all BT devices that cannot enter PINs and that are
&gt; not special cased.

We know about that problem. I have a patch in my tree for your
particular GPS device, I'm still waiting for you to file a bug with the
details spelled out.

&gt; Bastien Nocera thinks it would be a bad idea to allow users to enter a
&gt; fixed pin (as a second choice to a default random PIN) via dialog and
&gt; asked to enter a new bug for each device to add it as another special
&gt; case. This is the wrong approach IMHO. Tracking all the devices out
&gt; there and their PINs will be a losing battle and bloat the code. With a
&gt; GPS device product lifecycle of a year, those devices will be outdated
&gt; until the code ships in a Linux distribution.

I didn't say it was a bad idea to allow users to enter a fixed PIN, I
said it would be a bad idea to replace random PINs altogether with
user-provided PINs.

&gt; I see 2 solutions and I would like input in what bluez-gnome devs think:
&gt; 1) Try to pair with random PIN if that fails try "0000", "1234", "1111".
&gt; This would at least cover about 90% of all devices and only special case
&gt; the rest.

That wouldn't work, a lot of devices will get out of pairing mode after
an unsuccesful pairing.

&gt; 2) Prepopulate a Random PIN in a field but allow the user to override
&gt; that PIN. After all he should know best what PIN to use.

That's as bad as making the user enter the PIN themselves.

My solution would be to have a button at the bottom of the device
selection page called "PIN options" (or similar). The button would popup
a dialogue with options:
[X] Automatic PIN selection

[ ] Force a random PIN number

[ ] Use fixed PIN code:
        [X] '0000' (most headsets, mice and GPS devices)
        [ ] '1111'
        [ ] '1234'
        [ ] Custom: ___________

Wording is obviously up for discussion. The code is probably an
afternoon's work for somebody comfortable with GTK+, maybe a bit longer
to get Marcel happy with it ;)

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081112195952</emailId><senderName>Jim Carter</senderName><senderEmail>jimc@math.ucla.edu</senderEmail><timestampReceived>2008-11-12 19:59:52-0400</timestampReceived><subject>Re: bluez-gnome wizard deficiencies make it mostly useless</subject><body>

On Wed, 12 Nov 2008, Bastien Nocera wrote:

&gt; On Wed, 2008-11-12 at 11:43 +0100, Sebastian Spaeth wrote:
&gt; &lt;snip&gt;

&gt; That wouldn't work, a lot of devices will get out of pairing mode after
&gt; an unsuccesful pairing.

It may be just my fumble fingers, but I think with my Motorola HT-820 
headset you have to exit from pairing mode (power cycle) and re-enter if 
you botch the 0000.

&gt; My solution would be to have a button at the bottom of the device
&gt; selection page called "PIN options" (or similar). The button would popup
&gt; a dialogue with options:
&gt; [X] Automatic PIN selection
&gt; 
&gt; [ ] Force a random PIN number
&gt; 
&gt; [ ] Use fixed PIN code:
&gt;         [X] '0000' (most headsets, mice and GPS devices)
&gt;         [ ] '1111'
&gt;         [ ] '1234'
&gt;         [ ] Custom: ___________

Excellent!  But I haven't messed enough with GTK+ to make it happen.

James F. Carter          Voice 310 825 2897    FAX 310 206 6673
UCLA-Mathnet;  6115 MSA; 520 Portola Plaza; Los Angeles, CA, USA  90095-1555
Email: jimc@math.ucla.edu    http://www.math.ucla.edu/~jimc (q.v. for PGP key)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081110003806</emailId><senderName>Damon Hastings</senderName><senderEmail>damonhastings@yahoo.com</senderEmail><timestampReceived>2008-11-10 00:38:06-0400</timestampReceived><subject>Re: Possible to send audio to multiple bluetooth headsets at once?</subject><body>

Hi Johan,

Thanks for your quick reply -- I wish I had posted here days ago!  Say, am I supposed \
to be sending my response only to you, or to the whole mailing list?

Well, you probably got me a few steps closer (that I *never* would have figured out \
on my own), but I'm afraid the behavior of bluetoothd is unchanged.  I've only tried \
it with bluez 4.17 -- should I try an earlier version?

I created /etc/bluetooth/audio.conf with these contents:

  [Headset]
  MaxConnections=2

I also tried adding that to /etc/bluetooth/main.conf, and I tried adding \
MaxConnections=2 to the [General] section there as well.  I also tried MaxConnected=2 \
due to a suspicious message "audio.conf: Key file does not have key 'MaxConnected'" \
that I got from bluetoothd; debug mode seems to give messages like that for keys \
which could (should?) have been in the conf files but weren't.  And I added 'profile \
"voice"' to both PCMs in my .asoundrc.  

None of this seemed to substantially change bluetoothd's behavior.  Here's the full \
output of "/usr/sbin/bluetoothd -d -n" running as root during one of my attempts, \
with my own actions annotated in &lt;&gt; angle brackets.  This is starting from scratch \
(i.e. no stored pairings, so I have to re-enter both PINs):

bluetoothd[3103]: Bluetooth daemon
bluetoothd[3103]: Enabling debug information
bluetoothd[3103]: parsing main.conf
bluetoothd[3103]: offmode=NoScan
bluetoothd[3103]: discovto=0
bluetoothd[3103]: pageto=8192
bluetoothd[3103]: name=%h-%d
bluetoothd[3103]: class=0x000100
bluetoothd[3103]: inqmode=0
bluetoothd[3103]: Starting SDP server
bluetoothd[3103]: Loading plugins /usr/lib/bluetooth/plugins
bluetoothd[3103]: Unix socket created: 11
bluetoothd[3103]: audio.conf: Key file does not have key 'HFP'
bluetoothd[3103]: Telephony plugin initialized
bluetoothd[3103]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes"  bluetoothd[3103]: Parsing /etc/bluetooth/input.conf \
failed: No such file or directory bluetoothd[3103]: Parsing \
/etc/bluetooth/network.conf failed: No such file or directory bluetoothd[3103]: \
Config options: InterfacePrefix=bnep%d, PANU_Script=(null), GN_Script=(null), \
NAP_Script=(null), GN_Interface=pan0, NAP_Interface=pan1, Security=true \
bluetoothd[3103]: bridge pan0 created bluetoothd[3103]: HCI dev 0 registered
bluetoothd[3103]: child 3109 forked
bluetoothd[3103]: HCI dev 0 already up
bluetoothd[3103]: headset_server_probe: path /org/bluez/hci0
bluetoothd[3103]: audio.conf: Key file does not have key 'Master'
bluetoothd[3103]: Adding record with handle 0x10000
bluetoothd[3103]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[3103]: audio.conf: Key file does not have key 'SCORouting'
bluetoothd[3103]: Adding record with handle 0x10001
bluetoothd[3103]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000111e-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000111f-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[3103]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[3103]: audio.conf: Key file does not have key 'Disable'
bluetoothd[3103]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3103]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3103]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3103]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3103]: audio.conf: Key file does not have key 'Master'
bluetoothd[3103]: SEP 0xb840b6e0 registered: type:0 codec:0 seid:1
bluetoothd[3103]: Adding record with handle 0x10002
bluetoothd[3103]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[3103]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[3103]: audio.conf: Key file does not have key 'Master'
bluetoothd[3103]: Adding record with handle 0x10003
bluetoothd[3103]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3103]: Adding record with handle 0x10004
bluetoothd[3103]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3103]: proxy_probe: path /org/bluez/hci0
bluetoothd[3103]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/hci0 bluetoothd[3103]: service_probe: path /org/bluez/hci0
bluetoothd[3103]: Registered interface org.bluez.Service on path /org/bluez/hci0
bluetoothd[3103]: network_server_probe: path /org/bluez/hci0
bluetoothd[3103]: Adding record with handle 0x10005
bluetoothd[3103]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[3103]: register_server_record: got record id 0x10005
bluetoothd[3103]: Registered interface org.bluez.NetworkPeer on path /org/bluez/hci0
bluetoothd[3103]: network_server_probe: path /org/bluez/hci0
bluetoothd[3103]: Adding record with handle 0x10006
bluetoothd[3103]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[3103]: register_server_record: got record id 0x10006
bluetoothd[3103]: Registered interface org.bluez.NetworkHub on path /org/bluez/hci0
bluetoothd[3103]: network_server_probe: path /org/bluez/hci0
bluetoothd[3103]: Adding record with handle 0x10007
bluetoothd[3103]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3103]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[3103]: register_server_record: got record id 0x10007
bluetoothd[3103]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/hci0 bluetoothd[3103]: Adapter /org/bluez/hci0 has been enabled
bluetoothd[3103]: Starting security manager 0
bluetoothd[3103]: child 3109 exited
bluetoothd[3103]: Computer is classified as desktop
bluetoothd[3103]: Current device class is 0x4a0104
bluetoothd[3103]: Setting 0x000104 for major/minor device class
bluetoothd[3103]: Agent registered for hci0 at :1.21:/org/bluez/agent/hci0

&lt;turned on the Jabra BT2040 headset&gt;

bluetoothd[3103]: adapter_get_device(00:1A:45:31:47:69)
bluetoothd[3103]: adapter_create_device(00:1A:45:31:47:69)
bluetoothd[3103]: Creating device /org/bluez/hci0/dev_00_1A_45_31_47_69
bluetoothd[3103]: link_key_request (sba=00:15:83:02:4F:E7, dba=00:1A:45:31:47:69)
bluetoothd[3103]: kernel auth requirements = 0x00
bluetoothd[3103]: pin_code_request (sba=00:15:83:02:4F:E7, dba=00:1A:45:31:47:69)
bluetoothd[3103]: hcid_dbus_new_auth_request

&lt;entered PIN&gt;

bluetoothd[3103]: link_key_notify (sba=00:15:83:02:4F:E7, dba=00:1A:45:31:47:69)
bluetoothd[3103]: hcid_dbus_bonding_process_complete: status=00
bluetoothd[3103]: adapter_get_device(00:1A:45:31:47:69)
bluetoothd[3103]: adapter_get_device(00:1A:45:31:47:69)
bluetoothd[3103]: Probe drivers for /org/bluez/hci0/dev_00_1A_45_31_47_69
bluetoothd[3103]: adapter_get_device(00:1A:45:31:47:69)
bluetoothd[3103]: Found Headset record
bluetoothd[3103]: Discovered Headset service on RFCOMM channel 2
bluetoothd[3103]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_45_31_47_69 bluetoothd[3103]: Found Handsfree record
bluetoothd[3103]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[3103]: headset_probe: path /org/bluez/hci0/dev_00_1A_45_31_47_69
bluetoothd[3103]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_45_31_47_69

&lt;turned on the Motorola H680 headset&gt;

bluetoothd[3103]: adapter_get_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: adapter_create_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: Creating device /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F
bluetoothd[3103]: link_key_request (sba=00:15:83:02:4F:E7, dba=00:1A:0E:B8:B3:7F)
bluetoothd[3103]: kernel auth requirements = 0x00
bluetoothd[3103]: pin_code_request (sba=00:15:83:02:4F:E7, dba=00:1A:0E:B8:B3:7F)
bluetoothd[3103]: hcid_dbus_new_auth_request

&lt;entered PIN&gt;

bluetoothd[3103]: link_key_notify (sba=00:15:83:02:4F:E7, dba=00:1A:0E:B8:B3:7F)
bluetoothd[3103]: hcid_dbus_bonding_process_complete: status=00
bluetoothd[3103]: adapter_get_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: adapter_get_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: link_key_request (sba=00:15:83:02:4F:E7, dba=00:1A:0E:B8:B3:7F)
bluetoothd[3103]: kernel auth requirements = 0x00
bluetoothd[3103]: stored link key type = 0x00
bluetoothd[3103]: hcid_dbus_bonding_process_complete: status=00
bluetoothd[3103]: adapter_get_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: hcid_dbus_bonding_process_complete: no pending auth request
bluetoothd[3103]: adapter_get_device(00:1A:0E:B8:B3:7F)
bluetoothd[3103]: Probe drivers for /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F
bluetoothd[3103]: Found Handsfree record
bluetoothd[3103]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[3103]: Registered interface org.bluez.Headset on path \
/org/bluez/hci0/dev_00_1A_0E_B8_B3_7F bluetoothd[3103]: State changed \
/org/bluez/hci0/dev_00_1A_0E_B8_B3_7F: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[3103]: Accepted headset connection from \
00:1A:0E:B8:B3:7F for /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F bluetoothd[3103]: \
Received AT+BRSF=26 bluetoothd[3103]: HFP HF features: "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control"  bluetoothd[3103]: \
Received AT+CIND=? bluetoothd[3103]: Received AT+CIND?
bluetoothd[3103]: Probe drivers for /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F
bluetoothd[3103]: Found Headset record
bluetoothd[3103]: Found Handsfree record
bluetoothd[3103]: Discovered Handsfree service on RFCOMM channel 1
bluetoothd[3103]: headset_probe: path /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F
bluetoothd[3103]: Registered interface org.bluez.Input on path \
/org/bluez/hci0/dev_00_1A_0E_B8_B3_7F bluetoothd[3103]: Received AT+CMER=3, 0, 0, 1
bluetoothd[3103]: Event reporting (CMER): mode=3, ind=1
bluetoothd[3103]: HFP Service Level Connection established
bluetoothd[3103]: telephony-dummy: device 0xb8421d20 connected
bluetoothd[3103]: State changed /org/bluez/hci0/dev_00_1A_0E_B8_B3_7F: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[3103]: \
Received AT+BTRH? bluetoothd[3103]: Received AT+VGS=05

&lt;started aplay on the Jabra&gt;

bluetoothd[3103]: Accepted new client connection on unix socket (fd=23)
bluetoothd[3103]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[3103]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[3103]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[3103]: config sco - device = 00:1A:45:31:47:69 access_mode = 2
bluetoothd[3103]: /org/bluez/hci0/dev_00_1A_45_31_47_69: Connecting to \
00:1A:45:31:47:69 channel 1 bluetoothd[3103]: State changed \
/org/bluez/hci0/dev_00_1A_45_31_47_69: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[3103]: \
adapter_get_device(00:1A:45:31:47:69) bluetoothd[3103]: link_key_request \
(sba=00:15:83:02:4F:E7, dba=00:1A:45:31:47:69) bluetoothd[3103]: kernel auth \
requirements = 0x00 bluetoothd[3103]: stored link key type = 0x00
bluetoothd[3103]: /org/bluez/hci0/dev_00_1A_45_31_47_69: Connected to \
00:1A:45:31:47:69 bluetoothd[3103]: Received AT+BRSF=26
bluetoothd[3103]: HFP HF features: "Call waiting and 3-way calling" "Voice \
recognition activation" "Remote volume control"  bluetoothd[3103]: Received AT+CIND=?
bluetoothd[3103]: Received AT+CIND?
bluetoothd[3103]: Received AT+CMER=3, 0, 0, 1
bluetoothd[3103]: Event reporting (CMER): mode=3, ind=1
bluetoothd[3103]: HFP Service Level Connection established
bluetoothd[3103]: telephony-dummy: device 0xb84107c0 connected
bluetoothd[3103]: State changed /org/bluez/hci0/dev_00_1A_45_31_47_69: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[3103]: State \
changed /org/bluez/hci0/dev_00_1A_45_31_47_69: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_PLAY_IN_PROGRESS bluetoothd[3103]: Received AT+BTRH?
bluetoothd[3103]: SCO socket opened for headset /org/bluez/hci0/dev_00_1A_45_31_47_69
bluetoothd[3103]: SCO fd=26
bluetoothd[3103]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[3103]: State changed /org/bluez/hci0/dev_00_1A_45_31_47_69: \
HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_PLAYING bluetoothd[3103]: Audio API: \
received BT_STREAMSTART_REQ bluetoothd[3103]: Audio API: sending BT_STREAMSTART_RSP
bluetoothd[3103]: Audio API: sending BT_STREAMFD_IND
bluetoothd[3103]: Received AT+VGS=08
bluetoothd[3103]: Received AT+VGM=08

&lt;with aplay still outputting to the Jabra, I now start another aplay in
 a separate window outputting to the Motorola&gt;

bluetoothd[3103]: Accepted new client connection on unix socket (fd=27)
bluetoothd[3103]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[3103]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[3103]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[3103]: config sco - device = 00:1A:0E:B8:B3:7F access_mode = 2
bluetoothd[3103]: connect: Operation not permitted (1)
bluetoothd[3103]: config failed
bluetoothd[3103]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[3103]: Unix client disconnected (fd=27)

&lt;I hit ctrl-c in my bluetoothd window to kill bluetoothd&gt;

bluetoothd[3103]: Cleanup plugins
bluetoothd[3103]: bridge pan0 removed
bluetoothd[3103]: Stopping SDP server
bluetoothd[3103]: Exit

I was confused by one thing from above: it says "HFP Service Level Connection \
established" after I run aplay; but I thought I was using HSP, not HFP.  This \
inspired me to try duplicating your [Headset] section and renaming it to [HFP] -- but \
that, too, made no difference.  I don't even know whether or not [HFP] accepts a \
MaxConnections/MaxConnected key.


--- On Sun, 11/9/08, Johan Hedberg &lt;johan.hedberg@gmail.com&gt; wrote:

&gt; From: Johan Hedberg &lt;johan.hedberg@gmail.com&gt;
&gt; Subject: Re: Possible to send audio to multiple bluetooth headsets at once?
&gt; To: "BlueZ development" &lt;linux-bluetooth@vger.kernel.org&gt;
&gt; Date: Sunday, November 9, 2008, 1:35 AM
&gt; Hi Damon,
&gt; 
&gt; In theory what you're trying to do should be possible,
&gt; though you  
&gt; might run into bandwidth issues (and there's not much
&gt; BlueZ can do to  
&gt; help with that). However, you do need some configuration
&gt; file changes  
&gt; since the defaults are for one headset only. If you're
&gt; trying to use  
&gt; HSP/HFP add MaxConnections=2 to the [Headset] section in
&gt; /etc/ 
&gt; bluetooth/audio.conf. If you're trying to use A2DP add
&gt; SBCSources=2 to  
&gt; the [A2DP] section of the same file. You might also want to
&gt; experiment  
&gt; with forcing BlueZ to use the profile you want in the case
&gt; of multi- 
&gt; profile headsets. For HSP/HFP you need profile=voice in
&gt; your .asoundrc  
&gt; entries and for A2DP you need profile=hifi.
&gt; 
&gt; Johan
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line
&gt; "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at 
&gt; http://vger.kernel.org/majordomo-info.html




      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081117012509</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-11-17 01:25:09-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 12045] New: Bluetooth dongle not work</subject><body>


(switched to email.  Please respond via emailed reply-to-all, not via the
bugzilla web interface).

On Sun, 16 Nov 2008 05:09:10 -0800 (PST) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=12045
&gt; 
&gt;            Summary: Bluetooth dongle not work
&gt;            Product: Drivers
&gt;            Version: 2.5
&gt;      KernelVersion: 2.6.27.7
&gt;           Platform: All
&gt;         OS/Version: Linux
&gt;               Tree: Mainline
&gt;             Status: NEW
&gt;           Severity: normal
&gt;           Priority: P1
&gt;          Component: Bluetooth
&gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;         ReportedBy: lupulescud@yahoo.com
&gt; 
&gt; 
&gt; Latest working kernel version:
&gt; Earliest failing kernel version:
&gt; Distribution:Ubuntu 8.10
&gt; Hardware Environment:Laptop Hp nx6325
&gt; Software Environment:Gnome, bluetooth wizard
&gt; Problem Description:
&gt; Some bluetooth dongles are not initiatized and does't work. 
&gt; It's about device:
&gt; 006: ID 1131:1004 Integrated System Solution Corp. Bluetooth Device
&gt; Steps to reproduce:
&gt; Icon is shown in tray but bluetooth doesn't work proper. If dongle is previous
&gt; initialized by windows it blinks but cannot pair. If dongle is put in or pull
&gt; aout and than put back in its not initialized (led does't flash), and it's not
&gt; working.
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081117182500</emailId><senderName>"XazZ XazZ"</senderName><senderEmail>xazz.xazz@googlemail.com</senderEmail><timestampReceived>2008-11-17 18:25:00-0400</timestampReceived><subject>Re: Problem with bluez and a bluetooth headset</subject><body>

good evening

&gt; I'd recommend you to try kernel 2.6.27 or later.
&gt; A fix concerning eSCO fallback is in it.
&gt; The bug is triggered by using a bluetooth 2 dongle and bluetooth 1
&gt; headset, for instance.

I'm already running a kernel which is newer than 2.6.27 (I'm currently
running 2.6.28 rc3)
But something else must be wrong then:
my USB dongle is a 2.0 one and my headset is also a 2.0 device

[XazZ@darklight ~]$ hciconfig hci0 version | grep HCI
        HCI Ver: 2.0 (0x3) HCI Rev: 0x2c6 LMP Ver: 2.0 (0x3) LMP Subver: 0x2c6

that's what my hciconfig says about my dongle

&gt;Bluetooth version
&gt;    * Bluetooth version: 2.0 with EDR
That is directly taken from my headsets manufacturers website (Nokia)

Thanks in advance
XazZ
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120101943</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-20 10:19:43-0400</timestampReceived><subject>Re: possible sbc codec bug with audio glitches</subject><body>

Brad Midgley wrote:
&gt; Jelle,
&gt; 
&gt; Everything in the codec is symmetrical between the two channels unless
&gt; using joint stereo mode. In joint stereo, if it saves space, we encode
&gt; the difference between and the sum of the channels instead of the
&gt; individual channel content. It's conceivable that an overflow here
&gt; might be manifest differently between the two channels.
&gt; 
&gt; It looks like you can use a parameter "mode" in the alsa config and
&gt; set it to either "stereo" or "joint"
&gt; 
&gt; If you can narrow down the distortion to one of these cases that would be handy.
&gt; 
&gt; Do you have an mp3 I could try to hear the problem?
&gt; 
&gt; Brad

Thank you Brad for taking the time to answer.

I have tried the mode joint and mode stereo [1] for a few days but I
cant hear any difference and the small glitches are still there.

I posted a small audio segment that has the problem in my first post:
http://sourceforge.net/mailarchive/message.php?msg_name=4819B1A7.2070702%40powercraft.nl
http://filebin.ca/pugrs/glitch.wav

Thanks in advance,

Jelle

&gt; On Sun, Nov 16, 2008 at 2:37 PM, Jelle de Jong
&gt; &lt;jelledejong@powercraft.nl&gt; wrote:
&gt;&gt; Brad Midgley wrote:
&gt;&gt;&gt; Jelle
&gt;&gt;&gt;
&gt;&gt;&gt;&gt; The strange thing is that I can only hear the glitches on the right side
&gt;&gt;&gt;&gt; of the headset.
&gt;&gt;&gt; That is very strange it is only on one side. Do you know if you were
&gt;&gt;&gt; you using the joint stereo setting in the codec?
&gt;&gt;&gt;
&gt;&gt; Thank you Brad for taking the time to read and answer to my question,
&gt;&gt; this is really appreciated. I dont exactly know what you mean with joint
&gt;&gt; stereo settings in the code?
&gt;&gt;
&gt;&gt; I use the bluez git build on 2008-11-06. The only info I got is from the
&gt;&gt; bluetoothd running in debug mode, please see the attachment for more
&gt;&gt; information.
&gt;&gt;
&gt;&gt; I hope the below section is the most relevant?
&gt;&gt;
&gt;&gt; config a2dp - device = 00:0C:55:D1:C9:78 access_mode = 2
&gt;&gt; codec sbc - frequency = 1 channel_mode = 1 allocation = 1 subbands = 1
&gt;&gt; blocks = 1 bitpool = 44
&gt;&gt; a2dp_source_config: selected SEP 0xb81b1020
&gt;&gt; avdtp_ref(0xb81acbf0): ref=3
&gt;&gt; setup_ref(0xb81b62a8): ref=1
&gt;&gt; avdtp_set_configuration(0xb81acbf0): int_seid=1, acp_seid=1
&gt;&gt;
&gt;&gt; Thanks in advance,
&gt;&gt;
&gt;&gt; Jelle

["setup-bluetooth-motorola-s805.sh" (application/x-sh)]

#!/bin/bash

echo "setup-bluetooth-motorola-s805.sh"

echo 'pcm.headset {
    type bluetooth
    #~ device 00:0D:18:A0:35:70
    #~ device 00:53:53:FB:7E:9C # Nokia BH-801
    device 00:0C:55:D1:C9:78 # Motorola S805
    #~ device 00:0D:FD:18:6E:3C # Motorola S9
    #~ device 20:07:09:15:A9:5A # Samsung WEP210
    profile hifi
    #~ profile voice
    #~ profile auto
    mode stereo
    #~ mode joint
}
pcm.softvol {
    type softvol
    slave.pcm headset
    control.name Headset
    control.card 0
}
pcm.!default {
    #~ type hw
    #~ card 0
    type plug
    slave.pcm softvol
}' &gt; ~/.asoundrc

#~ sudo /etc/init.d/bluetooth restart
#~ sudo /etc/init.d/alsa-utils restart

echo "done, you can close this windows now"

exit

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081010001436</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-10 00:14:36-0400</timestampReceived><subject>[PATCH] Fix PS3 BD remote "pairing"</subject><body>

The PS3 BD remote doesn't really want to be paired, CreateDevice on
it will be enough to get the it connected and working.

Cheers

["0001-Fix-PS3-BD-remote-pairing.patch" (0001-Fix-PS3-BD-remote-pairing.patch)]

From dd1c0184849b12bbda466a2f6bef3d5ff9a1b825 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Fri, 10 Oct 2008 01:12:18 +0100
Subject: [PATCH] Fix PS3 BD remote "pairing"

The PS3 BD remote doesn't really want to be paired, CreateDevice on
it will be enough to get the it connected and working.
---
 wizard/main.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index cf731e7..ef61f90 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -208,6 +208,10 @@ static void prepare_callback(GtkWidget *assistant,
 		if (target_type == BLUETOOTH_TYPE_MOUSE)
 			path = NULL;
 
+		/* PS3 BD Remote */
+		if (g_str_equal(target_name, "BD Remote Control") == TRUE)
+			path = NULL;
+
 		bluetooth_client_create_device(client, target_address,
 					path, create_callback, assistant);
 	}
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081010191922</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-10-10 19:19:22-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11733] New: Possible btusb refcount leak</subject><body>

On Fri, 10 Oct 2008 12:09:05 -0700 (PDT)
bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11733

What should I do with bluetooth reports?  I can send them to linux-bluetooth,
but that's a bit irritating if everyone is already monitornig them?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081010153219</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-10 15:32:19-0400</timestampReceived><subject>[PATCH] Add OUI check for the PS3 BD remote</subject><body>

["0001-Add-OUI-check-for-the-PS3-BD-remote.patch" (0001-Add-OUI-check-for-the-PS3-BD-remote.patch)]

From 0318981c54a3396a0672b8fd2a48d4014d9aa59e Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Fri, 10 Oct 2008 16:31:03 +0100
Subject: [PATCH] Add OUI check for the PS3 BD remote

As per Marcel's request
---
 wizard/main.c |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index 860c3b1..83f2491 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -209,7 +209,8 @@ static void prepare_callback(GtkWidget *assistant,
 			path = NULL;
 
 		/* Sony PlayStation 3 Remote Control */
-		if (g_str_equal(target_name, "BD Remote Control") == TRUE)
+		if (g_str_has_prefix(target_address, "00:19:C1:") != FALSE &amp;&amp;
+				g_str_equal(target_name, "BD Remote Control") == TRUE)
 			path = NULL;
 
 		bluetooth_client_create_device(client, target_address,
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081011231837</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-11 23:18:37-0400</timestampReceived><subject>Storing HID req record</subject><body>

Heya,

I'm looking for a way for a utility to write the HID req, ie. a way to
replace the internal store_device_info() from BlueZ 3.x.

Any ideas?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013174750</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-10-13 17:47:50-0400</timestampReceived><subject>[PATCH 05/49] pcmcia: use pcmcia_loop_config in bluetooth drivers</subject><body>

Use the config loop helper in bluetooth pcmcia drivers.

CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
CC: linux-bluetooth@vger.kernel.org
Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
---
 drivers/bluetooth/bt3c_cs.c   |  119 ++++++++++++++++------------------------
 drivers/bluetooth/btuart_cs.c |  121 ++++++++++++++++-------------------------
 drivers/bluetooth/dtl1_cs.c   |   62 +++++-----------------
 3 files changed, 108 insertions(+), 194 deletions(-)

diff --git a/drivers/bluetooth/bt3c_cs.c b/drivers/bluetooth/bt3c_cs.c
index 593b7c5..6ec366f 100644
--- a/drivers/bluetooth/bt3c_cs.c
+++ b/drivers/bluetooth/bt3c_cs.c
@@ -678,93 +678,68 @@ static void bt3c_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config(struct pcmcia_device *p_dev,
+			     cistpl_cftable_entry_t *cf,
+			     void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp;
+	    (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 :
+			cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config_notpicky(struct pcmcia_device *p_dev,
+				      cistpl_cftable_entry_t *cf,
+				      void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int bt3c_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	bt3c_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if (!pcmcia_loop_config(link, bt3c_check_config, (void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if (!pcmcia_loop_config(link, bt3c_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/btuart_cs.c b/drivers/bluetooth/btuart_cs.c
index 68d1d25..39cca28 100644
--- a/drivers/bluetooth/btuart_cs.c
+++ b/drivers/bluetooth/btuart_cs.c
@@ -607,94 +607,69 @@ static void btuart_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config(struct pcmcia_device *p_dev,
+			       cistpl_cftable_entry_t *cf,
+			       void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp;
+	    (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 :
+			cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config_notpicky(struct pcmcia_device *p_dev,
+					cistpl_cftable_entry_t *cf,
+					void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int btuart_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	btuart_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *) buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if (!pcmcia_loop_config(link, btuart_check_config,
+					(void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0)
-		    &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if (!pcmcia_loop_config(link, btuart_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/dtl1_cs.c b/drivers/bluetooth/dtl1_cs.c
index dae45cd..e30a633 100644
--- a/drivers/bluetooth/dtl1_cs.c
+++ b/drivers/bluetooth/dtl1_cs.c
@@ -590,66 +590,30 @@ static void dtl1_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int dtl1_confcheck(struct pcmcia_device *p_dev,
+			  cistpl_cftable_entry_t *cf,
+			  void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
-}
-
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	if ((cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
+		p_dev-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
 static int dtl1_config(struct pcmcia_device *link)
 {
 	dtl1_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
 	int i;
 
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-
 	/* Look for a generic full-sized window */
 	link-&gt;io.NumPorts1 = 8;
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-			link-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
-			link-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-			i = pcmcia_request_io(link, &amp;link-&gt;io);
-			if (i == CS_SUCCESS)
-				break;
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
-
-	if (i != CS_SUCCESS) {
-		cs_error(link, RequestIO, i);
+	if (!pcmcia_loop_config(link, dtl1_confcheck, NULL))
 		goto failed;
-	}
 
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
-- 
1.5.4.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013222844</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-13 22:28:44-0400</timestampReceived><subject>[PATCH] Fix PS3 BD remote input event generation</subject><body>

- Fix byte-reading in the decode function by using a guint8, instead
of an int, we were overreading and were getting keycodes of
0xffffff44 when we wanted a single byte of 0x44.
- Remove use of KEY_REMOTE_X, those keys never got upstream, and the
values they were defined at are now used for completely different
keys
- Update uinput.h with the latest keycodes from 2.6.27

Cheers

["0001-Fix-PS3-BD-remote-input-event-generation.patch" (0001-Fix-PS3-BD-remote-input-event-generation.patch)]

From 1fff1e0b9ef38972549875d78e94849494f1264b Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Mon, 13 Oct 2008 23:24:10 +0100
Subject: [PATCH] Fix PS3 BD remote input event generation

- Fix byte-reading in the decode function by using a guint8, instead
of an int, we were overreading and were getting keycodes of
0xffffff44 when we wanted a single byte of 0x44.
- Remove use of KEY_REMOTE_X, those keys never got upstream, and the
values they were defined at are now used for completely different
keys
- Update uinput.h with the latest keycodes from 2.6.27
---
 common/uinput.h |  340 ++++++++++++++++++++++++++++++++++++++----------------
 input/fakehid.c |   54 ++-------
 2 files changed, 251 insertions(+), 143 deletions(-)

diff --git a/common/uinput.h b/common/uinput.h
index dca8782..b8c0ff4 100644
--- a/common/uinput.h
+++ b/common/uinput.h
@@ -52,7 +52,16 @@ extern "C" {
 #define SYN_REPORT		0
 #define SYN_CONFIG		1
 
-/* Keys and buttons */
+/*
+ * Keys and buttons
+ *
+ * Most of the keys/buttons are modeled after USB HUT 1.12
+ * (see http://www.usb.org/developers/hidpage).
+ * Abbreviations in the comments:
+ * AC - Application Control
+ * AL - Application Launch Button
+ * SC - System Control
+ */
 
 #define KEY_RESERVED		0
 #define KEY_ESC			1
@@ -138,18 +147,18 @@ extern "C" {
 #define KEY_KP3			81
 #define KEY_KP0			82
 #define KEY_KPDOT		83
-#define KEY_103RD		84
-#define KEY_F13			85
+
+#define KEY_ZENKAKUHANKAKU	85
 #define KEY_102ND		86
 #define KEY_F11			87
 #define KEY_F12			88
-#define KEY_F14			89
-#define KEY_F15			90
-#define KEY_F16			91
-#define KEY_F17			92
-#define KEY_F18			93
-#define KEY_F19			94
-#define KEY_F20			95
+#define KEY_RO			89
+#define KEY_KATAKANA		90
+#define KEY_HIRAGANA		91
+#define KEY_HENKAN		92
+#define KEY_KATAKANAHIRAGANA	93
+#define KEY_MUHENKAN		94
+#define KEY_KPJPCOMMA		95
 #define KEY_KPENTER		96
 #define KEY_RIGHTCTRL		97
 #define KEY_KPSLASH		98
@@ -170,51 +179,53 @@ extern "C" {
 #define KEY_MUTE		113
 #define KEY_VOLUMEDOWN		114
 #define KEY_VOLUMEUP		115
-#define KEY_POWER		116
+#define KEY_POWER		116	/* SC System Power Down */
 #define KEY_KPEQUAL		117
 #define KEY_KPPLUSMINUS		118
 #define KEY_PAUSE		119
-#define KEY_F21			120
-#define KEY_F22			121
-#define KEY_F23			122
-#define KEY_F24			123
-#define KEY_KPCOMMA		124
+
+#define KEY_KPCOMMA		121
+#define KEY_HANGEUL		122
+#define KEY_HANGUEL		KEY_HANGEUL
+#define KEY_HANJA		123
+#define KEY_YEN			124
 #define KEY_LEFTMETA		125
 #define KEY_RIGHTMETA		126
 #define KEY_COMPOSE		127
 
-#define KEY_STOP		128
+#define KEY_STOP		128	/* AC Stop */
 #define KEY_AGAIN		129
-#define KEY_PROPS		130
-#define KEY_UNDO		131
+#define KEY_PROPS		130	/* AC Properties */
+#define KEY_UNDO		131	/* AC Undo */
 #define KEY_FRONT		132
-#define KEY_COPY		133
-#define KEY_OPEN		134
-#define KEY_PASTE		135
-#define KEY_FIND		136
-#define KEY_CUT			137
-#define KEY_HELP		138
-#define KEY_MENU		139
-#define KEY_CALC		140
+#define KEY_COPY		133	/* AC Copy */
+#define KEY_OPEN		134	/* AC Open */
+#define KEY_PASTE		135	/* AC Paste */
+#define KEY_FIND		136	/* AC Search */
+#define KEY_CUT			137	/* AC Cut */
+#define KEY_HELP		138	/* AL Integrated Help Center */
+#define KEY_MENU		139	/* Menu (show menu) */
+#define KEY_CALC		140	/* AL Calculator */
 #define KEY_SETUP		141
-#define KEY_SLEEP		142
-#define KEY_WAKEUP		143
-#define KEY_FILE		144
+#define KEY_SLEEP		142	/* SC System Sleep */
+#define KEY_WAKEUP		143	/* System Wake Up */
+#define KEY_FILE		144	/* AL Local Machine Browser */
 #define KEY_SENDFILE		145
 #define KEY_DELETEFILE		146
 #define KEY_XFER		147
 #define KEY_PROG1		148
 #define KEY_PROG2		149
-#define KEY_WWW			150
+#define KEY_WWW			150	/* AL Internet Browser */
 #define KEY_MSDOS		151
-#define KEY_COFFEE		152
+#define KEY_COFFEE		152	/* AL Terminal Lock/Screensaver */
+#define KEY_SCREENLOCK		KEY_COFFEE
 #define KEY_DIRECTION		153
 #define KEY_CYCLEWINDOWS	154
 #define KEY_MAIL		155
-#define KEY_BOOKMARKS		156
+#define KEY_BOOKMARKS		156	/* AC Bookmarks */
 #define KEY_COMPUTER		157
-#define KEY_BACK		158
-#define KEY_FORWARD		159
+#define KEY_BACK		158	/* AC Back */
+#define KEY_FORWARD		159	/* AC Forward */
 #define KEY_CLOSECD		160
 #define KEY_EJECTCD		161
 #define KEY_EJECTCLOSECD	162
@@ -224,50 +235,90 @@ extern "C" {
 #define KEY_STOPCD		166
 #define KEY_RECORD		167
 #define KEY_REWIND		168
-#define KEY_PHONE		169
+#define KEY_PHONE		169	/* Media Select Telephone */
 #define KEY_ISO			170
-#define KEY_CONFIG		171
-#define KEY_HOMEPAGE		172
-#define KEY_REFRESH		173
-#define KEY_EXIT		174
+#define KEY_CONFIG		171	/* AL Consumer Control Configuration */
+#define KEY_HOMEPAGE		172	/* AC Home */
+#define KEY_REFRESH		173	/* AC Refresh */
+#define KEY_EXIT		174	/* AC Exit */
 #define KEY_MOVE		175
 #define KEY_EDIT		176
 #define KEY_SCROLLUP		177
 #define KEY_SCROLLDOWN		178
 #define KEY_KPLEFTPAREN		179
 #define KEY_KPRIGHTPAREN	180
-
-#define KEY_INTL1		181
-#define KEY_INTL2		182
-#define KEY_INTL3		183
-#define KEY_INTL4		184
-#define KEY_INTL5		185
-#define KEY_INTL6		186
-#define KEY_INTL7		187
-#define KEY_INTL8		188
-#define KEY_INTL9		189
-#define KEY_LANG1		190
-#define KEY_LANG2		191
-#define KEY_LANG3		192
-#define KEY_LANG4		193
-#define KEY_LANG5		194
-#define KEY_LANG6		195
-#define KEY_LANG7		196
-#define KEY_LANG8		197
-#define KEY_LANG9		198
+#define KEY_NEW			181	/* AC New */
+#define KEY_REDO		182	/* AC Redo/Repeat */
+
+#define KEY_F13			183
+#define KEY_F14			184
+#define KEY_F15			185
+#define KEY_F16			186
+#define KEY_F17			187
+#define KEY_F18			188
+#define KEY_F19			189
+#define KEY_F20			190
+#define KEY_F21			191
+#define KEY_F22			192
+#define KEY_F23			193
+#define KEY_F24			194
 
 #define KEY_PLAYCD		200
 #define KEY_PAUSECD		201
 #define KEY_PROG3		202
 #define KEY_PROG4		203
 #define KEY_SUSPEND		205
-#define KEY_CLOSE		206
+#define KEY_CLOSE		206	/* AC Close */
 #define KEY_PLAY		207
-
-#define KEY_UNKNOWN		220
-
+#define KEY_FASTFORWARD		208
+#define KEY_BASSBOOST		209
+#define KEY_PRINT		210	/* AC Print */
+#define KEY_HP			211
+#define KEY_CAMERA		212
+#define KEY_SOUND		213
+#define KEY_QUESTION		214
+#define KEY_EMAIL		215
+#define KEY_CHAT		216
+#define KEY_SEARCH		217
+#define KEY_CONNECT		218
+#define KEY_FINANCE		219	/* AL Checkbook/Finance */
+#define KEY_SPORT		220
+#define KEY_SHOP		221
+#define KEY_ALTERASE		222
+#define KEY_CANCEL		223	/* AC Cancel */
 #define KEY_BRIGHTNESSDOWN	224
 #define KEY_BRIGHTNESSUP	225
+#define KEY_MEDIA		226
+
+#define KEY_SWITCHVIDEOMODE	227	/* Cycle between available video
+					   outputs (Monitor/LCD/TV-out/etc) */
+#define KEY_KBDILLUMTOGGLE	228
+#define KEY_KBDILLUMDOWN	229
+#define KEY_KBDILLUMUP		230
+
+#define KEY_SEND		231	/* AC Send */
+#define KEY_REPLY		232	/* AC Reply */
+#define KEY_FORWARDMAIL		233	/* AC Forward Msg */
+#define KEY_SAVE		234	/* AC Save */
+#define KEY_DOCUMENTS		235
+
+#define KEY_BATTERY		236
+
+#define KEY_BLUETOOTH		237
+#define KEY_WLAN		238
+#define KEY_UWB			239
+
+#define KEY_UNKNOWN		240
+
+#define KEY_VIDEO_NEXT		241	/* drive next video source */
+#define KEY_VIDEO_PREV		242	/* drive previous video source */
+#define KEY_BRIGHTNESS_CYCLE	243	/* brightness up, after max is min */
+#define KEY_BRIGHTNESS_ZERO	244	/* brightness off, use ambient */
+#define KEY_DISPLAY_OFF		245	/* display device to off state */
+
+#define KEY_WIMAX		246
+
+/* Range 248 - 255 is reserved for special needs of AT keyboard driver */
 
 #define BTN_MISC		0x100
 #define BTN_0			0x100
@@ -348,15 +399,15 @@ extern "C" {
 #define KEY_CLEAR		0x163
 #define KEY_POWER2		0x164
 #define KEY_OPTION		0x165
-#define KEY_INFO		0x166
+#define KEY_INFO		0x166	/* AL OEM Features/Tips/Tutorial */
 #define KEY_TIME		0x167
 #define KEY_VENDOR		0x168
 #define KEY_ARCHIVE		0x169
-#define KEY_PROGRAM		0x16a
+#define KEY_PROGRAM		0x16a	/* Media Select Program Guide */
 #define KEY_CHANNEL		0x16b
 #define KEY_FAVORITES		0x16c
 #define KEY_EPG			0x16d
-#define KEY_PVR			0x16e
+#define KEY_PVR			0x16e	/* Media Select Home */
 #define KEY_MHP			0x16f
 #define KEY_LANGUAGE		0x170
 #define KEY_TITLE		0x171
@@ -366,36 +417,36 @@ extern "C" {
 #define KEY_MODE		0x175
 #define KEY_KEYBOARD		0x176
 #define KEY_SCREEN		0x177
-#define KEY_PC			0x178
-#define KEY_TV			0x179
-#define KEY_TV2			0x17a
-#define KEY_VCR			0x17b
-#define KEY_VCR2		0x17c
-#define KEY_SAT			0x17d
+#define KEY_PC			0x178	/* Media Select Computer */
+#define KEY_TV			0x179	/* Media Select TV */
+#define KEY_TV2			0x17a	/* Media Select Cable */
+#define KEY_VCR			0x17b	/* Media Select VCR */
+#define KEY_VCR2		0x17c	/* VCR Plus */
+#define KEY_SAT			0x17d	/* Media Select Satellite */
 #define KEY_SAT2		0x17e
-#define KEY_CD			0x17f
-#define KEY_TAPE		0x180
+#define KEY_CD			0x17f	/* Media Select CD */
+#define KEY_TAPE		0x180	/* Media Select Tape */
 #define KEY_RADIO		0x181
-#define KEY_TUNER		0x182
+#define KEY_TUNER		0x182	/* Media Select Tuner */
 #define KEY_PLAYER		0x183
 #define KEY_TEXT		0x184
-#define KEY_DVD			0x185
+#define KEY_DVD			0x185	/* Media Select DVD */
 #define KEY_AUX			0x186
 #define KEY_MP3			0x187
 #define KEY_AUDIO		0x188
 #define KEY_VIDEO		0x189
 #define KEY_DIRECTORY		0x18a
 #define KEY_LIST		0x18b
-#define KEY_MEMO		0x18c
+#define KEY_MEMO		0x18c	/* Media Select Messages */
 #define KEY_CALENDAR		0x18d
 #define KEY_RED			0x18e
 #define KEY_GREEN		0x18f
 #define KEY_YELLOW		0x190
 #define KEY_BLUE		0x191
-#define KEY_CHANNELUP		0x192
-#define KEY_CHANNELDOWN		0x193
+#define KEY_CHANNELUP		0x192	/* Channel Increment */
+#define KEY_CHANNELDOWN		0x193	/* Channel Decrement */
 #define KEY_FIRST		0x194
-#define KEY_LAST		0x195
+#define KEY_LAST		0x195	/* Recall Last */
 #define KEY_AB			0x196
 #define KEY_NEXT		0x197
 #define KEY_RESTART		0x198
@@ -406,14 +457,79 @@ extern "C" {
 #define KEY_DIGITS		0x19d
 #define KEY_TEEN		0x19e
 #define KEY_TWEN		0x19f
-
-#define KEY_FRAMEBACK		0x1b2
-#define KEY_FRAMEFORWARD	0x1b3
-#define KEY_CONTEXT_MENU	0x1fb
-
+#define KEY_VIDEOPHONE		0x1a0	/* Media Select Video Phone */
+#define KEY_GAMES		0x1a1	/* Media Select Games */
+#define KEY_ZOOMIN		0x1a2	/* AC Zoom In */
+#define KEY_ZOOMOUT		0x1a3	/* AC Zoom Out */
+#define KEY_ZOOMRESET		0x1a4	/* AC Zoom */
+#define KEY_WORDPROCESSOR	0x1a5	/* AL Word Processor */
+#define KEY_EDITOR		0x1a6	/* AL Text Editor */
+#define KEY_SPREADSHEET		0x1a7	/* AL Spreadsheet */
+#define KEY_GRAPHICSEDITOR	0x1a8	/* AL Graphics Editor */
+#define KEY_PRESENTATION	0x1a9	/* AL Presentation App */
+#define KEY_DATABASE		0x1aa	/* AL Database App */
+#define KEY_NEWS		0x1ab	/* AL Newsreader */
+#define KEY_VOICEMAIL		0x1ac	/* AL Voicemail */
+#define KEY_ADDRESSBOOK		0x1ad	/* AL Contacts/Address Book */
+#define KEY_MESSENGER		0x1ae	/* AL Instant Messaging */
+#define KEY_DISPLAYTOGGLE	0x1af	/* Turn display (LCD) on and off */
+#define KEY_SPELLCHECK		0x1b0   /* AL Spell Check */
+#define KEY_LOGOFF		0x1b1   /* AL Logoff */
+
+#define KEY_DOLLAR		0x1b2
+#define KEY_EURO		0x1b3
+
+#define KEY_FRAMEBACK		0x1b4	/* Consumer - transport controls */
+#define KEY_FRAMEFORWARD	0x1b5
+#define KEY_CONTEXT_MENU	0x1b6	/* GenDesc - system context menu */
+#define KEY_MEDIA_REPEAT	0x1b7	/* Consumer - transport control */
+
+#define KEY_DEL_EOL		0x1c0
+#define KEY_DEL_EOS		0x1c1
+#define KEY_INS_LINE		0x1c2
+#define KEY_DEL_LINE		0x1c3
+
+#define KEY_FN			0x1d0
+#define KEY_FN_ESC		0x1d1
+#define KEY_FN_F1		0x1d2
+#define KEY_FN_F2		0x1d3
+#define KEY_FN_F3		0x1d4
+#define KEY_FN_F4		0x1d5
+#define KEY_FN_F5		0x1d6
+#define KEY_FN_F6		0x1d7
+#define KEY_FN_F7		0x1d8
+#define KEY_FN_F8		0x1d9
+#define KEY_FN_F9		0x1da
+#define KEY_FN_F10		0x1db
+#define KEY_FN_F11		0x1dc
+#define KEY_FN_F12		0x1dd
+#define KEY_FN_1		0x1de
+#define KEY_FN_2		0x1df
+#define KEY_FN_D		0x1e0
+#define KEY_FN_E		0x1e1
+#define KEY_FN_F		0x1e2
+#define KEY_FN_S		0x1e3
+#define KEY_FN_B		0x1e4
+
+#define KEY_BRL_DOT1		0x1f1
+#define KEY_BRL_DOT2		0x1f2
+#define KEY_BRL_DOT3		0x1f3
+#define KEY_BRL_DOT4		0x1f4
+#define KEY_BRL_DOT5		0x1f5
+#define KEY_BRL_DOT6		0x1f6
+#define KEY_BRL_DOT7		0x1f7
+#define KEY_BRL_DOT8		0x1f8
+#define KEY_BRL_DOT9		0x1f9
+#define KEY_BRL_DOT10		0x1fa
+
+/* We avoid low common keys in module aliases so they don't get huge. */
+#define KEY_MIN_INTERESTING	KEY_MUTE
 #define KEY_MAX			0x1ff
+#define KEY_CNT			(KEY_MAX+1)
 
-/* Relative axes */
+/*
+ * Relative axes
+ */
 
 #define REL_X			0x00
 #define REL_Y			0x01
@@ -426,8 +542,11 @@ extern "C" {
 #define REL_WHEEL		0x08
 #define REL_MISC		0x09
 #define REL_MAX			0x0f
+#define REL_CNT			(REL_MAX+1)
 
-/* Absolute axes */
+/*
+ * Absolute axes
+ */
 
 #define ABS_X			0x00
 #define ABS_Y			0x01
@@ -456,20 +575,26 @@ extern "C" {
 #define ABS_VOLUME		0x20
 #define ABS_MISC		0x28
 #define ABS_MAX			0x3f
+#define ABS_CNT			(ABS_MAX+1)
 
-/* Switch events */
+/*
+ * Switch events
+ */
 
-#define SW_0			0x00
-#define SW_1			0x01
-#define SW_2			0x02
-#define SW_3			0x03
-#define SW_4			0x04
-#define SW_5			0x05
-#define SW_6			0x06
-#define SW_7			0x07
+#define SW_LID			0x00  /* set = lid shut */
+#define SW_TABLET_MODE		0x01  /* set = tablet mode */
+#define SW_HEADPHONE_INSERT	0x02  /* set = inserted */
+#define SW_RFKILL_ALL		0x03  /* rfkill master switch, type "any"
+					 set = radio enabled */
+#define SW_RADIO		SW_RFKILL_ALL	/* deprecated */
+#define SW_MICROPHONE_INSERT	0x04  /* set = inserted */
+#define SW_DOCK			0x05  /* set = plugged into dock */
 #define SW_MAX			0x0f
+#define SW_CNT			(SW_MAX+1)
 
-/* Misc events */
+/*
+ * Misc events
+ */
 
 #define MSC_SERIAL		0x00
 #define MSC_PULSELED		0x01
@@ -477,8 +602,11 @@ extern "C" {
 #define MSC_RAW			0x03
 #define MSC_SCAN		0x04
 #define MSC_MAX			0x07
+#define MSC_CNT			(MSC_MAX+1)
 
-/* LEDs */
+/*
+ * LEDs
+ */
 
 #define LED_NUML		0x00
 #define LED_CAPSL		0x01
@@ -492,21 +620,29 @@ extern "C" {
 #define LED_MAIL		0x09
 #define LED_CHARGING		0x0a
 #define LED_MAX			0x0f
+#define LED_CNT			(LED_MAX+1)
 
-/* Autorepeat values */
+/*
+ * Autorepeat values
+ */
 
 #define REP_DELAY		0x00
 #define REP_PERIOD		0x01
 #define REP_MAX			0x01
 
-/* Sounds */
+/*
+ * Sounds
+ */
 
 #define SND_CLICK		0x00
 #define SND_BELL		0x01
 #define SND_TONE		0x02
 #define SND_MAX			0x07
+#define SND_CNT			(SND_MAX+1)
 
-/* Identifiers */
+/*
+ * IDs.
+ */
 
 #define ID_BUS			0
 #define ID_VENDOR		1
@@ -518,6 +654,7 @@ extern "C" {
 #define BUS_USB			0x03
 #define BUS_HIL			0x04
 #define BUS_BLUETOOTH		0x05
+#define BUS_VIRTUAL		0x06
 
 #define BUS_ISA			0x10
 #define BUS_I8042		0x11
@@ -530,6 +667,7 @@ extern "C" {
 #define BUS_I2C			0x18
 #define BUS_HOST		0x19
 #define BUS_GSC			0x1A
+#define BUS_ATARI		0x1B
 
 /* User input interface */
 
diff --git a/input/fakehid.c b/input/fakehid.c
index d752d85..ead67bd 100644
--- a/input/fakehid.c
+++ b/input/fakehid.c
@@ -44,37 +44,6 @@
 #include "fakehid.h"
 #include "uinput.h"
 
-#ifndef KEY_REMOTE_1
-#define KEY_REMOTE_1	0x1b6
-#endif
-#ifndef KEY_REMOTE_2
-#define KEY_REMOTE_2	0x1b7
-#endif
-#ifndef KEY_REMOTE_3
-#define KEY_REMOTE_3	0x1b8
-#endif
-#ifndef KEY_REMOTE_4
-#define KEY_REMOTE_4	0x1b9
-#endif
-#ifndef KEY_REMOTE_5
-#define KEY_REMOTE_5	0x1ba
-#endif
-#ifndef KEY_REMOTE_6
-#define KEY_REMOTE_6	0x1bb
-#endif
-#ifndef KEY_REMOTE_7
-#define KEY_REMOTE_7	0x1bc
-#endif
-#ifndef KEY_REMOTE_8
-#define KEY_REMOTE_8	0x1bd
-#endif
-#ifndef KEY_REMOTE_9
-#define KEY_REMOTE_9	0x1be
-#endif
-#ifndef KEY_REMOTE_0
-#define KEY_REMOTE_0	0x1bf
-#endif
-
 #define PS3_FLAGS_MASK 0xFFFFFF00
 
 enum ps3remote_special_keys {
@@ -126,16 +95,16 @@ static unsigned int ps3remote_keymap[] = {
 	[0x63] = KEY_SUBTITLE,
 	[0x0f] = KEY_CLEAR,
 	[0x28] = KEY_TIME,
-	[0x00] = KEY_REMOTE_1,
-	[0x01] = KEY_REMOTE_2,
-	[0x02] = KEY_REMOTE_3,
-	[0x03] = KEY_REMOTE_4,
-	[0x04] = KEY_REMOTE_5,
-	[0x05] = KEY_REMOTE_6,
-	[0x06] = KEY_REMOTE_7,
-	[0x07] = KEY_REMOTE_8,
-	[0x08] = KEY_REMOTE_9,
-	[0x09] = KEY_REMOTE_0,
+	[0x00] = KEY_1,
+	[0x01] = KEY_2,
+	[0x02] = KEY_3,
+	[0x03] = KEY_4,
+	[0x04] = KEY_5,
+	[0x05] = KEY_6,
+	[0x06] = KEY_7,
+	[0x07] = KEY_8,
+	[0x08] = KEY_9,
+	[0x09] = KEY_0,
 	[0x81] = KEY_RED,
 	[0x82] = KEY_GREEN,
 	[0x80] = KEY_BLUE,
@@ -178,7 +147,8 @@ static int ps3remote_decode(char *buff, int size, unsigned int *value)
 {
 	static unsigned int lastkey = 0;
 	static unsigned int lastmask = 0;
-	int retval, mask, key, i;
+	int retval, mask, i;
+	guint8 key;
 
 	if (size &lt; 12) {
 		error("Got a shorter packet! (size %i)\n", size);
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081014210107</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-14 21:01:07-0400</timestampReceived><subject>[PATCH] Better debug when failing to probe a device</subject><body>

The previous error message was a bit terse.

["0002-Better-debug-when-failing-to-probe-a-device.patch" (0002-Better-debug-when-failing-to-probe-a-device.patch)]

From 5c71324238e5380530a298bb63ec9d79b7a1f219 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 14 Oct 2008 21:58:51 +0100
Subject: [PATCH] Better debug when failing to probe a device

The previous error message was a bit terse.
---
 src/device.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/device.c b/src/device.c
index 7294d3c..2a48406 100644
--- a/src/device.c
+++ b/src/device.c
@@ -646,8 +646,8 @@ void device_probe_drivers(struct btd_device *device, GSList *uuids)
 
 			err = driver-&gt;probe(device, probe_uuids);
 			if (err &lt; 0) {
-				error("probe failed for driver %s",
-							driver-&gt;name);
+				error("probe failed with driver %s for device %s",
+							driver-&gt;name, device-&gt;path);
 
 				g_free(driver_data);
 				g_slist_free(probe_uuids);
-- 
1.5.5.2


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081011230322</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-11 23:03:22-0400</timestampReceived><subject>[PATCH] Fix possible crash on startup</subject><body>

I can provide the file that caused the crash, if needed.

Cheers

["0001-Fix-possible-crash-on-startup.patch" (0001-Fix-possible-crash-on-startup.patch)]

From 8515a34842a0aee14d7d0c5725caf15d9d2d7308 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sun, 12 Oct 2008 00:01:43 +0100
Subject: [PATCH] Fix possible crash on startup

0  0x0000000000a5cf71 in sdp_data_get (rec=0x0, attrId=0) at sdp.c:1444
1  0x000000008c704721 in hid_device_probe (device=0x7f1bed2a80b0, \
uuids=0x7f1bed29fa90) at manager.c:70 2  0x00007f1becb5bc33 in device_probe_drivers \
(device=0x7f1bed2a80b0, uuids=0x7f1bed2a2980) at device.c:647 3  0x00007f1becb58a23 \
in create_stored_device_from_profiles (key=0x7f1bed2a7360 "00:1E:45:AD:F1:96",  \
value=0x7f1bed2a7aa0 "00000002-0000-1000-8000-0002ee000002 \
00001101-0000-1000-8000-00805f9b34fb 00001103-0000-1000-8000-00805f9b34fb \
00001104-0000-1000-8000-00805f9b34fb 00001105-0000-1000-8000-00805f9b34fb \
00001106-0000-1"..., user_data=0x7f1bed29edd0) at adapter.c:2296 4  \
0x00007f1becb61d12 in textfile_foreach (pathname=0x7ffff4b6f2a0 \
"/var/lib/bluetooth/00:13:EF:F1:42:B7/profiles", func=0x7f1becb58955 \
&lt;create_stored_device_from_profiles&gt;, data=0x7f1bed29edd0) at textfile.c:447 5  \
0x00007f1becb58b36 in load_devices (adapter=0x7f1bed29edd0) at adapter.c:2327 6  \
0x00007f1becb58fa0 in adapter_up (adapter=0x7f1bed29edd0, dd=18) at adapter.c:2462 7  \
0x00007f1becb59479 in adapter_start (adapter=0x7f1bed29edd0) at adapter.c:2569 8  \
0x00007f1becb5427f in manager_start_adapter (id=0) at manager.c:424 9  \
0x00007f1becb48e02 in device_devup_setup (dev_id=0) at main.c:481 10 \
0x00007f1becb48f35 in init_all_devices (ctl=7) at main.c:512 11 0x00007f1becb496d0 in \
main (argc=1, argv=0x7ffff4b70788) at main.c:748

The HID device's SDP record can be NULL, so don't crash when that happens
---
 input/manager.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/input/manager.c b/input/manager.c
index 51634e3..25b64e4 100644
--- a/input/manager.c
+++ b/input/manager.c
@@ -65,6 +65,9 @@ static int hid_device_probe(struct btd_device *device, GSList \
*uuids)  
 	DBG("path %s", path);
 
+	if (!rec)
+		return -1;
+
 	adapter_get_address(adapter, &amp;src);
 	device_get_address(device, &amp;dst);
 	pdlist = sdp_data_get(rec, SDP_SERVER_RECORD_HANDLE);
-- 
1.5.5.2


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081007174343</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-07 17:43:43-0400</timestampReceived><subject>SCO headset not working with 4.12</subject><body>

[Attachment #2 (multipart/mixed)]


Hi:

I recently upgraded to bluez-4.12 and added in the SCO patch that came
shortly after the 4.12 release.  It seems that my SCO headset is
connecting, and receiving commands for volume levels, etc, but doesn't
actually play back any audio.  I was trying to use the test/hstest app
to verify like this:

    ./hstest play /usr/share/sounds/alsa/Front_Center.wav
    00:19:7F:30:47:AB 1
    Voice setting: 0x0060
    RFCOMM channel connected
    SCO audio channel connected (handle 1, mtu 64)

It just idles there sitting at that until I hit ctrl-c.  I've attached
bluetoothd -nd output as well.


Regards
--=20
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["bluetoothd.log" (text/x-log)]


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081008150002</emailId><senderName>mcINEK</senderName><senderEmail>mcinek@gmail.com</senderEmail><timestampReceived>2008-10-08 15:00:02-0400</timestampReceived><subject>[ BUG ] acl sysfs entry remains after connection error</subject><body>

Hi!

I've found a bug in bluetooth stack.

I use bluetooth on ARM Linux machine to simultaneously send pictures
to 2 or 3 devices.
In a L2CAP connection stage (socket L2CAP 'connect') sometimes I get a
'Connection timeout error',
which is not a disaster because I can try to connect again. However
very often I get a kernel error,
which tells me that there is a duplicate entry in sysfs (acl...).

I've checked, and indeed acl connection entries are not removed from
sysfs after a connection fail.

How can I fix this?

PS. I've got latest 2.6.26 kernel.

Regards,
Marcin Undak
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014210037</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-14 21:00:37-0400</timestampReceived><subject>[PATCH] Update udev rules for udev 098 and newer</subject><body>

As per https://bugzilla.redhat.com/show_bug.cgi?id=246840
and the udev release notes, update the udev rules for newer
versions of udev (&gt;= 098).

["0001-Update-udev-rules-for-udev-098-and-newer.patch" (0001-Update-udev-rules-for-udev-098-and-newer.patch)]

From fcf1518fd2cc804d339b07d1bfbfd9386ac5da22 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 14 Oct 2008 21:58:02 +0100
Subject: [PATCH] Update udev rules for udev 098 and newer

As per https://bugzilla.redhat.com/show_bug.cgi?id=246840
and the udev release notes, update the udev rules for newer
versions of udev (&gt;= 098).
---
 scripts/bluetooth.rules |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/scripts/bluetooth.rules b/scripts/bluetooth.rules
index 0957225..072335f 100644
--- a/scripts/bluetooth.rules
+++ b/scripts/bluetooth.rules
@@ -1,35 +1,35 @@
 # Brain Boxes BL-620 Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Brain Boxes", \
SYSFS{prod_id2}=="Bluetooth PC Card", ENV{HCIOPTS}="bboxes", RUN+="bluetooth_serial" \
+SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="Brain Boxes", \
ATTRS{prod_id2}=="Bluetooth PC Card", ENV{HCIOPTS}="bboxes", RUN+="bluetooth_serial"  \
  # Xircom CreditCard Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="Xircom", ATTRS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial"  
 # Xircom RealPort2 Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="Xircom", ATTRS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial"  
 # IBM Bluetooth PC Card II
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="IBM", SYSFS{prod_id2}=="Bluetooth \
PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="IBM", ATTRS{prod_id2}=="Bluetooth PC Card \
II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial"  
 # TDK Bluetooth PC Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="TDK", SYSFS{prod_id2}=="Bluetooth \
PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="TDK", ATTRS{prod_id2}=="Bluetooth PC Card \
II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial"  
 # AmbiCom BT2000C Bluetooth PC/CF Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="AmbiCom BT2000C", \
SYSFS{prod_id2}=="Bluetooth PC/CF Card", ENV{HCIOPTS}="bt2000c", \
RUN+="bluetooth_serial" +SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", \
ATTRS{prod_id1}=="AmbiCom BT2000C", ATTRS{prod_id2}=="Bluetooth PC/CF Card", \
ENV{HCIOPTS}="bt2000c", RUN+="bluetooth_serial"  
 # COM One Platinium Bluetooth PC Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="COM1 SA", SYSFS{prod_id2}=="MC310 \
CARD", ENV{HCIOPTS}="comone", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="COM1 SA", ATTRS{prod_id2}=="MC310 CARD", \
ENV{HCIOPTS}="comone", RUN+="bluetooth_serial"  
 # Sphinx PICO Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="SPHINX", \
SYSFS{prod_id2}=="BT-CARD", ENV{HCIOPTS}="picocard", RUN+="bluetooth_serial" \
+SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="SPHINX", \
ATTRS{prod_id2}=="BT-CARD", ENV{HCIOPTS}="picocard", RUN+="bluetooth_serial"  
 # H-Soft blue+Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="H-Soft", \
SYSFS{prod_id2}=="Blue+CARD", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
RUN+="bluetooth_serial" +SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", \
ATTRS{prod_id1}=="H-Soft", ATTRS{prod_id2}=="Blue+CARD", \
ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", RUN+="bluetooth_serial"  
 # Compaq iPAQ Bluetooth Sleeve, Belkin F8T020, any other muppet who used an OXCF950 \
                and didn't bother to program it appropriately.
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="CF CARD", \
SYSFS{prod_id2}=="GENERIC", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
RUN+="bluetooth_serial" +SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="CF \
CARD", ATTRS{prod_id2}=="GENERIC", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
RUN+="bluetooth_serial"  
 # Zoom Bluetooth Card and Sitecom CN-504 Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="PCMCIA", \
SYSFS{prod_id2}=="Bluetooth Card", ENV{HCIOPTS}="zoom", RUN+="bluetooth_serial" \
+SUBSYSTEM=="tty", SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="PCMCIA", \
ATTRS{prod_id2}=="Bluetooth Card", ENV{HCIOPTS}="zoom", RUN+="bluetooth_serial"  
 # CC&amp;C BT0100M
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Bluetooth BT0100M", \
ENV{HCIOPTS}="bcsp 115200", RUN+="bluetooth_serial" +SUBSYSTEM=="tty", \
SUBSYSTEMS=="pcmcia", ATTRS{prod_id1}=="Bluetooth BT0100M", ENV{HCIOPTS}="bcsp \
                115200", RUN+="bluetooth_serial"
-- 
1.5.5.2


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081018091620</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-18 09:16:20-0400</timestampReceived><subject>Sending files via bluez-gnome</subject><body>

Hi people,

I notice that the "Send files to device" menu item off bluetooth-applet 
is only available if "obex-data-server" is in the $PATH.  But I get the 
impression that "obexd" is trying to provide the DBus service that the 
applet is actually after (point being that searching the $PATH for 
"obex-data-server" isn't a very good test for "obexd" presence :)

Sadly, either way (running either server) I can't seem to transfer files 
to my Blackberry.  But that could be a Blackberry problem, its Bluetooth 
support is pretty dismal...

Cheers,

Dave
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019082829</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-19 08:28:29-0400</timestampReceived><subject>Add application header support to gwobex</subject><body>

Hi Johan,

for the PBAP support, we need to handle the application header and for
our client/test applications, I extended gwobex to allow us to specify
this header. What do you think?

Regards

Marcel


["patch-gwobex-apparam-support" (patch-gwobex-apparam-support)]

diff --git a/gwobex/gw-obex.c b/gwobex/gw-obex.c
index 061e9e9..e656692 100644
--- a/gwobex/gw-obex.c
+++ b/gwobex/gw-obex.c
@@ -44,7 +44,7 @@ gboolean gw_obex_get_file(GwObex *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_get(ctx, local, remote, type, NULL, NULL, -1, FALSE);
+    ret = gw_obex_get(ctx, local, remote, type, NULL, 0, NULL, NULL, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -59,7 +59,7 @@ gboolean gw_obex_get_fd(GwObex      *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_get(ctx, NULL, remote, type, NULL, NULL, fd, FALSE);
+    ret = gw_obex_get(ctx, NULL, remote, type, NULL, 0, NULL, NULL, fd, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -74,7 +74,7 @@ gboolean gw_obex_put_fd(GwObex      *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_put(ctx, NULL, remote, type, NULL, 0, -1, fd, FALSE);
+    ret = gw_obex_put(ctx, NULL, remote, type, NULL, 0, NULL, 0, -1, fd, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -89,7 +89,7 @@ gboolean gw_obex_put_file(GwObex      *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_put(ctx, local, remote, type, NULL, 0, -1, -1, FALSE);
+    ret = gw_obex_put(ctx, local, remote, type, NULL, 0, NULL, 0, -1, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -105,7 +105,7 @@ gboolean gw_obex_get_buf(GwObex       *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_get(ctx, NULL, remote, type, buf, buf_size, -1, FALSE);
+    ret = gw_obex_get(ctx, NULL, remote, type, NULL, 0, buf, buf_size, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -122,7 +122,44 @@ gboolean gw_obex_put_buf(GwObex      *ctx,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_put(ctx, NULL, remote, type, buf, buf_size, time, -1, FALSE);
+    ret = gw_obex_put(ctx, NULL, remote, type, NULL, 0, buf, buf_size, time, -1, FALSE);
+    if (ret == FALSE)
+        gw_obex_get_error(ctx, error);
+    GW_OBEX_UNLOCK(ctx);
+    return ret;
+}
+
+gboolean gw_obex_get_buf_with_apparam(GwObex        *ctx,
+                                      const gchar   *remote,
+                                      const gchar   *type,
+                                      const guint8  *apparam,
+                                      gint           apparam_size,
+                                      gchar        **buf,
+                                      gint          *buf_size,
+                                      gint          *error) {
+    gboolean ret;
+    GW_OBEX_LOCK(ctx);
+    CHECK_DISCONNECT(FALSE, error, ctx);
+    ret = gw_obex_get(ctx, NULL, remote, type, apparam, apparam_size, buf, buf_size, -1, FALSE);
+    if (ret == FALSE)
+        gw_obex_get_error(ctx, error);
+    GW_OBEX_UNLOCK(ctx);
+    return ret;
+}
+
+gboolean gw_obex_put_buf_with_apparam(GwObex       *ctx,
+                                      const gchar  *remote,
+                                      const gchar  *type,
+                                      const guint8 *apparam,
+                                      gint          apparam_size,
+                                      const gchar  *buf,
+                                      gint          buf_size,
+                                      gint          time,
+                                      gint         *error) {
+    gboolean ret;
+    GW_OBEX_LOCK(ctx);
+    CHECK_DISCONNECT(FALSE, error, ctx);
+    ret = gw_obex_put(ctx, NULL, remote, type, apparam, apparam_size, buf, buf_size, time, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -158,7 +195,7 @@ gboolean gw_obex_read_dir(GwObex *ctx, const gchar *dir,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_get(ctx, NULL, dir ? dir : "", LST_TYPE, buf, buf_size, -1, FALSE);
+    ret = gw_obex_get(ctx, NULL, dir ? dir : "", LST_TYPE, NULL, 0, buf, buf_size, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     else if (*buf_size &gt; 0) {
@@ -181,7 +218,7 @@ gboolean gw_obex_delete(GwObex *ctx, const gchar *name, gint *error) {
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_put(ctx, NULL, name, NULL, NULL, 0, -1, -1, FALSE);
+    ret = gw_obex_put(ctx, NULL, name, NULL, NULL, 0, NULL, 0, -1, -1, FALSE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -214,7 +251,7 @@ gboolean gw_obex_get_capability(GwObex *ctx, gchar **cap, gint *cap_len, gint *e
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(FALSE, error, ctx);
-    ret = gw_obex_get(ctx, NULL, NULL, CAP_TYPE, cap, cap_len, -1, FALSE);
+    ret = gw_obex_get(ctx, NULL, NULL, CAP_TYPE, NULL, 0, cap, cap_len, -1, FALSE);
     if (ret == FALSE) {
         *cap = NULL;
         *cap_len = 0;
diff --git a/gwobex/gw-obex.h b/gwobex/gw-obex.h
index c1be103..d810d1c 100644
--- a/gwobex/gw-obex.h
+++ b/gwobex/gw-obex.h
@@ -365,6 +365,48 @@ gboolean gw_obex_put_buf(GwObex *ctx, const gchar *remote, const gchar *type,
                          const gchar *buf, gint buf_size, gint time, gint *error);
 
 
+/** Get an object from the remote device and store it in a memory buffer.
+ * Either remote filename or type must be supplied (or both).
+ *
+ * @param ctx          Pointer returned by gw_obex_setup()
+ * @param remote       Remote filename (null terminated UTF-8)
+ * @param type         MIME-type of the object
+ * @param apparam      Application Parameter of the object
+ * @param apparam_size Application Paramter size
+ * @param buf          Buffer to store the object in.
+ *                      g_free() when not needed anymore.
+ * @param buf_size     Place to store length of fetched object
+ * @param error        Place to store error code on failure
+ *                     (NULL if not interested)
+ *
+ * @returns TRUE on success, FALSE on failure
+ */
+gboolean gw_obex_get_buf_with_apparam(GwObex *ctx, const gchar *remote, const gchar *type,
+                                      const guint8 *apparam, gint apparam_size,
+                                      gchar **buf, gint *buf_size, gint *error);
+
+
+/** Send a object located in a memory buffer to the remote device.
+ * Either remote filename or type must be supplied (or both)
+ *
+ * @param ctx          Pointer returned by gw_obex_setup()
+ * @param remote       Remote filename (null terminated UTF-8)
+ * @param type         MIME-type of the object
+ * @param apparam      Application Parameter of the object
+ * @param apparam_size Application Paramter size
+ * @param buf          Buffer containing the object
+ * @param buf_size     Buffer (object) size
+ * @param time         Last modification time of object (or -1 if not known)
+ * @param error        Place to store error code on failure
+ *                     (NULL if not interested)
+ *
+ * @returns TRUE on success, FALSE on failure
+ */
+gboolean gw_obex_put_buf_wit_apparam(GwObex *ctx, const gchar *remote, const gchar *type,
+                                     const guint8 *apparam, gint apparam_size,
+                                     const gchar *buf, gint buf_size, gint time, gint *error);
+
+
 /** Change directory (relative to the current one).
  *
  * @param ctx   Pointer returned by gw_obex_setup()
diff --git a/gwobex/obex-priv.c b/gwobex/obex-priv.c
index 792cb4f..013e55a 100644
--- a/gwobex/obex-priv.c
+++ b/gwobex/obex-priv.c
@@ -828,6 +828,7 @@ out:
 
 gboolean gw_obex_get(GwObex *ctx,
                      const gchar *local, const gchar *remote, const gchar *type,
+                     const guint8 *apparam, gint apparam_size,
                      gchar **buf, gint *buf_size, int stream_fd,
                      gboolean async) {
     gboolean ret = FALSE;
@@ -853,6 +854,11 @@ gboolean gw_obex_get(GwObex *ctx,
         OBEX_ObjectAddHeader(ctx-&gt;handle, object, OBEX_HDR_CONNECTION, hv, 4, 0);
     }
 
+    if (apparam &amp;&amp; apparam_size &gt; 0) {
+        hv.bs = (unsigned char *)apparam;
+        OBEX_ObjectAddHeader(ctx-&gt;handle, object, OBEX_HDR_APPARAM, hv, apparam_size, 0);
+    }
+
     if (type) {
         hv.bs = (unsigned char *)type;
         OBEX_ObjectAddHeader(ctx-&gt;handle, object, OBEX_HDR_TYPE, hv, strlen(type) + 1, 0);
@@ -939,6 +945,7 @@ out:
 
 gboolean gw_obex_put(GwObex *ctx,
                      const gchar *local, const gchar *remote, const gchar *type,
+                     const guint8 *apparam, gint apparam_size,
                      const gchar *buf, gint object_size, time_t object_time,
                      int stream_fd, gboolean async) {
     gboolean ret = FALSE;
@@ -1015,6 +1022,11 @@ gboolean gw_obex_put(GwObex *ctx,
         OBEX_ObjectAddHeader(ctx-&gt;handle, object, OBEX_HDR_TYPE, hv, strlen(type) + 1, 0);
     }
 
+    if (apparam &amp;&amp; apparam_size &gt; 0) {
+        hv.bs = (unsigned char *)apparam;
+        OBEX_ObjectAddHeader(ctx-&gt;handle, object, OBEX_HDR_APPARAM, hv, apparam_size, 0);
+    }
+
     /* Try to figure out modification time if none was given */
     if (ctx-&gt;xfer-&gt;stream_fd &gt;= 0) {
         struct stat stats;
diff --git a/gwobex/obex-priv.h b/gwobex/obex-priv.h
index b6cbbf6..01d7b8b 100644
--- a/gwobex/obex-priv.h
+++ b/gwobex/obex-priv.h
@@ -197,6 +197,7 @@ gboolean gw_obex_setpath(GwObex *ctx, const gchar *path, int flags);
  */
 gboolean gw_obex_get(GwObex *ctx,
                      const gchar *local, const gchar *remote, const gchar *type,
+                     const guint8 *apparam, gint apparam_size,
                      gchar **buf, gint *buf_size, int stream_fd,
                      gboolean async);
 
@@ -209,6 +210,7 @@ gboolean gw_obex_get(GwObex *ctx,
  */
 gboolean gw_obex_put(GwObex *ctx,
                      const gchar *local, const gchar *remote, const gchar *type,
+                     const guint8 *apparam, gint apparam_size,
                      const gchar *buf, gint buf_size, time_t object_time,
                      int stream_fd, gboolean async);
 
diff --git a/gwobex/obex-xfer.c b/gwobex/obex-xfer.c
index 1cce005..4edaa41 100644
--- a/gwobex/obex-xfer.c
+++ b/gwobex/obex-xfer.c
@@ -117,7 +117,7 @@ GwObexXfer *gw_obex_put_async(GwObex *ctx, const char *name, const char *type,
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(NULL, error, ctx);
-    ret = gw_obex_put(ctx, NULL, name, type, NULL, size, time, -1, TRUE);
+    ret = gw_obex_put(ctx, NULL, name, type, NULL, 0, NULL, size, time, -1, TRUE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);
@@ -128,7 +128,7 @@ GwObexXfer *gw_obex_get_async(GwObex *ctx, const char *name, const char *type, g
     gboolean ret;
     GW_OBEX_LOCK(ctx);
     CHECK_DISCONNECT(NULL, error, ctx);
-    ret = gw_obex_get(ctx, NULL, name, type, NULL, NULL, -1, TRUE);
+    ret = gw_obex_get(ctx, NULL, name, type, NULL, 0, NULL, NULL, -1, TRUE);
     if (ret == FALSE)
         gw_obex_get_error(ctx, error);
     GW_OBEX_UNLOCK(ctx);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081019141548</emailId><senderName>Jiri Slaby</senderName><senderEmail>jirislaby@gmail.com</senderEmail><timestampReceived>2008-10-19 14:15:48-0400</timestampReceived><subject>[PATCH 1/2] HID: add hid_type</subject><body>

Add type to the hid structure to distinguish to which device type
(mouse/kbd) we are talking to. Needed for per device type ignore
list support.

Note: this patch leaves the type as unknown for bluetooth devices,
there is not support for this in the hidp code.

Signed-off-by: Jiri Slaby &lt;jirislaby@gmail.com&gt;
---
 drivers/hid/usbhid/hid-core.c |    8 ++++++++
 include/linux/hid.h           |    7 +++++++
 2 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
index 1d3b8a3..20617d8 100644
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@ -972,6 +972,14 @@ static int hid_probe(struct usb_interface *intf, const struct usb_device_id *id)
 	hid-&gt;vendor = le16_to_cpu(dev-&gt;descriptor.idVendor);
 	hid-&gt;product = le16_to_cpu(dev-&gt;descriptor.idProduct);
 	hid-&gt;name[0] = 0;
+	switch (intf-&gt;cur_altsetting-&gt;desc.bInterfaceProtocol) {
+	case USB_INTERFACE_PROTOCOL_KEYBOARD:
+		hid-&gt;type = HID_TYPE_KEYBOARD;
+		break;
+	case USB_INTERFACE_PROTOCOL_MOUSE:
+		hid-&gt;type = HID_TYPE_MOUSE;
+		break;
+	}
 
 	if (dev-&gt;manufacturer)
 		strlcpy(hid-&gt;name, dev-&gt;manufacturer, sizeof(hid-&gt;name));
diff --git a/include/linux/hid.h b/include/linux/hid.h
index f13bca2..36a3953 100644
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -417,6 +417,12 @@ struct hid_input {
 	struct input_dev *input;
 };
 
+enum hid_type {
+	HID_TYPE_UNKNOWN = 0,
+	HID_TYPE_MOUSE,
+	HID_TYPE_KEYBOARD
+};
+
 struct hid_driver;
 struct hid_ll_driver;
 
@@ -431,6 +437,7 @@ struct hid_device {							/* device report descriptor */
 	__u32 vendor;							/* Vendor ID */
 	__u32 product;							/* Product ID */
 	__u32 version;							/* HID version */
+	enum hid_type type;						/* device type (mouse, kbd, ...) */
 	unsigned country;						/* HID country */
 	struct hid_report_enum report_enum[HID_REPORT_TYPES];
 
-- 
1.6.0.2

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019141549</emailId><senderName>Jiri Slaby</senderName><senderEmail>jirislaby@gmail.com</senderEmail><timestampReceived>2008-10-19 14:15:49-0400</timestampReceived><subject>[PATCH 2/2] HID: fix appletouch regression</subject><body>

The appletouch mouse devices are grabbed by the hid bus and not
released even if apple driver says ENODEV (as expected).

Move the ignoration one level upper to deny the hid layer to grab
the device and return error to the usb hid which, as a result,
releases the device.

Otherwise input/mouse/appletouch and others needn't be attached.

Reported-by: Justin Mattock &lt;justinmattock@gmail.com&gt;
Reported-by: Steven Noonan &lt;steven@uplinklabs.net&gt;
Signed-off-by: Jiri Slaby &lt;jirislaby@gmail.com&gt;
---
 drivers/hid/hid-apple.c |   63 ++++++++++++++++------------------------------
 drivers/hid/hid-core.c  |   33 ++++++++++++++++++++++++
 2 files changed, 55 insertions(+), 41 deletions(-)

diff --git a/drivers/hid/hid-apple.c b/drivers/hid/hid-apple.c
index fd7f896..c6ab4ba 100644
--- a/drivers/hid/hid-apple.c
+++ b/drivers/hid/hid-apple.c
@@ -312,13 +312,6 @@ static int apple_probe(struct hid_device *hdev,
 	unsigned int connect_mask = HID_CONNECT_DEFAULT;
 	int ret;
 
-	/* return something else or move to hid layer? device will reside
-	   allocated */
-	if (id-&gt;bus == BUS_USB &amp;&amp; (quirks &amp; APPLE_IGNORE_MOUSE) &amp;&amp;
-			to_usb_interface(hdev-&gt;dev.parent)-&gt;cur_altsetting-&gt;
-			desc.bInterfaceProtocol == USB_INTERFACE_PROTOCOL_MOUSE)
-		return -ENODEV;
-
 	asc = kzalloc(sizeof(*asc), GFP_KERNEL);
 	if (asc == NULL) {
 		dev_err(&amp;hdev-&gt;dev, "can't alloc apple descriptor\n");
@@ -367,38 +360,32 @@ static const struct hid_device_id apple_devices[] = {
 		.driver_data = APPLE_MIGHTYMOUSE | APPLE_INVERT_HWHEEL },
 
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ISO),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_JIS),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS},
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_ANSI),
 		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_ISO),
@@ -406,14 +393,12 @@ static const struct hid_device_id apple_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_JIS),
 		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ISO),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_ANSI),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_ISO),
@@ -422,25 +407,21 @@ static const struct hid_device_id apple_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ANSI),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ISO),
-		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_JIS),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+		.driver_data = APPLE_HAS_FN | APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ANSI),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ISO),
-		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_JIS),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+		.driver_data = APPLE_HAS_FN | APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_TP_ONLY),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 
 	/* Apple wireless Mighty Mouse */
 	{ HID_BLUETOOTH_DEVICE(USB_VENDOR_ID_APPLE, 0x030c),
diff --git a/drivers/hid/hid-core.c b/drivers/hid/hid-core.c
index 8a7d9db..90bdc6f 100644
--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1539,6 +1539,35 @@ static const struct hid_device_id hid_ignore_list[] = {
 	{ }
 };
 
+/**
+ * hid_mouse_ignore_list - mouse devices which must not be held by the hid layer
+ */
+static const struct hid_device_id hid_mouse_ignore_list[] = {
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_TP_ONLY) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY) },
+	{ }
+};
+
 static bool hid_ignore(struct hid_device *hdev)
 {
 	switch (hdev-&gt;vendor) {
@@ -1555,6 +1584,10 @@ static bool hid_ignore(struct hid_device *hdev)
 		break;
 	}
 
+	if (hdev-&gt;type == HID_TYPE_MOUSE &amp;&amp;
+			hid_match_id(hdev, hid_mouse_ignore_list))
+		return true;
+
 	return !!hid_match_id(hdev, hid_ignore_list);
 }
 
-- 
1.6.0.2

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081008085954</emailId><senderName>"Zhao Forrest"</senderName><senderEmail>forrest.zhao@gmail.com</senderEmail><timestampReceived>2008-10-08 08:59:54-0400</timestampReceived><subject>PBAP storage plugin API proposal</subject><body>

Hi experts,

I'm implementing PBAP server based on obexd. In order to support
various PBAP backend storage each type of PBAP backend storage should
be implemented as a plugin of PBAP server. So we propose the initial
PBAP storage plugin API as follows. Basically the bellows are defined
in pbap_storage_plugin.h
====================================================================
typedef void* pullphonebook_t;
typedef void* pullvcardlisting_t;
typedef void* pullvcardentry_t;

struct pbap_storage_operations {
        pullphonebook_t* (*pullphonebook_init) (const gchar *object_name,
                          guint64 filter, guint8 format,
                          guint16 max_list_count, guint16 list_start_offset,
                          guint16 *phonebook_size, guint8 *new_missed_calls);
        gint32 (*pullphonebook) (pullphonebook_t *handle, guint8 *buf,
                guint16 buf_len);
        void (*pullphonebook_free) (pullphonebook_t *handle);

        pullvcardlisting_t* (*pullvcardlisting_init) (const gchar *object_name,
                             guint8 order, guint8 search_attr, gchar
*search_val,
                             guint16 max_list_count, guint16 list_start_offset,
                             guint16 *phonebook_size, guint8 *new_missed_calls);
        gint32 (*pullvcardlisting) (pullvcardlisting_t *handle, guint8 *buf,
                guint16 buf_len);
        void (*pullvcardlisting_free) (pullvcardlisting_t *handle);

        pullvcardentry_t* (*pullvcardentry_init) (const gchar *object_name,
                           guint64 filter, guint8 format);
        gint32 (*pullvcardentry) (pullvcardentry_t *handle, guint8 *buf,
                                  guint16 buf_len);
        void (*pullvcardentry_free) (pullvcardentry_t *handle);
};

guint8 pbap_storage_operations_register(struct pbap_storage_operations *ops);

struct obex_pbap_storage_plugin_desc {
        const char *name;
        int (*init) (void);
        void (*exit) (void);
};

#define OBEX_PBAP_STORAGE_PLUGIN_DEFINE(name,init,exit) \
                struct obex_pbap_storage_plugin_desc
obex_pbap_storage_plugin_desc = { \
                        name, init, exit \
                };
====================================================================
The plugin framework is similar to the one used in bluez and obexd. A
particular PBAP storage plugin program should define its own "struct
pbap_storage_operations" and call pbap_storage_operations_register()
in obex_pbap_storage_plugin_desc.init() to register these callback
functions to PBAP server.

Here we use "pullphonebook" as an example to explain the PBAP storage
plugin API usage.
For example when OBEX PBAP server receives a "PullPhoneBook" request
from PBAP client, it first calls
pbap_storage_ops-&gt;pullphonebook_init() to get a handle, phonebook_size
and new_missed_calls as returned value; then it calls
pbap_storage_ops-&gt; pullphonebook() to get the phonebook object until
the return value is 0; lastly it calls pbap_storage_ops-&gt;
pullphonebook_free() to release the handle.

The PBAP spec is at
http://www.bluetooth.com/NR/rdonlyres/58FC38BF-9ED6-49FF-81CF-E0B95B130D72/7761/PBAP_SPEC_V10r00.pdf.

Your comments are welcome!

Thanks,
Forrest
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081008091736</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-08 09:17:36-0400</timestampReceived><subject>Re: PBAP storage plugin API proposal</subject><body>

Hi Forrest,

&gt; I'm implementing PBAP server based on obexd. In order to support
&gt; various PBAP backend storage each type of PBAP backend storage should
&gt; be implemented as a plugin of PBAP server. So we propose the initial
&gt; PBAP storage plugin API as follows. Basically the bellows are defined
&gt; in pbap_storage_plugin.h
&gt; ====================================================================
&gt; typedef void* pullphonebook_t;
&gt; typedef void* pullvcardlisting_t;
&gt; typedef void* pullvcardentry_t;
&gt; 
&gt; struct pbap_storage_operations {
&gt;         pullphonebook_t* (*pullphonebook_init) (const gchar *object_name,
&gt;                           guint64 filter, guint8 format,
&gt;                           guint16 max_list_count, guint16 list_start_offset,
&gt;                           guint16 *phonebook_size, guint8 *new_missed_calls);
&gt;         gint32 (*pullphonebook) (pullphonebook_t *handle, guint8 *buf,
&gt;                 guint16 buf_len);
&gt;         void (*pullphonebook_free) (pullphonebook_t *handle);
&gt; 
&gt;         pullvcardlisting_t* (*pullvcardlisting_init) (const gchar *object_name,
&gt;                              guint8 order, guint8 search_attr, gchar
&gt; *search_val,
&gt;                              guint16 max_list_count, guint16 list_start_offset,
&gt;                              guint16 *phonebook_size, guint8 *new_missed_calls);
&gt;         gint32 (*pullvcardlisting) (pullvcardlisting_t *handle, guint8 *buf,
&gt;                 guint16 buf_len);
&gt;         void (*pullvcardlisting_free) (pullvcardlisting_t *handle);
&gt; 
&gt;         pullvcardentry_t* (*pullvcardentry_init) (const gchar *object_name,
&gt;                            guint64 filter, guint8 format);
&gt;         gint32 (*pullvcardentry) (pullvcardentry_t *handle, guint8 *buf,
&gt;                                   guint16 buf_len);
&gt;         void (*pullvcardentry_free) (pullvcardentry_t *handle);
&gt; };
&gt; 
&gt; guint8 pbap_storage_operations_register(struct pbap_storage_operations *ops);
&gt; 
&gt; struct obex_pbap_storage_plugin_desc {
&gt;         const char *name;
&gt;         int (*init) (void);
&gt;         void (*exit) (void);
&gt; };
&gt; 
&gt; #define OBEX_PBAP_STORAGE_PLUGIN_DEFINE(name,init,exit) \
&gt;                 struct obex_pbap_storage_plugin_desc
&gt; obex_pbap_storage_plugin_desc = { \
&gt;                         name, init, exit \
&gt;                 };
&gt; ====================================================================
&gt; The plugin framework is similar to the one used in bluez and obexd. A
&gt; particular PBAP storage plugin program should define its own "struct
&gt; pbap_storage_operations" and call pbap_storage_operations_register()
&gt; in obex_pbap_storage_plugin_desc.init() to register these callback
&gt; functions to PBAP server.

use the generic per plugin defines and its init and exit functions and
then provide methods to register and unregister the operations.

Please keep in mind that in theory we can load more than one of these
phonebook "drivers".

All (and I mean all) plugins in bluetoothd and obexd are treated the
same. It is up to their init and exit routines to do the job. This
allows us to have a generic plugin framework and not do invent it over
and over again.

Did anyone converted the picture from the whiteboard at the meeting into
some written details.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081009014330</emailId><senderName>"Zhao Forrest"</senderName><senderEmail>forrest.zhao@gmail.com</senderEmail><timestampReceived>2008-10-09 01:43:30-0400</timestampReceived><subject>Re: PBAP storage plugin API proposal</subject><body>

&gt;
&gt; use the generic per plugin defines and its init and exit functions and
&gt; then provide methods to register and unregister the operations.
&gt;
Yes. My proposed PBAP storage API follows this rule, but lacks the
method to unregister the operations. Will add it later.

&gt; Please keep in mind that in theory we can load more than one of these
&gt; phonebook "drivers".
&gt;
Do you mean obexd could load multiple PBAP server plugin instances
at the same time?
Or one PBAP server instance could load multiple PBAP storage plugins
at the same time?

Thanks,
Forrest
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081018042942</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-18 04:29:42-0400</timestampReceived><subject>Re: PBAP storage plugin API proposal</subject><body>

Hi Forrest,

&gt; &gt; use the generic per plugin defines and its init and exit functions and
&gt; &gt; then provide methods to register and unregister the operations.
&gt; &gt;
&gt; Yes. My proposed PBAP storage API follows this rule, but lacks the
&gt; method to unregister the operations. Will add it later.

I put some prototype declarations into the obexd repository. The
important part is that we have to do this in an async way. We can't
block while retrieving the phonebook information.

&gt; &gt; Please keep in mind that in theory we can load more than one of these
&gt; &gt; phonebook "drivers".
&gt; &gt;
&gt; Do you mean obexd could load multiple PBAP server plugin instances
&gt; at the same time?

Only one instance of the plugin, but multiple different ones.

&gt; Or one PBAP server instance could load multiple PBAP storage plugins
&gt; at the same time?

Yes. That could be possible.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081020092105</emailId><senderName>"Zhao Forrest"</senderName><senderEmail>forrest.zhao@gmail.com</senderEmail><timestampReceived>2008-10-20 09:21:05-0400</timestampReceived><subject>Re: PBAP storage plugin API proposal</subject><body>

&gt;&gt; Yes. My proposed PBAP storage API follows this rule, but lacks the
&gt;&gt; method to unregister the operations. Will add it later.
&gt;
&gt; I put some prototype declarations into the obexd repository. The
&gt; important part is that we have to do this in an async way. We can't
&gt; block while retrieving the phonebook information.
&gt;

I'm implementing PBAP driver framework and a simple(or prototype) PBAP
driver based on your prototype declarations. Will add some extentions
to the prototype declarations if necessary.
To do that in an async way I think the basic idea is:
1 when PBAP driver is loaded(or initialized), fork() is invoked to run
PBAP driver in child process
2 the Unix domain socket is used to communicate between PBAP server
and PBAP driver; and PBAP server acts as client role at the one end of
socket, PBAP driver acts as server role at the other end of socket
3 everytime a PBAP client connects to PBAP server(i.e. a OBEX session
is initiated), PBAP server initiates a session(or a socket) with PBAP
driver by invoking connect(). Then PBAP server sends subsequent PBAP
request(pullphonebook, pullvcardlisting, pullvcardentry) through this
socket; PBAP driver sends back the requested data through the socket
asyncronously.
Am I right? I'd like to first make the basic design ideas clear in
order to avoid the unnecessary misunderstanding or confusion before
starting to write the code.

Thanks,
Forrest
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019123627</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-19 12:36:27-0400</timestampReceived><subject>Re: Add application header support to gwobex</subject><body>

Hi Marcel,

On Oct 19, 2008, at 11:28, Marcel Holtmann wrote:
&gt; for the PBAP support, we need to handle the application header and for
&gt; our client/test applications, I extended gwobex to allow us to specify
&gt; this header. What do you think?

Looks good to me, though the parameter lists to the _get and_put  
functions are starting to grow pretty long. In general it'd be nice to  
get the same functionality into libopenobex-glib soonish since I'm not  
particularly enjoying looking at this ancient code and coding style  
that should just die away ;)

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081008153113</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-08 15:31:13-0400</timestampReceived><subject>Re: [ BUG ] acl sysfs entry remains after connection error</subject><body>

Hi,

&gt; I've found a bug in bluetooth stack.
&gt; 
&gt; I use bluetooth on ARM Linux machine to simultaneously send pictures
&gt; to 2 or 3 devices.
&gt; In a L2CAP connection stage (socket L2CAP 'connect') sometimes I get a
&gt; 'Connection timeout error',
&gt; which is not a disaster because I can try to connect again. However
&gt; very often I get a kernel error,
&gt; which tells me that there is a duplicate entry in sysfs (acl...).
&gt; 
&gt; I've checked, and indeed acl connection entries are not removed from
&gt; sysfs after a connection fail.
&gt; 
&gt; How can I fix this?
&gt; 
&gt; PS. I've got latest 2.6.26 kernel.

the latest kernel is 2.6.27-rc9. Please confirm that this problem still
exists.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081012181522</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-12 18:15:22-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

Hi Bastien,

Thanks for the patch. It has been pushed upstream. However, now that I  
looked at the code in question there are several things I have to  
wonder about:
1. Why is the code using sdp_data_get(rec, SDP_SERVER_RECORD_HANDLE)  
instead of rec-&gt;handle?
2. Is having the record really mandatory for allowing a device to  
connect? I.e. could we somehow make input_probe() work even if the  
record isn't available?

I think it was either Claudio or Luiz who has been touching this part  
of bluez code recently (at least git-blame shows Claudio being  
responsible for the SDP_SERVER_RECORD_HANDLE thing) so maybe they can  
shed some more light on these issues?

Johan


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013134309</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-10-13 13:43:09-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

Hi,

I guess we can make all driver to do the discover on Connect if the
record is not available, similar to what is done in audio.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013141651</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-13 14:16:51-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

On Mon, 2008-10-13 at 10:43 -0300, Luiz Augusto von Dentz wrote:
&gt; Hi,
&gt; 
&gt; I guess we can make all driver to do the discover on Connect if the
&gt; record is not available, similar to what is done in audio.

I'm not certain whether the problem is no record, or a broken one.

This is the file causing problems, the device line that causes the crash
is the one starting with 00:1E:45:AD:F1:96. So there is data, but it
probably isn't parsed properly.

Cheers

["profiles" (profiles)]

00:1E:45:AD:F1:96 00000002-0000-1000-8000-0002ee000002 \
00001101-0000-1000-8000-00805f9b34fb 00001103-0000-1000-8000-00805f9b34fb \
00001104-0000-1000-8000-00805f9b34fb 00001105-0000-1000-8000-00805f9b34fb \
00001106-0000-1000-8000-00805f9b34fb 0000110a-0000-1000-8000-00805f9b34fb \
0000110c-0000-1000-8000-00805f9b34fb 0000110e-0000-1000-8000-00805f9b34fb \
00001112-0000-1000-8000-00805f9b34fb 00001115-0000-1000-8000-00805f9b34fb \
00001116-0000-1000-8000-00805f9b34fb 0000111f-0000-1000-8000-00805f9b34fb \
00001124-0000-1000-8000-00805f9b34fb 0000112f-0000-1000-8000-00805f9b34fb \
00001200-0000-1000-8000-00805f9b34fb 8e771301-0000-1000-8000-00805f9b34fb \
8e771401-0000-1000-8000-00805f9b34fb 00:0A:94:C0:AB:9B \
00001124-0000-1000-8000-00805f9b34fb


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081014184729</emailId><senderName>"Claudio Takahasi"</senderName><senderEmail>claudio.takahasi@openbossa.org</senderEmail><timestampReceived>2008-10-14 18:47:29-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

2008/10/13 Bastien Nocera &lt;hadess@hadess.net&gt;:
&gt; On Mon, 2008-10-13 at 10:43 -0300, Luiz Augusto von Dentz wrote:
&gt;&gt; Hi,
&gt;&gt;
&gt;&gt; I guess we can make all driver to do the discover on Connect if the
&gt;&gt; record is not available, similar to what is done in audio.
&gt;
&gt; I'm not certain whether the problem is no record, or a broken one.
&gt;
&gt; This is the file causing problems, the device line that causes the crash
&gt; is the one starting with 00:1E:45:AD:F1:96. So there is data, but it
&gt; probably isn't parsed properly.
&gt;
&gt; Cheers
&gt;

Hi,

The source of this problem is an invalid sequence in the service
record. See entry 00:1E:45:AD:F1:96#02008007 in sdp record file.
About the Johan's questions:
1. we can access rec-&gt;handle directly, we have to fix it
2. service record is necessary, at least HIDDescriptorList

Claudio
-- 
--
Claudio Takahasi
Instituto Nokia de Tecnologia
Recife - Pernambuco - Brasil
+55 81 30879999
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014214420</emailId><senderName>"Claudio Takahasi"</senderName><senderEmail>claudio.takahasi@openbossa.org</senderEmail><timestampReceived>2008-10-14 21:44:20-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

On Tue, Oct 14, 2008 at 3:47 PM, Claudio Takahasi
&lt;claudio.takahasi@openbossa.org&gt; wrote:
&gt; 2008/10/13 Bastien Nocera &lt;hadess@hadess.net&gt;:
&gt;&gt; On Mon, 2008-10-13 at 10:43 -0300, Luiz Augusto von Dentz wrote:
&gt;&gt;&gt; Hi,
&gt;&gt;&gt;
&gt;&gt;&gt; I guess we can make all driver to do the discover on Connect if the
&gt;&gt;&gt; record is not available, similar to what is done in audio.
&gt;&gt;
&gt;&gt; I'm not certain whether the problem is no record, or a broken one.
&gt;&gt;
&gt;&gt; This is the file causing problems, the device line that causes the crash
&gt;&gt; is the one starting with 00:1E:45:AD:F1:96. So there is data, but it
&gt;&gt; probably isn't parsed properly.
&gt;&gt;
&gt;&gt; Cheers
&gt;&gt;
&gt;
&gt; Hi,
&gt;
&gt; The source of this problem is an invalid sequence in the service
&gt; record. See entry 00:1E:45:AD:F1:96#02008007 in sdp record file.
&gt; About the Johan's questions:
&gt; 1. we can access rec-&gt;handle directly, we have to fix it
&gt; 2. service record is necessary, at least HIDDescriptorList
&gt;
&gt; Claudio
&gt; --
&gt; --
&gt; Claudio Takahasi
&gt; Instituto Nokia de Tecnologia
&gt; Recife - Pernambuco - Brasil
&gt; +55 81 30879999

Hi Bastien,

The patch that you sent is enough to fix this problem. There isn't
error when parsing the service record, the illegal multibyte sequence
error that I saw when debugging is a normal error when parsing
"storage" files, it is exit condition.

I am just wondering how you created the sdp file that you sent me, did
you remove some entries? My sdp file contains 18 entries, all of them
are related to the Sony Ericsson K850.

Regards,
Claudio.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014063804</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-14 06:38:04-0400</timestampReceived><subject>Re: [PATCH] Fix PS3 BD remote input event generation</subject><body>

Hi Bastien,

On Oct 14, 2008, at 1:28, Bastien Nocera wrote:
&gt; - Fix byte-reading in the decode function by using a guint8, instead
&gt; of an int, we were overreading and were getting keycodes of
&gt; 0xffffff44 when we wanted a single byte of 0x44.
&gt; - Remove use of KEY_REMOTE_X, those keys never got upstream, and the
&gt; values they were defined at are now used for completely different
&gt; keys
&gt; - Update uinput.h with the latest keycodes from 2.6.27

The patch has been pushed upstream. Thanks!

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013155326</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-13 15:53:26-0400</timestampReceived><subject>Re: Storing HID req record</subject><body>

Hi Bastien,

&gt; I'm looking for a way for a utility to write the HID req, ie. a way to
&gt; replace the internal store_device_info() from BlueZ 3.x.

what do you wanna achieve? Is this for the PS3 cable authentication?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081010225845</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-10 22:58:45-0400</timestampReceived><subject>Re: [PATCH] Add OUI check for the PS3 BD remote</subject><body>

Hi Bastien,

the patch has been applied, but != FALSE is also == TRUE. We don't need
double negation ;)

regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081010145119</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-10 14:51:19-0400</timestampReceived><subject>Re: [PATCH] Fix PS3 BD remote "pairing"</subject><body>

Hi Bastien,

&gt; The PS3 BD remote doesn't really want to be paired, CreateDevice on
&gt; it will be enough to get the it connected and working.

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081010225306</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-10 22:53:06-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11733] New: Possible btusb refcount leak</subject><body>

Hi Andrew,

&gt; bugme-daemon@bugzilla.kernel.org wrote:
&gt; 
&gt; &gt; http://bugzilla.kernel.org/show_bug.cgi?id=11733
&gt; 
&gt; What should I do with bluetooth reports?  I can send them to linux-bluetooth,
&gt; but that's a bit irritating if everyone is already monitornig them?

I am fine with you sending them to linux-bluetooth.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081011001646</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-11 00:16:46-0400</timestampReceived><subject>Re: [PATCH] Add OUI check for the PS3 BD remote</subject><body>

On Sat, 2008-10-11 at 00:58 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; the patch has been applied, but != FALSE is also == TRUE. We don't need
&gt; double negation ;)

Actually. FALSE is defined as "0", and TRUE as "!FALSE". So depending on
the system and the compiler, TRUE could be anything, including 1, just
not 0.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013091019</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-10-13 09:10:19-0400</timestampReceived><subject>[patch]full autosuspend for btusb</subject><body>

Hi,

this is the full autosuspend support for btusb.
It depends on the patch usb-anchor-api-changes-needed-for-btusb.patch
and should go in after it to allow bisect to work under all circumstances.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013102831</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-10-13 10:28:31-0400</timestampReceived><subject>[patch]full autosuspend for btusb #2 - with patch</subject><body>

Hi,

this is the full autosuspend support for btusb.
It depends on the patch usb-anchor-api-changes-needed-for-btusb.patch
and should go in after it to allow bisect to work under all circumstances.

	Regards
		Oliver

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

---

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 0cd4a55..c4f2e69 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -35,13 +35,13 @@
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
-//#define CONFIG_BT_HCIBTUSB_DEBUG
+#define CONFIG_BT_HCIBTUSB_DEBUG
 #ifndef CONFIG_BT_HCIBTUSB_DEBUG
 #undef  BT_DBG
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.3"
+#define VERSION "0.4"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -173,6 +173,7 @@ static struct usb_device_id blacklist_table[] = {
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 #define BTUSB_ISOC_RUNNING	2
+#define BTUSB_SUSPENDING	3
 
 struct btusb_data {
 	struct hci_dev       *hdev;
@@ -185,11 +186,13 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
 	struct usb_anchor isoc_anchor;
+	struct usb_anchor deferred;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
@@ -199,6 +202,7 @@ struct btusb_data {
 
 	int isoc_altsetting;
 	int suspend_count;
+	int did_iso_resume:1;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -227,6 +231,7 @@ static void btusb_intr_complete(struct urb *urb)
 	if (!test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -345,6 +350,7 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t mem_flags)
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -352,6 +358,7 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t mem_flags)
 
 	urb-&gt;transfer_flags |= URB_FREE_BUFFER;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
 	err = usb_submit_urb(urb, mem_flags);
@@ -515,6 +522,12 @@ static int btusb_open(struct hci_dev *hdev)
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;intf);
+	if (err &lt; 0)
+		return err;
+	data-&gt;intf-&gt;needs_remote_wakeup = 1;
+	usb_autopm_put_interface(data-&gt;intf);
+
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
@@ -530,9 +543,17 @@ static int btusb_open(struct hci_dev *hdev)
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
@@ -542,13 +563,15 @@ static int btusb_close(struct hci_dev *hdev)
 	cancel_work_sync(&amp;data-&gt;work);
 
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
-
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
+
+	err = usb_autopm_get_interface(data-&gt;intf);
+	if (!err) {
+		data-&gt;intf-&gt;needs_remote_wakeup = 0;
+		usb_autopm_put_interface(data-&gt;intf);
+	}
 
 	return 0;
 }
@@ -571,7 +594,7 @@ static int btusb_send_frame(struct sk_buff *skb)
 	struct usb_ctrlrequest *dr;
 	struct urb *urb;
 	unsigned int pipe;
-	int err;
+	int err, susp;
 
 	BT_DBG("%s", hdev-&gt;name);
 
@@ -580,6 +603,7 @@ static int btusb_send_frame(struct sk_buff *skb)
 
 	switch (bt_cb(skb)-&gt;pkt_type) {
 	case HCI_COMMAND_PKT:
+		BT_DBG("HCI_COMMAND_PKT");
 		urb = usb_alloc_urb(0, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
@@ -605,6 +629,7 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_ACLDATA_PKT:
+		BT_DBG("HCI_ACLDATA_PKT");
 		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
 			return -ENODEV;
 
@@ -622,6 +647,7 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_SCODATA_PKT:
+		BT_DBG("HCI_SCODATA_PKT");
 		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
 			return -ENODEV;
 
@@ -652,17 +678,22 @@ static int btusb_send_frame(struct sk_buff *skb)
 		return -EILSEQ;
 	}
 
+	spin_lock(&amp;data-&gt;lock);
+	susp = test_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
 	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
-
-	err = usb_submit_urb(urb, GFP_ATOMIC);
-	if (err &lt; 0) {
-		BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
-		kfree(urb-&gt;setup_packet);
-		usb_unanchor_urb(urb);
+	if (susp) {
+		schedule_work(&amp;data-&gt;waker);
+		err = 0;
+	} else {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0) {
+			BT_ERR("%s urb %p submission failed", hdev-&gt;name, urb);
+			kfree(urb-&gt;setup_packet);
+			usb_unanchor_urb(urb);
+		}
+		usb_free_urb(urb);
 	}
-
-	usb_free_urb(urb);
-
+	spin_unlock(&amp;data-&gt;lock);
 	return err;
 }
 
@@ -764,9 +795,26 @@ static void btusb_work(struct work_struct *work)
 		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
 		__set_isoc_interface(hdev, 0);
+		if (data-&gt;did_iso_resume) {
+			data-&gt;did_iso_resume = 0;
+			usb_autopm_put_interface(data-&gt;isoc);
+		}
 	}
 }
 
+static void btusb_waker(struct work_struct *work)
+{
+	struct btusb_data *data = container_of(work, struct btusb_data, waker);
+	int err;
+
+	BUG_ON(data == NULL);
+	BT_DBG("about to resume");
+	BUG_ON(data-&gt;intf == NULL);
+	err = usb_autopm_get_interface(data-&gt;intf);
+	if (!err)
+		usb_autopm_put_interface(data-&gt;intf);
+}
+
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
@@ -834,11 +882,13 @@ static int btusb_probe(struct usb_interface *intf,
 	spin_lock_init(&amp;data-&gt;lock);
 
 	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	INIT_WORK(&amp;data-&gt;waker, btusb_waker);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
 	init_usb_anchor(&amp;data-&gt;isoc_anchor);
+	init_usb_anchor(&amp;data-&gt;deferred);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -953,58 +1003,98 @@ static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
 {
 	struct btusb_data *data = usb_get_intfdata(intf);
 
-	BT_DBG("intf %p", intf);
+	BT_DBG("%s called\n", __func__);
 
 	if (data-&gt;suspend_count++)
 		return 0;
+	spin_lock_irq(&amp;data-&gt;lock);
+	if (	interface_to_usbdev(intf)-&gt;auto_pm &amp;&amp;
+		!usb_anchor_empty(&amp;data-&gt;tx_anchor)) {
+		spin_unlock_irq(&amp;data-&gt;lock);
+		return -EBUSY;
+	}
 
-	cancel_work_sync(&amp;data-&gt;work);
+	set_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+	spin_unlock_irq(&amp;data-&gt;lock);
 
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
 	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
 
-	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+static int play_deferred(struct btusb_data *data)
+{
+	struct urb *urb;
+	int err = 0;
 
-	return 0;
+	while ((urb = usb_get_from_anchor(&amp;data-&gt;tx_anchor))) {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0)
+			break;
+	}
+
+	usb_scuttle_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return err;
 }
 
 static int btusb_resume(struct usb_interface *intf)
 {
 	struct btusb_data *data = usb_get_intfdata(intf);
 	struct hci_dev *hdev = data-&gt;hdev;
-	int err;
-
-	BT_DBG("intf %p", intf);
+	int ret;
 
 	if (--data-&gt;suspend_count)
 		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
 
-	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
-		return 0;
+		spin_lock_irq(&amp;data-&gt;lock);
+		ret = play_deferred(data);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;lock);
 
-	if (test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags)) {
-		err = btusb_submit_intr_urb(hdev, GFP_NOIO);
-		if (err &lt; 0) {
-			clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-			return err;
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
 		}
+
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	} else {
+		spin_lock_irq(&amp;data-&gt;lock);
+		clear_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+		spin_unlock_irq(&amp;data-&gt;lock);
 	}
 
-	if (test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-		if (btusb_submit_bulk_urb(hdev, GFP_NOIO) &lt; 0)
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
 			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		else
-			btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
 	}
 
-	if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
-		if (btusb_submit_isoc_urb(hdev, GFP_NOIO) &lt; 0)
-			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-		else
-			btusb_submit_isoc_urb(hdev, GFP_NOIO);
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev, GFP_NOIO);
+		}
 	}
 
+	schedule_work(&amp;data-&gt;work);
 	return 0;
 }
 
@@ -1015,6 +1105,7 @@ static struct usb_driver btusb_driver = {
 	.suspend	= btusb_suspend,
 	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013163202</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-13 16:32:02-0400</timestampReceived><subject>Re: Storing HID req record</subject><body>

On Mon, 2008-10-13 at 17:53 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; I'm looking for a way for a utility to write the HID req, ie. a way to
&gt; &gt; replace the internal store_device_info() from BlueZ 3.x.
&gt; 
&gt; what do you wanna achieve? Is this for the PS3 cable authentication?

Yes it is.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081013211922</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-13 21:19:22-0400</timestampReceived><subject>Re: [PATCH 05/49] pcmcia: use pcmcia_loop_config in bluetooth</subject><body>

Hi Dominik,

&gt; Use the config loop helper in bluetooth pcmcia drivers.
&gt; 
&gt; CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; CC: linux-bluetooth@vger.kernel.org
&gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Feel free to sent it to Linus directly via your tree.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014100958</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-14 10:09:58-0400</timestampReceived><subject>Re: [PATCH] Fix PS3 BD remote input event generation</subject><body>

Hi Johan,

&gt; &gt; - Fix byte-reading in the decode function by using a guint8, instead
&gt; &gt; of an int, we were overreading and were getting keycodes of
&gt; &gt; 0xffffff44 when we wanted a single byte of 0x44.
&gt; &gt; - Remove use of KEY_REMOTE_X, those keys never got upstream, and the
&gt; &gt; values they were defined at are now used for completely different
&gt; &gt; keys
&gt; &gt; - Update uinput.h with the latest keycodes from 2.6.27
&gt; 
&gt; The patch has been pushed upstream. Thanks!

this patch should have been split at least into 2 pieces (maybe 3). The
uinput update at least should have been separate. We are using GIT and
there is no reason to push combined patches ever. I do _NOT_ wanna have
big patches that fix multiple things. Break them down.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014212357</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-10-14 21:23:57-0400</timestampReceived><subject>Re: [PATCH] Better debug when failing to probe a device</subject><body>

Hi Bastien,

On Oct 15, 2008, at 0:01, Bastien Nocera wrote:
&gt; The previous error message was a bit terse.
&gt; &lt;0002-Better-debug-when-failing-to-probe-a-device.patch&gt;

This one is now pushed. I'll leave the other one for Marcel since I'm  
not so familiar with udev stuff.

Johan

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014225158</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-14 22:51:58-0400</timestampReceived><subject>Re: [PATCH] Fix possible crash on startup</subject><body>

On Tue, 2008-10-14 at 18:44 -0300, Claudio Takahasi wrote:
&lt;snip&gt;
&gt; Hi Bastien,
&gt; 
&gt; The patch that you sent is enough to fix this problem. There isn't
&gt; error when parsing the service record, the illegal multibyte sequence
&gt; error that I saw when debugging is a normal error when parsing
&gt; "storage" files, it is exit condition.
&gt; 
&gt; I am just wondering how you created the sdp file that you sent me, did
&gt; you remove some entries? My sdp file contains 18 entries, all of them
&gt; are related to the Sony Ericsson K850.

None of those entries were created by hand. I believe this entry was
probably created with bluez 3.x, I only upgraded to bluez 4.x on my main
machine in the past week or so.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019200612</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-10-19 20:06:12-0400</timestampReceived><subject>Re: several messages</subject><body>

On Sun, Oct 19, 2008 at 12:40 PM, Jiri Kosina &lt;jkosina@suse.cz&gt; wrote:
&gt; On Sun, 19 Oct 2008, Jiri Slaby wrote:
&gt;
&gt;&gt; +enum hid_type {
&gt;&gt; +     HID_TYPE_UNKNOWN = 0,
&gt;&gt; +     HID_TYPE_MOUSE,
&gt;&gt; +     HID_TYPE_KEYBOARD
&gt;&gt; +};
&gt;&gt; +
&gt;
&gt; Do we really need the HID_TYPE_KEYBOARD at all? It's not used anywhere in
&gt; the code. I'd propose to add it when it is actually needed. I.e. have the
&gt; enum contain something like HID_TYPE_MOUSE HID_TYPE_OTHER for now, and add
&gt; whatever will become necessary in the future, what do you think?
&gt;
&gt;
&gt; On Sun, 19 Oct 2008, Jiri Slaby wrote:
&gt;
&gt;&gt; +/**
&gt;&gt; + * hid_mouse_ignore_list - mouse devices which must not be held by the hid layer
&gt;&gt; + */
&gt;
&gt; I think a more descriptive comment would be appropriate here. It might not
&gt; be obvious on the first sight why this needs to be done separately from
&gt; the generic hid_blacklist. I.e. something like
&gt;
&gt; /**
&gt;  * There are composite devices for which we want to ignore only a certain
&gt;  * interface. This is a list of devices for which only the mouse interface
&gt;  * will be ignored.
&gt;  */
&gt;
&gt; maybe?
&gt;
&gt; Thanks,
&gt;
&gt; --
&gt; Jiri Kosina
&gt; SUSE Labs
&gt;

I can agree with that, whats the point having something
there if it not being used,(just eating up precious space);

-- 
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015093940</emailId><senderName>Brian Rogers</senderName><senderEmail>brian_rogers@comcast.net</senderEmail><timestampReceived>2008-10-15 09:39:40-0400</timestampReceived><subject>Re: SCO headset not working with 4.12</subject><body>

Mario Limonciello wrote:
&gt; Hi:
&gt;
&gt; I recently upgraded to bluez-4.12 and added in the SCO patch that came
&gt; shortly after the 4.12 release.  It seems that my SCO headset is
&gt; connecting, and receiving commands for volume levels, etc, but doesn't
&gt; actually play back any audio.  I was trying to use the test/hstest app
&gt; to verify like this:
&gt;
&gt;     ./hstest play /usr/share/sounds/alsa/Front_Center.wav
&gt;     00:19:7F:30:47:AB 1
&gt;     Voice setting: 0x0060
&gt;     RFCOMM channel connected
&gt;     SCO audio channel connected (handle 1, mtu 64)
&gt;
&gt; It just idles there sitting at that until I hit ctrl-c.  I've attached
&gt; bluetoothd -nd output as well.
&gt;   
I've noticed this as well with the bluez 4.12 build that's currently 
included in Intrepid. My test is to output to the headset using mplayer 
and the alsa plugin. It doesn't always fail to start playing, but when 
it does fail I get the same endless delay. But with a few tries, 
sometimes requiring a restart of headsetd, it will eventually start 
working, and it usually continues to work.

My Bluetooth device is this:
Bus 003 Device 004: ID 0a5c:2101 Broadcom Corp. A-Link BlueUsbA2 Bluetooth

And my headset is the Jabra BT350.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015133221</emailId><senderName>mcINEK</senderName><senderEmail>mcinek@gmail.com</senderEmail><timestampReceived>2008-10-15 13:32:21-0400</timestampReceived><subject>Re: [ BUG ] acl sysfs entry remains after connection error</subject><body>

2008/10/8 Marcel Holtmann &lt;marcel@holtmann.org&gt;:
&gt; Hi,
&gt;
&gt;&gt; I've found a bug in bluetooth stack.
&gt;&gt;
&gt;&gt; I use bluetooth on ARM Linux machine to simultaneously send pictures
&gt;&gt; to 2 or 3 devices.
&gt;&gt; In a L2CAP connection stage (socket L2CAP 'connect') sometimes I get a
&gt;&gt; 'Connection timeout error',
&gt;&gt; which is not a disaster because I can try to connect again. However
&gt;&gt; very often I get a kernel error,
&gt;&gt; which tells me that there is a duplicate entry in sysfs (acl...).
&gt;&gt;
&gt;&gt; I've checked, and indeed acl connection entries are not removed from
&gt;&gt; sysfs after a connection fail.
&gt;&gt;
&gt;&gt; How can I fix this?
&gt;&gt;
&gt;&gt; PS. I've got latest 2.6.26 kernel.
&gt;
&gt; the latest kernel is 2.6.27-rc9. Please confirm that this problem still
&gt; exists.

I've updated and after some tests problem seems to be fixed!

Thanks.

Marcin
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015233910</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-15 23:39:10-0400</timestampReceived><subject>Re: [PATCH] Update udev rules for udev 098 and newer</subject><body>

Hi Bastien,

&gt; As per https://bugzilla.redhat.com/show_bug.cgi?id=246840
&gt; and the udev release notes, update the udev rules for newer
&gt; versions of udev (&gt;= 098).

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081016075554</emailId><senderName>Ralph Gillen</senderName><senderEmail>ralph.gillen@web.de</senderEmail><timestampReceived>2008-10-16 07:55:54-0400</timestampReceived><subject>Pairing and HCI filters</subject><body>

Hi all,

I'm running a 2.6.18 kernel on Scientific Linux 5.2 with bluez 3.7 installed, 
and I'm trying to build a software for a experimental setup in which several 
bluetooth devices are involved. I just need a RFCOMM connection to each of 
these devices, and as long as I don't need pairing everything works fine. I 
read many lines of code to understand how the pairing process works (the same 
way I learned how to communicate with my devices at all), an here ist what I 
figured out until now: after a connection request, my device asks for the 
PIN; this ist noticed by bluez, and via this d-bus interface an agent is 
called to anser the request (is this - roughly- correct?). After installing 
kdebluetooth-1.0_beta8, the pairing process works for me if I enter a fixed 
PIN in the setup file.

But what I need is to answer the pairing request directly from my program 
(because there are many different devices and PINs and it should work without 
user interaction). It seems to me that I have to set a filter on the HCI (but 
how exactly?) and wait for the incoming request (again: how?) and finally 
answer it, i.e. I want to catch the request before the whole d-bus/agent 
stuff becomes involved.

So I'd like to ask the following questions:

- is this the right mailing list? ;) (I found no other)

- is there any documentation on HCI programming including event filtering I've 
not found yet?

- is my understanding of the process correct?

- can anyone point me out a program that does what I need, so that I could 
learn from the source code?

- does anybody have pieces of code answering a pairing request on HCI level 
(so, not agents!)?

- or any other hints?

This is a research project, and I'm not at all familiar with bluetooth (which 
should count for not more than 1% of the project), so please excuse if my 
questions are not very exact. Any help is appreciated, thank you very much!

Best regards,

Ralph

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081016232422</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-16 23:24:22-0400</timestampReceived><subject>one More PAIRING Issue.</subject><body>

Hi,

I have a ubuntu desktop having BlueZ 3.26, When I connect and want to pair with the \
Desktop from a Remote device [say a phone], the Desktop pops up a message telling me, \
that A device is trying to connect.

But when I try to do that same from another Linux machine, from the command line with \
no I/O support to enter in the passkey, then it doesn't pop up the message.


Link Mode on Ubuntu when trying from Phone is accept.

Link Mode on Ubuntu when trying from the other lInux machine with no UI, has to be \
MASTER, If I try to connect as hcitool cc --role=m &lt;..BD_ADDR...&gt;

If the LINK mode is either "none" or "accept", then the hcitool cc --role=s , should \
always be slave.

Can someone explain this ?


--
Hyundai to launch the i20 in India. Catch the exclusive preview on ZigWheels.com
http://www.zigwheels.com/b2cam/newsDetails.action?name=Emb11_20080731&amp;path=/INDT/News/ \
Emb11_20080731&amp;page=1&amp;pagecount=2&amp;utm_source=indmail&amp;utm_medium=footer&amp;utm_content=tracking&amp;utm_campaign=Nletter_07oct2008_ZW
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081017055636</emailId><senderName>"Joey Krane"</senderName><senderEmail>linuxbsd2004@gmail.com</senderEmail><timestampReceived>2008-10-17 05:56:36-0400</timestampReceived><subject>Bluetooth headset pairing with F10 beta</subject><body>

Hello,

I inserted my Belkin USB bluetooth adapter (F8T001 Ver. 2) to Fedora
10 beta (with all updates as of 10 Oct)

&lt;snip&gt;
Oct 16 12:24:00 localhost kernel: usb 3-1: new full speed USB device
using ohci_hcd and address 3
Oct 16 12:24:00 localhost kernel: usb 3-1: configuration #1 chosen from 1 choice
Oct 16 12:24:00 localhost kernel: usb 3-1: New USB device found,
idVendor=050d, idProduct=0081
Oct 16 12:24:00 localhost kernel: usb 3-1: New USB device strings:
Mfr=0, Product=0, SerialNumber=0
Oct 16 12:24:01 localhost kernel: Bluetooth: Core ver 2.13
Oct 16 12:24:01 localhost kernel: NET: Registered protocol family 31
Oct 16 12:24:01 localhost kernel: Bluetooth: HCI device and connection
manager initialized
Oct 16 12:24:01 localhost kernel: Bluetooth: HCI socket layer initialized
Oct 16 12:24:01 localhost kernel: Bluetooth: Generic Bluetooth USB
driver ver 0.3
Oct 16 12:24:01 localhost kernel: usbcore: registered new interface driver btusb
Oct 16 12:27:48 localhost bluetoothd[2692]: Bluetooth daemon
Oct 16 12:27:48 localhost bluetoothd[2692]: Starting SDP server
Oct 16 12:27:48 localhost kernel: Bluetooth: L2CAP ver 2.11
Oct 16 12:27:48 localhost kernel: Bluetooth: L2CAP socket layer initialized
Oct 16 12:27:48 localhost bluetoothd[2692]: Parsing
/etc/bluetooth/input.conf failed: No such file or directory
Oct 16 12:27:48 localhost bluetoothd[2692]: Parsing
/etc/bluetooth/audio.conf failed: No such file or directory
Oct 16 12:27:48 localhost kernel: Bluetooth: SCO (Voice Link) ver 0.6
Oct 16 12:27:48 localhost kernel: Bluetooth: SCO socket layer initialized
Oct 16 12:27:48 localhost bluetoothd[2692]: Parsing
/etc/bluetooth/network.conf failed: No such file or directory
Oct 16 12:27:49 localhost kernel: Bluetooth: BNEP (Ethernet Emulation) ver 1.3
Oct 16 12:27:49 localhost kernel: Bluetooth: BNEP filters: protocol multicast
Oct 16 12:27:49 localhost kernel: Bridge firewalling registered
Oct 16 12:27:49 localhost bluetoothd[2692]: bridge pan0 created
Oct 16 12:27:49 localhost bluetoothd[2692]: HCI dev 0 registered
Oct 16 12:27:49 localhost kernel: pan0: Dropping NETIF_F_UFO since no
NETIF_F_HW_CSUM feature.
Oct 16 12:27:49 localhost bluetoothd[2692]: HCI dev 0 up
Oct 16 12:27:49 localhost bluetoothd[2692]: Registered interface
org.bluez.Service on path /org/bluez/hci0
Oct 16 12:27:49 localhost kernel: Bluetooth: RFCOMM socket layer initialized
Oct 16 12:27:49 localhost kernel: Bluetooth: RFCOMM TTY layer initialized
Oct 16 12:27:49 localhost kernel: Bluetooth: RFCOMM ver 1.10
Oct 16 12:27:49 localhost bluetoothd[2692]: Registered interface
org.bluez.SerialProxyManager on path /org/bluez/hci0
Oct 16 12:27:49 localhost bluetoothd[2692]: Registered interface
org.bluez.NetworkPeer on path /org/bluez/hci0
Oct 16 12:27:49 localhost bluetoothd[2692]: Registered interface
org.bluez.NetworkHub on path /org/bluez/hci0
Oct 16 12:27:49 localhost bluetoothd[2692]: Registered interface
org.bluez.NetworkRouter on path /org/bluez/hci0
Oct 16 12:27:49 localhost bluetoothd[2692]: Adapter /org/bluez/hci0
has been enabled
&lt;/snip&gt;

Then the bluetooth icon appeared on the GNOME task bar. I clicked
"Setup new device" and it showed me only the mac id of the device
(Jabra BT125 headset). On selecting it and clicking Forward,  the
window closed and nothing happened (I tried this about 3 times).  Here
are the logs,

&lt;snip&gt;
Oct 16 12:27:49 localhost bluetoothd[2692]: Starting security manager 0
Oct 16 12:27:58 localhost bluetoothd[2692]: Discovery session
0x7f5c0ea096f0 with :1.49 activated
Oct 16 12:28:07 localhost bluetoothd[2692]: Discovery session
0x7f5c0ea096f0 with :1.49 deactivated
Oct 16 12:28:32 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.50 activated
Oct 16 12:28:41 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.50 deactivated
Oct 16 12:28:53 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.51 activated
Oct 16 12:29:00 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.51 deactivated
Oct 16 12:31:14 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.52 activated
Oct 16 12:31:20 localhost bluetoothd[2692]: Discovery session
0x7f5c0e9fadd0 with :1.52 deactivated
Oct 16 12:33:07 localhost bluetoothd[2692]: Discovery session
0x7f5c0ea06ba0 with :1.53 activated
Oct 16 12:33:14 localhost bluetoothd[2692]: Discovery session
0x7f5c0ea06ba0 with :1.53 deactivated
&lt;/snip&gt;

Then, I opened a terminal and ran these,

&lt;snip&gt;
[root@localhost jk]# hcitool scan
Scanning ...
    00:1D:82:3C:62:E2    Jabra BT125
[root@localhost jk]# hcitool cc 00:1D:82:3C:62:E2
[root@localhost jk]#
&lt;/snip&gt;

Then, I ran "Setup new device" again and this time, it showed me the
name "Jabra BT125" instead of the mac id. On selecting the device and
clicking "Forward", I get a next screen that says "Please enter PIN
0000". After wating a few seconds it said something about "connected"
I dont remember the exact message.

&lt;snip&gt;
Oct 16 12:33:15 localhost bluetoothd[2692]: link_key_request
(sba=00:0A:3A:50:1F:2D, dba=00:1D:82:3C:62:E2)
Oct 16 12:33:15 localhost bluetoothd[2692]: pin_code_request
(sba=00:0A:3A:50:1F:2D, dba=00:1D:82:3C:62:E2)
Oct 16 12:33:15 localhost bluetoothd[2692]: link_key_notify
(sba=00:0A:3A:50:1F:2D, dba=00:1D:82:3C:62:E2)
Oct 16 12:33:19 localhost bluetoothd[2692]: Registered interface
org.bluez.Input on path /org/bluez/hci0/dev_00_1D_82_3C_62_E2
Oct 16 12:33:19 localhost bluetoothd[2692]: Registered interface
org.bluez.Headset on path /org/bluez/hci0/dev_00_1D_82_3C_62_E2
&lt;/snip&gt;

Here's additional info

&lt;snip&gt;
[root@localhost jk]# rpm -q kernel
kernel-2.6.27-0.352.rc7.git1.fc10.x86_64
kernel-2.6.27-3.fc10.x86_64
[root@localhost jk]# rpm -q bluez
bluez-4.13-2.fc10.x86_64
[root@localhost jk]#
&lt;/snip&gt;

I haven't really figured out how to use this device yet. But i'm so
thrilled that I got this far which I couldn't with Fedora 9!

I would like to use this device in Skype and Ekiga. Any hints?

Thanks!
Steve
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081018114950</emailId><senderName>Tadas Dailyda</senderName><senderEmail>tadas@dailyda.com</senderEmail><timestampReceived>2008-10-18 11:49:50-0400</timestampReceived><subject>Re: Sending files via bluez-gnome</subject><body>

Hi everyone,

As of newest bluez-gnome git, bluetooth-sendto is still not updated to 
obex-data-server 0.4 API (patch was already sent to this list in mail 
called "Make bluetooth-sendto functional with ODS SVN head"). I also 
wrote a wiki page to make migration easier: 
http://wiki.muiline.com/obex-data-server/migrating_to_0.4
I installed newest bluez-gnome just recently and I was pretty much blown 
away :) Why is OBEX server stuff disabled? The old code will work with 
Bluez 4.x and requires no changes.
And good luck with obexd, BTW :) If you are going for a full blown 
client API, you are up for a good waste of time.

Cheers,
Tadas

David Sainty wrote:
&gt; Hi people,
&gt;
&gt; I notice that the "Send files to device" menu item off 
&gt; bluetooth-applet is only available if "obex-data-server" is in the 
&gt; $PATH.  But I get the impression that "obexd" is trying to provide the 
&gt; DBus service that the applet is actually after (point being that 
&gt; searching the $PATH for "obex-data-server" isn't a very good test for 
&gt; "obexd" presence :)
&gt;
&gt; Sadly, either way (running either server) I can't seem to transfer 
&gt; files to my Blackberry.  But that could be a Blackberry problem, its 
&gt; Bluetooth support is pretty dismal...
&gt;
&gt; Cheers,
&gt;
&gt; Dave
&gt; -- 
&gt; To unsubscribe from this list: send the line "unsubscribe 
&gt; linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019165958</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-19 16:59:58-0400</timestampReceived><subject>Re: Add application header support to gwobex</subject><body>

Hi Johan,

&gt; &gt; for the PBAP support, we need to handle the application header and for
&gt; &gt; our client/test applications, I extended gwobex to allow us to specify
&gt; &gt; this header. What do you think?
&gt; 
&gt; Looks good to me, though the parameter lists to the _get and_put  
&gt; functions are starting to grow pretty long. In general it'd be nice to  
&gt; get the same functionality into libopenobex-glib soonish since I'm not  
&gt; particularly enjoying looking at this ancient code and coding style  
&gt; that should just die away ;)

I agree on that one, but currently it is more important to get this
functionality working and then later we can do the cleanups. Main
problem with libopenobex-glib at the moment is that I based it around
GObject which does make sense for GTK+ programs, but will not make sense
for obex-client. So parts of gwobex might be still living a long life.

After actually working with the PBAP details, I realized that besides
giving the application parameters in the command, so we do have another
pair of buf+size for the response.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021002426</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-10-21 00:24:26-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11779] New: No way to disable bluetooth</subject><body>


(switched to email.  Please respond via emailed reply-to-all, not via the
bugzilla web interface).

(tap, tap - is this thing turned on?)

On Sat, 18 Oct 2008 02:55:03 -0700 (PDT)
bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11779
&gt; 
&gt;            Summary: No way to disable bluetooth
&gt;            Product: Drivers
&gt;            Version: 2.5
&gt;      KernelVersion: 2.6.27
&gt;           Platform: All
&gt;         OS/Version: Linux
&gt;               Tree: Mainline
&gt;             Status: NEW
&gt;           Severity: normal
&gt;           Priority: P1
&gt;          Component: Bluetooth
&gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;         ReportedBy: rbrito@ime.usp.br
&gt; 
&gt; 
&gt; Distribution: Ubuntu intrepid
&gt; Hardware Environment: Notebook Itautec N8320
&gt; Software Environment: Ubuntu userland
&gt; Problem Description:
&gt; 
&gt; (This mail was sent to the linux-bluetooth@vger.kernel.org on the 8th of
&gt; October no answer was received).
&gt; 
&gt; Dear developers,
&gt; 
&gt; I got this past july a notebook that has what seems to be a strange way
&gt; of dealing with wireless devices: there is a button (which I suspect is
&gt; called rfkill) that, when pressed, enables *both* bluetooth and wifi,
&gt; with the respective leds being lit.
&gt; 
&gt; I don't have any bluetooth device. Saving energy here is paramount as
&gt; the battery life is quite short.
&gt; 
&gt; According to the manual, under Windows Vista (which is what came with
&gt; the box, but which I never used), this button is supposed to cycle
&gt; between 4 states:
&gt; 
&gt; * both disabled;
&gt; * bluetooth enabled &amp; wifi enabled;
&gt; * bluetooth disabled &amp; wifi enabled;
&gt; * bluetooth enabled &amp; wifi disabled.
&gt; 
&gt; Unfortunately, under Linux (tested with Ubuntu's 8.10 pre-releases,
&gt; which includes a kernel based on 2.6.27-rc*, if I understand it
&gt; correctly), it is all or nothing: both disabled or both enabled.
&gt; 
&gt; If I launch powertop, it recommends to disable bluetooth with
&gt; "hciconfig hci down; rmmod hci_usb", but the led of bluetooth is still
&gt; lit and I fear that the device is still drawing power from the battery.
&gt; (Actually, it seems that the modules for bluetooth go renamed also).
&gt; 
&gt; Is there any way to get it to disable completely the device?
&gt; 
&gt; Just as extra information, this is an Itautec Note N8320 notebook, with
&gt; a Core 2 Duo T7250 CPU, ICH8 chipset and Intel's 3945abg wifi and a
&gt; Realtek GigE driven by r8169 module (which I still have not had the
&gt; opportunity to use).
&gt; 
&gt; If any further information is desired, please let me know. I can post
&gt; the dmesg logs, lspci output, lsusb, as I am really willing to get this
&gt; situation settled (and possibly working as on Windows as it was reported
&gt; by the support people from the manufacturer).
&gt; 
&gt; Again, if any further information is needed, please let me know. I can
&gt; recompile the kernel to use a vanilla kernel, if needed.
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021004948</emailId><senderName>Richi Plana</senderName><senderEmail>richip@richip.dhs.org</senderEmail><timestampReceived>2008-10-21 00:49:48-0400</timestampReceived><subject>Bluez / Bluetooth Docs</subject><body>

Hi,

My apologies in advance for the slightly off-topic post.

Working under the assumption that one can't bind two BT headsets to one
BT adapter (device or whatever the correct term is), I've made available
two BT adapters on my notebook (one USB dongle) and am now trying to
pair one headset with one device. The problem is I've no idea how this
works outside of the automagic that Fedora does (using hcid).

My question is where can I find documentation that covers the concepts
behind bluetooth on linux, specifically the bluez implementation. I've
checked out www.bluez.org and downloaded the latest packages, but they
don't contain documentation on how things are supposed to work (which
daemons or utils do what).

Are there official docs available that explains the infrastructure and
tools to a newbie? If not official, could someone point me out to a good
set of docs that might get me on my way?

Thanks.
--

Richi

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021212602</emailId><senderName>Jiri Slaby</senderName><senderEmail>jirislaby@gmail.com</senderEmail><timestampReceived>2008-10-21 21:26:02-0400</timestampReceived><subject>[PATCH 1/4] HID: add hid_type</subject><body>

Add type to the hid structure to distinguish to which device type
(now only mouse) we are talking to. Needed for per device type ignore
list support.

Note: this patch leaves the type as unknown for bluetooth devices,
there is not support for this in the hidp code.

Signed-off-by: Jiri Slaby &lt;jirislaby@gmail.com&gt;
---
 drivers/hid/usbhid/hid-core.c |    3 +++
 include/linux/hid.h           |    6 ++++++
 2 files changed, 9 insertions(+), 0 deletions(-)

diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
index 1d3b8a3..1dc341a 100644
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@ -972,6 +972,9 @@ static int hid_probe(struct usb_interface *intf, const struct usb_device_id *id)
 	hid-&gt;vendor = le16_to_cpu(dev-&gt;descriptor.idVendor);
 	hid-&gt;product = le16_to_cpu(dev-&gt;descriptor.idProduct);
 	hid-&gt;name[0] = 0;
+	if (intf-&gt;cur_altsetting-&gt;desc.bInterfaceProtocol ==
+			USB_INTERFACE_PROTOCOL_MOUSE)
+		hid-&gt;type = HID_TYPE_USBMOUSE;
 
 	if (dev-&gt;manufacturer)
 		strlcpy(hid-&gt;name, dev-&gt;manufacturer, sizeof(hid-&gt;name));
diff --git a/include/linux/hid.h b/include/linux/hid.h
index f13bca2..5355ca4 100644
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -417,6 +417,11 @@ struct hid_input {
 	struct input_dev *input;
 };
 
+enum hid_type {
+	HID_TYPE_OTHER = 0,
+	HID_TYPE_USBMOUSE
+};
+
 struct hid_driver;
 struct hid_ll_driver;
 
@@ -431,6 +436,7 @@ struct hid_device {							/* device report descriptor */
 	__u32 vendor;							/* Vendor ID */
 	__u32 product;							/* Product ID */
 	__u32 version;							/* HID version */
+	enum hid_type type;						/* device type (mouse, kbd, ...) */
 	unsigned country;						/* HID country */
 	struct hid_report_enum report_enum[HID_REPORT_TYPES];
 
-- 
1.6.0.2

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021212603</emailId><senderName>Jiri Slaby</senderName><senderEmail>jirislaby@gmail.com</senderEmail><timestampReceived>2008-10-21 21:26:03-0400</timestampReceived><subject>[PATCH 2/4] HID: fix appletouch regression</subject><body>

The appletouch mouse devices are grabbed by the hid bus and not
released even if apple driver says ENODEV (as expected).

Move the ignoration one level upper to deny the hid layer to grab
the device and return error to the usb hid which, as a result,
releases the device.

Otherwise input/mouse/appletouch and others needn't be attached.

Reported-by: Justin Mattock &lt;justinmattock@gmail.com&gt;
Reported-by: Steven Noonan &lt;steven@uplinklabs.net&gt;
Signed-off-by: Jiri Slaby &lt;jirislaby@gmail.com&gt;
---
 drivers/hid/hid-apple.c |   63 ++++++++++++++++------------------------------
 drivers/hid/hid-core.c  |   38 ++++++++++++++++++++++++++++
 2 files changed, 60 insertions(+), 41 deletions(-)

diff --git a/drivers/hid/hid-apple.c b/drivers/hid/hid-apple.c
index fd7f896..c6ab4ba 100644
--- a/drivers/hid/hid-apple.c
+++ b/drivers/hid/hid-apple.c
@@ -312,13 +312,6 @@ static int apple_probe(struct hid_device *hdev,
 	unsigned int connect_mask = HID_CONNECT_DEFAULT;
 	int ret;
 
-	/* return something else or move to hid layer? device will reside
-	   allocated */
-	if (id-&gt;bus == BUS_USB &amp;&amp; (quirks &amp; APPLE_IGNORE_MOUSE) &amp;&amp;
-			to_usb_interface(hdev-&gt;dev.parent)-&gt;cur_altsetting-&gt;
-			desc.bInterfaceProtocol == USB_INTERFACE_PROTOCOL_MOUSE)
-		return -ENODEV;
-
 	asc = kzalloc(sizeof(*asc), GFP_KERNEL);
 	if (asc == NULL) {
 		dev_err(&amp;hdev-&gt;dev, "can't alloc apple descriptor\n");
@@ -367,38 +360,32 @@ static const struct hid_device_id apple_devices[] = {
 		.driver_data = APPLE_MIGHTYMOUSE | APPLE_INVERT_HWHEEL },
 
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ISO),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_JIS),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ISO),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_ISO_KEYBOARD },
+			APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS},
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_ANSI),
 		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_ISO),
@@ -406,14 +393,12 @@ static const struct hid_device_id apple_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_JIS),
 		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ANSI),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ISO),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+			APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_ANSI),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_ISO),
@@ -422,25 +407,21 @@ static const struct hid_device_id apple_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_ALU_WIRELESS_JIS),
 		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ANSI),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ISO),
-		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_JIS),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+		.driver_data = APPLE_HAS_FN | APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ANSI),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ISO),
-		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_HAS_FN | APPLE_ISO_KEYBOARD },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_JIS),
-		.driver_data = APPLE_HAS_FN | APPLE_IGNORE_MOUSE | APPLE_RDESC_JIS },
+		.driver_data = APPLE_HAS_FN | APPLE_RDESC_JIS },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_TP_ONLY),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY),
-		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN |
-			APPLE_IGNORE_MOUSE },
+		.driver_data = APPLE_NUMLOCK_EMULATION | APPLE_HAS_FN },
 
 	/* Apple wireless Mighty Mouse */
 	{ HID_BLUETOOTH_DEVICE(USB_VENDOR_ID_APPLE, 0x030c),
diff --git a/drivers/hid/hid-core.c b/drivers/hid/hid-core.c
index 8a7d9db..e5f8427 100644
--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1539,6 +1539,40 @@ static const struct hid_device_id hid_ignore_list[] = {
 	{ }
 };
 
+/**
+ * hid_mouse_ignore_list - mouse devices which must not be held by the hid layer
+ *
+ * There are composite devices for which we want to ignore only a certain
+ * interface. This is a list of devices for which only the mouse interface will
+ * be ignored. There is likely an input driver for it, so we must refuse
+ * mastering.
+ */
+static const struct hid_device_id hid_mouse_ignore_list[] = {
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER3_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER4_HF_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ANSI) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_ISO) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_WELLSPRING2_JIS) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_FOUNTAIN_TP_ONLY) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_APPLE, USB_DEVICE_ID_APPLE_GEYSER1_TP_ONLY) },
+	{ }
+};
+
 static bool hid_ignore(struct hid_device *hdev)
 {
 	switch (hdev-&gt;vendor) {
@@ -1555,6 +1589,10 @@ static bool hid_ignore(struct hid_device *hdev)
 		break;
 	}
 
+	if (hdev-&gt;type == HID_TYPE_USBMOUSE &amp;&amp;
+			hid_match_id(hdev, hid_mouse_ignore_list))
+		return true;
+
 	return !!hid_match_id(hdev, hid_ignore_list);
 }
 
-- 
1.6.0.2

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081022205558</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-22 20:55:58-0400</timestampReceived><subject>[PATCH] Add missing IDs for Logitech MX5500</subject><body>

[Attachment #2 (multipart/mixed)]


Hello,

It was reported that the Logitech MX5500 has more IDs than were
previously listed in hid2hci's source.  This patch adds more of those IDs.

Thanks,
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["logitech_5500_ids.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-4.12/tools/hid2hci.c bluez-4.12.new/t=
ools/hid2hci.c
--- bluez-4.12/tools/hid2hci.c	2008-10-22 15:54:19.000000000 -0500
+++ bluez-4.12.new/tools/hid2hci.c	2008-10-22 15:55:05.000000000 -0500
@@ -260,6 +260,8 @@
 	{ HCI, 0x046d, 0xc70e, switch_logitech },	/* Logitech diNovo keyboard *=
/
 	{ HCI, 0x046d, 0xc713, switch_logitech },	/* Logitech diNovo Edge */
 	{ HCI, 0x046d, 0xc714, switch_logitech },	/* Logitech diNovo Edge */
+	{ HCI, 0x046d, 0xc71c, switch_logitech },	/* Logitech diNovo Edge */
+	{ HCI, 0x046d, 0xc71b, switch_logitech },	/* Logitech diNovo Edge */
 	{ HCI, 0x413c, 0x8162, switch_dell     },	/* Dell Wireless 365 */
 	{ HCI, 0x413c, 0x8158, switch_dell     },	/* Dell Wireless 370 */
 	{ HCI, 0x413c, 0x8154, switch_dell     },	/* Dell Wireless 410 */

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081022030548</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-10-22 03:05:48-0400</timestampReceived><subject>how to set passkey in bluez4.X</subject><body>

Hi all,
Could somebody know how to set passkey in bluez4.X?

In Bluez3.X we can set it in hcid.conf and I tried set passkey in main.conf

I added the passkey at the end of this file. Passkey = "1234"

But it doesn't work.

Any idea!

Thanks

B,R

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021220311</emailId><senderName>Richi Plana</senderName><senderEmail>richip@richip.dhs.org</senderEmail><timestampReceived>2008-10-21 22:03:11-0400</timestampReceived><subject>Re: Bluez / Bluetooth Docs</subject><body>

Any pointers? Other mailing lists? IRC channels? There's nothing on the 
bluez website.

Richi Plana wrote:
&gt; Hi,
&gt;
&gt; My apologies in advance for the slightly off-topic post.
&gt;
&gt; Working under the assumption that one can't bind two BT headsets to one
&gt; BT adapter (device or whatever the correct term is), I've made available
&gt; two BT adapters on my notebook (one USB dongle) and am now trying to
&gt; pair one headset with one device. The problem is I've no idea how this
&gt; works outside of the automagic that Fedora does (using hcid).
&gt;
&gt; My question is where can I find documentation that covers the concepts
&gt; behind bluetooth on linux, specifically the bluez implementation. I've
&gt; checked out www.bluez.org and downloaded the latest packages, but they
&gt; don't contain documentation on how things are supposed to work (which
&gt; daemons or utils do what).
&gt;
&gt; Are there official docs available that explains the infrastructure and
&gt; tools to a newbie? If not official, could someone point me out to a good
&gt; set of docs that might get me on my way?
&gt;
&gt; Thanks.
&gt; --
&gt;
&gt; Richi
&gt;
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
&gt;   

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021020759</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-21 02:07:59-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11779] New: No way to disable bluetooth</subject><body>

Andrew Morton wrote:
&gt;&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11779
&gt;&gt;
&gt;&gt; According to the manual, under Windows Vista (which is what came with
&gt;&gt; the box, but which I never used), this button is supposed to cycle
&gt;&gt; between 4 states:
&gt;&gt;
&gt;&gt; * both disabled;
&gt;&gt; * bluetooth enabled &amp; wifi enabled;
&gt;&gt; * bluetooth disabled &amp; wifi enabled;
&gt;&gt; * bluetooth enabled &amp; wifi disabled.
&gt;&gt;
&gt;&gt; Unfortunately, under Linux (tested with Ubuntu's 8.10 pre-releases,
&gt;&gt; which includes a kernel based on 2.6.27-rc*, if I understand it
&gt;&gt; correctly), it is all or nothing: both disabled or both enabled.
&gt;&gt;
&gt;&gt; If I launch powertop, it recommends to disable bluetooth with
&gt;&gt; "hciconfig hci down; rmmod hci_usb", but the led of bluetooth is still
&gt;&gt; lit and I fear that the device is still drawing power from the battery.
&gt;&gt; (Actually, it seems that the modules for bluetooth go renamed also).
&gt;&gt;
&gt;&gt;     
If the LED is on, it's obviously drawing at least enough power to light 
the LED :)

&gt;&gt; Is there any way to get it to disable completely the device?
&gt;&gt;
&gt;&gt;     

This is a guess, but probably turning it on and off has nothing to do 
with the bluetooth support, it's probably intended to be powered on and 
off through ACPI or something - it's probably very specific to that 
particular laptop.

However, "hciconfig hci down" should at least minimise any drain the 
device is causing.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021070056</emailId><senderName>Rogério Brito</senderName><senderEmail>rbrito@ime.usp.br</senderEmail><timestampReceived>2008-10-21 07:00:56-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11779] New: No way to disable bluetooth</subject><body>

Hi, Andrew, David and others.

On Oct 21 2008, David Sainty wrote:
&gt; Andrew Morton wrote:
&gt; &gt;&gt;http://bugzilla.kernel.org/show_bug.cgi?id=11779
&gt; &gt;&gt;
&gt; &gt;&gt;According to the manual, under Windows Vista (which is what came with
&gt; &gt;&gt;the box, but which I never used), this button is supposed to cycle
&gt; &gt;&gt;between 4 states:
&gt; &gt;&gt;
&gt; &gt;&gt;* both disabled;
&gt; &gt;&gt;* bluetooth enabled &amp; wifi enabled;
&gt; &gt;&gt;* bluetooth disabled &amp; wifi enabled;
&gt; &gt;&gt;* bluetooth enabled &amp; wifi disabled.
&gt; &gt;&gt;
&gt; &gt;&gt;Unfortunately, under Linux (tested with Ubuntu's 8.10 pre-releases,
&gt; &gt;&gt;which includes a kernel based on 2.6.27-rc*, if I understand it
&gt; &gt;&gt;correctly), it is all or nothing: both disabled or both enabled.
&gt; &gt;&gt;
&gt; &gt;&gt;If I launch powertop, it recommends to disable bluetooth with
&gt; &gt;&gt;"hciconfig hci down; rmmod hci_usb", but the led of bluetooth is still
&gt; &gt;&gt;lit and I fear that the device is still drawing power from the battery.
&gt; &gt;&gt;(Actually, it seems that the modules for bluetooth go renamed also).
&gt; &gt;&gt;
&gt; &gt;&gt;    
&gt; If the LED is on, it's obviously drawing at least enough power to light 
&gt; the LED :)

Indeed. :-)

&gt; &gt;&gt;Is there any way to get it to disable completely the device?
&gt;
&gt; This is a guess, but probably turning it on and off has nothing to do 
&gt; with the bluetooth support, it's probably intended to be powered on and 
&gt; off through ACPI or something - it's probably very specific to that 
&gt; particular laptop.

How can we chase this issue? I am willing to cooperate as much as possible,
with as much data that I can to get things straight. It's got an Intel ICH8
chipset here, with a Realtek rt8169-driven wired network. It's battery is
quite short under Linux. :-(

(And it seems that the gnome power indicator is confused when reading data
about the battery, since it sometimes shows the battery as completely
drained when it is actually charged and plugged on the AC outlet).

I really, really don't want to install Windows Vista for use, but I may
install it for debugging/reverse engineering/simulating the behaviour.

&gt; However, "hciconfig hci down" should at least minimise any drain the 
&gt; device is causing.

I may test it latter, but I'm scared. And this is what is preventing me
from using this notebook (as well as bug
http://bugzilla.kernel.org/show_bug.cgi?id=11717).

For this latter one I even provided a *video* of me pressing the power
button and the machine not waking up from suspend. :-( I can't think of
anything else that I can provice, but I'm willing to help here.


Thanks for any help,

-- 
Rogério Brito : rbrito@{mackenzie,ime.usp}.br : GPG key 1024D/7C2CAEB8
http://www.ime.usp.br/~rbrito : http://meusite.mackenzie.com.br/rbrito
Projects: algorithms.berlios.de : lame.sf.net : vrms.alioth.debian.org
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019190801</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-10-19 19:08:01-0400</timestampReceived><subject>Re: [PATCH 1/2] HID: add hid_type</subject><body>

On Sun, Oct 19, 2008 at 7:15 AM, Jiri Slaby &lt;jirislaby@gmail.com&gt; wrote:
&gt; Add type to the hid structure to distinguish to which device type
&gt; (mouse/kbd) we are talking to. Needed for per device type ignore
&gt; list support.
&gt; 
&gt; Note: this patch leaves the type as unknown for bluetooth devices,
&gt; there is not support for this in the hidp code.
&gt; 
&gt; Signed-off-by: Jiri Slaby &lt;jirislaby@gmail.com&gt;
&gt; ---
&gt; drivers/hid/usbhid/hid-core.c |    8 ++++++++
&gt; include/linux/hid.h           |    7 +++++++
&gt; 2 files changed, 15 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
&gt; index 1d3b8a3..20617d8 100644
&gt; --- a/drivers/hid/usbhid/hid-core.c
&gt; +++ b/drivers/hid/usbhid/hid-core.c
&gt; @@ -972,6 +972,14 @@ static int hid_probe(struct usb_interface *intf, const struct \
&gt; usb_device_id *id) hid-&gt;vendor = le16_to_cpu(dev-&gt;descriptor.idVendor);
&gt; hid-&gt;product = le16_to_cpu(dev-&gt;descriptor.idProduct);
&gt; hid-&gt;name[0] = 0;
&gt; +       switch (intf-&gt;cur_altsetting-&gt;desc.bInterfaceProtocol) {
&gt; +       case USB_INTERFACE_PROTOCOL_KEYBOARD:
&gt; +               hid-&gt;type = HID_TYPE_KEYBOARD;
&gt; +               break;
&gt; +       case USB_INTERFACE_PROTOCOL_MOUSE:
&gt; +               hid-&gt;type = HID_TYPE_MOUSE;
&gt; +               break;
&gt; +       }
&gt; 
&gt; if (dev-&gt;manufacturer)
&gt; strlcpy(hid-&gt;name, dev-&gt;manufacturer, sizeof(hid-&gt;name));
&gt; diff --git a/include/linux/hid.h b/include/linux/hid.h
&gt; index f13bca2..36a3953 100644
&gt; --- a/include/linux/hid.h
&gt; +++ b/include/linux/hid.h
&gt; @@ -417,6 +417,12 @@ struct hid_input {
&gt; struct input_dev *input;
&gt; };
&gt; 
&gt; +enum hid_type {
&gt; +       HID_TYPE_UNKNOWN = 0,
&gt; +       HID_TYPE_MOUSE,
&gt; +       HID_TYPE_KEYBOARD
&gt; +};
&gt; +
&gt; struct hid_driver;
&gt; struct hid_ll_driver;
&gt; 
&gt; @@ -431,6 +437,7 @@ struct hid_device {                                             \
&gt; /* device report descriptor */ __u32 vendor;                                        \
&gt; /* Vendor ID */ __u32 product;                                                  /* \
&gt; Product ID */ __u32 version;                                                  /* \
&gt; HID version */ +       enum hid_type type;                                          \
&gt; /* device type (mouse, kbd, ...) */ unsigned country;                               \
&gt; /* HID country */ struct hid_report_enum report_enum[HID_REPORT_TYPES];
&gt; 
&gt; --
&gt; 1.6.0.2
&gt; 
&gt; 

O.k. reverted the old patch and
applied the two new ones.
appletouchpad is working;
I didn't use patch -p1,
just manually applied the two.

-- 
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081019194002</emailId><senderName>Jiri Kosina</senderName><senderEmail>jkosina@suse.cz</senderEmail><timestampReceived>2008-10-19 19:40:02-0400</timestampReceived><subject>Re: several messages</subject><body>

On Sun, 19 Oct 2008, Jiri Slaby wrote:

&gt; +enum hid_type {
&gt; +	HID_TYPE_UNKNOWN = 0,
&gt; +	HID_TYPE_MOUSE,
&gt; +	HID_TYPE_KEYBOARD
&gt; +};
&gt; +

Do we really need the HID_TYPE_KEYBOARD at all? It's not used anywhere in 
the code. I'd propose to add it when it is actually needed. I.e. have the 
enum contain something like HID_TYPE_MOUSE HID_TYPE_OTHER for now, and add 
whatever will become necessary in the future, what do you think?


On Sun, 19 Oct 2008, Jiri Slaby wrote:

&gt; +/**
&gt; + * hid_mouse_ignore_list - mouse devices which must not be held by the hid layer
&gt; + */

I think a more descriptive comment would be appropriate here. It might not 
be obvious on the first sight why this needs to be done separately from 
the generic hid_blacklist. I.e. something like

/** 
 * There are composite devices for which we want to ignore only a certain
 * interface. This is a list of devices for which only the mouse interface 
 * will be ignored.
 */

maybe?

Thanks,

-- 
Jiri Kosina
SUSE Labs
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019220922</emailId><senderName>Jiri Slaby</senderName><senderEmail>jirislaby@gmail.com</senderEmail><timestampReceived>2008-10-19 22:09:22-0400</timestampReceived><subject>Re: several messages</subject><body>

Jiri Kosina napsal(a):
&gt; On Sun, 19 Oct 2008, Jiri Slaby wrote:
&gt; 
&gt;&gt; +enum hid_type {
&gt;&gt; +	HID_TYPE_UNKNOWN = 0,
&gt;&gt; +	HID_TYPE_MOUSE,
&gt;&gt; +	HID_TYPE_KEYBOARD
&gt;&gt; +};
&gt;&gt; +
&gt; 
&gt; Do we really need the HID_TYPE_KEYBOARD at all? It's not used anywhere in 
&gt; the code. I'd propose to add it when it is actually needed. I.e. have the 
&gt; enum contain something like HID_TYPE_MOUSE HID_TYPE_OTHER for now, and add 
&gt; whatever will become necessary in the future, what do you think?

I would use unknown rather than other, since on bluetooth mouse is unknown
not other, if you don't mind?

Or did you mean tristate unknown, mouse and other?

Thanks for review.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081019222326</emailId><senderName>Jiri Kosina</senderName><senderEmail>jkosina@suse.cz</senderEmail><timestampReceived>2008-10-19 22:23:26-0400</timestampReceived><subject>[PATCH 2/2] HID: fix appletouch regression (was Re: several</subject><body>


[ restored previous subject, sorry for the "several messagess" mess, 
alpine didn't handle multi-message reply with different subjects nicely ]

On Mon, 20 Oct 2008, Jiri Slaby wrote:

&gt; &gt;&gt; +enum hid_type {
&gt; &gt;&gt; +	HID_TYPE_UNKNOWN = 0,
&gt; &gt;&gt; +	HID_TYPE_MOUSE,
&gt; &gt;&gt; +	HID_TYPE_KEYBOARD
&gt; &gt; Do we really need the HID_TYPE_KEYBOARD at all? It's not used anywhere 
&gt; &gt; in the code. I'd propose to add it when it is actually needed. I.e. 
&gt; &gt; have the enum contain something like HID_TYPE_MOUSE HID_TYPE_OTHER for 
&gt; &gt; now, and add whatever will become necessary in the future, what do you 
&gt; &gt; think?
&gt; I would use unknown rather than other, since on bluetooth mouse is unknown
&gt; not other, if you don't mind?
&gt; Or did you mean tristate unknown, mouse and other?

Well, basically the points I am trying to make:

1) the code doesn't currently need HID_TYPE_KEYBOARD at all

and

2) by definition, HID are not just mice and keyboards, so adding just 
   these two doesn't look particularly correct, if just one of them is 
   needed

For bluetooth we even don't have the possibility to distinguish these, 
yes. So probably something like HID_TYPE_USBMOUSE/HID_TYPE_OTHER for now, 
and we could extend the enum whenever the need to recognize a different 
type comes up?

Thanks,

-- 
Jiri Kosina
SUSE Labs
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081020161239</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-20 16:12:39-0400</timestampReceived><subject>Re: PBAP storage plugin API proposal</subject><body>

Hi Forrest,

&gt; &gt;&gt; Yes. My proposed PBAP storage API follows this rule, but lacks the
&gt; &gt;&gt; method to unregister the operations. Will add it later.
&gt; &gt;
&gt; &gt; I put some prototype declarations into the obexd repository. The
&gt; &gt; important part is that we have to do this in an async way. We can't
&gt; &gt; block while retrieving the phonebook information.
&gt; &gt;
&gt; 
&gt; I'm implementing PBAP driver framework and a simple(or prototype) PBAP
&gt; driver based on your prototype declarations. Will add some extentions
&gt; to the prototype declarations if necessary.
&gt; To do that in an async way I think the basic idea is:
&gt; 1 when PBAP driver is loaded(or initialized), fork() is invoked to run
&gt; PBAP driver in child process

NO WAY. No fork() and no threads. That is just not needed. You get the
callback and then you just use phonebook_return(). Check the code that
is actually in the repository. It needs a little bit more work to get
the details right, but it works how it should be.

Also we do have a phonebook_context that presents a lifetime of a
transaction. It needs to be extended and used properly, but it is how
this is done.

Also the pull phonebook, pull vcard listing and pull vcard entry with
one specific context can not run simultaneously. The will run after each
if at all. So we init a context and then we destroy the context once we
are done with it. In between we can use the any callback.

&gt; 2 the Unix domain socket is used to communicate between PBAP server
&gt; and PBAP driver; and PBAP server acts as client role at the one end of
&gt; socket, PBAP driver acts as server role at the other end of socket

NO WAY. Come on. Don't try to make this more complicated. Think simple
and I already put all the ground works into the repository. We just need
to parse the OBEX request properly and return the result from the
plugin.

And remember that obexd is designed for embedded systems and every
process that we have to run additionally costs us. Not to mention that
we end up with crazy dependencies for boot.

&gt; 3 everytime a PBAP client connects to PBAP server(i.e. a OBEX session
&gt; is initiated), PBAP server initiates a session(or a socket) with PBAP
&gt; driver by invoking connect(). Then PBAP server sends subsequent PBAP
&gt; request(pullphonebook, pullvcardlisting, pullvcardentry) through this
&gt; socket; PBAP driver sends back the requested data through the socket
&gt; asyncronously.
&gt; Am I right? I'd like to first make the basic design ideas clear in
&gt; order to avoid the unnecessary misunderstanding or confusion before
&gt; starting to write the code.

The basic design is already pushed into the repository. Including sample
code for accessing the Evolution Data Server via the ebook plugin.

Start looking at that code, because that is the way to go. No need for
an over-complicated design. The whole code is only missing some minor
pieces I didn't have time for over the weekend.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081020181414</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-20 18:14:14-0400</timestampReceived><subject>BlueZ and mobile Phones !!!</subject><body>

Hi,

Recently I ported blueZ on a ARM based platform [nothing much except for \
cross-compiling] and the strangely pairing, connection and file transfers only work \
with PC based stacks and not mobile phones.

I tried my hardware with Sony-ericksson, BlackBerry but somehow it doesnt seem to \
work with mobile phone.

I would have liked to follow up this mail with Stack's log, but strangely nothing \
comes up. I.E the stack log doesn't I think even detect that a connect command has \
come from a mobile phone.

Please suggest. Sorry for being abstract, but the problem in itself is abstract as of \
yet.

thanks &amp; regards,
Pavan Savoy.


--
Hyundai to launch the i20 in India. Catch the exclusive preview on ZigWheels.com
http://www.zigwheels.com/b2cam/newsDetails.action?name=Emb11_20080731&amp;path=/INDT/News/ \
Emb11_20080731&amp;page=1&amp;pagecount=2&amp;utm_source=indmail&amp;utm_medium=footer&amp;utm_content=tracking&amp;utm_campaign=Nletter_07oct2008_ZW
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081021080140</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-21 08:01:40-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11779] New: No way to disable bluetooth</subject><body>

Rogério Brito wrote:

&gt; I may test it latter, but I'm scared. And this is what is preventing me
&gt; from using this notebook (as well as bug
&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11717).
&gt;
&gt; For this latter one I even provided a *video* of me pressing the power
&gt; button and the machine not waking up from suspend. :-( I can't think of
&gt; anything else that I can provice, but I'm willing to help here.
&gt;
&gt;   

It sounds like you have much worse issues with it than whether the 
bluetooth adapter is drawing idle current - which should be dwarfed by 
more heavyweight sinks like the WiFi transceiver.

Sorry, I don't have any suggestions - though you could try asking the 
manufacturer for support.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021222927</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-21 22:29:27-0400</timestampReceived><subject>Re: Bluez / Bluetooth Docs</subject><body>

Richi Plana wrote:
&gt;&gt; Working under the assumption that one can't bind two BT headsets to one
&gt;&gt; BT adapter (device or whatever the correct term is), I've made available
&gt;&gt; two BT adapters on my notebook (one USB dongle) and am now trying to
&gt;&gt; pair one headset with one device. The problem is I've no idea how this
&gt;&gt; works outside of the automagic that Fedora does (using hcid).

Not that I've tried it, but I expect that this assumption is wrong - you 
can talk to multiple bluetooth devices with one transceiver, and I don't 
see any reason to expect headsets to be a special case?

For access via ALSA I have, for my one headset:
pcm.bluetooth {
        type bluetooth
        device "00:13:A9:C2:43:41"
}


You might have some success putting two such entries into your .asoundrc 
(you might have a pcm.bluetooth1 and pcm.bluetooth2, and obviously you 
need to enter the two device addresses for your headsets).  I do this 
under BlueZ 4.x, so it might be different in your case.

Then this kind of thing should work: mplayer -ao alsa:device=bluetooth1 
play.mp3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081022130242</emailId><senderName>Jiri Kosina</senderName><senderEmail>jkosina@suse.cz</senderEmail><timestampReceived>2008-10-22 13:02:42-0400</timestampReceived><subject>Re: [PATCH 1/4] HID: add hid_type</subject><body>

On Tue, 21 Oct 2008, Jiri Slaby wrote:

&gt; Add type to the hid structure to distinguish to which device type
&gt; (now only mouse) we are talking to. Needed for per device type ignore
&gt; list support.

Applied, thanks.

-- 
Jiri Kosina
SUSE Labs
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081022130308</emailId><senderName>Jiri Kosina</senderName><senderEmail>jkosina@suse.cz</senderEmail><timestampReceived>2008-10-22 13:03:08-0400</timestampReceived><subject>Re: [PATCH 2/4] HID: fix appletouch regression</subject><body>

On Tue, 21 Oct 2008, Jiri Slaby wrote:

&gt; The appletouch mouse devices are grabbed by the hid bus and not
&gt; released even if apple driver says ENODEV (as expected).
&gt; Move the ignoration one level upper to deny the hid layer to grab
&gt; the device and return error to the usb hid which, as a result,
&gt; releases the device.

Applied, thanks.

-- 
Jiri Kosina
SUSE Labs
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023044225</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:42:25-0400</timestampReceived><subject>Re: [PATCH] Add missing IDs for Logitech MX5500</subject><body>

Hi Mario,

&gt; It was reported that the Logitech MX5500 has more IDs than were
&gt; previously listed in hid2hci's source.  This patch adds more of those IDs.

please always make patches against the latest bluez.git tree. Yours was
against something that is not upstream. Also the IDs should go in order.

I fixed it for you this time, but next time, I make you re-submit it :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023044536</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:45:36-0400</timestampReceived><subject>Re: how to set passkey in bluez4.X</subject><body>

Hi Zhigang,

&gt; Could somebody know how to set passkey in bluez4.X?
&gt; 
&gt; In Bluez3.X we can set it in hcid.conf and I tried set passkey in main.conf
&gt; 
&gt; I added the passkey at the end of this file. Passkey = "1234"
&gt; 
&gt; But it doesn't work.

having pin codes in a config file is wrong and insecure. You have to
have a BlueZ agent running to answer pin requests.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080903102820</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-09-03 10:28:20-0400</timestampReceived><subject>implementing reset_resume() in btusb</subject><body>

Hi,

I've looked into implementing reset_resume() in btusb. It seems to
me that it cannot be done at the driver level. hci_dev_reset() does
not do what I need. Is there a support function in bluetooth core that could
be called to restore state?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080904061145</emailId><senderName>James Cloos</senderName><senderEmail>cloos@jhcloos.com</senderEmail><timestampReceived>2008-09-04 06:11:45-0400</timestampReceived><subject>Re: [BlueZ-Announce] Closing down the mailing lists at SourceForge</subject><body>

&gt;&gt;&gt;&gt;&gt; "Marcel" == Marcel Holtmann &lt;marcel@holtmann.org&gt; writes:

Marcel&gt; The announcement mailing list has been quiet for some time
Marcel&gt; now. With the new www.bluez.org website we do have a proper RSS
Marcel&gt; enabled blog. Please use that one if you wanna stay up-to-date
Marcel&gt; with releases and other important information.

Please also CC announcements to the linux-bluetooth list; rss is not a
useful replacement for a mailing list.

Marcel&gt; For everybody who was subscribed to the commit mailing list, you
Marcel&gt; can now also use RSS from the GIT web interface on kernel.org.

The contrib/hooks/post-receive-email file in the git repo does a great
job of sending out email notifications.  (And I see that you are using
it for the obexd.git repo.)  That would be an ideal way to make commit
notices available.

And kudos for moving to kernel.org.

-JimC
-- 
James Cloos &lt;cloos@jhcloos.com&gt;         OpenPGP: 1024D/ED7DAEA6
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080904154753</emailId><senderName>Roy Lanek</senderName><senderEmail>lanek@novenine.com</senderEmail><timestampReceived>2008-09-04 15:47:53-0400</timestampReceived><subject>subscribing to the BlueZ-Announce new list</subject><body>

subscribe
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080904215009</emailId><senderName>Florian Schwehn</senderName><senderEmail>f.schwehn@wizai.com</senderEmail><timestampReceived>2008-09-04 21:50:09-0400</timestampReceived><subject>problem with obex-data-server service requests</subject><body>

Hello!

I have a strange issue with the obex data server. I try to write a  
program that should accept files that are sent by mobile phones via opp.
When I try to send a file, some mobile phones always come up with  
messages like 'Sending failed'. hcidump produces the following output:

 &gt; ACL data: handle 11 flags 0x02 dlen 17
     L2CAP(d): cid 0x0040 len 13 [psm 1]
         SDP SS Req: tid 0x1 len 0x8
           pat uuid-16 0x1105 (OBEXObjPush)
           max 65535
           cont 00
&lt; ACL data: handle 11 flags 0x02 dlen 14
     L2CAP(d): cid 0x0040 len 10 [psm 1]
         SDP SS Rsp: tid 0x1 len 0x5
           count 0
           cont 00


When I try to send a file to my program from a linux PC with bluez- 
gnome everything works as exspected and hcidump prints the following  
lines:

 &gt; ACL data: handle 12 flags 0x02 dlen 17
     L2CAP(d): cid 0x0040 len 13 [psm 1]
         SDP SS Req: tid 0x0 len 0x8
           pat uuid-16 0x1105 (OBEXObjPush)
           max 64
           cont 00
&lt; ACL data: handle 12 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 1]
         SDP SS Rsp: tid 0x0 len 0x9
           count 1
           handle 0x10004
           cont 00

The difference between the outputs hcidump creates makes no sense to  
me. Do you have any ideas?

Thanks in advance, Florian.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080907112532</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-09-07 11:25:32-0400</timestampReceived><subject>Re: bluez 4.2 + linux 2.6.27-rc5 -&gt; no audio interface</subject><body>

On 06/09/08 12:10, Stuart Pook wrote:
&gt; I see that bluez-4.3 has just come out.
&gt; I suppose that I should try it to see if it helps.

I tried bluez-4.3 and bluez-4.4. They both work (sometimes)
on 2.6.26 but never on 2.6.27-rc5. Perhaps it is a kernel
bug. Please see http://bugzilla.kernel.org/show_bug.cgi?id=11514
for my bug report.

Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080907132043</emailId><senderName>Joachim Breitner</senderName><senderEmail>nomeata@debian.org</senderEmail><timestampReceived>2008-09-07 13:20:43-0400</timestampReceived><subject>Re: Bug#498056: Can not control input_service via dbus</subject><body>

[CC'ing linux-bluetooth, maybe you can tell us what's happening]

Hi,

Am Sonntag, den 07.09.2008, 12:43 +0200 schrieb Filippo Giunchedi:
&gt; On Sun, Sep 07, 2008 at 11:50:12AM +0200, Joachim Breitner wrote:
&gt; &gt; &gt; that explains the bug, unless I'm missing something of course :)
&gt; &gt; 
&gt; &gt; it does indeed, but then I wonder why this functionality is present in
&gt; &gt; an openembedded based image for the FreeRunner that runs (supposedly)
&gt; &gt; bluez-utils 3.23-r2, which is older than what's in Debian, and I can not
&gt; &gt; find any patches regarding this...
&gt; &gt; 
&gt; &gt; And indeed, looking at:
&gt; &gt; http://shr.bearstech.com/sources/bluez-utils-3.23.tar.gz
&gt; &gt; The above code lines are filled with some functionality!
&gt; &gt; 
&gt; &gt; So looking in the changelog, I see:
&gt; &gt; ver 3.32:
&gt; &gt; 	[..]
&gt; &gt;         Remove HAL support helpers.
&gt; &gt;         Remove inotify support.
&gt; &gt;         Remove service daemon activation handling.
&gt; &gt;         Remove uneeded D-Bus API extension.
&gt; &gt; 
&gt; &gt; Interesting. Do you have any idea why this was removed? Is there some
&gt; &gt; replacement functionality?
&gt; 
&gt; Judging from the code above my first guess (offhand) is because services migrated
&gt; from external processes to plugins (loaded via g_module_load).
&gt; 
&gt; Unfortunately I'm unaware of any replacement (though I have not checked the new
&gt; 4.x code)

I'm not sure. I think the dbus interface already is part of the new
plugin based stuff? Also, if I disable the plugin (DisablePlugins=input
in /etc/bluetooth/main.conf), the whole /org/bluez/service_input dbus
interface disappears.

The relevant diff in upstream's CVS does unfortunately not tell us more
about why this was removed:
http://bluez.cvs.sourceforge.net/bluez/utils/hcid/dbus-service.c?r1=1.151&amp;r2=1.152

So I CC'ed upstream: Would you please explain us why this dbus interface
was disabled, and what's supposed to replace it?

Thanks everyone,
Joachim

-- 
Joachim "nomeata" Breitner
Debian Developer
  nomeata@debian.org | ICQ# 74513189 | GPG-Keyid: 4743206C
  JID: nomeata@joachim-breitner.de | http://people.debian.org/~nomeata

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080908172315</emailId><senderName>Daniel Benoy</senderName><senderEmail>daniel@benoy.name</senderEmail><timestampReceived>2008-09-08 17:23:15-0400</timestampReceived><subject>Intermittant bluetooth keyboard</subject><body>

I set up my bluetooth keyboard on my openmoko phone using the 'new' (In other words, \
not hidd, but still dbus) input interface, and it only works like 10% of the time.  \
That means when I turn it on it should connect and start working.  Unfortunately, it \
only works about 25% of the time, and I have to switch it off and on frequenly in \
order to get it to finally connect.  I get this output from hcidump -V when it \
doesn't work:

&gt; HCI Event: Connect Request (0x04) plen 10
    bdaddr 00:0A:DF:00:24:59 class 0x002540 type ACL
&lt; HCI Command: Accept Connection Request (0x01|0x0009) plen 7
    bdaddr 00:0A:DF:00:24:59 role 0x00
    Role: Master
&gt; HCI Event: Command Status (0x0f) plen 4
    Accept Connection Request (0x01|0x0009) status 0x00 ncmd 1
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x22 handle 42 bdaddr 00:0A:DF:00:24:59 type ACL encrypt 0x00
    Error: LMP Response Timeout

The difference in time between 'Accept Connection Request' and 'LMP Response Timeout' \
is about 3 seconds.  I was under the impression that LMP negociation was supposed to \
time out after 30 seconds?

Is there something I'm doing wrong?  Am I not interprating this correctly?

If it does work I get something like this:

&gt; HCI Event: Connect Request (0x04) plen 10
    bdaddr 00:0A:DF:00:24:59 class 0x002540 type ACL
&lt; HCI Command: Accept Connection Request (0x01|0x0009) plen 7
    bdaddr 00:0A:DF:00:24:59 role 0x00
    Role: Master
&gt; HCI Event: Command Status (0x0f) plen 4
    Accept Connection Request (0x01|0x0009) status 0x00 ncmd 1
&gt; HCI Event: Link Key Request (0x17) plen 6
    bdaddr 00:0A:DF:00:24:59

.
.
.

(And then link key request reply and so on it does its negociation and there you have \
                it)
-- 
Daniel Benoy
http://daniel.benoy.name
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080908172535</emailId><senderName>Daniel Benoy</senderName><senderEmail>daniel.benoy@execulink.com</senderEmail><timestampReceived>2008-09-08 17:25:35-0400</timestampReceived><subject>Intermittant bluetooth keyboard - more</subject><body>

Oops, I said 10% and then I said 25% :p  Needless to say it's an annoyingly low percentage of the time that it all works smoothly.

-- 
Daniel Benoy
http://daniel.benoy.name
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080908172611</emailId><senderName>Daniel Benoy</senderName><senderEmail>daniel@benoy.name</senderEmail><timestampReceived>2008-09-08 17:26:11-0400</timestampReceived><subject>Intermittant bluetooth keyboard - more</subject><body>

Oops, I said 10% and then I said 25% :p  Needless to say it's an annoyingly low percentage of the time that it all works smoothly.

-- 
Daniel Benoy
http://daniel.benoy.name
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080908214521</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-09-08 21:45:21-0400</timestampReceived><subject>Re: [linux-pm] btusb hibernation/suspend breakage in current -git</subject><body>

On Monday, 8 of September 2008, Marcel Holtmann wrote:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; I couldn't reproduce the breakage with suspend/resume support removed from
&gt; &gt; &gt; usbhid.
&gt; &gt; &gt; 
&gt; &gt; &gt; Let's just say it's related to BT, since your patch evidently fixes the problem
&gt; &gt; &gt; for me and I have just no reason to believe it's anything else than BT.
&gt; &gt;
&gt; &gt; Very good.
&gt; &gt; 
&gt; &gt; here it is again. You may need to cut the USB bits depending
&gt; &gt; on which tree you want to apply it to.
&gt; 
&gt; do we have a version that could be applied to 2.6.27-rc5, because the
&gt; patch depends on unmerged USB stuff. I tend to leave this for 2.6.28 for
&gt; now.

I've been using the one below recently.  It doesn't seem to depend on anything
unmerged.

Thanks,
Rafael


---
 drivers/bluetooth/btusb.c |  145 +++++++++++++++++++++++++++++++++++-----------
 1 file changed, 113 insertions(+), 32 deletions(-)

Index: linux-2.6/drivers/bluetooth/btusb.c
===================================================================
--- linux-2.6.orig/drivers/bluetooth/btusb.c
+++ linux-2.6/drivers/bluetooth/btusb.c
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,6 +177,7 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
@@ -189,6 +191,7 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int susp_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -227,7 +230,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +243,13 @@ static int btusb_submit_intr_urb(struct 
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +265,7 @@ static int btusb_submit_intr_urb(struct 
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -311,7 +314,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +327,19 @@ static int btusb_submit_bulk_urb(struct 
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +349,7 @@ static int btusb_submit_bulk_urb(struct 
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -514,7 +518,7 @@ static int btusb_open(struct hci_dev *hd
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_KERNEL);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,6 +527,13 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -532,14 +543,12 @@ static int btusb_close(struct hci_dev *h
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
 
 	return 0;
 }
@@ -672,8 +681,19 @@ static void btusb_notify(struct hci_dev 
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -724,18 +744,6 @@ static void btusb_work(struct work_struc
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
-
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
@@ -821,6 +829,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -889,7 +898,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,20 +930,92 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
 };
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913025754</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-09-13 02:57:54-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

Yep, it was obviously wrong, please send a pull request to Marcel so
we can have this fixes upstream.


-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080914200858</emailId><senderName>Fabien Chevalier</senderName><senderEmail>fabchevalier@free.fr</senderEmail><timestampReceived>2008-09-14 20:08:58-0400</timestampReceived><subject>Sniff mode patch V2</subject><body>

Hi Marcel,

I spend most of the day reworking the sniff mode patch.
I implemented both L2CAP and RFCOMM, and tested those two. They both
seem to work.
The layering violation is gone.
The setting is propagated from a server socket to its children.

I think i've seen the end of your first round of comments ;-)

Could you please review this patch and tell me what needs fixing ?

Regards,

Fabien



["0001-Sniff-mode-fixes-V2.patch" (text/x-patch)]

&gt; From 1252afa5d458cd4782ee767ff1e487a6ce56c964 Mon Sep 17 00:00:00 2001
From: Fabien Chevalier &lt;fabchevalier@free.fr&gt;
Date: Sun, 14 Sep 2008 20:52:08 +0200
Subject: [PATCH] Sniff mode fixes V2.

* Introduces L2CAP_FORCE_ACTIVE_MODE and RFCOMM_FORCE_ACTIVE_MODE.
* Support for RFCOMM and L2CAP.
* Setting is now inherited on child sockets created through accept()
---
 include/net/bluetooth/hci_core.h |    3 ++-
 include/net/bluetooth/l2cap.h    |    5 +++++
 include/net/bluetooth/rfcomm.h   |    3 +++
 net/bluetooth/hci_conn.c         |    6 +++++-
 net/bluetooth/hci_core.c         |    4 +++-
 net/bluetooth/l2cap.c            |   38 ++++++++++++++++++++++++++++++++------
 net/bluetooth/rfcomm/core.c      |   13 +++++++++----
 net/bluetooth/rfcomm/sock.c      |   32 ++++++++++++++++++++++++++++++--
 8 files changed, 89 insertions(+), 15 deletions(-)

diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 46a43b7..95f113e 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -170,6 +170,7 @@ struct hci_conn {
 	__u32		 link_mode;
 	__u8             auth_type;
 	__u8             power_save;
+	__u8             force_active_mode;
 	unsigned long	 pend;
 
 	unsigned int	 sent;
@@ -631,7 +632,7 @@ int hci_register_notifier(struct notifier_block *nb);
 int hci_unregister_notifier(struct notifier_block *nb);
 
 int hci_send_cmd(struct hci_dev *hdev, __u16 opcode, __u32 plen, void *param);
-int hci_send_acl(struct hci_conn *conn, struct sk_buff *skb, __u16 flags);
+int hci_send_acl(struct hci_conn *conn, struct sk_buff *skb, int force_active_mode, \
__u16 flags);  int hci_send_sco(struct hci_conn *conn, struct sk_buff *skb);
 
 void *hci_sent_cmd_data(struct hci_dev *hdev, __u16 opcode);
diff --git a/include/net/bluetooth/l2cap.h b/include/net/bluetooth/l2cap.h
index 73e115b..d13f586 100644
--- a/include/net/bluetooth/l2cap.h
+++ b/include/net/bluetooth/l2cap.h
@@ -62,6 +62,8 @@ struct l2cap_conninfo {
 #define L2CAP_LM_RELIABLE	0x0010
 #define L2CAP_LM_SECURE		0x0020
 
+#define L2CAP_FORCE_ACTIVE_MODE	0x04
+
 /* L2CAP command codes */
 #define L2CAP_COMMAND_REJ 0x01
 #define L2CAP_CONN_REQ    0x02
@@ -210,6 +212,8 @@ struct l2cap_conn {
 	__u8		info_state;
 	__u8		info_ident;
 
+	int		force_active_mode;
+
 	struct timer_list info_timer;
 
 	spinlock_t	lock;
@@ -239,6 +243,7 @@ struct l2cap_pinfo {
 	__u16		flush_to;
 
 	__u32		link_mode;
+	int		force_active_mode;
 
 	__u8		conf_req[64];
 	__u8		conf_len;
diff --git a/include/net/bluetooth/rfcomm.h b/include/net/bluetooth/rfcomm.h
index 4dc8d92..61bf1cf 100644
--- a/include/net/bluetooth/rfcomm.h
+++ b/include/net/bluetooth/rfcomm.h
@@ -185,6 +185,7 @@ struct rfcomm_dlc {
 	u8            out;
 
 	u32           link_mode;
+	int           force_active_mode;
 
 	uint          mtu;
 	uint          cfc;
@@ -298,6 +299,8 @@ struct rfcomm_conninfo {
 #define RFCOMM_LM_RELIABLE	0x0010
 #define RFCOMM_LM_SECURE	0x0020
 
+#define RFCOMM_FORCE_ACTIVE_MODE	0x04
+
 #define rfcomm_pi(sk) ((struct rfcomm_pinfo *) sk)
 
 struct rfcomm_pinfo {
diff --git a/net/bluetooth/hci_conn.c b/net/bluetooth/hci_conn.c
index b700242..a7feebd 100644
--- a/net/bluetooth/hci_conn.c
+++ b/net/bluetooth/hci_conn.c
@@ -214,6 +214,7 @@ struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type, \
bdaddr_t *dst)  conn-&gt;state = BT_OPEN;
 
 	conn-&gt;power_save = 1;
+	conn-&gt;force_active_mode = 0;
 
 	switch (type) {
 	case ACL_LINK:
@@ -479,9 +480,12 @@ void hci_conn_enter_active_mode(struct hci_conn *conn)
 	if (test_bit(HCI_RAW, &amp;hdev-&gt;flags))
 		return;
 
-	if (conn-&gt;mode != HCI_CM_SNIFF || !conn-&gt;power_save)
+	if (conn-&gt;mode != HCI_CM_SNIFF)
 		goto timer;
 
+	if (!conn-&gt;power_save &amp;&amp; !conn-&gt;force_active_mode)
+ 		goto timer;
+ 		
 	if (!test_and_set_bit(HCI_CONN_MODE_CHANGE_PEND, &amp;conn-&gt;pend)) {
 		struct hci_cp_exit_sniff_mode cp;
 		cp.handle = cpu_to_le16(conn-&gt;handle);
diff --git a/net/bluetooth/hci_core.c b/net/bluetooth/hci_core.c
index f5b21cb..ec4b1ff 100644
--- a/net/bluetooth/hci_core.c
+++ b/net/bluetooth/hci_core.c
@@ -1193,7 +1193,7 @@ static void hci_add_acl_hdr(struct sk_buff *skb, __u16 handle, \
__u16 flags)  hdr-&gt;dlen   = cpu_to_le16(len);
 }
 
-int hci_send_acl(struct hci_conn *conn, struct sk_buff *skb, __u16 flags)
+int hci_send_acl(struct hci_conn *conn, struct sk_buff *skb, int force_active_mode, \
__u16 flags)  {
 	struct hci_dev *hdev = conn-&gt;hdev;
 	struct sk_buff *list;
@@ -1234,6 +1234,8 @@ int hci_send_acl(struct hci_conn *conn, struct sk_buff *skb, \
__u16 flags)  spin_unlock_bh(&amp;conn-&gt;data_q.lock);
 	}
 
+	conn-&gt;force_active_mode = force_active_mode;
+
 	hci_sched_tx(hdev);
 	return 0;
 }
diff --git a/net/bluetooth/l2cap.c b/net/bluetooth/l2cap.c
index 9610a9c..7d422e9 100644
--- a/net/bluetooth/l2cap.c
+++ b/net/bluetooth/l2cap.c
@@ -304,12 +304,12 @@ static inline int l2cap_send_cmd(struct l2cap_conn *conn, u8 \
ident, u8 code, u16  {
 	struct sk_buff *skb = l2cap_build_cmd(conn, code, ident, len, data);
 
-	BT_DBG("code 0x%2.2x", code);
+	BT_DBG("code 0x%2.2x active_mode %d ", code, conn-&gt;force_active_mode);
 
 	if (!skb)
 		return -ENOMEM;
 
-	return hci_send_acl(conn-&gt;hcon, skb, 0);
+	return hci_send_acl(conn-&gt;hcon, skb, conn-&gt;force_active_mode, 0);
 }
 
 static void l2cap_do_start(struct sock *sk)
@@ -661,10 +661,13 @@ static void l2cap_sock_init(struct sock *sk, struct sock \
*parent)  pi-&gt;imtu = l2cap_pi(parent)-&gt;imtu;
 		pi-&gt;omtu = l2cap_pi(parent)-&gt;omtu;
 		pi-&gt;link_mode = l2cap_pi(parent)-&gt;link_mode;
+		pi-&gt;force_active_mode = 
+			l2cap_pi(parent)-&gt;force_active_mode;
 	} else {
 		pi-&gt;imtu = L2CAP_DEFAULT_MTU;
 		pi-&gt;omtu = 0;
 		pi-&gt;link_mode = 0;
+		pi-&gt;force_active_mode = 0;
 	}
 
 	/* Default config options */
@@ -818,6 +821,8 @@ static int l2cap_do_connect(struct sock *sk)
 
 	/* Update source addr of the socket */
 	bacpy(src, conn-&gt;src);
+	
+	conn-&gt;force_active_mode = l2cap_pi(sk)-&gt;force_active_mode;
 
 	l2cap_chan_add(conn, sk, NULL);
 
@@ -1021,7 +1026,7 @@ static inline int l2cap_do_send(struct sock *sk, struct msghdr \
*msg, int len)  int err, hlen, count, sent=0;
 	struct l2cap_hdr *lh;
 
-	BT_DBG("sk %p len %d", sk, len);
+	BT_DBG("sk %p len %d active_mode %d", sk, len, conn-&gt;force_active_mode);
 
 	/* First fragment (with L2CAP header) */
 	if (sk-&gt;sk_type == SOCK_DGRAM)
@@ -1072,7 +1077,7 @@ static inline int l2cap_do_send(struct sock *sk, struct msghdr \
*msg, int len)  frag = &amp;(*frag)-&gt;next;
 	}
 
-	if ((err = hci_send_acl(conn-&gt;hcon, skb, 0)) &lt; 0)
+	if ((err = hci_send_acl(conn-&gt;hcon, skb, l2cap_pi(sk)-&gt;force_active_mode, 0)) &lt; 0)
 		goto fail;
 
 	return sent;
@@ -1148,6 +1153,20 @@ static int l2cap_sock_setsockopt(struct socket *sock, int \
level, int optname, ch  l2cap_pi(sk)-&gt;link_mode = opt;
 		break;
 
+	case L2CAP_FORCE_ACTIVE_MODE:
+		if (get_user(opt, (u32 __user *) optval)) {
+			err = -EFAULT;
+			break;
+		}
+
+		l2cap_pi(sk)-&gt;force_active_mode = opt;
+
+		if (sk-&gt;sk_state == BT_CONNECTED) {
+			l2cap_pi(sk)-&gt;conn-&gt;force_active_mode = opt;
+		}
+
+		break;
+
 	default:
 		err = -ENOPROTOOPT;
 		break;
@@ -1204,6 +1223,12 @@ static int l2cap_sock_getsockopt(struct socket *sock, int \
level, int optname, ch  
 		break;
 
+	case L2CAP_FORCE_ACTIVE_MODE:
+		if (put_user(l2cap_pi(sk)-&gt;force_active_mode,
+				 (u32 __user *) optval))
+			err = -EFAULT;
+		break;
+
 	default:
 		err = -ENOPROTOOPT;
 		break;
@@ -2429,10 +2454,11 @@ static ssize_t l2cap_sysfs_show(struct class *dev, char *buf)
 	sk_for_each(sk, node, &amp;l2cap_sk_list.head) {
 		struct l2cap_pinfo *pi = l2cap_pi(sk);
 
-		str += sprintf(str, "%s %s %d %d 0x%4.4x 0x%4.4x %d %d 0x%x\n",
+		str += sprintf(str, "%s %s %d %d 0x%4.4x 0x%4.4x %d %d 0x%x %d\n",
 				batostr(&amp;bt_sk(sk)-&gt;src), batostr(&amp;bt_sk(sk)-&gt;dst),
 				sk-&gt;sk_state, btohs(pi-&gt;psm), pi-&gt;scid, pi-&gt;dcid,
-				pi-&gt;imtu, pi-&gt;omtu, pi-&gt;link_mode);
+				pi-&gt;imtu, pi-&gt;omtu, pi-&gt;link_mode,
+				pi-&gt;force_active_mode);
 	}
 
 	read_unlock_bh(&amp;l2cap_sk_list.lock);
diff --git a/net/bluetooth/rfcomm/core.c b/net/bluetooth/rfcomm/core.c
index ba537fa..888b431 100644
--- a/net/bluetooth/rfcomm/core.c
+++ b/net/bluetooth/rfcomm/core.c
@@ -80,7 +80,7 @@ static void rfcomm_make_uih(struct sk_buff *skb, u8 addr);
 
 static void rfcomm_process_connect(struct rfcomm_session *s);
 
-static struct rfcomm_session *rfcomm_session_create(bdaddr_t *src, bdaddr_t *dst, \
int *err); +static struct rfcomm_session *rfcomm_session_create(bdaddr_t *src, \
bdaddr_t *dst, int force_active_mode, int *err);  static struct rfcomm_session \
*rfcomm_session_get(bdaddr_t *src, bdaddr_t *dst);  static void \
rfcomm_session_del(struct rfcomm_session *s);  
@@ -367,7 +367,7 @@ static int __rfcomm_dlc_open(struct rfcomm_dlc *d, bdaddr_t *src, \
bdaddr_t *dst,  
 	s = rfcomm_session_get(src, dst);
 	if (!s) {
-		s = rfcomm_session_create(src, dst, &amp;err);
+		s = rfcomm_session_create(src, dst, d-&gt;force_active_mode, &amp;err);
 		if (!s)
 			return err;
 	}
@@ -625,19 +625,24 @@ static void rfcomm_session_close(struct rfcomm_session *s, int \
err)  rfcomm_session_put(s);
 }
 
-static struct rfcomm_session *rfcomm_session_create(bdaddr_t *src, bdaddr_t *dst, \
int *err) +static struct rfcomm_session *rfcomm_session_create(bdaddr_t *src, \
bdaddr_t *dst, int force_active_mode, int *err)  {
 	struct rfcomm_session *s = NULL;
 	struct sockaddr_l2 addr;
 	struct socket *sock;
 	struct sock *sk;
 
-	BT_DBG("%s %s", batostr(src), batostr(dst));
+	BT_DBG("%s %s %d", batostr(src), batostr(dst), force_active_mode);
 
 	*err = rfcomm_l2sock_create(&amp;sock);
 	if (*err &lt; 0)
 		return NULL;
 
+	*err = kernel_setsockopt(sock, SOL_BLUETOOTH, L2CAP_FORCE_ACTIVE_MODE,
+		(void *) &amp;force_active_mode, sizeof(force_active_mode));
+	if (*err &lt; 0)
+		goto failed;
+
 	bacpy(&amp;addr.l2_bdaddr, src);
 	addr.l2_family = AF_BLUETOOTH;
 	addr.l2_psm    = 0;
diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 8a972b6..f6a48e5 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -267,8 +267,11 @@ static void rfcomm_sock_init(struct sock *sk, struct sock \
*parent)  if (parent) {
 		sk-&gt;sk_type = parent-&gt;sk_type;
 		pi-&gt;link_mode = rfcomm_pi(parent)-&gt;link_mode;
+		pi-&gt;dlc-&gt;force_active_mode = 
+			rfcomm_pi(parent)-&gt;dlc-&gt;force_active_mode;
 	} else {
 		pi-&gt;link_mode = 0;
+		pi-&gt;dlc-&gt;force_active_mode = 0;
 	}
 
 	pi-&gt;dlc-&gt;link_mode = pi-&gt;link_mode;
@@ -735,6 +738,15 @@ static int rfcomm_sock_setsockopt(struct socket *sock, int \
level, int optname, c  rfcomm_pi(sk)-&gt;link_mode = opt;
 		break;
 
+	case RFCOMM_FORCE_ACTIVE_MODE:
+		if (get_user(opt, (u32 __user *) optval)) {
+			err = -EFAULT;
+			break;
+		}
+
+		rfcomm_pi(sk)-&gt;dlc-&gt;force_active_mode = opt;
+		break;
+
 	default:
 		err = -ENOPROTOOPT;
 		break;
@@ -781,6 +793,12 @@ static int rfcomm_sock_getsockopt(struct socket *sock, int \
level, int optname, c  
 		break;
 
+	case RFCOMM_FORCE_ACTIVE_MODE:
+		if (put_user(rfcomm_pi(sk)-&gt;dlc-&gt;force_active_mode,
+				 (u32 __user *) optval))
+			err = -EFAULT;
+		break;
+
 	default:
 		err = -ENOPROTOOPT;
 		break;
@@ -859,6 +877,8 @@ int rfcomm_connect_ind(struct rfcomm_session *s, u8 channel, \
struct rfcomm_dlc *  struct sock *sk, *parent;
 	bdaddr_t src, dst;
 	int result = 0;
+	int err;
+	int force_active_mode;
 
 	BT_DBG("session %p channel %d", s, channel);
 
@@ -869,6 +889,13 @@ int rfcomm_connect_ind(struct rfcomm_session *s, u8 channel, \
struct rfcomm_dlc *  if (!parent)
 		return 0;
 
+	/* Propagate setting to children */
+	force_active_mode = rfcomm_pi(parent)-&gt;dlc-&gt;force_active_mode;
+	err = kernel_setsockopt(s-&gt;sock, SOL_BLUETOOTH, L2CAP_FORCE_ACTIVE_MODE,
+		(void *) &amp;force_active_mode, sizeof(force_active_mode));
+	if (err &lt; 0)
+		goto done;
+
 	/* Check for backlog size */
 	if (sk_acceptq_is_full(parent)) {
 		BT_DBG("backlog full %d", parent-&gt;sk_ack_backlog);
@@ -905,9 +932,10 @@ static ssize_t rfcomm_sock_sysfs_show(struct class *dev, char \
*buf)  read_lock_bh(&amp;rfcomm_sk_list.lock);
 
 	sk_for_each(sk, node, &amp;rfcomm_sk_list.head) {
-		str += sprintf(str, "%s %s %d %d\n",
+		str += sprintf(str, "%s %s %d %d %d\n",
 				batostr(&amp;bt_sk(sk)-&gt;src), batostr(&amp;bt_sk(sk)-&gt;dst),
-				sk-&gt;sk_state, rfcomm_pi(sk)-&gt;channel);
+				sk-&gt;sk_state, rfcomm_pi(sk)-&gt;channel, 
+				rfcomm_pi(sk)-&gt;dlc-&gt;force_active_mode);
 	}
 
 	read_unlock_bh(&amp;rfcomm_sk_list.lock);
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080915145652</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-15 14:56:52-0400</timestampReceived><subject>obex-data-server BlueZ 4.x patch</subject><body>

Heya,

Here's a patch to port obex-data-server to BlueZ 4.x. It drops support
for BIP devices though, as I have no example XML SDP record, or ways to
test.

The XML record parsing code is very naive, and could easily be made
stronger.

The latest version is also available at:
http://cvs.fedoraproject.org/viewvc/rpms/obex-data-server/devel/obex-data-server-0.4-bluez4.patch?view=markup


Comments?

Cheers


["obex-data-server-0.4-bluez4.patch" (obex-data-server-0.4-bluez4.patch)]

Index: src/ods-bluez.c
===================================================================
--- src/ods-bluez.c	(revision 1891)
+++ src/ods-bluez.c	(working copy)
@@ -116,11 +116,11 @@
 
 	bluez-&gt;priv-&gt;manager_proxy = dbus_g_proxy_new_for_name (klass-&gt;connection,
 															"org.bluez",
-															"/org/bluez",
+															"/",
 															"org.bluez.Manager");
 	if (!dbus_g_proxy_call (bluez-&gt;priv-&gt;manager_proxy, "DefaultAdapter", &amp;error,
 								G_TYPE_INVALID,
-								G_TYPE_STRING, &amp;adapter_object,
+								DBUS_TYPE_G_OBJECT_PATH, &amp;adapter_object,
 								G_TYPE_INVALID)) {
 		g_warning("Unable to connect to dbus: %s", error-&gt;message);
 		g_clear_error (&amp;error);
@@ -326,7 +326,7 @@
     g_clear_error (&amp;error);
 }
 
-
+#if 0
 static void
 get_remote_service_record_cb (DBusGProxy *proxy, DBusGProxyCall *call,
 								OdsBluezCancellable *cb_data)
@@ -349,7 +349,7 @@
 		goto err;
 	}
 
-	sdp_record = sdp_extract_pdu ((uint8_t *)record_array-&gt;data, &amp;scanned);
+	sdp_record = sdp_extract_pdu ((uint8_t *)record_array-&gt;data, record_array-&gt;len, &amp;scanned);
 
 	/* get channel for this service */
 	if (sdp_get_access_protos (sdp_record, &amp;protos) != 0) {
@@ -406,59 +406,135 @@
 	ods_bluez_cancellable_free (cb_data);
 	g_clear_error (&amp;error);
 }
+#endif
 
+typedef struct {
+	int channel;
+	gboolean in_attr;
+	gboolean done;
+} ctxdata;
+
 static void
+record_parse_start_tag (GMarkupParseContext *context,
+			const gchar         *element_name,
+			const gchar        **attribute_names,
+			const gchar        **attribute_values,
+			gpointer             user_data,
+			GError             **error)
+{
+	ctxdata *data = (ctxdata *) user_data;
+
+	if (data-&gt;done
+	    || attribute_names == NULL
+	    || attribute_values == NULL)
+	    	return;
+	if (g_str_equal (element_name, "attribute")
+	    &amp;&amp; g_str_equal (*attribute_names, "id")
+	    &amp;&amp; g_str_equal (*attribute_values, "0x0004")) {
+	    	data-&gt;in_attr = TRUE;
+	    	return;
+	}
+	if (!data-&gt;in_attr)
+		return;
+	if (g_str_equal (element_name, "uint8")
+	    &amp;&amp; g_str_equal (*attribute_names, "value")) {
+	    	double channel;
+	    	channel = g_ascii_strtod (*attribute_values, NULL);
+	    	data-&gt;channel = channel;
+	    	data-&gt;done = TRUE;
+	}
+}
+
+static gboolean
+parse_record (const char *record, int *ret_channel)
+{
+	GError *error = NULL;
+	GMarkupParseContext *ctx;
+	GMarkupParser parser = {
+		record_parse_start_tag, NULL, NULL, NULL, NULL
+	};
+	ctxdata *data;
+
+	data = g_new0 (ctxdata, 1);
+	data-&gt;channel = -1;
+
+	ctx = g_markup_parse_context_new (&amp;parser, 0, data, NULL);
+
+	if (!g_markup_parse_context_parse (ctx, record, strlen (record), &amp;error)) {
+		g_warning ("Couldn't parse service record: %s", error-&gt;message);
+		g_error_free (error);
+		g_markup_parse_context_free (ctx);
+		return FALSE;
+	}
+
+	if (data-&gt;channel != -1)
+		*ret_channel = data-&gt;channel;
+	return (data-&gt;channel != -1);
+}
+
+static void
 get_remote_service_handles_cb (DBusGProxy *proxy, DBusGProxyCall *call,
 								OdsBluezCancellable *cb_data)
 {
 	OdsBluezFunc	cb = cb_data-&gt;cb;
 	gboolean		ret;
 	GError			*error = NULL;
-	GArray			*handle_array = NULL;
-	guint32			service_handle = 0;
+	GHashTable		*handle_hash = NULL;
+	GList			*list, *l;
+	int			channel;
 
 	ret = dbus_g_proxy_end_call (proxy, call, &amp;error,
-								DBUS_TYPE_G_UINT_ARRAY, &amp;handle_array,
-								G_TYPE_INVALID);
+				     dbus_g_type_get_map ("GHashTable", G_TYPE_UINT, G_TYPE_STRING),
+				     &amp;handle_hash, G_TYPE_INVALID);
 
 	/* check if we were looking for Nokia specific FTP service and failed */
-	if (ret &amp;&amp; handle_array-&gt;len == 0 &amp;&amp; !strcmp (cb_data-&gt;uuid, OBEX_NOKIAFTP_UUID)) {
+	if (ret &amp;&amp; g_hash_table_size (handle_hash) == 0 &amp;&amp; !strcmp (cb_data-&gt;uuid, OBEX_NOKIAFTP_UUID)) {
 		g_free (cb_data-&gt;uuid);
 		cb_data-&gt;uuid = g_strdup (OBEX_FTP_UUID);
 		cb_data-&gt;dbus_call = dbus_g_proxy_begin_call (proxy,
-								"GetRemoteServiceHandles",
+								"DiscoverServices",
 								(DBusGProxyCallNotify) get_remote_service_handles_cb,
 								cb_data, NULL,
-								G_TYPE_STRING, cb_data-&gt;target_address,
 								G_TYPE_STRING, cb_data-&gt;uuid,
 								G_TYPE_INVALID);
 		return;
 	}
 	/* service search failed */
-	if (!ret || handle_array-&gt;len == 0) {
+	if (!ret || g_hash_table_size (handle_hash) == 0) {
 		g_clear_error (&amp;error);
 		g_set_error (&amp;error, ODS_ERROR, ODS_ERROR_CONNECTION_ATTEMPT_FAILED,
 						"Service search failed");
 		cb (-1, cb_data-&gt;imagingdata, error, cb_data-&gt;cb_data);
-		ods_bluez_cancellable_free (cb_data);
 		g_clear_error (&amp;error);
 		goto out;
 	}
 
-	memcpy(&amp;service_handle, handle_array-&gt;data, sizeof(service_handle));
+	channel = -1;
+	list = g_hash_table_get_values (handle_hash);
+	for (l = list; l != NULL; l = l-&gt;next) {
+		char *record = l-&gt;data;
+		if (parse_record (record, &amp;channel) != FALSE) {
+			break;
+		}
+	}
+	g_list_free (list);
 
-	/* Now get service record */
-	cb_data-&gt;dbus_call = dbus_g_proxy_begin_call (proxy,
-							"GetRemoteServiceRecord",
-							(DBusGProxyCallNotify) get_remote_service_record_cb,
-							cb_data, NULL,
-							G_TYPE_STRING, cb_data-&gt;target_address,
-							G_TYPE_UINT, service_handle,
-							G_TYPE_INVALID);
+	if (channel != -1) {
+		rfcomm_connect (cb_data, channel);
+		g_object_unref (proxy);
+		g_hash_table_destroy (handle_hash);
+		return;
+	} else {
+		g_set_error (&amp;error, ODS_ERROR, ODS_ERROR_FAILED,
+			     "Could not get service channel");
+		cb (-1, cb_data-&gt;imagingdata, error, cb_data-&gt;cb_data);
+		g_clear_error (&amp;error);
+	}
 
 out:
-	if (handle_array != NULL)
-		g_array_free (handle_array, TRUE);
+	ods_bluez_cancellable_free (cb_data);
+	g_object_unref (proxy);
+	g_hash_table_destroy (handle_hash);
 }
 
 OdsBluezCancellable*
@@ -472,6 +548,7 @@
 								gpointer data)
 {
 	OdsBluezCancellable *cb_data;
+	OdsBluezClass *klass = ODS_BLUEZ_GET_CLASS (bluez);
 
 	cb_data = g_new0 (OdsBluezCancellable, 1);
 	cb_data-&gt;cb = func;
@@ -496,12 +573,27 @@
 
 	/* Discover channel for needed service only if we don't know it yet */
 	if (channel == 0) {
+		char *device_path;
+		DBusGProxy *device;
+
+		if (dbus_g_proxy_call (bluez-&gt;priv-&gt;adapter_proxy, "FindDevice", NULL,
+				   G_TYPE_STRING, cb_data-&gt;target_address, G_TYPE_INVALID,
+				   DBUS_TYPE_G_OBJECT_PATH, &amp;device_path, G_TYPE_INVALID) == FALSE) {
+			GError *error = NULL;
+			g_set_error (&amp;error, ODS_ERROR, ODS_ERROR_CONNECTION_ATTEMPT_FAILED,
+				     "Device not available");
+			func (-1, cb_data-&gt;imagingdata, error, cb_data-&gt;cb_data);
+			ods_bluez_cancellable_free (cb_data);
+			g_clear_error (&amp;error);
+			return NULL;
+		}
+		device = dbus_g_proxy_new_for_name (klass-&gt;connection, "org.bluez", device_path, "org.bluez.Device");
+
 		/* find services that match our UUID */
-		cb_data-&gt;dbus_call = dbus_g_proxy_begin_call (bluez-&gt;priv-&gt;adapter_proxy,
-								"GetRemoteServiceHandles",
+		cb_data-&gt;dbus_call = dbus_g_proxy_begin_call (device,
+								"DiscoverServices",
 								(DBusGProxyCallNotify) get_remote_service_handles_cb,
 								cb_data, NULL,
-								G_TYPE_STRING, cb_data-&gt;target_address,
 								G_TYPE_STRING, cb_data-&gt;uuid,
 								G_TYPE_INVALID);
 	} else {

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080917210907</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-09-17 21:09:07-0400</timestampReceived><subject>Re: Getting the driver to recognize my bluetooth device</subject><body>

you need to run hid2hci

here's another similar machine &amp; notes.
http://www.avalpa.com/assets/andrea/studio15/debian_on_dell_studio15.html

On Wed, Sep 17, 2008 at 2:50 PM, Bobby Beckmann &lt;bobby@optaros.com&gt; wrote:
&gt; Hi all,
&gt;
&gt; I'm trying to get my laptop's bluetooth chip to be recognized by the driver.
&gt; I have a Dell Latitude E6500 running 2.6.27-rc6. From lsusb, I get this
&gt; output:
&gt;
&gt; Bus 003 Device 002: ID 0a5c:4500 Broadcom Corp.
&gt; Device Descriptor:
&gt;  bLength                18
&gt;  bDescriptorType         1
&gt;  bcdUSB               2.00
&gt;  bDeviceClass            9 Hub
&gt;  bDeviceSubClass         0 Unused
&gt;  bDeviceProtocol         0 Full speed (or root) hub
&gt;  bMaxPacketSize0         8
&gt;  idVendor           0x0a5c Broadcom Corp.
&gt;  idProduct          0x4500
&gt;  bcdDevice            1.00
&gt;  iManufacturer           1 Broadcom
&gt;  iProduct                2 BCM2046B1
&gt;
&gt;
&gt;
&gt; Now, the device is reporting that it's a hub, but the product is most
&gt; certainly a bluetooth chip from Broadcom. I tried adding the 0a5c:4500 to
&gt; the btusb driver, but the driver didn't seem to try to initialize the
&gt; device. Does anyone have any ideas on what I could do to debug this?
&gt;
&gt; Thanks for your help,
&gt; Bobby
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth"
&gt; in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;



-- 
Brad
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913002150</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-09-13 00:21:50-0400</timestampReceived><subject>Input pairing broken again</subject><body>

Using the wizard to pair with my Anycom BTM-100 mouse is broken by
commit 58d8ea3c (Make discovery service routine to search for driver
uuids.)

I think the pairing actually works OK, but it takes so long that the
wizard times out, and doesn't bother to connect the new input device.
Looking at the dump at http://david.woodhou.se/btmouse-fail.dump it
seems to be taking about 30 seconds.

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080917205045</emailId><senderName>Bobby Beckmann</senderName><senderEmail>bobby@optaros.com</senderEmail><timestampReceived>2008-09-17 20:50:45-0400</timestampReceived><subject>Getting the driver to recognize my bluetooth device</subject><body>

Hi all,

I'm trying to get my laptop's bluetooth chip to be recognized by the 
driver. I have a Dell Latitude E6500 running 2.6.27-rc6. From lsusb, I 
get this output:

Bus 003 Device 002: ID 0a5c:4500 Broadcom Corp.
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0         8
  idVendor           0x0a5c Broadcom Corp.
  idProduct          0x4500
  bcdDevice            1.00
  iManufacturer           1 Broadcom
  iProduct                2 BCM2046B1



Now, the device is reporting that it's a hub, but the product is most 
certainly a bluetooth chip from Broadcom. I tried adding the 0a5c:4500 
to the btusb driver, but the driver didn't seem to try to initialize the 
device. Does anyone have any ideas on what I could do to debug this?

Thanks for your help,
Bobby
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080919222036</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-09-19 22:20:36-0400</timestampReceived><subject>Data on eglib vs glib, implications for embedded use of bluez</subject><body>

To bluez developers,

With bluez 4.x, support for Embedded GLIB (EGLib) support was dropped,
and GLib became a requirement for bluez.

This presents some challenges for embedded platforms. I want to
present some data from my experience of using both glib and eglib with
bluez 4.6, and suggest that eglib become a supported option for bluez.

-- Size of GLIB compared to EGLIB --

compiled size of glib static library (see file list later) VS eglib:
            RAW   STRIPPED
libglib.a   2147 k       695 k
libeglib.a   137 k        37 k

compiled size of bluetoothd w/glib compared to bluetoothd w/eglib
                    RAW   STRIPPED
bluetoothd w/glib  1489 k       462 k
bluetoothd w/eglib  530 k       117 k

** bluetoothd _triples_ in size when using glib **

This was for the Android platform - an embedded ARM Linux platform
with our own libc implementation.
glib was compiled statically using only the source files required for
bluetoothd, which are listed at the bottom of this email.
glib has other dependencies that I stubbed out and haven't included in
this data, such as libintl and libiconv. These (if actually required)
would further increase the penalty of using glib.


-- Challenges porting GLIB to a lightweight ARM Linux platform --

We only ported the subset of GLIB needed for bluetoothd, and
customized config.h for the features our platform supported, but still
came across these issues:

- gutils.c expects the platform to have Desktop linux features such as
passwd files, real names for each user etc. I had to stub out
setpwent(), pw_gecos and some friends. Yes bluetoothd requires
gutils.c
- Our libc does not implement bindtextdomain(), dngettext(),
dgettext(), localeconv()  which are required for gstrfuncs.c and
gutf8.c. I had to stub them out. These are language translation
features which for many embedded platforms it does not make sense to
support in libc.
- Had to stub out references to libintl, libiconv and libcharset -
again these are translation libraries.

In short, GLIB requires significant modification to compile for a
embedded platform such as Android. These modification are in areas of
code that are required to compile and link, but are code paths that
bluetoothd probably never hits (translation, locales etc). This lack
of modularity suggests that glib was never designed for very
lightweight platforms such as embedded. I am worried about what other
problem we would come across once we start running smoke tests of this
binary etc.


-- Experience building bluetoothd 4.6 with EGLIB from bluez 3.36 --

It was surprisingly easy to compile bluetoothd 4.6 using the eglib
library from bluez 3.36. The only missing functions from eglib were
g_key_file_set_list_separator
g_option_context_add_main_entries
g_option_context_parse
g_option_context_free

For these tests, I just stubbed these out with some simple code. This
allows us to compile bluetoothd with eglib, and it runs and passes
some smoke tests. It would not be a big effort to add these functions
to eglib, and I plan on doing so.


-- Going forwards --

For Android it is a clear win to use eglib rather than glib, and we
will very likely do so once we move to bluez 4.x.  I expect many other
embedded platforms will come to the same conclusions. Glib is simply
too bloated and has too many dependencies for many embedded platforms,
and on the other hand it is very easy today to continue using eglib.

Once I have a patch to add the missing functions to eglib, what do the
bluez developers think about returning eglib to the bluez codebase, to
make life easier for embedded developers?

If we do not, then the danger going forwards is that Desktop Bluez
developers will use more and more Desktop orientated features from
glib that are not easily ported to eglib. Without eglib being a
supported configuration, it would require strong discipline from Bluez
to avoid glib features that are not easily ported to embedded.

I guess it comes down to whether Bluez wants to support an embedded
configuration. If Bluez is happy to abandon embedded, then they can
forget eglib. But it Bluez is serious about supporting embedded
configurations, it should keep eglib as a supported option in my
opinion.

I understand that one concern about eglib support is a lack of
maintenance. I would be happy to help out with eglib support.

If supporting eglib is not an option, I am very much interested to
hear the specific reasons as to why not. Is it due to eglib bugs? lack
of eglib features (which ones)? or is embedded just not significant
enough to be a concern?

Perhaps this can be discussed further in Portland.

Nick

PS Marcel - Mono no longer contains an eglib implementation. I haven't
heard back from any of there dev's on what happened to it.


NOTES:

GLIB sources required for bluetoothd
    glib/garray.c \
    glib/gatomic.c \
    glib/gdataset.c \
    glib/gconvert.c \
    glib/gerror.c \
    glib/ghash.c \
    glib/gfileutils.c \
    glib/giochannel.c \
    glib/giounix.c \
    glib/glist.c \
    glib/gkeyfile.c \
    glib/gmain.c \
    glib/gmem.c \
    glib/gmessages.c \
    glib/goption.c \
    glib/gpattern.c \
    glib/gprintf.c \
    glib/grand.c \
    glib/gslice.c \
    glib/gslist.c \
    glib/gstdio.c \
    glib/gstrfuncs.c \
    glib/gstring.c \
    glib/gprimes.c \
    glib/gqsort.c \
    glib/gtestutils.c \
    glib/gthread.c \
    glib/gtimer.c \
    glib/guniprop.c \
    glib/gunidecomp.c \
    glib/gutils.c \
    glib/gutf8.c \
    gmodule/gmodule.c
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080916225123</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-09-16 22:51:23-0400</timestampReceived><subject>btusb suspend/resume bug...</subject><body>


Marcel, others, please bring some kind of closure to this
regression list entry:

Bug-Entry	: http://bugzilla.kernel.org/show_bug.cgi?id=11442
Subject		: btusb hibernation/suspend breakage in current -git
Submitter	: Rafael J. Wysocki &lt;rjw@sisk.pl&gt;
Date		: 2008-08-25 11:37 (19 days old)
References	: http://marc.info/?l=linux-bluetooth&amp;m=121966402012074&amp;w=4
Handled-By	: Oliver Neukum &lt;oliver@neukum.org&gt;
Patch		: http://marc.info/?l=linux-bluetooth&amp;m=121967226027323&amp;w=4

There is a patch, it is tested, so the only course of action at
this point is to merge the fix or declare that this really isn't
a regression.

My impression is the later, because the driver btusb is replacing
doesn't handle suspend/resume either.  Isn't that right?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923130000</emailId><senderName>martin f krafft</senderName><senderEmail>madduck@madduck.net</senderEmail><timestampReceived>2008-09-23 13:00:00-0400</timestampReceived><subject>Re: [Bluez-devel] "unable to install hw params" to bluetooth (SCO)</subject><body>

also sprach Marcel Holtmann &lt;marcel@holtmann.org&gt; [2008.09.05.1900 +0200]:
&gt; actually I have none. It simply works for me. And I have tested it a
&gt; lot. There are some rare conditions where the btusb driver is off on the
&gt; 16-bit boundaries, but I am looking at a fix for it. However this will
&gt; not disturb the audio service. You just don't here anything.

Ported original thread from SF list:
  http://article.gmane.org/gmane.linux.bluez.devel/16060

I can reproduce the exact same error with a BT250 hooked up via
a different bluetooth adapter to an amd64 machine this time (the
last one was i386), running 2.6.26.

Stuart Pook told me about bluez-utils 4.4 [0] - I am still using 3.36
[1], but the wiki page says that I need 3.16 or newer. Would
I have better luck with 4.4? Where does this stuff come in anyway?
I am running hcid in the background, but I know too little about
ALSA or Bluetooth to be able to see how the two interlink. The wiki
mentions a btaudiod, which 3.36 seems not to have. Is that needed?

0. http://article.gmane.org/gmane.linux.bluez.devel/16113
1. http://bugs.debian.org/499529

-- 
martin | http://madduck.net/ | http://two.sentenc.es/
 
"sometimes the urge to do bad is nearly overpowering"
                                                          -- ben horne
 
spamtraps: madduck.bogus@madduck.net

["digital_signature_gpg.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080922121055</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-09-22 12:10:55-0400</timestampReceived><subject>OpenOBEX ObexFTPd problem on BlueZ</subject><body>

Hi,


I have the BlueZ utilities cross-compiled to a particular Arm- target, and cannot get \
the openobex working.

I start of the server, 
$ hcid -s 
$ hciattach -- with relevant parameters
$ hciconfig -a -- doesnt show any Service classes
$ obexftpd -c ./ -b -- throws up a msg waiting for connection
$ hciconfig -a -- now shows the Capturing, Object transfer as service classes


But If I start an windows application, to connect to this device, it shows services \
not found.

Any other hints as to properly starting off obexftpd and using obexftp client?


--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080923181944</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-09-23 18:19:44-0400</timestampReceived><subject>[PATCH] Advertise telephony service class for handsfree AG role, for Nokia 616 support.</subject><body>

The Nokia 616 incorrectly requires the telehony bit to be set to make a
handsfree connection.
---
 src/sdpd-service.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/src/sdpd-service.c b/src/sdpd-service.c
index 30aad32..f138d22 100644
--- a/src/sdpd-service.c
+++ b/src/sdpd-service.c
@@ -121,6 +121,13 @@ static void update_svclass_list(void)
 		case HANDSFREE_SVCLASS_ID:
 			val |= 0x20;	/* Audio */
 			break;
+		/* For Nokia 616 carkit compatability - it incorrectly requires
+		 * the telephony bit set for handsfree usage, despite this not
+		 * being a requirement of the handsfree spec.
+		 */
+		case HANDSFREE_SVCLASS_ID:
+			val |= 0x40;    /* Telephony */
+			break;
 		case CORDLESS_TELEPHONY_SVCLASS_ID:
 		case INTERCOM_SVCLASS_ID:
 		case FAX_SVCLASS_ID:
-- 
1.5.5

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080909141929</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-09 14:19:29-0400</timestampReceived><subject>Packaging question</subject><body>

Hi,

I'm packaging bluez-4.4 right now and just wanted to gather opinions about the
package naming (it might be good if distributions could agree on consistent
naming of packages).

So how is everybody going to name the packages? The "old" ones for bluez-3.x
were easy:

- either bluez-libs or libbluetooth2 for the libs
- bluez-utils for the hcid and hciconfig and related stuff
- bluez-audio for the audio stuff (packaged separately because of
  the dependencies
- bluez-cups for the cups backend

From a first glance, I'd just keep the package-naming as is, but since it is a
major version update anyway, if we want to change it, now might be a good time
 ;-)

Opinions, anyone?

-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080910221545</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-10 22:15:45-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Stefan,

&gt; I'm packaging bluez-4.4 right now and just wanted to gather opinions about the
&gt; package naming (it might be good if distributions could agree on consistent
&gt; naming of packages).
&gt; 
&gt; So how is everybody going to name the packages? The "old" ones for bluez-3.x
&gt; were easy:
&gt; 
&gt; - either bluez-libs or libbluetooth2 for the libs
&gt; - bluez-utils for the hcid and hciconfig and related stuff
&gt; - bluez-audio for the audio stuff (packaged separately because of
&gt;   the dependencies
&gt; - bluez-cups for the cups backend
&gt; 
&gt; From a first glance, I'd just keep the package-naming as is, but since it is a
&gt; major version update anyway, if we want to change it, now might be a good time
&gt;  ;-)
&gt; 
&gt; Opinions, anyone?

it seems that everybody is keeping the package names as they are. So
mainly you have bluez-utils and bluez-libs (libbluetooth in case of
Debian).

The bluez-audio is the wrong approach and I commented on it already
multiple times. Check the Fedora packages. So actual audio plugin should
be part of bluez-utils since it has no dependencies whatsoever. And yes,
it makes sense to have it without the ALSA and GStreamer plugins.

So Fedora has bluez-alsa (containing the libasound* bits) and
bluez-gstreamer (containing the libgst* bits).

Check http://people.redhat.com/bnocera/bluez/bluez.spec for details.

Personally I like to see the bluez-utils package vanish and we are just
using bluez as main package name. Adding a virtual package bluetooth
that install all BlueZ packages would be nice to have, too.

This would result in the following package names:

	bluez
	bluez-libs
	bluez-libs-devel
	bluez-cups
	bluez-alsa
	bluez-gstreamer

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080911084010</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-11 08:40:10-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Marcel,

Marcel Holtmann wrote:
&gt; Hi Stefan,

&gt; it seems that everybody is keeping the package names as they are. So
&gt; mainly you have bluez-utils and bluez-libs (libbluetooth in case of
&gt; Debian).

That's fine with me. I will also have to change the name to libbluetooth3 too
because of package naming conventions (library packages need to be named after
the librarys SONAME), but that should be fine.

&gt; The bluez-audio is the wrong approach and I commented on it already
&gt; multiple times. Check the Fedora packages. So actual audio plugin should
&gt; be part of bluez-utils since it has no dependencies whatsoever. And yes,
&gt; it makes sense to have it without the ALSA and GStreamer plugins.

Ok.

&gt; Check http://people.redhat.com/bnocera/bluez/bluez.spec for details.

Cool. I searched for some example bluez-4 spec file but did not find it ;-)

&gt; Personally I like to see the bluez-utils package vanish and we are just
&gt; using bluez as main package name. Adding a virtual package bluetooth
&gt; that install all BlueZ packages would be nice to have, too.
&gt; 
&gt; This would result in the following package names:
&gt; 
&gt; 	bluez
&gt; 	bluez-libs
&gt; 	bluez-libs-devel
&gt; 	bluez-cups
&gt; 	bluez-alsa
&gt; 	bluez-gstreamer

I like that too. I'd probably call it just "bluez-devel", since I won't have a
bluez-libs (and libbluetooth3-devel is bad).

What's important for me is that it is somehow consistent across distributions
(which might also make it easier for you, in case the usual "cannot compile
$foo" complaint is on the list, just tell them "install bluez-devel or
bluez-libs-devel", no need to check which distribution the reporter is
actually using).

So for now I'll go for the above list of packages, with libbluetooth3 instead
of bluez-libs.

Thanks,

	Stefan
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080912163448</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-12 16:34:48-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Stefan,

&gt; &gt; Personally I like to see the bluez-utils package vanish and we are just
&gt; &gt; using bluez as main package name. Adding a virtual package bluetooth
&gt; &gt; that install all BlueZ packages would be nice to have, too.
&gt; &gt; 
&gt; &gt; This would result in the following package names:
&gt; &gt; 
&gt; &gt; 	bluez
&gt; &gt; 	bluez-libs
&gt; &gt; 	bluez-libs-devel
&gt; &gt; 	bluez-cups
&gt; &gt; 	bluez-alsa
&gt; &gt; 	bluez-gstreamer
&gt; 
&gt; I like that too. I'd probably call it just "bluez-devel", since I won't have a
&gt; bluez-libs (and libbluetooth3-devel is bad).
&gt; 
&gt; What's important for me is that it is somehow consistent across distributions
&gt; (which might also make it easier for you, in case the usual "cannot compile
&gt; $foo" complaint is on the list, just tell them "install bluez-devel or
&gt; bluez-libs-devel", no need to check which distribution the reporter is
&gt; actually using).
&gt; 
&gt; So for now I'll go for the above list of packages, with libbluetooth3 instead
&gt; of bluez-libs.

the Fedora packaging guidelines are kinda clear about how to name
library packages. Same as for Debian. I don't know about SuSE.

This is basically about the build dependencies and changing the devel
package name means that you would need to adjust all sources relying on
it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080918103632</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-18 10:36:32-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Marcel,

Marcel Holtmann wrote:
&gt;&gt; So for now I'll go for the above list of packages, with libbluetooth3 instead
&gt;&gt; of bluez-libs.
&gt; 
&gt; the Fedora packaging guidelines are kinda clear about how to name
&gt; library packages. Same as for Debian. I don't know about SuSE.

The openSUSE packaging guidelines are what made me change the name to
libbluetooth3 ;)

&gt; This is basically about the build dependencies and changing the devel
&gt; package name means that you would need to adjust all sources relying on
&gt; it.

Yes, understood and considered. However, the build gurus solved that with some
RPM specfile magic for me ;)

Another question, also related to packaging:

How should the bluetoothd be started nowadays?

dbus-activation with a service-file like this one?
root@stoetzler:~# cat /usr/share/dbus-1/system-services/org.bluez.service
[D-BUS Service]
Name=org.bluez
Exec=/etc/init.d/bluetooth start
User=root

But then, who will start it before XDM fires up? Has anybody already hacked up
a nice way to just start it on adapter hotplug? Some HAL magic maybe?

I had that old udev rule hack that would call the init script at adapter
plugin, but that's ugly and racy (because it typically starts before DBus is
started).

Any innovative ideas?
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080918171620</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-18 17:16:20-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Marcel,

&gt; Another question, also related to packaging:
&gt; 
&gt; How should the bluetoothd be started nowadays?
&gt; 
&gt; dbus-activation with a service-file like this one?
&gt; root@stoetzler:~# cat /usr/share/dbus-1/system-services/org.bluez.service
&gt; [D-BUS Service]
&gt; Name=org.bluez
&gt; Exec=/etc/init.d/bluetooth start
&gt; User=root
&gt; 
&gt; But then, who will start it before XDM fires up? Has anybody already hacked up
&gt; a nice way to just start it on adapter hotplug? Some HAL magic maybe?
&gt; 
&gt; I had that old udev rule hack that would call the init script at adapter
&gt; plugin, but that's ugly and racy (because it typically starts before DBus is
&gt; started).
&gt; 
&gt; Any innovative ideas?

we had the discussion for Fedora and we want to start it via udev,
however then we need D-Bus before udev runs and that is not an option
right now. So the current solution is to just do it via init.d, but in
the future we want udev. The D-Bus service activation is nice, but makes
problems when you wanna use the mouse and keyboard early.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080918174006</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-18 17:40:06-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Marcel Holtmann wrote:
&gt;&gt; I had that old udev rule hack that would call the init script at adapter
&gt;&gt; plugin, but that's ugly and racy (because it typically starts before DBus is
&gt;&gt; started).
&gt;&gt;
&gt;&gt; Any innovative ideas?
&gt; 
&gt; we had the discussion for Fedora and we want to start it via udev,
&gt; however then we need D-Bus before udev runs and that is not an option
&gt; right now. So the current solution is to just do it via init.d, but in
&gt; the future we want udev.

What about the old hack that I had back in the old days that would let hcid
wait until D-Bus came up? ;-) One problem with init.d is that the daemon is
running, even if there is no device plugged in...

&gt; The D-Bus service activation is nice, but makes
&gt; problems when you wanna use the mouse and keyboard early.

Yes, I already noticed that :)
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080918203937</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-18 20:39:37-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Stefan,

&gt; &gt; we had the discussion for Fedora and we want to start it via udev,
&gt; &gt; however then we need D-Bus before udev runs and that is not an option
&gt; &gt; right now. So the current solution is to just do it via init.d, but in
&gt; &gt; the future we want udev.
&gt; 
&gt; What about the old hack that I had back in the old days that would let hcid
&gt; wait until D-Bus came up? ;-) One problem with init.d is that the daemon is
&gt; running, even if there is no device plugged in...

if we go always polling the D-Bus and try to re-connect it is bad, too.
The solution is to make sure that D-Bus is always running and will never
die. Everything else is just wrong and will break.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923182544</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-09-23 18:25:44-0400</timestampReceived><subject>[PATCH] Advertise telephony service class for handsfree AG role, for Nokia 616 support.</subject><body>

The Nokia 616 incorrectly requires the telehony bit to be set to make a
handsfree connection.
---
 src/sdpd-service.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/src/sdpd-service.c b/src/sdpd-service.c
index 30aad32..12c999c 100644
--- a/src/sdpd-service.c
+++ b/src/sdpd-service.c
@@ -121,6 +121,13 @@ static void update_svclass_list(void)
 		case HANDSFREE_SVCLASS_ID:
 			val |= 0x20;	/* Audio */
 			break;
+		/* For Nokia 616 carkit compatability - it incorrectly requires
+		 * the telephony bit set on the HFP AG, despite this not
+		 * being a requirement of the handsfree spec.
+		 */
+		case HANDSFREE_AGW_SVCLASS_ID:
+			val |= 0x40;    /* Telephony */
+			break;
 		case CORDLESS_TELEPHONY_SVCLASS_ID:
 		case INTERCOM_SVCLASS_ID:
 		case FAX_SVCLASS_ID:
-- 
1.5.5

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825113714</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-25 11:37:14-0400</timestampReceived><subject>btusb hibernation/suspend breakage in current -git</subject><body>

Hi,

Speaking of btusb, I'm obseving a reproducible breakage of suspend and
hibernation (for hibernation it's 100% reproducible, for suspend to RAM about
50%) on my hp nx6325 with the current -git kernel.

The system crashes as soon as user space is thawed after a resume and it's
sufficient to switch the bluetooth subsystem off to avoid this.  After such a
crash I'm usually unable to get any information from the box (from the stack
traces I've seen once after such a crash it looks like interrupt handlers are
involved somehow).

Since the bluetooth adapter in this box is apparently handled by btusb, I'm
suspecting the problem may be related to it or to the USB subsystem (ehci-hcd
in particular).  I'm going to debug it further, but if you have any ideas to
try, I'll appreciate any help.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825115310</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-25 11:53:10-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Montag 25 August 2008 13:37:14 schrieb Rafael J. Wysocki:
&gt; Since the bluetooth adapter in this box is apparently handled by btusb, I'm
&gt; suspecting the problem may be related to it or to the USB subsystem (ehci-hcd
&gt; in particular).  I'm going to debug it further, but if you have any ideas to
&gt; try, I'll appreciate any help.

btusb in current git doesn't implement suspend/resume. Thus the driver will be
unbound. Possibly the bluetooth subsystem cannot stand that while suspended.

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825115550</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-25 11:55:50-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Hi Oliver,

&gt;&gt; Since the bluetooth adapter in this box is apparently handled by  
&gt;&gt; btusb, I'm
&gt;&gt; suspecting the problem may be related to it or to the USB subsystem  
&gt;&gt; (ehci-hcd
&gt;&gt; in particular).  I'm going to debug it further, but if you have any  
&gt;&gt; ideas to
&gt;&gt; try, I'll appreciate any help.
&gt;
&gt; btusb in current git doesn't implement suspend/resume. Thus the  
&gt; driver will be
&gt; unbound. Possibly the bluetooth subsystem cannot stand that while  
&gt; suspended.

that should work. It then really looks like a bug. Something more  
weird must be going on here.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825124517</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-25 12:45:17-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Hi!

&gt; Speaking of btusb, I'm obseving a reproducible breakage of suspend and
&gt; hibernation (for hibernation it's 100% reproducible, for suspend to RAM about
&gt; 50%) on my hp nx6325 with the current -git kernel.

I have been using btusb + s2ram for quite a long now... (and major
difference between hci_usb and btusb is that btusb will not randomly
corrupt memory when suspending with bluetooth in use...) lets see if I
can update to latest git...
									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080825135045</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-25 13:50:45-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Montag 25 August 2008 13:54:31 schrieb Marcel Holtmann:
&gt; Oliver, can you come up with a small test patch, that just kills all  
&gt; URB when suspend and submits the interrupt ones at resume. Such a  
&gt; patch might have to be merged for 2.6.27 if it fixes this problem.

Rafael,

this patch implemts suspend/resume for btusb and fixes a disconnect
problem. Does it help you?

	Regards
		Oliver

---

--- linux-2.6.27-rc4/drivers/usb/core/urb.c	2008-08-21 10:03:44.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-22 17:25:49.000000000 +0200
@@ -601,15 +601,20 @@ EXPORT_SYMBOL_GPL(usb_kill_anchored_urbs
 void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
 {
 	struct urb *victim;
+	unsigned long flags;
 
-	spin_lock_irq(&amp;anchor-&gt;lock);
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	while (!list_empty(&amp;anchor-&gt;urb_list)) {
 		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
 				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 		/* this will unanchor the URB */
 		usb_unlink_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	}
-	spin_unlock_irq(&amp;anchor-&gt;lock);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 }
 EXPORT_SYMBOL_GPL(usb_unlink_anchored_urbs);
 
--- linux-2.6.27-rc4/drivers/bluetooth/btusb.c.alt	2008-08-25 15:02:14.000000000 +0200
+++ linux-2.6.27-rc4/drivers/bluetooth/btusb.c	2008-08-25 15:44:25.000000000 +0200
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,6 +177,7 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
@@ -189,6 +191,7 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int susp_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -227,7 +230,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +243,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +265,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -311,7 +314,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +327,19 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +349,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -514,7 +518,7 @@ static int btusb_open(struct hci_dev *hd
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_KERNEL);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,6 +527,13 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -532,14 +543,12 @@ static int btusb_close(struct hci_dev *h
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
 
 	return 0;
 }
@@ -672,8 +681,19 @@ static void btusb_notify(struct hci_dev
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -724,18 +744,6 @@ static void btusb_work(struct work_struc
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
-
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
@@ -821,6 +829,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -889,7 +898,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,20 +930,92 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
 };
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826093604</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-26 09:36:04-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

[Sorry for the delayed reply.]

On Monday, 25 of August 2008, Oliver Neukum wrote:
&gt; Am Montag 25 August 2008 13:54:31 schrieb Marcel Holtmann:
&gt; &gt; Oliver, can you come up with a small test patch, that just kills all  
&gt; &gt; URB when suspend and submits the interrupt ones at resume. Such a  
&gt; &gt; patch might have to be merged for 2.6.27 if it fixes this problem.
&gt; 
&gt; Rafael,
&gt; 
&gt; this patch implemts suspend/resume for btusb and fixes a disconnect
&gt; problem. Does it help you?

Yes, the patch appears to help.

I haven't had a single crash since I applied it.  I'm going to test it a bit
more today, though.

&gt; ---

BTW, this change:

&gt; --- linux-2.6.27-rc4/drivers/usb/core/urb.c	2008-08-21 10:03:44.000000000 +0200
&gt; +++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-22 17:25:49.000000000 +0200
&gt; @@ -601,15 +601,20 @@ EXPORT_SYMBOL_GPL(usb_kill_anchored_urbs
&gt;  void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
&gt;  {
&gt;  	struct urb *victim;
&gt; +	unsigned long flags;
&gt;  
&gt; -	spin_lock_irq(&amp;anchor-&gt;lock);
&gt; +	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
&gt;  	while (!list_empty(&amp;anchor-&gt;urb_list)) {
&gt;  		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
&gt;  				    anchor_list);
&gt; +		usb_get_urb(victim);
&gt; +		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
&gt;  		/* this will unanchor the URB */
&gt;  		usb_unlink_urb(victim);
&gt; +		usb_put_urb(victim);
&gt; +		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
&gt;  	}
&gt; -	spin_unlock_irq(&amp;anchor-&gt;lock);
&gt; +	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
&gt;  }
&gt;  EXPORT_SYMBOL_GPL(usb_unlink_anchored_urbs);
&gt;

is apparently already in the mainline.

Thanks,
Rafael


&gt; --- linux-2.6.27-rc4/drivers/bluetooth/btusb.c.alt	2008-08-25 15:02:14.000000000 +0200
&gt; +++ linux-2.6.27-rc4/drivers/bluetooth/btusb.c	2008-08-25 15:44:25.000000000 +0200
&gt; @@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
&gt;  struct btusb_data {
&gt;  	struct hci_dev       *hdev;
&gt;  	struct usb_device    *udev;
&gt; +	struct usb_interface *acl;
&gt;  	struct usb_interface *isoc;
&gt;  
&gt;  	spinlock_t lock;
&gt; @@ -176,6 +177,7 @@ struct btusb_data {
&gt;  	unsigned long flags;
&gt;  
&gt;  	struct work_struct work;
&gt; +	struct work_struct waker;
&gt;  
&gt;  	struct usb_anchor tx_anchor;
&gt;  	struct usb_anchor intr_anchor;
&gt; @@ -189,6 +191,7 @@ struct btusb_data {
&gt;  	struct usb_endpoint_descriptor *isoc_rx_ep;
&gt;  
&gt;  	int isoc_altsetting;
&gt; +	int susp_count;
&gt;  };
&gt;  
&gt;  static void btusb_intr_complete(struct urb *urb)
&gt; @@ -227,7 +230,7 @@ static void btusb_intr_complete(struct u
&gt;  	}
&gt;  }
&gt;  
&gt; -static int btusb_submit_intr_urb(struct hci_dev *hdev)
&gt; +static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
&gt;  {
&gt;  	struct btusb_data *data = hdev-&gt;driver_data;
&gt;  	struct urb *urb;
&gt; @@ -240,13 +243,13 @@ static int btusb_submit_intr_urb(struct
&gt;  	if (!data-&gt;intr_ep)
&gt;  		return -ENODEV;
&gt;  
&gt; -	urb = usb_alloc_urb(0, GFP_ATOMIC);
&gt; +	urb = usb_alloc_urb(0, gfp);
&gt;  	if (!urb)
&gt;  		return -ENOMEM;
&gt;  
&gt;  	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
&gt;  
&gt; -	buf = kmalloc(size, GFP_ATOMIC);
&gt; +	buf = kmalloc(size, gfp);
&gt;  	if (!buf) {
&gt;  		usb_free_urb(urb);
&gt;  		return -ENOMEM;
&gt; @@ -262,7 +265,7 @@ static int btusb_submit_intr_urb(struct
&gt;  
&gt;  	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
&gt;  
&gt; -	err = usb_submit_urb(urb, GFP_ATOMIC);
&gt; +	err = usb_submit_urb(urb, gfp);
&gt;  	if (err &lt; 0) {
&gt;  		BT_ERR("%s urb %p submission failed (%d)",
&gt;  						hdev-&gt;name, urb, -err);
&gt; @@ -311,7 +314,7 @@ static void btusb_bulk_complete(struct u
&gt;  	}
&gt;  }
&gt;  
&gt; -static int btusb_submit_bulk_urb(struct hci_dev *hdev)
&gt; +static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
&gt;  {
&gt;  	struct btusb_data *data = hdev-&gt;driver_data;
&gt;  	struct urb *urb;
&gt; @@ -324,18 +327,19 @@ static int btusb_submit_bulk_urb(struct
&gt;  	if (!data-&gt;bulk_rx_ep)
&gt;  		return -ENODEV;
&gt;  
&gt; -	urb = usb_alloc_urb(0, GFP_KERNEL);
&gt; +	urb = usb_alloc_urb(0, gfp);
&gt;  	if (!urb)
&gt;  		return -ENOMEM;
&gt;  
&gt;  	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
&gt;  
&gt; -	buf = kmalloc(size, GFP_KERNEL);
&gt; +	buf = kmalloc(size, gfp);
&gt;  	if (!buf) {
&gt;  		usb_free_urb(urb);
&gt;  		return -ENOMEM;
&gt;  	}
&gt;  
&gt; +	usb_mark_last_busy(data-&gt;udev);
&gt;  	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
&gt;  
&gt;  	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
&gt; @@ -345,7 +349,7 @@ static int btusb_submit_bulk_urb(struct
&gt;  
&gt;  	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
&gt;  
&gt; -	err = usb_submit_urb(urb, GFP_KERNEL);
&gt; +	err = usb_submit_urb(urb, gfp);
&gt;  	if (err &lt; 0) {
&gt;  		BT_ERR("%s urb %p submission failed (%d)",
&gt;  						hdev-&gt;name, urb, -err);
&gt; @@ -514,7 +518,7 @@ static int btusb_open(struct hci_dev *hd
&gt;  	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
&gt;  		return 0;
&gt;  
&gt; -	err = btusb_submit_intr_urb(hdev);
&gt; +	err = btusb_submit_intr_urb(hdev, GFP_KERNEL);
&gt;  	if (err &lt; 0) {
&gt;  		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
&gt;  		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
&gt; @@ -523,6 +527,13 @@ static int btusb_open(struct hci_dev *hd
&gt;  	return err;
&gt;  }
&gt;  
&gt; +static void btusb_stop_traffic(struct btusb_data *data)
&gt; +{
&gt; +	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
&gt; +	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; +	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
&gt; +}
&gt; +
&gt;  static int btusb_close(struct hci_dev *hdev)
&gt;  {
&gt;  	struct btusb_data *data = hdev-&gt;driver_data;
&gt; @@ -532,14 +543,12 @@ static int btusb_close(struct hci_dev *h
&gt;  	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
&gt;  		return 0;
&gt;  
&gt; -	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
&gt; -	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
&gt; +	flush_work(&amp;data-&gt;work);
&gt;  
&gt; +	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
&gt;  	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; -	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; -
&gt;  	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
&gt; -	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
&gt; +	btusb_stop_traffic(data);
&gt;  
&gt;  	return 0;
&gt;  }
&gt; @@ -672,8 +681,19 @@ static void btusb_notify(struct hci_dev
&gt;  
&gt;  	BT_DBG("%s evt %d", hdev-&gt;name, evt);
&gt;  
&gt; -	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
&gt; -		schedule_work(&amp;data-&gt;work);
&gt; +	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
&gt; +		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
&gt; +			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
&gt; +				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +			else
&gt; +				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
&gt; +		}
&gt; +	} else {
&gt; +		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; +	}
&gt; +
&gt; +	schedule_work(&amp;data-&gt;work);
&gt;  }
&gt;  
&gt;  static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
&gt; @@ -724,18 +744,6 @@ static void btusb_work(struct work_struc
&gt;  	struct btusb_data *data = container_of(work, struct btusb_data, work);
&gt;  	struct hci_dev *hdev = data-&gt;hdev;
&gt;  
&gt; -	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
&gt; -		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
&gt; -			if (btusb_submit_bulk_urb(hdev) &lt; 0)
&gt; -				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; -			else
&gt; -				btusb_submit_bulk_urb(hdev);
&gt; -		}
&gt; -	} else {
&gt; -		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; -		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; -	}
&gt; -
&gt;  	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
&gt;  		if (data-&gt;isoc_altsetting != 2) {
&gt;  			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
&gt; @@ -821,6 +829,7 @@ static int btusb_probe(struct usb_interf
&gt;  	}
&gt;  
&gt;  	data-&gt;udev = interface_to_usbdev(intf);
&gt; +	data-&gt;acl = intf;
&gt;  
&gt;  	spin_lock_init(&amp;data-&gt;lock);
&gt;  
&gt; @@ -889,7 +898,7 @@ static int btusb_probe(struct usb_interf
&gt;  
&gt;  	if (data-&gt;isoc) {
&gt;  		err = usb_driver_claim_interface(&amp;btusb_driver,
&gt; -							data-&gt;isoc, NULL);
&gt; +							data-&gt;isoc, data);
&gt;  		if (err &lt; 0) {
&gt;  			hci_free_dev(hdev);
&gt;  			kfree(data);
&gt; @@ -921,20 +930,92 @@ static void btusb_disconnect(struct usb_
&gt;  
&gt;  	hdev = data-&gt;hdev;
&gt;  
&gt; -	if (data-&gt;isoc)
&gt; -		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
&gt; +	/* make sure we have a reference */
&gt; +	__hci_dev_hold(hdev);
&gt;  
&gt; -	usb_set_intfdata(intf, NULL);
&gt; +	usb_set_intfdata(data-&gt;acl, NULL);
&gt; +	if (data-&gt;isoc)
&gt; +		usb_set_intfdata(data-&gt;isoc, NULL);
&gt;  
&gt; +	/* unregister before releasing any interface */
&gt;  	hci_unregister_dev(hdev);
&gt;  
&gt; +	if (intf == data-&gt;isoc)
&gt; +		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
&gt; +	else if (data-&gt;isoc)
&gt; +		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
&gt; +
&gt; +	/* release the reference */
&gt; +	__hci_dev_put(hdev);
&gt;  	hci_free_dev(hdev);
&gt;  }
&gt;  
&gt; +static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
&gt; +{
&gt; +	struct btusb_data *data = usb_get_intfdata(intf);
&gt; +
&gt; +	BT_DBG("%s called\n", __func__);
&gt; +
&gt; +	if (data-&gt;susp_count++)
&gt; +		return 0;
&gt; +
&gt; +	cancel_work_sync(&amp;data-&gt;work);
&gt; +	btusb_stop_traffic(data);
&gt; +	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
&gt; +	return 0;
&gt; +}
&gt; +
&gt; +static int btusb_resume(struct usb_interface *intf)
&gt; +{
&gt; +	struct btusb_data *data = usb_get_intfdata(intf);
&gt; +	struct hci_dev *hdev = data-&gt;hdev;
&gt; +	int ret;
&gt; +
&gt; +	if (--data-&gt;susp_count)
&gt; +		return 0;
&gt; +	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
&gt; +		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
&gt; +		if (ret &lt; 0) {
&gt; +			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
&gt; +			return ret;
&gt; +		}
&gt; +	}
&gt; +
&gt; +	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
&gt; +		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
&gt; +		if (ret &lt; 0) {
&gt; +			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +			return ret;
&gt; +		} else {
&gt; +			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
&gt; +			if (ret &lt; 0) {
&gt; +				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; +				return ret;
&gt; +			}
&gt; +		}
&gt; +	}
&gt; +
&gt; +	if (data-&gt;isoc) {
&gt; +		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
&gt; +			ret = btusb_submit_isoc_urb(hdev);
&gt; +			if (ret &lt; 0)
&gt; +				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
&gt; +			else
&gt; +				btusb_submit_isoc_urb(hdev);
&gt; +		}
&gt; +	}
&gt; +
&gt; +	schedule_work(&amp;data-&gt;work);
&gt; +	return 0;
&gt; +}
&gt; +
&gt;  static struct usb_driver btusb_driver = {
&gt;  	.name		= "btusb",
&gt;  	.probe		= btusb_probe,
&gt;  	.disconnect	= btusb_disconnect,
&gt; +	.suspend	= btusb_suspend,
&gt; +	.resume		= btusb_resume,
&gt;  	.id_table	= btusb_table,
&gt;  };
&gt;  
&gt; 
&gt; 
&gt; 


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826094319</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-26 09:43:19-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Dienstag 26 August 2008 11:36:04 schrieb Rafael J. Wysocki:
&gt; [Sorry for the delayed reply.]
&gt; 
&gt; On Monday, 25 of August 2008, Oliver Neukum wrote:
&gt; &gt; Am Montag 25 August 2008 13:54:31 schrieb Marcel Holtmann:
&gt; &gt; &gt; Oliver, can you come up with a small test patch, that just kills all  
&gt; &gt; &gt; URB when suspend and submits the interrupt ones at resume. Such a  
&gt; &gt; &gt; patch might have to be merged for 2.6.27 if it fixes this problem.
&gt; &gt; 
&gt; &gt; Rafael,
&gt; &gt; 
&gt; &gt; this patch implemts suspend/resume for btusb and fixes a disconnect
&gt; &gt; problem. Does it help you?
&gt; 
&gt; Yes, the patch appears to help.
&gt; 
&gt; I haven't had a single crash since I applied it.  I'm going to test it a bit
&gt; more today, though.

Good. Can you test what happens if you unplug the device while suspended
and hibernated?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826101008</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-26 10:10:08-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Tuesday, 26 of August 2008, Oliver Neukum wrote:
&gt; Am Dienstag 26 August 2008 11:36:04 schrieb Rafael J. Wysocki:
&gt; &gt; [Sorry for the delayed reply.]
&gt; &gt; 
&gt; &gt; On Monday, 25 of August 2008, Oliver Neukum wrote:
&gt; &gt; &gt; Am Montag 25 August 2008 13:54:31 schrieb Marcel Holtmann:
&gt; &gt; &gt; &gt; Oliver, can you come up with a small test patch, that just kills all  
&gt; &gt; &gt; &gt; URB when suspend and submits the interrupt ones at resume. Such a  
&gt; &gt; &gt; &gt; patch might have to be merged for 2.6.27 if it fixes this problem.
&gt; &gt; &gt; 
&gt; &gt; &gt; Rafael,
&gt; &gt; &gt; 
&gt; &gt; &gt; this patch implemts suspend/resume for btusb and fixes a disconnect
&gt; &gt; &gt; problem. Does it help you?
&gt; &gt; 
&gt; &gt; Yes, the patch appears to help.
&gt; &gt; 
&gt; &gt; I haven't had a single crash since I applied it.  I'm going to test it a bit
&gt; &gt; more today, though.
&gt; 
&gt; Good. Can you test what happens if you unplug the device while suspended
&gt; and hibernated?

It's built-in, I can't unplug it. :-)

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080922162727</emailId><senderName>"Denis Kenzior"</senderName><senderEmail>denis.kenzior@trolltech.com</senderEmail><timestampReceived>2008-09-22 16:27:27-0400</timestampReceived><subject>Re: OpenOBEX ObexFTPd problem on BlueZ</subject><body>

Hi,

You actually need to register the SDP record for the Windows application
to know what RFCOMM port to connect to.  You need to use sdptool or better
yet use the BlueZ DBUS API for registering SDP records.

To get you started, if you're using obexftpd as a PUSH server, use:
sdptool add --channel=&lt;obexftpd rfcomm channel&gt; opush
or ftp, use:
sdptool add --channel=&lt;obexftpd rfcomm channel&gt; ftp

If you want to use the BlueZ DBUS API, use the
AddServiceRecordFromXML and pass in the record in XML format.

To get a sample of how the XML record looks like, you can run:
sdptool get --xml &lt;record handle, most likely 0x10000&gt;

For more, I suggest you read the BlueZ DBUS API documentation.

Regards,
-Denis

&gt; Hi,
&gt;
&gt;
&gt; I have the BlueZ utilities cross-compiled to a particular Arm- target, and
&gt; cannot get the openobex working.
&gt;
&gt; I start of the server,
&gt; $ hcid -s
&gt; $ hciattach -- with relevant parameters
&gt; $ hciconfig -a -- doesnt show any Service classes
&gt; $ obexftpd -c ./ -b -- throws up a msg waiting for connection
&gt; $ hciconfig -a -- now shows the Capturing, Object transfer as service
&gt; classes
&gt;
&gt;
&gt; But If I start an windows application, to connect to this device, it shows
&gt; services not found.
&gt;
&gt; Any other hints as to properly starting off obexftpd and using obexftp
&gt; client?
&gt;



-----------------------------------------
Nokia Pty Ltd, Level 1, 53 Brandl St, Eight Mile Plains, 4113, Queensland, Australia
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923085153</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-09-23 08:51:53-0400</timestampReceived><subject>Re: OpenOBEX ObexFTPd problem on BlueZ</subject><body>

Thanks, the current situation works for me. 
Windows [MS generic bluetooth radio] bluetooth stack has send and recieve file \
features, for this...

If I run "obexftpd" on board and do a send file [without PASSKEY] feature, then it \
works.

If I click on recieve file on PC and do a obexftp it doesn't work.
However If I do a sdptool browse and get to know the channel number (1) and then give \
it to obexftp, it seems to work.

Now, the question...
1. How do I enable the passkey feature [bluepin doesn't exist in 3.36] ?
**All option of security in hcid.conf has the same effect...

2. How I check the services of my board, to make it work for other stacks??
[even the services request from current setup doesn;t seem to work, its like the sdp \
server is not started at all on blueZ side, even though the messages show it runs...]


Thanks in advance.



----- Original Message -----
From: Denis Kenzior &lt;denis.kenzior@trolltech.com&gt;
To: pavan savoy &lt;pavan_savoy@indiatimes.com&gt;
Cc: linux-bluetooth@vger.kernel.org
Sent: Mon, 22 Sep 2008 21:57:27 +0530 (IST)
Subject: Re: OpenOBEX ObexFTPd problem on BlueZ

Hi,

You actually need to register the SDP record for the Windows application
to know what RFCOMM port to connect to.  You need to use sdptool or better
yet use the BlueZ DBUS API for registering SDP records.

To get you started, if you're using obexftpd as a PUSH server, use:
sdptool add --channel=&lt;obexftpd rfcomm channel&gt; opush
or ftp, use:
sdptool add --channel=&lt;obexftpd rfcomm channel&gt; ftp

If you want to use the BlueZ DBUS API, use the
AddServiceRecordFromXML and pass in the record in XML format.

To get a sample of how the XML record looks like, you can run:
sdptool get --xml &lt;record handle, most likely 0x10000&gt;

For more, I suggest you read the BlueZ DBUS API documentation.

Regards,
-Denis

&gt; Hi,
&gt; 
&gt; 
&gt; I have the BlueZ utilities cross-compiled to a particular Arm- target, and
&gt; cannot get the openobex working.
&gt; 
&gt; I start of the server,
&gt; $ hcid -s
&gt; $ hciattach -- with relevant parameters
&gt; $ hciconfig -a -- doesnt show any Service classes
&gt; $ obexftpd -c ./ -b -- throws up a msg waiting for connection
&gt; $ hciconfig -a -- now shows the Capturing, Object transfer as service
&gt; classes
&gt; 
&gt; 
&gt; But If I start an windows application, to connect to this device, it shows
&gt; services not found.
&gt; 
&gt; Any other hints as to properly starting off obexftpd and using obexftp
&gt; client?
&gt; 



-----------------------------------------
Nokia Pty Ltd, Level 1, 53 Brandl St, Eight Mile Plains, 4113, Queensland, Australia



--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080917161749</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-17 16:17:49-0400</timestampReceived><subject>Re: btusb suspend/resume bug...</subject><body>

Hi Dave,

&gt; Marcel, others, please bring some kind of closure to this
&gt; regression list entry:
&gt; 
&gt; Bug-Entry	: http://bugzilla.kernel.org/show_bug.cgi?id=11442
&gt; Subject		: btusb hibernation/suspend breakage in current -git
&gt; Submitter	: Rafael J. Wysocki &lt;rjw@sisk.pl&gt;
&gt; Date		: 2008-08-25 11:37 (19 days old)
&gt; References	: http://marc.info/?l=linux-bluetooth&amp;m=121966402012074&amp;w=4
&gt; Handled-By	: Oliver Neukum &lt;oliver@neukum.org&gt;
&gt; Patch		: http://marc.info/?l=linux-bluetooth&amp;m=121967226027323&amp;w=4
&gt; 
&gt; There is a patch, it is tested, so the only course of action at
&gt; this point is to merge the fix or declare that this really isn't
&gt; a regression.
&gt; 
&gt; My impression is the later, because the driver btusb is replacing
&gt; doesn't handle suspend/resume either.  Isn't that right?

the original patch that I had was expecting changes in the USB subsystem
that I deemed to much at this point. However Oliver got a patch that
would make it work without the USB changes. I am still testing it.

Let me see if I get some free minutes during the PlumbersConf to get
this fully tested.

Actually hci_usb is handling suspend/resume to some degree. So we could
count this as regression.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080922062411</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-22 06:24:11-0400</timestampReceived><subject>Re: btusb suspend/resume bug...</subject><body>

Hi Dave,

&gt; &gt; Marcel, others, please bring some kind of closure to this
&gt; &gt; regression list entry:
&gt; &gt; 
&gt; &gt; Bug-Entry	: http://bugzilla.kernel.org/show_bug.cgi?id=11442
&gt; &gt; Subject		: btusb hibernation/suspend breakage in current -git
&gt; &gt; Submitter	: Rafael J. Wysocki &lt;rjw@sisk.pl&gt;
&gt; &gt; Date		: 2008-08-25 11:37 (19 days old)
&gt; &gt; References	: http://marc.info/?l=linux-bluetooth&amp;m=121966402012074&amp;w=4
&gt; &gt; Handled-By	: Oliver Neukum &lt;oliver@neukum.org&gt;
&gt; &gt; Patch		: http://marc.info/?l=linux-bluetooth&amp;m=121967226027323&amp;w=4
&gt; &gt; 
&gt; &gt; There is a patch, it is tested, so the only course of action at
&gt; &gt; this point is to merge the fix or declare that this really isn't
&gt; &gt; a regression.
&gt; &gt; 
&gt; &gt; My impression is the later, because the driver btusb is replacing
&gt; &gt; doesn't handle suspend/resume either.  Isn't that right?
&gt; 
&gt; the original patch that I had was expecting changes in the USB subsystem
&gt; that I deemed to much at this point. However Oliver got a patch that
&gt; would make it work without the USB changes. I am still testing it.
&gt; 
&gt; Let me see if I get some free minutes during the PlumbersConf to get
&gt; this fully tested.

so I took the patch apart and actually found a few more issues. I am not
sure if they should be applied this late in -rc phase.

Rafael, can you pull from my tree and test the changes:

git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/bluetooth-2.6.git

It would be interesting if these fixes are enough. Or if you need the
attached suspend/resume patch.

Regards

Marcel



["patch-btusb-suspend" (patch-btusb-suspend)]

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 6e455ac..0e9451b 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -193,6 +193,7 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int suspend_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -946,10 +947,71 @@ static void btusb_disconnect(struct usb_interface *intf)
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("intf %p", intf);
+
+	if (data-&gt;suspend_count++)
+		return 0;
+
+	cancel_work_sync(&amp;data-&gt;work);
+
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int err;
+
+	BT_DBG("intf %p", intf);
+
+	if (--data-&gt;suspend_count)
+		return 0;
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		return 0;
+
+	if (test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags)) {
+		err = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (err &lt; 0) {
+			clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
+			return err;
+		}
+	}
+
+	if (test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+		if (btusb_submit_bulk_urb(hdev, GFP_NOIO) &lt; 0)
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		else
+			btusb_submit_bulk_urb(hdev, GFP_NOIO);
+	}
+
+	if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+		if (btusb_submit_isoc_urb(hdev, GFP_NOIO) &lt; 0)
+			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+		else
+			btusb_submit_isoc_urb(hdev, GFP_NOIO);
+	}
+
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
 };
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080922214246</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-09-22 21:42:46-0400</timestampReceived><subject>Re: btusb suspend/resume bug...</subject><body>

On Monday, 22 of September 2008, Marcel Holtmann wrote:
&gt; Hi Dave,
&gt; 
&gt; &gt; &gt; Marcel, others, please bring some kind of closure to this
&gt; &gt; &gt; regression list entry:
&gt; &gt; &gt; 
&gt; &gt; &gt; Bug-Entry	: http://bugzilla.kernel.org/show_bug.cgi?id=11442
&gt; &gt; &gt; Subject		: btusb hibernation/suspend breakage in current -git
&gt; &gt; &gt; Submitter	: Rafael J. Wysocki &lt;rjw@sisk.pl&gt;
&gt; &gt; &gt; Date		: 2008-08-25 11:37 (19 days old)
&gt; &gt; &gt; References	: http://marc.info/?l=linux-bluetooth&amp;m=121966402012074&amp;w=4
&gt; &gt; &gt; Handled-By	: Oliver Neukum &lt;oliver@neukum.org&gt;
&gt; &gt; &gt; Patch		: http://marc.info/?l=linux-bluetooth&amp;m=121967226027323&amp;w=4
&gt; &gt; &gt; 
&gt; &gt; &gt; There is a patch, it is tested, so the only course of action at
&gt; &gt; &gt; this point is to merge the fix or declare that this really isn't
&gt; &gt; &gt; a regression.
&gt; &gt; &gt; 
&gt; &gt; &gt; My impression is the later, because the driver btusb is replacing
&gt; &gt; &gt; doesn't handle suspend/resume either.  Isn't that right?
&gt; &gt; 
&gt; &gt; the original patch that I had was expecting changes in the USB subsystem
&gt; &gt; that I deemed to much at this point. However Oliver got a patch that
&gt; &gt; would make it work without the USB changes. I am still testing it.
&gt; &gt; 
&gt; &gt; Let me see if I get some free minutes during the PlumbersConf to get
&gt; &gt; this fully tested.
&gt; 
&gt; so I took the patch apart and actually found a few more issues. I am not
&gt; sure if they should be applied this late in -rc phase.
&gt; 
&gt; Rafael, can you pull from my tree and test the changes:
&gt; 
&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/bluetooth-2.6.git
&gt; 
&gt; It would be interesting if these fixes are enough.

They appear to be enough.  I haven't had any suspend/resume failures with them
applied.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080920003951</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-20 00:39:51-0400</timestampReceived><subject>Re: Data on eglib vs glib, implications for embedded use of bluez</subject><body>

Hi Nick,

&gt; With bluez 4.x, support for Embedded GLIB (EGLib) support was dropped,
&gt; and GLib became a requirement for bluez.
&gt; 
&gt; This presents some challenges for embedded platforms. I want to
&gt; present some data from my experience of using both glib and eglib with
&gt; bluez 4.6, and suggest that eglib become a supported option for bluez.
&gt; 
&gt; -- Size of GLIB compared to EGLIB --
&gt; 
&gt; compiled size of glib static library (see file list later) VS eglib:
&gt;             RAW   STRIPPED
&gt; libglib.a   2147 k       695 k
&gt; libeglib.a   137 k        37 k
&gt; 
&gt; compiled size of bluetoothd w/glib compared to bluetoothd w/eglib
&gt;                     RAW   STRIPPED
&gt; bluetoothd w/glib  1489 k       462 k
&gt; bluetoothd w/eglib  530 k       117 k
&gt; 
&gt; ** bluetoothd _triples_ in size when using glib **

I assume that you are talking about GLib statically linked into
bluetoothd. Systems that already have GLib anyway benefit from it.

&gt; I guess it comes down to whether Bluez wants to support an embedded
&gt; configuration. If Bluez is happy to abandon embedded, then they can
&gt; forget eglib. But it Bluez is serious about supporting embedded
&gt; configurations, it should keep eglib as a supported option in my
&gt; opinion.
&gt; 
&gt; I understand that one concern about eglib support is a lack of
&gt; maintenance. I would be happy to help out with eglib support.

I can bring up a project that contains eglib and we maintain it outside
of bluez-4.x source code. You just have to install it first and if you
use pkg-config you would have a perfect drop-in replacement. If you
compile it by yourself you do whatever fits best.

&gt; If supporting eglib is not an option, I am very much interested to
&gt; hear the specific reasons as to why not. Is it due to eglib bugs? lack
&gt; of eglib features (which ones)? or is embedded just not significant
&gt; enough to be a concern?

As long as eglib has the same API as GLib it is not a problem of support
at all. We do that already. The main reason why we removed it from the
source code was that it just became a maintenance nightmare.

Do you have a problem to maintain it in a separate source tree and
release it as separate packages?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080920012324</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-09-20 01:23:24-0400</timestampReceived><subject>Re: Data on eglib vs glib, implications for embedded use of bluez</subject><body>

On Fri, Sep 19, 2008 at 5:39 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; With bluez 4.x, support for Embedded GLIB (EGLib) support was dropped,
&gt;&gt; and GLib became a requirement for bluez.
&gt;&gt;
&gt;&gt; This presents some challenges for embedded platforms. I want to
&gt;&gt; present some data from my experience of using both glib and eglib with
&gt;&gt; bluez 4.6, and suggest that eglib become a supported option for bluez.
&gt;&gt;
&gt;&gt; -- Size of GLIB compared to EGLIB --
&gt;&gt;
&gt;&gt; compiled size of glib static library (see file list later) VS eglib:
&gt;&gt;             RAW   STRIPPED
&gt;&gt; libglib.a   2147 k       695 k
&gt;&gt; libeglib.a   137 k        37 k
&gt;&gt;
&gt;&gt; compiled size of bluetoothd w/glib compared to bluetoothd w/eglib
&gt;&gt;                     RAW   STRIPPED
&gt;&gt; bluetoothd w/glib  1489 k       462 k
&gt;&gt; bluetoothd w/eglib  530 k       117 k
&gt;&gt;
&gt;&gt; ** bluetoothd _triples_ in size when using glib **
&gt;
&gt; I assume that you are talking about GLib statically linked into
&gt; bluetoothd.

Yes, I was using static linking.

&gt;
&gt;&gt; I guess it comes down to whether Bluez wants to support an embedded
&gt;&gt; configuration. If Bluez is happy to abandon embedded, then they can
&gt;&gt; forget eglib. But it Bluez is serious about supporting embedded
&gt;&gt; configurations, it should keep eglib as a supported option in my
&gt;&gt; opinion.
&gt;&gt;
&gt;&gt; I understand that one concern about eglib support is a lack of
&gt;&gt; maintenance. I would be happy to help out with eglib support.
&gt;
&gt; I can bring up a project that contains eglib and we maintain it outside
&gt; of bluez-4.x source code. You just have to install it first and if you
&gt; use pkg-config you would have a perfect drop-in replacement. If you
&gt; compile it by yourself you do whatever fits best.
&gt;
&gt;&gt; If supporting eglib is not an option, I am very much interested to
&gt;&gt; hear the specific reasons as to why not. Is it due to eglib bugs? lack
&gt;&gt; of eglib features (which ones)? or is embedded just not significant
&gt;&gt; enough to be a concern?
&gt;
&gt; As long as eglib has the same API as GLib it is not a problem of support
&gt; at all. We do that already. The main reason why we removed it from the
&gt; source code was that it just became a maintenance nightmare.
&gt;
&gt; Do you have a problem to maintain it in a separate source tree and
&gt; release it as separate packages?

The danger, as I suggested earlier, is that Bluez developers will
start using API's that are not already implemented in eglib, and do
not make sense to implement on an embedded platform.

I do not mind maintaining eglib, but I don't want it to become as
bloated as glib. Bluez needs to make a commitment to only use the
parts of the glib API that makes sense on embedded platforms as well
as Desktop platforms. Perhaps in Portland we can go through the API
and work out what parts of the API that would be.

If Bluez as a project could make that commitment, then I would be
happy to maintain eglib in a separate source tree.

Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080920073544</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-09-20 07:35:44-0400</timestampReceived><subject>Re: Data on eglib vs glib, implications for embedded use of bluez</subject><body>

+1 to maintain eglib out of BlueZ code, we already have enough trouble
with releases because eglib, this is not really a problem of BlueZ
using glib but glib being bloated so fixing glib by distributing eglib
on its place might fix everybody problems. If we got a replacement for
glib we would probably stick to it since glib is at least unreadable,
there is even a case where a 'if (0)' was being used in its code (I
really meant glib not eglib).

I remember Marcel commenting about a library which Lennart was
supposed to implement, something I would like libdbus itself supports,
which would be a low level dbus api + mainloop + helpers which most
system daemons would be using to get into dbus system bus. All daemons
require mainloops (including dbus-daemon itself) so this may probably
be an opportunity to get this done and remove glib dependency from
dbus system daemons space.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913021552</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-09-13 02:15:52-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

Hi David,

Could you please provide us the output of bluetoothd -dn and
dbus-monitor --system sender='org.bluez'?

If that is taking too long Im afraid we cannot search for drivers uuis
thus searching for l2cap uuid seems to be the only alternative.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913021725</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-09-13 02:17:25-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

On Fri, 2008-09-12 at 17:21 -0700, David Woodhouse wrote:
&gt; Using the wizard to pair with my Anycom BTM-100 mouse is broken by
&gt; commit 58d8ea3c (Make discovery service routine to search for driver
&gt; uuids.)
&gt; 
&gt; I think the pairing actually works OK, but it takes so long that the
&gt; wizard times out, and doesn't bother to connect the new input device.
&gt; Looking at the dump at http://david.woodhou.se/btmouse-fail.dump it
&gt; seems to be taking about 30 seconds.

diff --git a/src/device.c b/src/device.c
index b90861b..0e615be 100644
--- a/src/device.c
+++ b/src/device.c
@@ -975,8 +975,9 @@ static void browse_cb(sdp_list_t *recs, int err, gpointer user_data)
 	bdaddr_t src;
 	uuid_t uuid;
 
-	/* Public browsing successful or Single record requested */
-	if (err &lt; 0 || (!req-&gt;search_uuid &amp;&amp; recs))
+	/* If we have a valid response and req-&gt;search_uuid == 1, then
+	   public browsing was successful -- we don't need any more */
+	if (err &lt; 0 || (req-&gt;search_uuid == 1 &amp;&amp; recs))
 		goto done;
 
 	update_services(req, recs);
@@ -984,8 +985,8 @@ static void browse_cb(sdp_list_t *recs, int err, gpointer user_data)
 	adapter_get_address(adapter, &amp;src);
 
 	/* Search for mandatory uuids */
-	if (uuid_list[++req-&gt;search_uuid]) {
-		sdp_uuid16_create(&amp;uuid, uuid_list[req-&gt;search_uuid]);
+	if (uuid_list[req-&gt;search_uuid]) {
+		sdp_uuid16_create(&amp;uuid, uuid_list[req-&gt;search_uuid++]);
 		bt_search_service(&amp;src, &amp;device-&gt;bdaddr, &amp;uuid, browse_cb, user_data, NULL);
 		return;
 	}
@@ -1057,7 +1061,7 @@ int device_browse(struct btd_device *device, DBusConnection *conn,
 		memcpy(&amp;uuid, search, sizeof(uuid_t));
 		cb = search_cb;
 	} else {
-		sdp_uuid16_create(&amp;uuid, uuid_list[req-&gt;search_uuid]);
+		sdp_uuid16_create(&amp;uuid, uuid_list[req-&gt;search_uuid++]);
 		init_browse(req);
 		cb = browse_cb;
 	}
@@ -1072,7 +1076,7 @@ int device_browse(struct btd_device *device, DBusConnection *conn,
 						device, NULL);
 
 	return bt_search_service(&amp;src, &amp;device-&gt;bdaddr,
-					&amp;uuid, browse_cb, req, NULL);
+					&amp;uuid, cb, req, NULL);
 }
 
 struct btd_adapter *device_get_adapter(struct btd_device *device)


-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913023827</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-09-13 02:38:27-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

While we're at it, let's fix init_browse() not to abort completely when
it finds one driver asking for a UUID that another driver already
wanted, and to eliminate duplicates of the UUIDs in uuid_list[] too...

diff --git a/src/device.c b/src/device.c
index b90861b..cae29f8 100644
--- a/src/device.c
+++ b/src/device.c
@@ -1022,11 +1023,29 @@ static void init_browse(struct browse_req *req)
 
 		for (i = 0; driver-&gt;uuids[i]; i++) {
 			char *uuid;
-
+			int j;
+
+			/* Eliminate duplicates of UUIDs in uuid_list[]... */
+			if (strlen(driver-&gt;uuids[i]) == 36 &amp;&amp; 
+			    !strncmp(driver-&gt;uuids[i], "0000", 4) &amp;&amp;
+			    !strcasecmp(driver-&gt;uuids[i] + 8, 
+					"-0000-1000-8000-00805F9B34FB")) {
+				uint16_t uuid16 = strtol(driver-&gt;uuids[i],
+							 NULL, 16);
+				for (j = 0; uuid_list[j]; j++) {
+					if (uuid16 == uuid_list[j])
+						continue;
+				}
+					
+			}
+			/* ... and of UUIDs another driver already asked for */
 			if (g_slist_find_custom(req-&gt;uuids, driver-&gt;uuids[i],
-					(GCompareFunc) strcasecmp))
-				return;
-
+						(GCompareFunc) strcasecmp)) {
+				printf("match on %s: return\n", driver-&gt;uuids[i]);
+				continue;
+			}
+			printf("Add uuid %s for driver %s\n",
+			       driver-&gt;uuids[i], driver-&gt;name);
 			uuid = g_strdup(driver-&gt;uuids[i]);
 			req-&gt;uuids = g_slist_append(req-&gt;uuids, uuid);
 		}

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913024602</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-09-13 02:46:02-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

Both seems good, but please use debug instead of printf. Btw does your
first patch solves the problem?

On Fri, Sep 12, 2008 at 11:38 PM, David Woodhouse &lt;dwmw2@infradead.org&gt; wrote:
&gt; While we're at it, let's fix init_browse() not to abort completely when
&gt; it finds one driver asking for a UUID that another driver already
&gt; wanted, and to eliminate duplicates of the UUIDs in uuid_list[] too...
&gt;
&gt; diff --git a/src/device.c b/src/device.c
&gt; index b90861b..cae29f8 100644
&gt; --- a/src/device.c
&gt; +++ b/src/device.c
&gt; @@ -1022,11 +1023,29 @@ static void init_browse(struct browse_req *req)
&gt;
&gt;                for (i = 0; driver-&gt;uuids[i]; i++) {
&gt;                        char *uuid;
&gt; -
&gt; +                       int j;
&gt; +
&gt; +                       /* Eliminate duplicates of UUIDs in uuid_list[]... */
&gt; +                       if (strlen(driver-&gt;uuids[i]) == 36 &amp;&amp;
&gt; +                           !strncmp(driver-&gt;uuids[i], "0000", 4) &amp;&amp;
&gt; +                           !strcasecmp(driver-&gt;uuids[i] + 8,
&gt; +                                       "-0000-1000-8000-00805F9B34FB")) {
&gt; +                               uint16_t uuid16 = strtol(driver-&gt;uuids[i],
&gt; +                                                        NULL, 16);
&gt; +                               for (j = 0; uuid_list[j]; j++) {
&gt; +                                       if (uuid16 == uuid_list[j])
&gt; +                                               continue;
&gt; +                               }
&gt; +
&gt; +                       }
&gt; +                       /* ... and of UUIDs another driver already asked for */
&gt;                        if (g_slist_find_custom(req-&gt;uuids, driver-&gt;uuids[i],
&gt; -                                       (GCompareFunc) strcasecmp))
&gt; -                               return;
&gt; -
&gt; +                                               (GCompareFunc) strcasecmp)) {
&gt; +                               printf("match on %s: return\n", driver-&gt;uuids[i]);
&gt; +                               continue;
&gt; +                       }
&gt; +                       printf("Add uuid %s for driver %s\n",
&gt; +                              driver-&gt;uuids[i], driver-&gt;name);
&gt;                        uuid = g_strdup(driver-&gt;uuids[i]);
&gt;                        req-&gt;uuids = g_slist_append(req-&gt;uuids, uuid);
&gt;                }
&gt;
&gt; --
&gt; David Woodhouse                            Open Source Technology Centre
&gt; David.Woodhouse@intel.com                              Intel Corporation
&gt;
&gt;



-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913025253</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-09-13 02:52:53-0400</timestampReceived><subject>Re: Input pairing broken again</subject><body>

On Fri, 2008-09-12 at 23:46 -0300, Luiz Augusto von Dentz wrote:
&gt; Both seems good, but please use debug instead of printf. Btw does your
&gt; first patch solves the problem?

Oops. I meant to remove the printf before I sent the patch :)

Have committed both to git://git.infradead.org/~dwmw2/bluez.git without
the printf.

Before my first patch, look closely at the handling of req-&gt;search_uuid
in browse_cb().

Note that it's incremented _every_ time we end up back in browse_cb().

Even when we've already finished going through the uuid_list[] array,
and we're supposed to be iterating through req-&gt;uuids.

So what happens is we handle everything in the uuid_list[] until we
reach the zero at the end. Then we handle the first item from
req-&gt;uuids, then we trawl through the memory _after_ uuid_list[],
treating it as more uuids to search for until we reach another zero.
Then we handle the second item from req-&gt;uuids, then...

-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826114139</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-08-26 11:41:39-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Tue, Aug 26, 2008 at 12:10:08PM +0200, Rafael J. Wysocki wrote:
&gt; &gt; Good. Can you test what happens if you unplug the device while suspended
&gt; &gt; and hibernated?
&gt; 
&gt; It's built-in, I can't unplug it. :-)

Maybe you can disable it in the BIOS, but this might change the DSDT / other
system configuration, so it might break resume in other ways :-(
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out." 

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826184453</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-26 18:44:53-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Tuesday, 26 of August 2008, Stefan Seyfried wrote:
&gt; On Tue, Aug 26, 2008 at 12:10:08PM +0200, Rafael J. Wysocki wrote:
&gt; &gt; &gt; Good. Can you test what happens if you unplug the device while suspended
&gt; &gt; &gt; and hibernated?
&gt; &gt; 
&gt; &gt; It's built-in, I can't unplug it. :-)
&gt; 
&gt; Maybe you can disable it in the BIOS, but this might change the DSDT / other
&gt; system configuration, so it might break resume in other ways :-(

There is a switch that's supposed to disable the radio (rfkill or something).
I used it to switch the radio off while the box was waking up from hibernation
and kbluetooth didn't find the adapter after the resume.  After I've pressed
the "radio off" button again, the bluetooth appears to be functional again.

However, this "radio off" button is shared between bluetooth and wireless
(b43) and there are some surprising interactions.  Nothing seems to be broken,
though.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826195317</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-26 19:53:17-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Dienstag 26 August 2008 20:44:53 schrieb Rafael J. Wysocki:
&gt; On Tuesday, 26 of August 2008, Stefan Seyfried wrote:
&gt; &gt; On Tue, Aug 26, 2008 at 12:10:08PM +0200, Rafael J. Wysocki wrote:
&gt; &gt; &gt; &gt; Good. Can you test what happens if you unplug the device while suspended
&gt; &gt; &gt; &gt; and hibernated?
&gt; &gt; &gt; 
&gt; &gt; &gt; It's built-in, I can't unplug it. :-)
&gt; &gt; 
&gt; &gt; Maybe you can disable it in the BIOS, but this might change the DSDT / other
&gt; &gt; system configuration, so it might break resume in other ways :-(
&gt; 
&gt; There is a switch that's supposed to disable the radio (rfkill or something).
&gt; I used it to switch the radio off while the box was waking up from hibernation
&gt; and kbluetooth didn't find the adapter after the resume.  After I've pressed
&gt; the "radio off" button again, the bluetooth appears to be functional again.
&gt; 
&gt; However, this "radio off" button is shared between bluetooth and wireless
&gt; (b43) and there are some surprising interactions.  Nothing seems to be broken,
&gt; though.

This doesn't explain the original failure. Can you comment out the support
for suspend/resume in the driver and try again? The patch also fixes a
race in disconnect that you may be hitting.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080826232815</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-26 23:28:15-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Tuesday, 26 of August 2008, Oliver Neukum wrote:
&gt; Am Dienstag 26 August 2008 20:44:53 schrieb Rafael J. Wysocki:
&gt; &gt; On Tuesday, 26 of August 2008, Stefan Seyfried wrote:
&gt; &gt; &gt; On Tue, Aug 26, 2008 at 12:10:08PM +0200, Rafael J. Wysocki wrote:
&gt; &gt; &gt; &gt; &gt; Good. Can you test what happens if you unplug the device while suspended
&gt; &gt; &gt; &gt; &gt; and hibernated?
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; It's built-in, I can't unplug it. :-)
&gt; &gt; &gt; 
&gt; &gt; &gt; Maybe you can disable it in the BIOS, but this might change the DSDT / other
&gt; &gt; &gt; system configuration, so it might break resume in other ways :-(
&gt; &gt; 
&gt; &gt; There is a switch that's supposed to disable the radio (rfkill or something).
&gt; &gt; I used it to switch the radio off while the box was waking up from hibernation
&gt; &gt; and kbluetooth didn't find the adapter after the resume.  After I've pressed
&gt; &gt; the "radio off" button again, the bluetooth appears to be functional again.
&gt; &gt; 
&gt; &gt; However, this "radio off" button is shared between bluetooth and wireless
&gt; &gt; (b43) and there are some surprising interactions.  Nothing seems to be broken,
&gt; &gt; though.
&gt; 
&gt; This doesn't explain the original failure. Can you comment out the support
&gt; for suspend/resume in the driver and try again?

With that commented out, I'm able to reproduce the failure.  With the original
patch, I'm not.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827075511</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-27 07:55:11-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Mittwoch 27 August 2008 01:28:15 schrieb Rafael J. Wysocki:
&gt; &gt; This doesn't explain the original failure. Can you comment out the support
&gt; &gt; for suspend/resume in the driver and try again?
&gt; 
&gt; With that commented out, I'm able to reproduce the failure.  With the original
&gt; patch, I'm not.

Now we know a driver without support for suspend/resume breaks suspend and
hibernate. We need to find out whether this is limited to btusb or everything.

Can you test with anotherrrrr driver, like a mouse and remove suspend/resume
from usbhid? If this is specific to btusb we have a fix, if not, I am afraid
this has to be bisected.

	Regards
		Oliver


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827075651</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-27 07:56:51-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Hi Rafael,

&gt; &gt; &gt; &gt; &gt; &gt; Good. Can you test what happens if you unplug the device while suspended
&gt; &gt; &gt; &gt; &gt; &gt; and hibernated?
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; It's built-in, I can't unplug it. :-)
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Maybe you can disable it in the BIOS, but this might change the DSDT / other
&gt; &gt; &gt; &gt; system configuration, so it might break resume in other ways :-(
&gt; &gt; &gt; 
&gt; &gt; &gt; There is a switch that's supposed to disable the radio (rfkill or something).
&gt; &gt; &gt; I used it to switch the radio off while the box was waking up from hibernation
&gt; &gt; &gt; and kbluetooth didn't find the adapter after the resume.  After I've pressed
&gt; &gt; &gt; the "radio off" button again, the bluetooth appears to be functional again.
&gt; &gt; &gt; 
&gt; &gt; &gt; However, this "radio off" button is shared between bluetooth and wireless
&gt; &gt; &gt; (b43) and there are some surprising interactions.  Nothing seems to be broken,
&gt; &gt; &gt; though.
&gt; &gt; 
&gt; &gt; This doesn't explain the original failure. Can you comment out the support
&gt; &gt; for suspend/resume in the driver and try again?
&gt; 
&gt; With that commented out, I'm able to reproduce the failure.  With the original
&gt; patch, I'm not.

I've never seen any issues with the suspend/resume and btusb, but I
must admit that I am using an X61 and in that case pm-utils has a magic
hack to disable Bluetooth before suspend and this means a clean
disconnect from the USB bus.

Anyway, killing all URBs in-fly on suspend and bringing up the interrupt
one on resume should do the right thing. However we have to check if we
not just better resume all URBs and let the Bluetooth core handle lost
connection during the suspended time.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827091032</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-27 09:10:32-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Wed 2008-08-27 07:22:58, Marcel Holtmann wrote:
&gt; Hi Rafael,
&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Good. Can you test what happens if you unplug the device while 
&gt;&gt;&gt;&gt;&gt;&gt;&gt; suspended
&gt;&gt;&gt;&gt;&gt;&gt;&gt; and hibernated?
&gt;&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt;&gt; It's built-in, I can't unplug it. :-)
&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt; Maybe you can disable it in the BIOS, but this might change the DSDT / 
&gt;&gt;&gt;&gt;&gt; other
&gt;&gt;&gt;&gt;&gt; system configuration, so it might break resume in other ways :-(
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; There is a switch that's supposed to disable the radio (rfkill or 
&gt;&gt;&gt;&gt; something).
&gt;&gt;&gt;&gt; I used it to switch the radio off while the box was waking up from 
&gt;&gt;&gt;&gt; hibernation
&gt;&gt;&gt;&gt; and kbluetooth didn't find the adapter after the resume.  After I've 
&gt;&gt;&gt;&gt; pressed
&gt;&gt;&gt;&gt; the "radio off" button again, the bluetooth appears to be functional 
&gt;&gt;&gt;&gt; again.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; However, this "radio off" button is shared between bluetooth and 
&gt;&gt;&gt;&gt; wireless
&gt;&gt;&gt;&gt; (b43) and there are some surprising interactions.  Nothing seems to be 
&gt;&gt;&gt;&gt; broken,
&gt;&gt;&gt;&gt; though.
&gt;&gt;&gt;
&gt;&gt;&gt; This doesn't explain the original failure. Can you comment out the 
&gt;&gt;&gt; support
&gt;&gt;&gt; for suspend/resume in the driver and try again?
&gt;&gt;
&gt;&gt; With that commented out, I'm able to reproduce the failure.  With the 
&gt;&gt; original
&gt;&gt; patch, I'm not.
&gt;
&gt; I've never seen any issues with the suspend/resume and btusb, but I must 
&gt; admit that I am using an X61 and in that case pm-utils has a magic hack to 
&gt; disable Bluetooth before suspend and this means a clean disconnect from the 
&gt; USB bus.

I was using x60 _without_ that script, and it was okay for long long
time, but it has problems now. Something regressed somewhere.

Rafael, could you try if 2.6.26 suspends ok if you don't unload
anything?

								Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827130455</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-27 13:04:55-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Wednesday, 27 of August 2008, Oliver Neukum wrote:
&gt; Am Mittwoch 27 August 2008 01:28:15 schrieb Rafael J. Wysocki:
&gt; &gt; &gt; This doesn't explain the original failure. Can you comment out the support
&gt; &gt; &gt; for suspend/resume in the driver and try again?
&gt; &gt; 
&gt; &gt; With that commented out, I'm able to reproduce the failure.  With the original
&gt; &gt; patch, I'm not.
&gt; 
&gt; Now we know a driver without support for suspend/resume breaks suspend and
&gt; hibernate. We need to find out whether this is limited to btusb or everything.

I'm quite confident it's specific to bluetooth, because I only need to turn
the bluetooth user space off, most importantly hcid, to make the problem go
away even without the patch (that is, without the patch I don't even have to
uload btusb before suspend if the bluetoot user land is not running).

&gt; Can you test with anotherrrrr driver, like a mouse and remove suspend/resume
&gt; from usbhid? If this is specific to btusb we have a fix, if not, I am afraid
&gt; this has to be bisected.

Is that really necessary?

I can do that, but first I'll check if 2.6.26 is fine.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827130905</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-27 13:09:05-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

Am Mittwoch 27 August 2008 15:04:55 schrieb Rafael J. Wysocki:
&gt; I'm quite confident it's specific to bluetooth, because I only need to turn
&gt; the bluetooth user space off, most importantly hcid, to make the problem go
&gt; away even without the patch (that is, without the patch I don't even have to
&gt; uload btusb before suspend if the bluetoot user land is not running).

But do you use any other usb driver without support for suspend/resume?

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827132847</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-27 13:28:47-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Wednesday, 27 of August 2008, Oliver Neukum wrote:
&gt; Am Mittwoch 27 August 2008 15:04:55 schrieb Rafael J. Wysocki:
&gt; &gt; I'm quite confident it's specific to bluetooth, because I only need to turn
&gt; &gt; the bluetooth user space off, most importantly hcid, to make the problem go
&gt; &gt; away even without the patch (that is, without the patch I don't even have to
&gt; &gt; uload btusb before suspend if the bluetoot user land is not running).
&gt; 
&gt; But do you use any other usb driver without support for suspend/resume?

Well, probably not.

I'll check the hid, then.

BTW, 2.6.26 appears to be fine.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827132946</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-27 13:29:46-0400</timestampReceived><subject>Re: btusb hibernation/suspend breakage in current -git</subject><body>

On Wednesday, 27 of August 2008, Pavel Machek wrote:
&gt; On Wed 2008-08-27 07:22:58, Marcel Holtmann wrote:
&gt; &gt; Hi Rafael,
&gt; &gt;
&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Good. Can you test what happens if you unplug the device while 
&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; suspended
&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; and hibernated?
&gt; &gt;&gt;&gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt;&gt;&gt; It's built-in, I can't unplug it. :-)
&gt; &gt;&gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt;&gt; Maybe you can disable it in the BIOS, but this might change the DSDT / 
&gt; &gt;&gt;&gt;&gt;&gt; other
&gt; &gt;&gt;&gt;&gt;&gt; system configuration, so it might break resume in other ways :-(
&gt; &gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt; There is a switch that's supposed to disable the radio (rfkill or 
&gt; &gt;&gt;&gt;&gt; something).
&gt; &gt;&gt;&gt;&gt; I used it to switch the radio off while the box was waking up from 
&gt; &gt;&gt;&gt;&gt; hibernation
&gt; &gt;&gt;&gt;&gt; and kbluetooth didn't find the adapter after the resume.  After I've 
&gt; &gt;&gt;&gt;&gt; pressed
&gt; &gt;&gt;&gt;&gt; the "radio off" button again, the bluetooth appears to be functional 
&gt; &gt;&gt;&gt;&gt; again.
&gt; &gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt; However, this "radio off" button is shared between bluetooth and 
&gt; &gt;&gt;&gt;&gt; wireless
&gt; &gt;&gt;&gt;&gt; (b43) and there are some surprising interactions.  Nothing seems to be 
&gt; &gt;&gt;&gt;&gt; broken,
&gt; &gt;&gt;&gt;&gt; though.
&gt; &gt;&gt;&gt;
&gt; &gt;&gt;&gt; This doesn't explain the original failure. Can you comment out the 
&gt; &gt;&gt;&gt; support
&gt; &gt;&gt;&gt; for suspend/resume in the driver and try again?
&gt; &gt;&gt;
&gt; &gt;&gt; With that commented out, I'm able to reproduce the failure.  With the 
&gt; &gt;&gt; original
&gt; &gt;&gt; patch, I'm not.
&gt; &gt;
&gt; &gt; I've never seen any issues with the suspend/resume and btusb, but I must 
&gt; &gt; admit that I am using an X61 and in that case pm-utils has a magic hack to 
&gt; &gt; disable Bluetooth before suspend and this means a clean disconnect from the 
&gt; &gt; USB bus.
&gt; 
&gt; I was using x60 _without_ that script, and it was okay for long long
&gt; time, but it has problems now. Something regressed somewhere.
&gt; 
&gt; Rafael, could you try if 2.6.26 suspends ok if you don't unload
&gt; anything?

It appears to be fine (I couldn't reproduce the problem on it).

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080827223306</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-27 22:33:06-0400</timestampReceived><subject>Re: [linux-pm] btusb hibernation/suspend breakage in current -git</subject><body>

On Wednesday, 27 of August 2008, Rafael J. Wysocki wrote:
&gt; On Wednesday, 27 of August 2008, Oliver Neukum wrote:
&gt; &gt; Am Mittwoch 27 August 2008 15:04:55 schrieb Rafael J. Wysocki:
&gt; &gt; &gt; I'm quite confident it's specific to bluetooth, because I only need to turn
&gt; &gt; &gt; the bluetooth user space off, most importantly hcid, to make the problem go
&gt; &gt; &gt; away even without the patch (that is, without the patch I don't even have to
&gt; &gt; &gt; uload btusb before suspend if the bluetoot user land is not running).
&gt; &gt; 
&gt; &gt; But do you use any other usb driver without support for suspend/resume?
&gt; 
&gt; Well, probably not.
&gt; 
&gt; I'll check the hid, then.

I couldn't reproduce the breakage with suspend/resume support removed from
usbhid.

Let's just say it's related to BT, since your patch evidently fixes the problem
for me and I have just no reason to believe it's anything else than BT.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080908204927</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-08 20:49:27-0400</timestampReceived><subject>Re: [linux-pm] btusb hibernation/suspend breakage in current -git</subject><body>

Hi Oliver,

&gt; &gt; I couldn't reproduce the breakage with suspend/resume support removed from
&gt; &gt; usbhid.
&gt; &gt; 
&gt; &gt; Let's just say it's related to BT, since your patch evidently fixes the problem
&gt; &gt; for me and I have just no reason to believe it's anything else than BT.
&gt;
&gt; Very good.
&gt; 
&gt; here it is again. You may need to cut the USB bits depending
&gt; on which tree you want to apply it to.

do we have a version that could be applied to 2.6.27-rc5, because the
patch depends on unmerged USB stuff. I tend to leave this for 2.6.28 for
now.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080922012919</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-22 01:29:19-0400</timestampReceived><subject>Re: Data on eglib vs glib, implications for embedded use of bluez</subject><body>

Hi Nick,

&gt; &gt;&gt; I guess it comes down to whether Bluez wants to support an embedded
&gt; &gt;&gt; configuration. If Bluez is happy to abandon embedded, then they can
&gt; &gt;&gt; forget eglib. But it Bluez is serious about supporting embedded
&gt; &gt;&gt; configurations, it should keep eglib as a supported option in my
&gt; &gt;&gt; opinion.
&gt; &gt;&gt;
&gt; &gt;&gt; I understand that one concern about eglib support is a lack of
&gt; &gt;&gt; maintenance. I would be happy to help out with eglib support.
&gt; &gt;
&gt; &gt; I can bring up a project that contains eglib and we maintain it outside
&gt; &gt; of bluez-4.x source code. You just have to install it first and if you
&gt; &gt; use pkg-config you would have a perfect drop-in replacement. If you
&gt; &gt; compile it by yourself you do whatever fits best.
&gt; &gt;
&gt; &gt;&gt; If supporting eglib is not an option, I am very much interested to
&gt; &gt;&gt; hear the specific reasons as to why not. Is it due to eglib bugs? lack
&gt; &gt;&gt; of eglib features (which ones)? or is embedded just not significant
&gt; &gt;&gt; enough to be a concern?
&gt; &gt;
&gt; &gt; As long as eglib has the same API as GLib it is not a problem of support
&gt; &gt; at all. We do that already. The main reason why we removed it from the
&gt; &gt; source code was that it just became a maintenance nightmare.
&gt; &gt;
&gt; &gt; Do you have a problem to maintain it in a separate source tree and
&gt; &gt; release it as separate packages?
&gt; 
&gt; The danger, as I suggested earlier, is that Bluez developers will
&gt; start using API's that are not already implemented in eglib, and do
&gt; not make sense to implement on an embedded platform.
&gt; 
&gt; I do not mind maintaining eglib, but I don't want it to become as
&gt; bloated as glib. Bluez needs to make a commitment to only use the
&gt; parts of the glib API that makes sense on embedded platforms as well
&gt; as Desktop platforms. Perhaps in Portland we can go through the API
&gt; and work out what parts of the API that would be.
&gt; 
&gt; If Bluez as a project could make that commitment, then I would be
&gt; happy to maintain eglib in a separate source tree.

it will not happen that BlueZ makes such a commitment. BlueZ works
perfectly fine on embedded systems and GLib is not as bloated as you
thing. You just happen to have a specific and limited use case scenario.
If we start to use functions not implemented in eglib, then you have to
implement them. That is what we were doing for the last 3 years and it
slowed down the development of BlueZ. This is why non of the BlueZ
developers are doing this anymore.

I created the initial tree for eglib at kernel.org:

	http://git.kernel.org/?p=bluetooth/eglib.git;a=summary

Feel free to sent me patches against it.

And just to make this perfectly clear, bashing against GLib doesn't help
at all. You either go ahead and make GLib more suitable for your needs
or you do this in eglib. Just using kernel features like epoll, timerfd
etc. would help you a lot to achieve your goal. Just make sure eglib is
API compatible.

I take care of the release process of eglib, but no other BlueZ
developer can be bothered with eglib details.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080922233325</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-09-22 23:33:25-0400</timestampReceived><subject>Re: btusb suspend/resume bug...</subject><body>

From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Date: Tue, 23 Sep 2008 01:32:05 +0200

&gt; Dave, I will prepare a minimal patch set for you today or tomorrow.

Thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923133705</emailId><senderName>Stuart Pook</senderName><senderEmail>linux-bluetooth4@pook.es</senderEmail><timestampReceived>2008-09-23 13:37:05-0400</timestampReceived><subject>Re: [Bluez-devel] "unable to install hw params" to bluetooth (SCO)</subject><body>

On 23/09/08 15:00, martin f krafft wrote:
&gt; I can reproduce the exact same error with a BT250 hooked up via
&gt; a different bluetooth adapter to an amd64 machine this time (the
&gt; last one was i386), running 2.6.26.

I as said on http://bugzilla.kernel.org/show_bug.cgi?id=11514 aplay and 
my JX10 headset work with bluez-4.4 and linux 2.6.26. I only get the 
"unable to install hw params" error on 2.6.27-rc5.

&gt; Stuart Pook told me about bluez-utils 4.4 [0] - I am still using 3.36
&gt; [1], but the wiki page says that I need 3.16 or newer. Would
&gt; I have better luck with 4.4? Where does this stuff come in anyway?

I would suggest using bluez-4.x and checking that your headset works 
with a 2.6.26 kernel. Note don't use SCO headsets and linux 2.6.26 for 
too long as using SCO and the old hci_usb driver will cause your machine 
to hard crash sooner or later. The new btusb driver gained SCO support 
in 2.6.27-rc4.

&gt; I am running hcid in the background, but I know too little about
&gt; ALSA or Bluetooth to be able to see how the two interlink. The wiki
&gt; mentions a btaudiod, which 3.36 seems not to have. Is that needed?

I don't remember btaudiob. Bluetoothd has replaced hcid. If you run 
"bluetoothd -d -n" you will see that aplay (via the bluetooth alsa 
libraries) contacts bluetoothd and that it is bluetoothd that connects 
to the headset (at least that is how I understand things).

Be careful when you install bluez-4.x that you replace the alsa 
bluetooth libraries that aplay uses. I can tell you more about this if 
required.

I have added hcidump -XV dumps of the communication between my machine 
and my JX10 headset using 2.6.27-rc5 to the bug report mentioned above. 
Tomorrow I'll add hcidump -XV using 2.6.26 so that we can see the 
differences.

Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923164409</emailId><senderName>"Denis Kenzior"</senderName><senderEmail>denis.kenzior@trolltech.com</senderEmail><timestampReceived>2008-09-23 16:44:09-0400</timestampReceived><subject>Re: OpenOBEX ObexFTPd problem on BlueZ</subject><body>

Hi,

&gt; Thanks, the current situation works for me.
&gt; Windows [MS generic bluetooth radio] bluetooth stack has send and recieve
&gt; file features, for this...
&gt;
&gt; If I run "obexftpd" on board and do a send file [without PASSKEY] feature,
&gt; then it works.
&gt;
&gt; If I click on recieve file on PC and do a obexftp it doesn't work.
&gt; However If I do a sdptool browse and get to know the channel number (1)
&gt; and then give it to obexftp, it seems to work.

Obexftp doesn't perform SDP queries, it assumes a certain default channel.

&gt;
&gt; Now, the question...
&gt; 1. How do I enable the passkey feature [bluepin doesn't exist in 3.36] ?
&gt; **All option of security in hcid.conf has the same effect...

You need to implement a passkey agent.  See the bluez-utils source for an
example.  Basically you need to implement the org.bluez.PasskeyAgent API.

&gt;
&gt; 2. How I check the services of my board, to make it work for other
&gt; stacks??
&gt; [even the services request from current setup doesn;t seem to work, its
&gt; like the sdp server is not started at all on blueZ side, even though the
&gt; messages show it runs...]

SDP server by default does not contain any records since no services are
started.  You can browse local services by running:
'sdptool browse local'

Obexftp does not register any SDP records.  You need to look around for
proper obex daemon that integrates with bluez.  Look for obex-data-server
or obexd or write one yourself.

-Denis



-----------------------------------------
Nokia Pty Ltd, Level 1, 53 Brandl St, Eight Mile Plains, 4113, Queensland, Australia
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923182947</emailId><senderName>"Nick Pelly"</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-09-23 18:29:47-0400</timestampReceived><subject>Re: [PATCH] Advertise telephony service class for handsfree AG role, for Nokia 616 support.</subject><body>

The first patch used HANDSFREE_SVCLASS_ID - wrong. Please use the
second patch. Sorry about that.

On Tue, Sep 23, 2008 at 11:25 AM, Nick Pelly &lt;npelly@google.com&gt; wrote:
&gt; The Nokia 616 incorrectly requires the telehony bit to be set to make a
&gt; handsfree connection.
&gt; ---
&gt;  src/sdpd-service.c |    7 +++++++
&gt;  1 files changed, 7 insertions(+), 0 deletions(-)
&gt;
&gt; diff --git a/src/sdpd-service.c b/src/sdpd-service.c
&gt; index 30aad32..12c999c 100644
&gt; --- a/src/sdpd-service.c
&gt; +++ b/src/sdpd-service.c
&gt; @@ -121,6 +121,13 @@ static void update_svclass_list(void)
&gt;                case HANDSFREE_SVCLASS_ID:
&gt;                        val |= 0x20;    /* Audio */
&gt;                        break;
&gt; +               /* For Nokia 616 carkit compatability - it incorrectly requires
&gt; +                * the telephony bit set on the HFP AG, despite this not
&gt; +                * being a requirement of the handsfree spec.
&gt; +                */
&gt; +               case HANDSFREE_AGW_SVCLASS_ID:
&gt; +                       val |= 0x40;    /* Telephony */
&gt; +                       break;
&gt;                case CORDLESS_TELEPHONY_SVCLASS_ID:
&gt;                case INTERCOM_SVCLASS_ID:
&gt;                case FAX_SVCLASS_ID:
&gt; --
&gt; 1.5.5
&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080923184655</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-23 18:46:55-0400</timestampReceived><subject>Re: Packaging question</subject><body>

Hi Marcel (and everybody else still listening),

Marcel Holtmann wrote:
&gt; if we go always polling the D-Bus and try to re-connect it is bad, too.
&gt; The solution is to make sure that D-Bus is always running and will never
&gt; die. Everything else is just wrong and will break.

Yes, this was obviously meant as a joke.

This is what I have packaged for now:

- DBus activation for bluetoothd (actually runs the init script)
- udev events run a helper script /lib/udev/bluetooth.sh which basically
  consists of:

  #!/bin/sh
  [ x"$ACTION" != xadd ] &amp;&amp; exit 0
  touch /var/run/bluetooth-adapter-present
  /bin/dbus-send --system --type=method_call \
                 --print-reply --reply-timeout=1000 \
                 --dest=org.bluez / org.bluez.hello

- a "bluetooth-coldplug" init script that checks for the existence of the
  bluetooth-adapter-present file and runs the "normal" init script (This could
  all be put   into the normal init script, but I had reasons for splitting
  it up).

So the coldplug case will be handled by the second init script, but still the
bluetoothd will only be started if an adapter is present.

Maybe this is kind of a solution until we get DBus started early enough to
make the problem go away.

Another thought: what prevents us from making bluetoothd exit as soon as all
adapters are unplugged? Is it useful for anything without hardware present
(can you alter settings etc)?

Thanks (and have fun in Portland ;)

	Stefan

-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081221113853</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-12-21 11:38:53-0400</timestampReceived><subject>can somebody show me an example asound configuration for dmixing</subject><body>

Hello everybody,

I have been periodically trying to get multiple audio sources to play
together (dmixing) to a hifi bluetooth speaker system or hifi bluetooth
headset.

I am using only alsa and no pulseaudio, esd, jack, mas of something else
just alsa with asoundrc configuration files and no graphical environment.

Can somebody show me an example asoundrc config file to make it possible
to use software audio mixing with my bluetooth devices. If this is
currently not possible, please tell why and what we can do about it. I
am willing to donate some payal money to the person providing me with a
working asoundrc configuration file that allows me to play multiple
audio sources at the same time.

Thanks in advance,

Jelle

[".asoundrc" (text/plain)]

pcm.headset {
    type bluetooth
    #~ device 00:0D:18:A0:35:70
    #~ device 00:53:53:FB:7E:9C # Nokia BH-801
    device 00:0C:55:D1:C9:78 # Motorola S805
    #~ device 00:0D:FD:18:6E:3C # Motorola S9
    #~ device 20:07:09:15:A9:5A # Samsung WEP210
    profile hifi
    #~ profile voice
    #~ profile auto
    mode stereo
    #~ mode joint
}
pcm.softvol {
    type softvol
    slave.pcm headset
    control.name Headset
    control.card 0
}
pcm.!default {
    #~ type hw
    #~ card 0
    type plug
    slave.pcm softvol
}

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219133344</emailId><senderName>Simon Hay</senderName><senderEmail>sjeh3@cam.ac.uk</senderEmail><timestampReceived>2008-12-19 13:33:44-0400</timestampReceived><subject>Connection time behaviour question</subject><body>

Hi,

I have a question about behaviour establishing connections that seems  
to have changed between different versions of BlueZ, and I'm hoping  
someone will be good enough to help explain what's going on for me!

I have a test program that opens an L2CAP connection to a device,  
reads the RSSI, closes it again, waits a few seconds and repeats the  
process.  Optionally, it will do clock caching - i.e. read the clock  
offset when a connection is established and pass this in when making  
the next connection.  Using version 3.18 the BlueZ libraries, this  
behaves more or less as I would expect:  if clock caching is not  
turned on, the connection times are distributed fairly evenly and if  
it is they are much quicker and fairly constant (e.g. 1300 ms, plus or  
minus a hundred or so for a particular device).  Using various  
subsequent versions however (in particular 3.29 and 4.22) we see  
different behaviour: whether clock caching is turned on or not, the  
connection times follow a sawtooth pattern, starting very low (about  
100 ms), then going up steadily in increments of a couple of hundred  
ms until they reach a peak (1000-2000) and then fall back to a very  
low value and the process repeats.  I'm somewhat confused as to why  
this is happening - I've tried to read through the code changes but  
without much success.  Can anyone shed any light on this for me?

Thanks very much in advance for your help!

Simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081220022436</emailId><senderName>"David Stockwell"</senderName><senderEmail>dstockwell@frequency-one.com</senderEmail><timestampReceived>2008-12-20 02:24:36-0400</timestampReceived><subject>FYI, regarding AVRCP</subject><body>

Marcel, Johan, et al,

Since our meeting in PortlandI have been busy dealing with both "day 
job" issues, as well as finishing up some Intellectual Property issues 
surrounding my ongoing evening/weekend project, of which AVRCP and my 
remote are a small but critical part.  Within the next two weeks I will 
reengage AVRCP and expect to soon bring it up to 1.3 (metadata transfer) 
as we discussed in Portland.  Sorry it has taken so long.

With regard to the question from Park Chan-Yeol, I suggest we consider a 
Bluez/DBUS "version" property (for simplicity, a String) for the 
org.bluez.Control interface, to allow users to know just what they are 
dealing with.  Any thoughts?

David Stockwell 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212180132</emailId><senderName>Folkert van Heusden</senderName><senderEmail>folkert@vanheusden.com</senderEmail><timestampReceived>2008-12-12 18:01:32-0400</timestampReceived><subject>/var/lib/bluetooth/$BDADDR/names, when does that file get updated?</subject><body>

Hi,

When does /var/lib/bluetooth/$BDADDR/names get updated?
Because hcitool inq does not tell the names while hcitool scan does not
tell class of the devices.


Folkert van Heusden

-- 
Multi tail barnamaj mowahib li mora9abat attasjilat wa nataij awamir
al 7asoub. damj, talwin, mora9abat attarchi7 wa ila akhirih.
http://www.vanheusden.com/multitail/
----------------------------------------------------------------------
Phone: +31-6-41278122, PGP-key: 1F28D8AE, www.vanheusden.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081217220752</emailId><senderName>"jaikumar Ganesh"</senderName><senderEmail>jaikumarg@gmail.com</senderEmail><timestampReceived>2008-12-17 22:07:52-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

 Folks,
     I have a device which supports only SCO connections.  So when the
application calls sco_sock_connect -&gt; sco_connect, the conn-&gt;state is
set to BT_CONNECT and then bt_sock_state is called waiting for the
conn-&gt;sk-&gt;sk_state to be set to BT_CONNECTED.
     When the HCI Connection Complete event comes, the conn-&gt;state is
set to BT_CONNECTED.

     In 2.6.25 -&gt;  hci_proto_connect_cfm(conn, ev-&gt;status) was called
at the end of hci_conn_complete_evt which used to set the
conn-&gt;sk-&gt;sk_state to BT_CONNECTED in sco_conn_ready.
     In 2.6.27-&gt;  hci_proto_connect_cfm(conn, ev-&gt;status) is called
only if the ev_status is 1.
                      Hence, the conn-&gt;sk-&gt;sk_state doesn't get set to
BT_CONNECTED and hence the connect() times out.

    Should we be calling sco_conn_ready in sco_connect similar to
sco_connect_cfm if conn != null ?
    I didn't see anyone else complain so am I missing something obvious ?


     * I am new to this list so please excuse me if the above doesn't
make sense.

 Thanks
 Jaikumar
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223001306</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-12-23 00:13:06-0400</timestampReceived><subject>Tools for AVDTP / AVCTP qualification</subject><body>

Hi,

Do there exist any tools to help pass Bluez AVDTP and AVCTP stack qualification?

Looking at the test spec it seems some command line tools might be
handy. I am thinking along the lines of l2test, hcitool etc. I'll be
writing some similar for AVDTP and AVCTP unless there are already some
floating around?

Cheers,
Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223101811</emailId><senderName>Christian Hoene</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-23 10:18:11-0400</timestampReceived><subject>Patch for supporting even more command line parameters in sbcenc</subject><body>

Hello,

in order to test the performance of SBC, I needed to add some more
parameter options to "sbcenc".
Attached the patch.

Greetings
 Christian


["adding.even.more.parameters.to.sbcenc.diff" (adding.even.more.parameters.to.sbcenc.diff)]

diff --git a/sbc/sbcenc.c b/sbc/sbcenc.c
index 74a3434..e786c70 100644
--- a/sbc/sbcenc.c
+++ b/sbc/sbcenc.c
@@ -73,7 +73,7 @@ static ssize_t __write(int fd, const void *buf, size_t count)
 }
 
 static void encode(char *filename, int subbands,
-					int bitpool, int joint, int snr)
+					int bitpool, int joint, int dualchannel, int snr, int blocks)
 {
 	struct au_header *au_hdr;
 	unsigned char input[2048], output[2048];
@@ -131,4 +131,4 @@ static void encode(char *filename, int subbands,
 
 	sbc.subbands = subbands == 4 ? SBC_SB_4 : SBC_SB_8;
 
-	if (BE_INT(au_hdr-&gt;channels) == 1)
+	if (BE_INT(au_hdr-&gt;channels) == 1) {
		sbc.mode = SBC_MODE_MONO;
-	else if (joint)
+		if(joint || dualchannel) {
+			fprintf(stderr, "Audio file is mono but joint or dualchannel mode has been specified\n");
+			goto done;
+		}
+	}
+	else if (joint &amp;&amp; !dualchannel)
 		sbc.mode = SBC_MODE_JOINT_STEREO;
-	else
-		sbc.mode = SBC_MODE_STEREO;
-
+	else if(!joint &amp;&amp; dualchannel)
+    		sbc.mode = SBC_MODE_DUAL_CHANNEL;
+	else if(!joint &amp;&amp; !dualchannel)
+    		sbc.mode = SBC_MODE_STEREO;
+	else  {
+		fprintf(stderr, "Both joint and dualchannel mode have been specified\n");
+		goto done;
+	}
+	    
 	sbc.endian = SBC_BE;
 	count = BE_INT(au_hdr-&gt;data_size);
 	size = len - BE_INT(au_hdr-&gt;hdr_size);
@@ -145,15 +156,17 @@ static void encode(char *filename, int subbands,
 
 	sbc.bitpool = bitpool;
 	sbc.allocation = snr ? SBC_AM_SNR : SBC_AM_LOUDNESS;
+	sbc.blocks = blocks / 4;
 
 	if(verbose) {
 		fprintf(stderr,"encoding %s with rate %d, %d subbands, "
-			"%d bits, allocation method %s and mode %s\n",
+			"%d bits, allocation method %s, mode %s, and %d blocks\n",
 			filename, srate, subbands, bitpool,
 			sbc.allocation == SBC_AM_SNR ? "SNR" : "LOUDNESS",
 			sbc.mode == SBC_MODE_MONO ? "MONO" :
 					sbc.mode == SBC_MODE_STEREO ?
-						"STEREO" : "JOINTSTEREO");
+						"STEREO" : "JOINTSTEREO",
+			blocks);
 	}
 
 	while (1) {
@@ -209,7 +222,9 @@ static void usage(void)
 		"\t-s, --subbands       Number of subbands to use (4 or 8)\n"
 		"\t-b, --bitpool        Bitpool value (default is 32)\n"
 		"\t-j, --joint          Joint stereo\n"
+		"\t-d, --dualchannel    Dual channel\n"
 		"\t-S, --snr            Use SNR mode (default is loudness)\n"
+	        "\t-B, --blocks         Number of blocks to use (4, 8, 12 or 16)\n"
 		"\n");
 }
 
@@ -219,15 +234,17 @@ static struct option main_options[] = {
 	{ "subbands",	1, 0, 's' },
 	{ "bitpool",	1, 0, 'b' },
 	{ "joint",	0, 0, 'j' },
+	{ "dualchannel",0, 0, 'd' },
 	{ "snr",	0, 0, 'S' },
+	{ "blocks",	1, 0, 'B' },
 	{ 0, 0, 0, 0 }
 };
 
 int main(int argc, char *argv[])
 {
-	int i, opt, subbands = 8, bitpool = 32, joint = 0, snr= 0;
+	int i, opt, subbands = 8, bitpool = 32, joint = 0, dualchannel = 0, snr = 0, blocks = 16;
 
-	while ((opt = getopt_long(argc, argv, "+hvs:b:jS",
+	while ((opt = getopt_long(argc, argv, "+hvs:b:jdSB:",
 						main_options, NULL)) != -1) {
 		switch(opt) {
 		case 'h':
@@ -255,10 +272,23 @@ int main(int argc, char *argv[])
 			joint = 1;
 			break;
 
+		case 'd':
+			dualchannel = 1;
+			break;
+
 		case 'S':
 			snr = 1;
 			break;
 
+		case 'B':
+    		        blocks = atoi(optarg);
+			if (blocks != 16 &amp;&amp; blocks != 12 &amp;&amp; blocks != 8 &amp;&amp; blocks != 4) {
+				fprintf(stderr, "Invalid blocks %d!\n",
+					blocks);
+				exit(1);
+			}
+			break;
+
 		default:
 			exit(1);
 		}
@@ -274,7 +304,7 @@ int main(int argc, char *argv[])
 	}
 
 	for (i = 0; i &lt; argc; i++)
-		encode(argv[i], subbands, bitpool, joint, snr);
+	        encode(argv[i], subbands, bitpool, joint, dualchannel, snr, blocks);
 
 	return 0;
 }

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081223160758</emailId><senderName>Christian Hoene</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-23 16:07:58-0400</timestampReceived><subject>Two updated patches</subject><body>

Hello,

again. Hopefully, I got all coding style rules right this time.
Here my two patches.

Merry Christmas

 Christian

["patch_again_empty_frames.diff" (patch_again_empty_frames.diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..a3a3ac1 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1196,6 +1196,9 @@ int sbc_decode(sbc_t *sbc, void *input, int input_len, void *output,
 	if (written)
 		*written = 0;
 
+	if (framelen &lt;= 0)
+		return framelen;
+
 	samples = sbc_synthesize_audio(&amp;priv-&gt;dec_state, &amp;priv-&gt;frame);
 
 	ptr = output;

["patch_for_more_cmdline_parameters.diff" (patch_for_more_cmdline_parameters.diff)]

diff --git a/sbc/sbcenc.c b/sbc/sbcenc.c
index 74a3434..e553935 100644
--- a/sbc/sbcenc.c
+++ b/sbc/sbcenc.c
@@ -72,8 +72,8 @@ static ssize_t __write(int fd, const void *buf, size_t count)
 	return pos;
 }
 
-static void encode(char *filename, int subbands,
-					int bitpool, int joint, int snr)
+static void encode(char *filename, int subbands, int bitpool, int joint,
+			int dualchannel, int snr, int blocks)
 {
 	struct au_header *au_hdr;
 	unsigned char input[2048], output[2048];
@@ -131,12 +131,24 @@ static void encode(char *filename, int subbands,
 
 	sbc.subbands = subbands == 4 ? SBC_SB_4 : SBC_SB_8;
 
-	if (BE_INT(au_hdr-&gt;channels) == 1)
+	if (BE_INT(au_hdr-&gt;channels) == 1) {
 		sbc.mode = SBC_MODE_MONO;
-	else if (joint)
+		if (joint || dualchannel) {
+			fprintf(stderr, "Audio file is mono but joint or"
+				"dualchannel mode has been specified\n");
+			goto done;
+		}
+	} else if (joint &amp;&amp; !dualchannel)
 		sbc.mode = SBC_MODE_JOINT_STEREO;
-	else
+	else if (!joint &amp;&amp; dualchannel)
+		sbc.mode = SBC_MODE_DUAL_CHANNEL;
+	else if (!joint &amp;&amp; !dualchannel)
 		sbc.mode = SBC_MODE_STEREO;
+	else {
+		fprintf(stderr, "Both joint and dualchannel mode have been"
+				"specified\n");
+		goto done;
+	}
 
 	sbc.endian = SBC_BE;
 	count = BE_INT(au_hdr-&gt;data_size);
@@ -145,15 +157,20 @@ static void encode(char *filename, int subbands,
 
 	sbc.bitpool = bitpool;
 	sbc.allocation = snr ? SBC_AM_SNR : SBC_AM_LOUDNESS;
+	sbc.blocks = blocks == 4 ? SBC_BLK_4 :
+			blocks == 8 ? SBC_BLK_8 :
+			blocks == 12 ? SBC_BLK_12 : SBC_BLK_16;
 
-	if(verbose) {
+	if (verbose) {
 		fprintf(stderr,"encoding %s with rate %d, %d subbands, "
-			"%d bits, allocation method %s and mode %s\n",
+			"%d bits, allocation method %s, mode %s, "
+			"and %d blocks\n",
 			filename, srate, subbands, bitpool,
 			sbc.allocation == SBC_AM_SNR ? "SNR" : "LOUDNESS",
 			sbc.mode == SBC_MODE_MONO ? "MONO" :
 					sbc.mode == SBC_MODE_STEREO ?
-						"STEREO" : "JOINTSTEREO");
+						"STEREO" : "JOINTSTEREO",
+			blocks);
 	}
 
 	while (1) {
@@ -209,7 +226,10 @@ static void usage(void)
 		"\t-s, --subbands       Number of subbands to use (4 or 8)\n"
 		"\t-b, --bitpool        Bitpool value (default is 32)\n"
 		"\t-j, --joint          Joint stereo\n"
+		"\t-d, --dualchannel    Dual channel\n"
 		"\t-S, --snr            Use SNR mode (default is loudness)\n"
+		"\t-B, --blocks         Number of blocks to use (4, 8, 12 "
+			"or 16)\n"
 		"\n");
 }
 
@@ -219,15 +239,18 @@ static struct option main_options[] = {
 	{ "subbands",	1, 0, 's' },
 	{ "bitpool",	1, 0, 'b' },
 	{ "joint",	0, 0, 'j' },
+	{ "dualchannel",0, 0, 'd' },
 	{ "snr",	0, 0, 'S' },
+	{ "blocks",	1, 0, 'B' },
 	{ 0, 0, 0, 0 }
 };
 
 int main(int argc, char *argv[])
 {
-	int i, opt, subbands = 8, bitpool = 32, joint = 0, snr= 0;
+	int i, opt, subbands = 8, bitpool = 32, joint = 0, dualchannel = 0;
+	int snr = 0, blocks = 16;
 
-	while ((opt = getopt_long(argc, argv, "+hvs:b:jS",
+	while ((opt = getopt_long(argc, argv, "+hvs:b:jdSB:",
 						main_options, NULL)) != -1) {
 		switch(opt) {
 		case 'h':
@@ -255,10 +278,24 @@ int main(int argc, char *argv[])
 			joint = 1;
 			break;
 
+		case 'd':
+			dualchannel = 1;
+			break;
+
 		case 'S':
 			snr = 1;
 			break;
 
+		case 'B':
+			blocks = atoi(optarg);
+			if (blocks != 16 &amp;&amp; blocks != 12 &amp;&amp;
+				blocks != 8 &amp;&amp; blocks != 4) {
+				fprintf(stderr, "Invalid blocks %d!\n",
+					blocks);
+				exit(1);
+			}
+			break;
+
 		default:
 			exit(1);
 		}
@@ -274,7 +311,8 @@ int main(int argc, char *argv[])
 	}
 
 	for (i = 0; i &lt; argc; i++)
-		encode(argv[i], subbands, bitpool, joint, snr);
+		encode(argv[i], subbands, bitpool, joint, dualchannel,
+			snr, blocks);
 
 	return 0;
 }

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081223104201</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 10:42:01-0400</timestampReceived><subject>Re: Patch for supporting even more command line parameters in</subject><body>

Hi Christian,

&gt; in order to test the performance of SBC, I needed to add some more
&gt; parameter options to "sbcenc".
&gt; Attached the patch.

can you get me one with proper coding style please. Also the maximum
width is 80 characters :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223110614</emailId><senderName>Chan-Yeol Park</senderName><senderEmail>chanyeol.park@samsung.com</senderEmail><timestampReceived>2008-12-23 11:06:14-0400</timestampReceived><subject>Does anyone know how to change the a2dp audio output stream between</subject><body>

Dear All

Does anyone know how to change the a2dp audio output stream properly
between Speaker and Bluetooth stereo headset?

When we disconnect headset while we listen to A2DP, I think local device
should change the output stream to speaker or earphone.
I think it¡¯s totally rely on Gstreamer control. 
I use Gstreamer and Alsa bluez Plugin. 

Maybe.. I think anybody already think about this problem..and there is a
specialist. ^^


Moreover there is another problem. 
That is a video play case. 

When we play it, it¡¯s difficult to synchronize audio/video. 
I think it¡¯s much more difficult than just audio case¡¦.


Regards
ChanYeol, Park


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222202120</emailId><senderName>Claudio Fiorini</senderName><senderEmail>claudio@cfiorini.it</senderEmail><timestampReceived>2008-12-22 20:21:20-0400</timestampReceived><subject>understading bluetooth init</subject><body>

hi,
is there any point of start to know what exactly happens when i plug a
BT dongle in my usb port? I mean what code is sent to BT through USB?

thanks a lot

claudio

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222052002</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-12-22 05:20:02-0400</timestampReceived><subject>python examples for keyboard connection</subject><body>

Hey

I'm working on gumstix overo/oe so the regular gnome stuff is not
available. This system is running bluez 3.36. I can work on updating
to 4.x if it helps.

I was able to use this simple script to connect a mouse by specifying
its bdaddr on the command line. (Device-initiated reconnect does not
seem to work, but this succeeded on the first attempt anyway)

==================================
#!/usr/bin/python

import sys
import dbus

devices = sys.argv
del devices[0]

bus = dbus.SystemBus()
bmgr = dbus.Interface(bus.get_object('org.bluez', '/org/bluez'),
'org.bluez.Manager')
bus_id = bmgr.ActivateService('input')
imgr = dbus.Interface(bus.get_object(bus_id, '/org/bluez/input'),
'org.bluez.input.Manager')

for device in devices:
        path = imgr.CreateDevice(device)
        idev = dbus.Interface (bus.get_object(bus_id, path),
'org.bluez.input.Device')
        idev.Connect()
==================================

but it doesn't work for connecting a think outside keyboard:

root@overo:~# ./pairconnect.py 00:03:51:C9:EA:53
Traceback (most recent call last):
  File "./pairconnect.py", line 19, in &lt;module&gt;
    idev.Connect()
  File "/usr/lib/python2.5/site-packages/dbus/proxies.py", line 68, in __call__
    return self._proxy_method(*args, **keywords)
  File "/usr/lib/python2.5/site-packages/dbus/proxies.py", line 140, in __call__
    **keywords)
  File "/usr/lib/python2.5/site-packages/dbus/connection.py", line
622, in call_blocking
    message, timeout)
dbus.exceptions.DBusException:
org.bluez.Error.ConnectionAttemptFailed: Required key not available

also, what should I do to look up a device first so I don't get this
on subsequent attempts:

dbus.exceptions.DBusException: org.bluez.Error.AlreadyExists: Input
Already exists

I'll document whatever works out on the wiki.

-- 
Brad Midgley
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223013351</emailId><senderName>"Zhao Forrest"</senderName><senderEmail>forrest.zhao@gmail.com</senderEmail><timestampReceived>2008-12-23 01:33:51-0400</timestampReceived><subject>[patch] fix the bug of obex_object_resume(), obex_server() in openobex</subject><body>

Hi,

When developing the PBAP server in obexd we found that
obex_object_resume() can't work as expected. After debugging openobex
we post this patch to fix the bug. We did the internal test with PBAP
server/client. The below patch fixes the bug in obex_object_resume()
and obex_server().

Thanks,
Forrest

diff --git a/lib/obex_object.c b/lib/obex_object.c
index 482e6a7..0af0108 100644
--- a/lib/obex_object.c
+++ b/lib/obex_object.c
@@ -908,24 +908,38 @@ int obex_object_suspend(obex_object_t *object)

 int obex_object_resume(obex_t *self, obex_object_t *object)
 {
+	int ret;
+
 	if (!object-&gt;suspend)
 		return 0;

 	object-&gt;suspend = 0;

-	if (object-&gt;first_packet_sent &amp;&amp; !object-&gt;continue_received)
+ 	if (object-&gt;first_packet_sent &amp;&amp; !object-&gt;continue_received)
 		return 0;

-	if (obex_object_send(self, object, TRUE, FALSE) &lt; 0) {
-		obex_deliver_event(self, OBEX_EV_LINKERR, object-&gt;opcode, 0, TRUE);
+	ret = obex_object_send(self, object, TRUE, FALSE);
+
+	if (ret &lt; 0) {
+		obex_deliver_event(self, OBEX_EV_LINKERR, object-&gt;opcode &amp;
~OBEX_FINAL, 0, TRUE);
 		return -1;
-	}
+	} else if (ret == 0){

-	obex_deliver_event(self, OBEX_EV_PROGRESS, object-&gt;opcode, 0, FALSE);
+		obex_deliver_event(self, OBEX_EV_PROGRESS, object-&gt;opcode &amp;
~OBEX_FINAL, 0, FALSE);
+		object-&gt;first_packet_sent = 1;
+		object-&gt;continue_received = 0;
+	} else {
+		if (self-&gt;state &amp; MODE_SRV) {
+			obex_deliver_event(self, OBEX_EV_REQDONE, object-&gt;opcode &amp;
~OBEX_FINAL, 0, TRUE);
+			self-&gt;state = MODE_SRV | STATE_IDLE;
+			return 0;
+		}
+	}

-	self-&gt;state = MODE_CLI | STATE_REC;
-	object-&gt;first_packet_sent = 1;
-	object-&gt;continue_received = 0;
+	if (self-&gt;state &amp; MODE_SRV)
+		self-&gt;state = MODE_SRV | STATE_REC;
+	else
+		self-&gt;state = MODE_CLI | STATE_REC;

 	return 0;
 }
diff --git a/lib/obex_server.c b/lib/obex_server.c
index f27c8ee..cf19529 100644
--- a/lib/obex_server.c
+++ b/lib/obex_server.c
@@ -159,7 +159,7 @@ int obex_server(obex_t *self, buf_t *msg, int final)
 			} else
 				obex_deliver_event(self, OBEX_EV_PROGRESS, cmd, 0, FALSE);
 			break; /* Stay in this state if not final */
-		} else {
+		} else if (!self-&gt;object-&gt;first_packet_sent) {
 			DEBUG(4, "We got a request!\n");
 			/* More connect-magic woodoo stuff */
 			if (cmd == OBEX_CMD_CONNECT)
@@ -234,10 +234,17 @@ int obex_server(obex_t *self, buf_t *msg, int final)
 		 * See Obex spec v1.2, chapter 3.2, page 21 and 22.
 		 * See also example on chapter 7.3, page 47.
 		 * So, force the final bit here. - Jean II */
+		self-&gt;object-&gt;continue_received = 1;
+
+		if (self-&gt;object-&gt;suspend)
+			break;
+
 		ret = obex_object_send(self, self-&gt;object, TRUE, TRUE);
 		if (ret == 0) {
 			/* Made some progress */
 			obex_deliver_event(self, OBEX_EV_PROGRESS, cmd, 0, FALSE);
+			self-&gt;object-&gt;first_packet_sent = 1;
+			self-&gt;object-&gt;continue_received = 0;
 		} else if (ret &lt; 0) {
 			/* Error sending response */
 			obex_deliver_event(self, OBEX_EV_LINKERR, cmd, 0, TRUE);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081224031350</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-12-24 03:13:50-0400</timestampReceived><subject>[patch] obexd: if path == NULL, don't call</subject><body>

Hi

	Just a minor fix for g_dbus_unregister_interface to avoid calling dbus_con=
nection_get_object_path_data when path is NULL.

Best Regards,
Raymond Liu

["0001-bug-fix-if-path-NULL-don-t-call-dbus_connection.patch" (application/octet-stream)]

From ad7ab3dfe96fed455f39bea2181e71603515ffda Mon Sep 17 00:00:00 2001
From: Raymond Liu &lt;raymond.liu@intel.com&gt;
Date: Wed, 24 Dec 2008 10:54:47 +0800
Subject: [PATCH] bug fix: if path == NULL, don't call dbus_connection_get_object_path_data

---
 gdbus/object.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/gdbus/object.c b/gdbus/object.c
index 432a8a0..1c8bcc4 100644
--- a/gdbus/object.c
+++ b/gdbus/object.c
@@ -494,7 +494,7 @@ gboolean g_dbus_unregister_interface(DBusConnection *connection,
 	struct generic_data *data = NULL;
 	struct interface_data *iface;
 
-	if (dbus_connection_get_object_path_data(connection, path,
+	if (!path || dbus_connection_get_object_path_data(connection, path,
 						(void *) &amp;data) == FALSE)
 		return FALSE;
 
-- 
1.5.6.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081217204327</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-17 20:43:27-0400</timestampReceived><subject>[PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hello all,

This simple patch resolves one more SBC encoding quality issue. Now SBC
audio encoding quality should be fine in almost all cases after applying it
together with a new 8 subband filter.

The patch conflicts with the bitstream packing optimization, but I hope that
after all the encoding quality problems are fixed, we can get back to it.


Best regards,
Siarhei Siamashka

["0001-sbc-fix-for-overflow-bug-in-quantization-code.patch" (text/x-diff)]

From 12088ac2053709bf89c3c84d47aef46b7f2da475 Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Wed, 17 Dec 2008 22:32:11 +0200
Subject: [PATCH] sbc: fix for overflow bug in quantization code

The result of multiplication does not always fit into 32-bits. Using 64-bit
calculations helps to avoid overflows and sound quality problems in encoded
audio. Overflows are more likely to show up when using high values for
bitpool setting.

Signed-off-by: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
---
 sbc/sbc.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..6624921 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1085,7 +1085,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
 				if (levels[ch][sb] &gt; 0) {
 					audio_sample =
-						(uint16_t) ((((frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
+						(uint16_t) (((((int64_t)frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
 									(frame-&gt;scale_factor[ch][sb] + 1)) +
 								levels[ch][sb]) &gt;&gt; 1);
 					audio_sample &lt;&lt;= 16 - bits[ch][sb];
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081128133537</emailId><senderName>Jaska Uimonen</senderName><senderEmail>jaska.uimonen@nokia.com</senderEmail><timestampReceived>2008-11-28 13:35:37-0400</timestampReceived><subject>[RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi All,

I did some testing on the current 8 band fixed point 
encoding and it seems to attenuate frequencies below 800Hz 
and above 18kHz. There might be some other stuff happening 
also, because at least to me the bass seemed to lack some 
"definition".

I didn't quite understand how the current tables are calculated
and how the filtering works so I wrote a new filtering function
and calculated new filter tables for it. It is written
using 16 bit fixed point without any platform specific optimizations.
I only unrolled some loops etc. I tried to follow the
flow chart in MPEG-1 annex c.

With this new filtering the low and high frequencies are there, but
I haven't done any more thorough testing. At least it sounds
a little bit better to my ears :)

br,
Jaska Uimonen

P.S. I could have done some discussion with the list members 
about the current implementation, but I kind of got carried away. 
Sorry about that.

["0001-New-function-and-coefficients-for-8-band-fixed-point.patch" (0001-New-function-and-coefficients-for-8-band-fixed-point.patch)]

From f192e87fe4de74cd3d9651eea61d90efcd70198a Mon Sep 17 00:00:00 2001
From: Jaska Uimonen &lt;jauimone@esdhcp03999.research.nokia.com&gt;
Date: Fri, 28 Nov 2008 10:50:09 +0200
Subject: [PATCH] New function and coefficients for 8 band fixed point encoding.

---
 sbc/sbc.c        |  106 +++++++++++++++++++++++++++++++++++++++++++++++++++++-
 sbc/sbc_tables.h |   44 ++++++++++++++++++++++
 2 files changed, 149 insertions(+), 1 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..7966f2a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -862,6 +862,108 @@ static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
 	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
 }
 
+static inline void _sbc_analyze_eight_modified_fixed(const int32_t *in, int32_t *out)
+{
+        int32_t t[16];
+        int i = 0, hop = 0, R = 0;
+
+	/* rounding coefficient for Q15 */
+	R = 1 &lt;&lt; (15-1);
+
+	/* low pass polyphase filter */
+	t[0] =  (int32_t)in[0] * _sbc_proto_fixed8[0];
+	t[1] =  (int32_t)in[1] * _sbc_proto_fixed8[1];
+	t[2] =  (int32_t)in[2] * _sbc_proto_fixed8[2];
+	t[3] =  (int32_t)in[3] * _sbc_proto_fixed8[3];
+	t[4] =  (int32_t)in[4] * _sbc_proto_fixed8[4];
+	t[5] =  (int32_t)in[5] * _sbc_proto_fixed8[5];
+	t[6] =  (int32_t)in[6] * _sbc_proto_fixed8[6];
+	t[7] =  (int32_t)in[7] * _sbc_proto_fixed8[7];
+	t[8] =  (int32_t)in[8] * _sbc_proto_fixed8[8];
+	t[9] =  (int32_t)in[9] * _sbc_proto_fixed8[9];
+	t[10] = (int32_t)in[10] * _sbc_proto_fixed8[10];
+	t[11] = (int32_t)in[11] * _sbc_proto_fixed8[11];
+	t[12] = (int32_t)in[12] * _sbc_proto_fixed8[12];
+	t[13] = (int32_t)in[13] * _sbc_proto_fixed8[13];
+	t[14] = (int32_t)in[14] * _sbc_proto_fixed8[14];
+	t[15] = (int32_t)in[15] * _sbc_proto_fixed8[15];
+
+	hop = 16;
+        for (i = 0; i &lt; 4; i++) {
+	        t[0] +=  (int32_t)in[hop] * _sbc_proto_fixed8[hop];
+		t[1] +=  (int32_t)in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t[2] +=  (int32_t)in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t[3] +=  (int32_t)in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+		t[4] +=  (int32_t)in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+		t[5] +=  (int32_t)in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+		t[6] +=  (int32_t)in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t[7] +=  (int32_t)in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t[8] +=  (int32_t)in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t[9] +=  (int32_t)in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t[10] += (int32_t)in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t[11] += (int32_t)in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+		t[12] += (int32_t)in[hop + 12] * _sbc_proto_fixed8[hop + 12];
+		t[13] += (int32_t)in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+		t[14] += (int32_t)in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t[15] += (int32_t)in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	t[0] = (t[0] + R) &gt;&gt; 15;
+	t[1] = (t[1] + R) &gt;&gt; 15;
+	t[2] = (t[2] + R) &gt;&gt; 15;
+	t[3] = (t[3] + R) &gt;&gt; 15;
+	t[4] = (t[4] + R) &gt;&gt; 15;
+	t[5] = (t[5] + R) &gt;&gt; 15;
+	t[6] = (t[6] + R) &gt;&gt; 15;
+	t[7] = (t[7] + R) &gt;&gt; 15;
+	t[8] = (t[8] + R) &gt;&gt; 15;
+	t[9] = (t[9] + R) &gt;&gt; 15;
+	t[10] = (t[10] + R) &gt;&gt; 15;
+	t[11] = (t[11] + R) &gt;&gt; 15;
+	t[12] = (t[12] + R) &gt;&gt; 15;
+	t[13] = (t[13] + R) &gt;&gt; 15;
+	t[14] = (t[14] + R) &gt;&gt; 15;
+	t[15] = (t[15] + R) &gt;&gt; 15;
+
+	/* do the cos transform */
+	hop = 0;
+	for (i = 0; i &lt; 8; i++) {
+	        out[i] = 0;
+
+		out[i] += t[0] * cos_table_fixed_8[0 + hop];
+		out[i] += t[1] * cos_table_fixed_8[1 + hop];
+		out[i] += t[2] * cos_table_fixed_8[2 + hop];
+		out[i] += t[3] * cos_table_fixed_8[3 + hop];
+		out[i] += t[4] * cos_table_fixed_8[4 + hop];
+		out[i] += t[5] * cos_table_fixed_8[5 + hop];
+		out[i] += t[6] * cos_table_fixed_8[6 + hop];
+		out[i] += t[7] * cos_table_fixed_8[7 + hop];
+		out[i] += t[8] * cos_table_fixed_8[8 + hop];
+		out[i] += t[9] * cos_table_fixed_8[9 + hop];
+		out[i] += t[10] * cos_table_fixed_8[10 + hop];
+		out[i] += t[11] * cos_table_fixed_8[11 + hop];
+		out[i] += t[12] * cos_table_fixed_8[12 + hop];
+		out[i] += t[13] * cos_table_fixed_8[13 + hop];
+		out[i] += t[14] * cos_table_fixed_8[14 + hop];
+		out[i] += t[15] * cos_table_fixed_8[15 + hop];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	out[0] = (out[0] + R) &gt;&gt; 15;
+	out[1] = (out[1] + R) &gt;&gt; 15;
+	out[2] = (out[2] + R) &gt;&gt; 15;
+	out[3] = (out[3] + R) &gt;&gt; 15;
+	out[4] = (out[4] + R) &gt;&gt; 15;
+	out[5] = (out[5] + R) &gt;&gt; 15;
+	out[6] = (out[6] + R) &gt;&gt; 15;
+	out[7] = (out[7] + R) &gt;&gt; 15;
+}
+
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 					struct sbc_frame *frame, int ch,
 					int blk)
@@ -879,7 +981,9 @@ static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 	x[86] = x[6] = pcm[1];
 	x[87] = x[7] = pcm[0];
 
-	_sbc_analyze_eight(x, frame-&gt;sb_sample_f[blk][ch]);
+
+	/* _sbc_analyze_eight(x, frame-&gt;sb_sample_f[blk][ch]); */
+	_sbc_analyze_eight_modified_fixed(x, frame-&gt;sb_sample_f[blk][ch]);
 
 	state-&gt;position[ch] -= 8;
 	if (state-&gt;position[ch] &lt; 0)
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..00a09a2 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -166,3 +166,47 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+/*
+ * to produce this Q15 format table:
+ *
+ * Get the filter coeffs from the spec and multiply them by 2^15.
+ */
+static const signed short _sbc_proto_fixed8[80] = {
+       0, 5, 11, 18, 26, 37, 48, 58, 65, 68,
+       65, 52, 29, -5, -54, -114, 185, 263, 342, 417,
+       480, 521, 531, 501, 423, 290, 95, -161, -479, -855,
+       -1280, -1742, 2228, 2719, 3197, 3643, 4039, 4366, 4612, 4764,
+       4815, 4764, 4612, 4366, 4039, 3643, 3197, 2719, -2228, -1742,
+       -1280, -855, -479, -161, 95, 290, 423, 501, 531, 521,
+       480, 417, 342, 263, -185, -114, -54, -5, 29, 52,
+       65, 68, 65, 58, 48, 37, 26, 18, 11, 5
+};
+
+/*
+ * to produce this Q15 format cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7 for j = 0:15 b(i+1, j+1) = cos( (i + 0.5) * (j - 4) * (pi/8) ) endfor endfor;
+ * cosfixed = b*2^15;
+ * for i = 1:8 for j = 1:16 if(cosfixed(i,j) == 32768) cosfixed(i,j) = 32767; endif; endfor; endfor;
+ * printf("%d, ", cosfixed');
+ */
+static const signed short cos_table_fixed_8[128] = {
+        23170, 27245, 30273, 32138, 32767, 32138, 30273, 27245,
+	23170, 18204, 12539, 6392, 0, -6392, -12539, -18204,
+	-23170, -6392, 12539, 27245, 32767, 27245, 12539, -6392,
+	-23170, -32138, -30273, -18204, 0, 18204, 30273, 32138,
+	-23170, -32138, -12539, 18204, 32767, 18204, -12539, -32138,
+	-23170, 6392, 30273, 27245, 0, -27245, -30273, -6392,
+	23170, -18204, -30273, 6392, 32767, 6392, -30273, -18204,
+	23170, 27245, -12539, -32138, 0, 32138, 12539, -27245,
+	23170, 18204, -30273, -6392, 32767, -6392, -30273, 18204,
+	23170, -27245, -12539, 32138, 0, -32138, 12539, 27245,
+	-23170, 32138, -12539, -18204, 32767, -18204, -12539, 32138,
+	-23170, -6392, 30273, -27245, 0, 27245, -30273, 6392,
+	-23170, 6392, 12539, -27245, 32767, -27245, 12539, 6392,
+	-23170, 32138, -30273, 18204, 0, -18204, 30273, -32138,
+	23170, -27245, 30273, -32138, 32767, -32138, 30273, -27245,
+	23170, -18204, 12539, -6392, 0, 6392, -12539, 18204
+};
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081229095936</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 09:59:36-0400</timestampReceived><subject>Re: Testing SBC filtering functions</subject><body>

Hi Christian,

&gt; I wrote this script to make some tests on the SBC decoder and encoder using
&gt; the recommended testing procedure with the reference bitstreams, the
&gt; reference codec and PEAQ. 
&gt; http://net.cs.uni-tuebingen.de/html/nexgenvoip/html/
&gt; I got little bit confused with all the latest patches and whether they are
&gt; included or not. Just send me an email on which patch you like to have
&gt; tested. Running the tests just takes half an hour; me to answer my emails
&gt; maybe a bit longer.

I leave the patches to the guys that actually know what they are doing.

So I like the test script, but I would really prefer if we can use
sbctester.c program to verify the results. What do you think?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229110602</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-29 11:06:02-0400</timestampReceived><subject>Re: Testing SBC filtering functions</subject><body>

On Monday 29 December 2008 11:16:23 ext Christian Hoene wrote:
&gt; Hello all,
&gt; 
&gt; Merry Christmas! 
&gt; 
&gt; I wrote this script to make some tests on the SBC decoder and encoder using
&gt; the recommended testing procedure with the reference bitstreams, the
&gt; reference codec and PEAQ. 
&gt; http://net.cs.uni-tuebingen.de/html/nexgenvoip/html/
&gt; I got little bit confused with all the latest patches and whether they are
&gt; included or not. Just send me an email on which patch you like to have
&gt; tested. Running the tests just takes half an hour; me to answer my emails
&gt; maybe a bit longer.

Please try the following patch (apply it to the latest git):
http://marc.info/?l=linux-bluetooth&amp;m=123054787830678&amp;w=2

You can try the patch "as is", and also with SBC_HIGH_PRECISION define
uncommented. High precision mode is naturally more likely to pass the
conformance tests.

I used my own script for testing with 'tiny_psnr' tool for comparing original file
before encoding and the final decoded result (it measures standard deviation
and PSNR). It would be interesting to see how our results correlate.

According to my tests, encoder should now be OK with this patch. Decoder
is definitely in a better shape than the current encoder from git. But the
decoder also seems to have bugs which degrade quality significantly
in some cases.


Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229120301</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 12:03:01-0400</timestampReceived><subject>RE: Testing SBC filtering functions</subject><body>

Hi Christian,

&gt; &gt; I leave the patches to the guys that actually know what they are doing.
&gt; &gt; 
&gt; &gt; So I like the test script, but I would really prefer if we can use
&gt; &gt; sbctester.c program to verify the results. What do you think?
&gt; 
&gt; The sbctester.c works fine for the decoder and is used in the testing
&gt; script. The testing of the encoder might also work with test procedure
&gt; implemented in sbctester.c. However, the official Bluetooth testing spec
&gt; requires that
&gt; "9.2.2.1 SBC Encoder ... [E2] The subjective quality (measured by
&gt; standardized way or by objective testing
&gt; methods, see [6]and [7]) shall be equivalent to that of reference encoder."
&gt; with " [6] Rec. ITU-R BS.1116-1, "METHODS FOR THE SUBJECTIVE ASSESSMENT OF
&gt; SMALL IMPAIRMENTS IN AUDIO SYSTEMS INCLUDING MULTICHANNEL SOUND SYSTEMS",
&gt; 1994-1997
&gt; [7] Rec. ITU-R BS.1387-1, "METHOD FOR OBJECTIVE MEASUREMENTS OF PERCEIVED
&gt; AUDIO QUALITY", 2001".
&gt; Until the encoder works fine, we should use BS.1387-1 (PEAQ). If all errors
&gt; have been fixed, then sbctester.c might can be used instead of ITU-R
&gt; BS.1387-1. However, then, we might still need the reference implementations
&gt; or some pretranslated wav and sbc files.

I really prefer if we have an open source solution available to
everybody for the SBC conformance testing. If sbctester.c is not good
enough than we have to write one. I also don't mind using the reference
encoder/decoder and the reference files. Using wine is not optimal, but
I don't really mind it.

Another question that I have is how you use the sbc_enc_test_01.wav and
sbc_enc_test_02.wav files with Windows reference encoder? It turns into
a busy loop for me.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229120429</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 12:04:29-0400</timestampReceived><subject>Re: Testing SBC filtering functions</subject><body>

Hi Siarhei,

&gt; &gt; I wrote this script to make some tests on the SBC decoder and encoder using
&gt; &gt; the recommended testing procedure with the reference bitstreams, the
&gt; &gt; reference codec and PEAQ. 
&gt; &gt; http://net.cs.uni-tuebingen.de/html/nexgenvoip/html/
&gt; &gt; I got little bit confused with all the latest patches and whether they are
&gt; &gt; included or not. Just send me an email on which patch you like to have
&gt; &gt; tested. Running the tests just takes half an hour; me to answer my emails
&gt; &gt; maybe a bit longer.
&gt; 
&gt; Please try the following patch (apply it to the latest git):
&gt; http://marc.info/?l=linux-bluetooth&amp;m=123054787830678&amp;w=2
&gt; 
&gt; You can try the patch "as is", and also with SBC_HIGH_PRECISION define
&gt; uncommented. High precision mode is naturally more likely to pass the
&gt; conformance tests.
&gt; 
&gt; I used my own script for testing with 'tiny_psnr' tool for comparing original file
&gt; before encoding and the final decoded result (it measures standard deviation
&gt; and PSNR). It would be interesting to see how our results correlate.

can you open source tiny_psnr an we merge it into the BlueZ source?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229124100</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 12:41:00-0400</timestampReceived><subject>RE: Testing SBC filtering functions</subject><body>

Hi Christian,

&gt; &gt; I really prefer if we have an open source solution available to
&gt; &gt; everybody for the SBC conformance testing. If sbctester.c is not good
&gt; &gt; enough than we have to write one. 
&gt; 
&gt; Sbctester.c is perfect for the decoder. For the encoder, we might also take
&gt; it or write something better to replace PEAQ.

I am all for that since we need to be able to pass SBC conformance with
pure open source tools. Otherwise it becomes painful for some people.

&gt; BTW; then I will have spent 6000 EUR on buying one PEAQ license in vain ;-)

I know multiple better ways of spending that money ;)

&gt; &gt; I also don't mind using the reference
&gt; &gt; encoder/decoder and the reference files. Using wine is not optimal, but
&gt; &gt; I don't really mind it.
&gt; 
&gt; Fine. But can it be added to the repository? Or shall a description be given
&gt; on how to download it from the Bluetooth SIG web page.

No we can't add it. I would have to write something up on how to
download it and how testing is suppose to work.
 
&gt; &gt; Another question that I have is how you use the sbc_enc_test_01.wav and
&gt; &gt; sbc_enc_test_02.wav files with Windows reference encoder? It turns into
&gt; &gt; a busy loop for me.
&gt; 
&gt; Which file do are you referring too? I usually compress the original.wav
&gt; file (on the top of the second table). Which line options do you use for the
&gt; encoder?

The official files from the Bluetooth SIG and I don't know which options
would make them encode correctly. Just calling the reference encoder
with the filename makes it run into a busy loop. With wine and natively
running on Windows XP.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229131735</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 13:17:35-0400</timestampReceived><subject>RE: Testing SBC filtering functions</subject><body>

Hi Christian,

&gt; &gt; The official files from the Bluetooth SIG and I don't know which options
&gt; &gt; would make them encode correctly. Just calling the reference encoder
&gt; &gt; with the filename makes it run into a busy loop. With wine and natively
&gt; &gt; running on Windows XP.
&gt; 
&gt; No, the 28 official files from the Bluetooth SIG are already compressed. Use
&gt; the decoder to get the WAV files (or click on my web page on the links in
&gt; the first table). 

there are also *.wav files in one of the test specification zip files.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229143615</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-29 14:36:15-0400</timestampReceived><subject>Re: Testing SBC filtering functions</subject><body>

On Monday 29 December 2008 14:04:29 ext Marcel Holtmann wrote:
&gt; Hi Siarhei,
&gt; 
&gt; &gt; &gt; I wrote this script to make some tests on the SBC decoder and encoder using
&gt; &gt; &gt; the recommended testing procedure with the reference bitstreams, the
&gt; &gt; &gt; reference codec and PEAQ. 
&gt; &gt; &gt; http://net.cs.uni-tuebingen.de/html/nexgenvoip/html/
&gt; &gt; &gt; I got little bit confused with all the latest patches and whether they are
&gt; &gt; &gt; included or not. Just send me an email on which patch you like to have
&gt; &gt; &gt; tested. Running the tests just takes half an hour; me to answer my emails
&gt; &gt; &gt; maybe a bit longer.
&gt; &gt; 
&gt; &gt; Please try the following patch (apply it to the latest git):
&gt; &gt; http://marc.info/?l=linux-bluetooth&amp;m=123054787830678&amp;w=2
&gt; &gt; 
&gt; &gt; You can try the patch "as is", and also with SBC_HIGH_PRECISION define
&gt; &gt; uncommented. High precision mode is naturally more likely to pass the
&gt; &gt; conformance tests.
&gt; &gt; 
&gt; &gt; I used my own script for testing with 'tiny_psnr' tool for comparing original file
&gt; &gt; before encoding and the final decoded result (it measures standard deviation
&gt; &gt; and PSNR). It would be interesting to see how our results correlate.
&gt; 
&gt; can you open source tiny_psnr an we merge it into the BlueZ source?

It is already open source. This very simple tool is used in ffmpeg project
regression tests (and is part of ffmpeg distribution). It does not do
anything extraordinary, but just analyzes the difference between several
audio files and gets standard deviation and PSNR statistics. I just did not
feel like reinventing the wheel and used it for estimating quality :)

I only use the following patch on top of it (it can do automatic shift detection):
http://article.gmane.org/gmane.comp.video.ffmpeg.devel/74597
I find this patch quite useful (especially as it turns out for SBC), but ffmpeg
developers do not think so...

A crude ruby script (sorry, I don't speak shell scripting language) is attached.
I have been using it for testing audio quality.

For example, here is the test of a high precision sbcenc build (bitpool=255):

./sbc_encode_test.rb BigBuckBunny-stereo.flac
[2, 48000]
["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
--- comparing original / sbcenc + sbcdec ---
stddev:  108.67 PSNR: 55.60 bytes:114519261/114520000

--- comparing original / sbcenc + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
stddev:    0.01 PSNR:130.99 bytes:114519552/114519552

Test of a standard sbcenc build (bitpool=255):

./sbc_encode_test.rb BigBuckBunny-stereo.flac
[2, 48000]
["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
--- comparing original / sbcenc + sbcdec ---
stddev:  108.71 PSNR: 55.59 bytes:114519261/114520000

--- comparing original / sbcenc + sbc_decoder.exe ---
stddev:    2.07 PSNR: 89.98 bytes:114519260/114520000

--- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
stddev:    1.77 PSNR: 91.34 bytes:114519552/114519552

Having high bitrate is useful for detecting bugs in analysis filter because
its contribution to quality loss is more visible in this configuration and
other factors play lesser role.

I tested a lot of various files and settings configurations. According to this
script, the quality of high precision sbcenc build matches the quality of
reference encoder pretty well. Standard 16-bit fixed point sbcenc build
introduces a very minor quality loss, noticeable only at extremely high
bitrates.

By the way, 'sbcdec' seems to introduce quite a noticeable distortion and
is orders of magnitude less precise than the encoder.

Of course it would be intertesting to see if the quality estimation done by
using tiny_psnr is adequate and if it can replace a 6000 EUR tool for this
particular purpose.


Best regards,
Siarhei Siamashka

["sbc_encode_test.rb" (application/x-ruby)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081128141852</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-28 14:18:52-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi Jaska,

&gt; I did some testing on the current 8 band fixed point 
&gt; encoding and it seems to attenuate frequencies below 800Hz 
&gt; and above 18kHz. There might be some other stuff happening 
&gt; also, because at least to me the bass seemed to lack some 
&gt; "definition".
&gt; 
&gt; I didn't quite understand how the current tables are calculated
&gt; and how the filtering works so I wrote a new filtering function
&gt; and calculated new filter tables for it. It is written
&gt; using 16 bit fixed point without any platform specific optimizations.
&gt; I only unrolled some loops etc. I tried to follow the
&gt; flow chart in MPEG-1 annex c.
&gt; 
&gt; With this new filtering the low and high frequencies are there, but
&gt; I haven't done any more thorough testing. At least it sounds
&gt; a little bit better to my ears :)

thanks for looking at it. I am seriously lost when it comes to audio
codecs and my ears normally don't count for much.

So do you think we should throw all away any you start over providing a
correct implementation with fixed point integer and then we start
optimizing step by step (while testing against SBC conformance) or how
should we continue. For sure we have to fix our codec.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081230011931</emailId><senderName>"Krishnan R"</senderName><senderEmail>r_krish@email.com</senderEmail><timestampReceived>2008-12-30 01:19:31-0400</timestampReceived><subject>Manufacturer ID</subject><body>

Hi,

hci_read_local_version gives the manufacturer of the BT chip. The same id is used in \
get_inquiry_mode to get the inquiry mode. But I am not seeing any details elsewhere \
regarding this. Mainly, I am concerned whether manufacturer can be used to find the \
BT chip make?

Regards,
Krishnan

-- 
Be Yourself @ mail.com!
Choose From 200+ Email Addresses
Get a Free Account at www.mail.com

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081128142459</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-28 14:24:59-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Marcel Holtmann wrote:
&gt; Hi Jaska,
&gt; 
&gt;&gt; I did some testing on the current 8 band fixed point 
&gt;&gt; encoding and it seems to attenuate frequencies below 800Hz 
&gt;&gt; and above 18kHz. There might be some other stuff happening 
&gt;&gt; also, because at least to me the bass seemed to lack some 
&gt;&gt; "definition".
&gt;&gt;
&gt;&gt; I didn't quite understand how the current tables are calculated
&gt;&gt; and how the filtering works so I wrote a new filtering function
&gt;&gt; and calculated new filter tables for it. It is written
&gt;&gt; using 16 bit fixed point without any platform specific optimizations.
&gt;&gt; I only unrolled some loops etc. I tried to follow the
&gt;&gt; flow chart in MPEG-1 annex c.
&gt;&gt;
&gt;&gt; With this new filtering the low and high frequencies are there, but
&gt;&gt; I haven't done any more thorough testing. At least it sounds
&gt;&gt; a little bit better to my ears :)
&gt; 
&gt; thanks for looking at it. I am seriously lost when it comes to audio
&gt; codecs and my ears normally don't count for much.
&gt; 
&gt; So do you think we should throw all away any you start over providing a
&gt; correct implementation with fixed point integer and then we start
&gt; optimizing step by step (while testing against SBC conformance) or how
&gt; should we continue. For sure we have to fix our codec.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel

Hi Jaska, Thank you so much for improving the codecs :-D it was on my
long standing wish list. You want to receive a few Dutch stroopwafels
for your efforts :-D

Is the patch you provided working against the latest git? Marcel would
you be willing to review the patch for code style, hidden issues etcetera.

I would love to test this patch this weekend and apply it to the latest git.

I am an heavy stereo bluetooth user and will notice glitches and quality
distortions on my bluetooth speakers and headsets.

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128151435</emailId><senderName>Jaska Uimonen</senderName><senderEmail>jaska.uimonen@nokia.com</senderEmail><timestampReceived>2008-11-28 15:14:35-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi,

So in general I would just like to hear comments 
about the quality on this one. So does it fix the 
quality issues or is there still some problems. 

If someone just has the measurement system ready and would 
be able to run some sound through... This is all 
16 bit fixed point and we have an option to go to 32 bit 
if necessary.

About the optimizations... I myself use a vectorizing 
compiler, which optimizes this kind of C-code very 
well. So we could keep the "reference" fix point 
in the code base (if it actually works now...) and 
then do optimizations to different platform if 
one wishes. But I'm really open to how you would like 
to do it.

br,
Jaska
  


On Fri, 2008-11-28 at 15:18 +0100, ext Marcel Holtmann wrote:
&gt; Hi Jaska,
&gt; 
&gt; &gt; I did some testing on the current 8 band fixed point 
&gt; &gt; encoding and it seems to attenuate frequencies below 800Hz 
&gt; &gt; and above 18kHz. There might be some other stuff happening 
&gt; &gt; also, because at least to me the bass seemed to lack some 
&gt; &gt; "definition".
&gt; &gt; 
&gt; &gt; I didn't quite understand how the current tables are calculated
&gt; &gt; and how the filtering works so I wrote a new filtering function
&gt; &gt; and calculated new filter tables for it. It is written
&gt; &gt; using 16 bit fixed point without any platform specific optimizations.
&gt; &gt; I only unrolled some loops etc. I tried to follow the
&gt; &gt; flow chart in MPEG-1 annex c.
&gt; &gt; 
&gt; &gt; With this new filtering the low and high frequencies are there, but
&gt; &gt; I haven't done any more thorough testing. At least it sounds
&gt; &gt; a little bit better to my ears :)
&gt; 
&gt; thanks for looking at it. I am seriously lost when it comes to audio
&gt; codecs and my ears normally don't count for much.
&gt; 
&gt; So do you think we should throw all away any you start over providing a
&gt; correct implementation with fixed point integer and then we start
&gt; optimizing step by step (while testing against SBC conformance) or how
&gt; should we continue. For sure we have to fix our codec.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128152006</emailId><senderName>Jaska Uimonen</senderName><senderEmail>jaska.uimonen@nokia.com</senderEmail><timestampReceived>2008-11-28 15:20:06-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi,

I did the git clone this morning and made the patch on top of that.

Johan already came to tell me that I have whitespace instead 
of tabs in the changed parts. Sorry about that, I'll fix it. 
He said it will take 1 minutes to fix that but it was 
at least 1/2 hour with emacs :)

br,
Jaska



On Fri, 2008-11-28 at 15:24 +0100, ext Jelle de Jong wrote:
&gt; Marcel Holtmann wrote:
&gt; &gt; Hi Jaska,
&gt; &gt; 
&gt; &gt;&gt; I did some testing on the current 8 band fixed point 
&gt; &gt;&gt; encoding and it seems to attenuate frequencies below 800Hz 
&gt; &gt;&gt; and above 18kHz. There might be some other stuff happening 
&gt; &gt;&gt; also, because at least to me the bass seemed to lack some 
&gt; &gt;&gt; "definition".
&gt; &gt;&gt;
&gt; &gt;&gt; I didn't quite understand how the current tables are calculated
&gt; &gt;&gt; and how the filtering works so I wrote a new filtering function
&gt; &gt;&gt; and calculated new filter tables for it. It is written
&gt; &gt;&gt; using 16 bit fixed point without any platform specific optimizations.
&gt; &gt;&gt; I only unrolled some loops etc. I tried to follow the
&gt; &gt;&gt; flow chart in MPEG-1 annex c.
&gt; &gt;&gt;
&gt; &gt;&gt; With this new filtering the low and high frequencies are there, but
&gt; &gt;&gt; I haven't done any more thorough testing. At least it sounds
&gt; &gt;&gt; a little bit better to my ears :)
&gt; &gt; 
&gt; &gt; thanks for looking at it. I am seriously lost when it comes to audio
&gt; &gt; codecs and my ears normally don't count for much.
&gt; &gt; 
&gt; &gt; So do you think we should throw all away any you start over providing a
&gt; &gt; correct implementation with fixed point integer and then we start
&gt; &gt; optimizing step by step (while testing against SBC conformance) or how
&gt; &gt; should we continue. For sure we have to fix our codec.
&gt; &gt; 
&gt; &gt; Regards
&gt; &gt; 
&gt; &gt; Marcel
&gt; 
&gt; Hi Jaska, Thank you so much for improving the codecs :-D it was on my
&gt; long standing wish list. You want to receive a few Dutch stroopwafels
&gt; for your efforts :-D
&gt; 
&gt; Is the patch you provided working against the latest git? Marcel would
&gt; you be willing to review the patch for code style, hidden issues etcetera.
&gt; 
&gt; I would love to test this patch this weekend and apply it to the latest git.
&gt; 
&gt; I am an heavy stereo bluetooth user and will notice glitches and quality
&gt; distortions on my bluetooth speakers and headsets.
&gt; 
&gt; Best regards,
&gt; 
&gt; Jelle

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081202201520</emailId><senderName>Jim Carter</senderName><senderEmail>jimc@math.ucla.edu</senderEmail><timestampReceived>2008-12-02 20:15:20-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

On Fri, 28 Nov 2008, Jaska Uimonen wrote:

&gt; I did some testing on the current 8 band fixed point 
&gt; encoding and it seems to attenuate frequencies below 800Hz 
&gt; and above 18kHz. There might be some other stuff happening 
&gt; also, because at least to me the bass seemed to lack some 
&gt; "definition".

I have the same subjective impression: on (inexpensive) Motorola HT-820 
phones, A2DP is noticeably anemic compared to the same phones with the 
provided wire.

&gt; I didn't quite understand how the current tables are calculated
&gt; and how the filtering works so I wrote a new filtering function
&gt; and calculated new filter tables for it. It is written
&gt; using 16 bit fixed point without any platform specific optimizations.
&gt; I only unrolled some loops etc. I tried to follow the
&gt; flow chart in MPEG-1 annex c.

This is very exciting!  But it's been about 1.5 years since I read the A2DP 
spec so I can't remember: does the headphone require standard band 
breakpoints?  Or are the breakpoints implicit in the encoding, so if you 
adjust them to make better use of the Bluetooth bandwidth, the headphone 
will automatically go along?


James F. Carter          Voice 310 825 2897    FAX 310 206 6673
UCLA-Mathnet;  6115 MSA; 405 Hilgard Ave.; Los Angeles, CA, USA 90095-1555
Email: jimc@math.ucla.edu  http://www.math.ucla.edu/~jimc (q.v. for PGP key)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212171448</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-12 17:14:48-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Fri, 28 Nov 2008, Jaska Uimonen wrote:
&gt; I did some testing on the current 8 band fixed point
&gt; encoding and it seems to attenuate frequencies below 800Hz
&gt; and above 18kHz. There might be some other stuff happening
&gt; also, because at least to me the bass seemed to lack some
&gt; "definition".
&gt; I didn't quite understand how the current tables are calculated
&gt; and how the filtering works so I wrote a new filtering function
&gt; and calculated new filter tables for it. It is written
&gt; using 16 bit fixed point without any platform specific optimizations.
&gt; I only unrolled some loops etc. I tried to follow the
&gt; flow chart in MPEG-1 annex c.

&gt; +/*
&gt; + * to produce this Q15 format table:
&gt; + *
&gt; + * Get the filter coeffs from the spec and multiply them by 2^15.
&gt; + */
&gt; +static const signed short _sbc_proto_fixed8[80] = {
&gt; +       0, 5, 11, 18, 26, 37, 48, 58, 65, 68,
&gt; +       65, 52, 29, -5, -54, -114, 185, 263, 342, 417,
&gt; +       480, 521, 531, 501, 423, 290, 95, -161, -479, -855,
&gt; +       -1280, -1742, 2228, 2719, 3197, 3643, 4039, 4366, 4612, 4764,
&gt; +       4815, 4764, 4612, 4366, 4039, 3643, 3197, 2719, -2228, -1742,
&gt; +       -1280, -855, -479, -161, 95, 290, 423, 501, 531, 521,
&gt; +       480, 417, 342, 263, -185, -114, -54, -5, 29, 52,
&gt; +       65, 68, 65, 58, 48, 37, 26, 18, 11, 5
&gt; +};

Just remembered to check this. Precision and audio quality should be a bit
better if the original floating values are not truncated, but rounded when put
into tables.

For example, the fifth element is 26 in _sbc_proto_fixed8 table, but it was
26.998194372608 after multiplication and before conversion to integer.
Using 27 would have been a bit more correct here.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081212191920</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-12-12 19:19:20-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

Guys

One mistake we made was not keeping track of what functions we were
applying to the published tables as we worked things to look less and
less like the pseudocode in the spec. So if you start again from one
of the tables in the spec, keep a comment like

/* ourtable(x) = (int32)(table1(x) &lt;&lt; 16) */

Which in this case would mean that in ourtable we've shifted the
original table1 float value left 16 bits and truncated it to an int32.

I also combined tables or split tables to simplify our loop logic or
eliminate operations; an explanation in a comment would have been
appropriate.

Brad

On Fri, Dec 12, 2008 at 10:14 AM, Siarhei Siamashka
&lt;siarhei.siamashka@nokia.com&gt; wrote:
&gt; On Fri, 28 Nov 2008, Jaska Uimonen wrote:
&gt;&gt; I did some testing on the current 8 band fixed point
&gt;&gt; encoding and it seems to attenuate frequencies below 800Hz
&gt;&gt; and above 18kHz. There might be some other stuff happening
&gt;&gt; also, because at least to me the bass seemed to lack some
&gt;&gt; "definition".
&gt;&gt; I didn't quite understand how the current tables are calculated
&gt;&gt; and how the filtering works so I wrote a new filtering function
&gt;&gt; and calculated new filter tables for it. It is written
&gt;&gt; using 16 bit fixed point without any platform specific optimizations.
&gt;&gt; I only unrolled some loops etc. I tried to follow the
&gt;&gt; flow chart in MPEG-1 annex c.
&gt;
&gt;&gt; +/*
&gt;&gt; + * to produce this Q15 format table:
&gt;&gt; + *
&gt;&gt; + * Get the filter coeffs from the spec and multiply them by 2^15.
&gt;&gt; + */
&gt;&gt; +static const signed short _sbc_proto_fixed8[80] = {
&gt;&gt; +       0, 5, 11, 18, 26, 37, 48, 58, 65, 68,
&gt;&gt; +       65, 52, 29, -5, -54, -114, 185, 263, 342, 417,
&gt;&gt; +       480, 521, 531, 501, 423, 290, 95, -161, -479, -855,
&gt;&gt; +       -1280, -1742, 2228, 2719, 3197, 3643, 4039, 4366, 4612, 4764,
&gt;&gt; +       4815, 4764, 4612, 4366, 4039, 3643, 3197, 2719, -2228, -1742,
&gt;&gt; +       -1280, -855, -479, -161, 95, 290, 423, 501, 531, 521,
&gt;&gt; +       480, 417, 342, 263, -185, -114, -54, -5, 29, 52,
&gt;&gt; +       65, 68, 65, 58, 48, 37, 26, 18, 11, 5
&gt;&gt; +};
&gt;
&gt; Just remembered to check this. Precision and audio quality should be a bit
&gt; better if the original floating values are not truncated, but rounded when put
&gt; into tables.
&gt;
&gt; For example, the fifth element is 26 in _sbc_proto_fixed8 table, but it was
&gt; 26.998194372608 after multiplication and before conversion to integer.
&gt; Using 27 would have been a bit more correct here.
&gt;
&gt; --
&gt; Best regards,
&gt; Siarhei Siamashka
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;



-- 
Brad Midgley
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081215125419</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-15 12:54:19-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Friday 12 December 2008 21:19:20 ext Brad Midgley wrote:
&gt; Guys
&gt;
&gt; One mistake we made was not keeping track of what functions we were
&gt; applying to the published tables as we worked things to look less and
&gt; less like the pseudocode in the spec. So if you start again from one
&gt; of the tables in the spec, keep a comment like
&gt;
&gt; /* ourtable(x) = (int32)(table1(x) &lt;&lt; 16) */

This part can be probably done just by having a macro, something like
#define F_TO_Q15(x) (int16_t)((x&gt;0) ? ((x)*(1&lt;&lt;15)+0.5) : ((x)*(1&lt;&lt;15)-0.5))
And then using plain floating point numbers from the SBC specification in the
table, wrapped into this macro. Though I wonder if it is possible to use such
conditional expression in the static table initializer list with all versions
of gcc/other compilers.

&gt; Which in this case would mean that in ourtable we've shifted the
&gt; original table1 float value left 16 bits and truncated it to an int32.
&gt;
&gt; I also combined tables or split tables to simplify our loop logic or
&gt; eliminate operations; an explanation in a comment would have been
&gt; appropriate.

Yes, any transformations or simplifications should be extensively commented.
So that it will be always possible to reproduce them or verify their
correctness.

Can anybody try to remember/explain what transformations were applied to
the existing fixed point implementation?

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081215151658</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-12-15 15:16:58-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

Siarhei

I like your idea of using a macro with the original floating point
tables, as long as we know it is done at compile time, not runtime :)

&gt; Can anybody try to remember/explain what transformations were applied to
&gt; the existing fixed point implementation?

it was done by several people and the only record we have is in cvs.
(part of it is in the old btsco project's cvs)

-- 
Brad Midgley
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081216223748</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-16 22:37:48-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Monday 15 December 2008 17:16:58 ext Brad Midgley wrote:
&gt; I like your idea of using a macro with the original floating point
&gt; tables, as long as we know it is done at compile time, not runtime :)

What about something like this modification to Jaska's patch? It contains
floating point constants wrapped into a macro.

This version is using 16-bit multiplications only (additional natural change
would be just to convert 'sbc_encoder_state-&gt;' to int16_t because it does not
need to be int32_t), which is good for performance for the platforms with fast
16-bit integer multiplication. But it is also flexible enough to be changed to
use 32x32-&gt;64 multiplications just by replacing FIXED_A and FIXED_T types
to int64_t and int32_t respectively (for better precision or experiments with
conformance testing).

&gt; &gt; Can anybody try to remember/explain what transformations were applied to
&gt; &gt; the existing fixed point implementation?
&gt;
&gt; it was done by several people and the only record we have is in cvs.
&gt; (part of it is in the old btsco project's cvs)

Regarding the code optimizations. Looking at the tables, It can be seen that
'cos_table_fixed_8[0+hop]' is always equal to 'cos_table_fixed_8[8+hop]'.
The same is true for 'cos_table_fixed_8[1+hop]' and 'cos_table_fixed_8[7+hop]'
So it is possible to join 't1[0] + t1[8]', 't1[1]+ t1[7]' and the other such
pairs, effectively halving the number of counters. This looks very much like
the optimization that was applied to the current fixed point code :)

But now it would be very interesting to see if the conformance tests pass
rate is better with the new filtering function.


Best regards,
Siarhei Siamashka

["analyze_eight_modified.diff" (text/x-diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..656abe5 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -40,6 +40,7 @@
 #include &lt;string.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;sys/types.h&gt;
+#include &lt;limits.h&gt;
 
 #include "sbc_math.h"
 #include "sbc_tables.h"
@@ -742,124 +743,107 @@ static inline void sbc_analyze_four(struct sbc_encoder_state *state,
 
 static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[8];
-
-	t[0] = SCALE8_STAGE1( /* Q10 */
-		MULA(_sbc_proto_8[0], (in[16] - in[64]), /* Q18 = Q18 * Q0 */
-		MULA(_sbc_proto_8[1], (in[32] - in[48]),
-		MULA(_sbc_proto_8[2], in[4],
-		MULA(_sbc_proto_8[3], in[20],
-		MULA(_sbc_proto_8[4], in[36],
-		MUL( _sbc_proto_8[5], in[52])))))));
-
-	t[1] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[6], in[2],
-		MULA(_sbc_proto_8[7], in[18],
-		MULA(_sbc_proto_8[8], in[34],
-		MULA(_sbc_proto_8[9], in[50],
-		MUL(_sbc_proto_8[10], in[66]))))));
-
-	t[2] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[11], in[1],
-		MULA(_sbc_proto_8[12], in[17],
-		MULA(_sbc_proto_8[13], in[33],
-		MULA(_sbc_proto_8[14], in[49],
-		MULA(_sbc_proto_8[15], in[65],
-		MULA(_sbc_proto_8[16], in[3],
-		MULA(_sbc_proto_8[17], in[19],
-		MULA(_sbc_proto_8[18], in[35],
-		MULA(_sbc_proto_8[19], in[51],
-		MUL( _sbc_proto_8[20], in[67])))))))))));
-
-	t[3] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[21], in[5],
-		MULA( _sbc_proto_8[22], in[21],
-		MULA( _sbc_proto_8[23], in[37],
-		MULA( _sbc_proto_8[24], in[53],
-		MULA( _sbc_proto_8[25], in[69],
-		MULA(-_sbc_proto_8[15], in[15],
-		MULA(-_sbc_proto_8[14], in[31],
-		MULA(-_sbc_proto_8[13], in[47],
-		MULA(-_sbc_proto_8[12], in[63],
-		MUL( -_sbc_proto_8[11], in[79])))))))))));
-
-	t[4] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[26], in[6],
-		MULA( _sbc_proto_8[27], in[22],
-		MULA( _sbc_proto_8[28], in[38],
-		MULA( _sbc_proto_8[29], in[54],
-		MULA( _sbc_proto_8[30], in[70],
-		MULA(-_sbc_proto_8[10], in[14],
-		MULA(-_sbc_proto_8[9], in[30],
-		MULA(-_sbc_proto_8[8], in[46],
-		MULA(-_sbc_proto_8[7], in[62],
-		MUL( -_sbc_proto_8[6], in[78])))))))))));
-
-	t[5] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[31], in[7],
-		MULA( _sbc_proto_8[32], in[23],
-		MULA( _sbc_proto_8[33], in[39],
-		MULA( _sbc_proto_8[34], in[55],
-		MULA( _sbc_proto_8[35], in[71],
-		MULA(-_sbc_proto_8[20], in[13],
-		MULA(-_sbc_proto_8[19], in[29],
-		MULA(-_sbc_proto_8[18], in[45],
-		MULA(-_sbc_proto_8[17], in[61],
-		MUL( -_sbc_proto_8[16], in[77])))))))))));
-
-	t[6] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[36], (in[8] + in[72]),
-		MULA( _sbc_proto_8[37], (in[24] + in[56]),
-		MULA( _sbc_proto_8[38], in[40],
-		MULA(-_sbc_proto_8[39], in[12],
-		MULA(-_sbc_proto_8[5], in[28],
-		MULA(-_sbc_proto_8[4], in[44],
-		MULA(-_sbc_proto_8[3], in[60],
-		MUL( -_sbc_proto_8[2], in[76])))))))));
-
-	t[7] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[35], in[9],
-		MULA( _sbc_proto_8[34], in[25],
-		MULA( _sbc_proto_8[33], in[41],
-		MULA( _sbc_proto_8[32], in[57],
-		MULA( _sbc_proto_8[31], in[73],
-		MULA(-_sbc_proto_8[25], in[11],
-		MULA(-_sbc_proto_8[24], in[27],
-		MULA(-_sbc_proto_8[23], in[43],
-		MULA(-_sbc_proto_8[22], in[59],
-		MUL( -_sbc_proto_8[21], in[75])))))))))));
-
-	s[0] = MULA(  _anamatrix8[0], t[0],
-		MUL(  _anamatrix8[1], t[6]));
-	s[1] = MUL(   _anamatrix8[7], t[1]);
-	s[2] = MULA(  _anamatrix8[2], t[2],
-		MULA( _anamatrix8[3], t[3],
-		MULA( _anamatrix8[4], t[5],
-		MUL(  _anamatrix8[5], t[7]))));
-	s[3] = MUL(   _anamatrix8[6], t[4]);
-	s[4] = MULA(  _anamatrix8[3], t[2],
-		MULA(-_anamatrix8[5], t[3],
-		MULA(-_anamatrix8[2], t[5],
-		MUL( -_anamatrix8[4], t[7]))));
-	s[5] = MULA(  _anamatrix8[4], t[2],
-		MULA(-_anamatrix8[2], t[3],
-		MULA( _anamatrix8[5], t[5],
-		MUL(  _anamatrix8[3], t[7]))));
-	s[6] = MULA(  _anamatrix8[1], t[0],
-		MUL( -_anamatrix8[0], t[6]));
-	s[7] = MULA(  _anamatrix8[5], t[2],
-		MULA(-_anamatrix8[4], t[3],
-		MULA( _anamatrix8[3], t[5],
-		MUL( -_anamatrix8[2], t[7]))));
-
-	out[0] = SCALE8_STAGE2( s[0] + s[1] + s[2] + s[3]);
-	out[1] = SCALE8_STAGE2( s[1] - s[3] + s[4] + s[6]);
-	out[2] = SCALE8_STAGE2( s[1] - s[3] + s[5] - s[6]);
-	out[3] = SCALE8_STAGE2(-s[0] + s[1] + s[3] + s[7]);
-	out[4] = SCALE8_STAGE2(-s[0] + s[1] + s[3] - s[7]);
-	out[5] = SCALE8_STAGE2( s[1] - s[3] - s[5] - s[6]);
-	out[6] = SCALE8_STAGE2( s[1] - s[3] - s[4] + s[6]);
-	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
+	FIXED_A t1[16];
+	FIXED_T t2[16];
+	int i = 0, hop = 0, R = 0;
+
+	/* rounding coefficient */
+	R = 1 &lt;&lt; (SBC_PROTO_FIXED8_SCALE-1);
+
+	/* low pass polyphase filter */
+	t1[0] =  (FIXED_A)in[0] * _sbc_proto_fixed8[0];
+	t1[1] =  (FIXED_A)in[1] * _sbc_proto_fixed8[1];
+	t1[2] =  (FIXED_A)in[2] * _sbc_proto_fixed8[2];
+	t1[3] =  (FIXED_A)in[3] * _sbc_proto_fixed8[3];
+	t1[4] =  (FIXED_A)in[4] * _sbc_proto_fixed8[4];
+	t1[5] =  (FIXED_A)in[5] * _sbc_proto_fixed8[5];
+	t1[6] =  (FIXED_A)in[6] * _sbc_proto_fixed8[6];
+	t1[7] =  (FIXED_A)in[7] * _sbc_proto_fixed8[7];
+	t1[8] =  (FIXED_A)in[8] * _sbc_proto_fixed8[8];
+	t1[9] =  (FIXED_A)in[9] * _sbc_proto_fixed8[9];
+	t1[10] = (FIXED_A)in[10] * _sbc_proto_fixed8[10];
+	t1[11] = (FIXED_A)in[11] * _sbc_proto_fixed8[11];
+	/* t1[12] = (FIXED_A)in[12] * _sbc_proto_fixed8[12]; */
+	t1[13] = (FIXED_A)in[13] * _sbc_proto_fixed8[13];
+	t1[14] = (FIXED_A)in[14] * _sbc_proto_fixed8[14];
+	t1[15] = (FIXED_A)in[15] * _sbc_proto_fixed8[15];
+
+	hop = 16;
+	for (i = 0; i &lt; 4; i++) {
+		t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed8[hop];
+		t1[1] +=  (FIXED_A)in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t1[2] +=  (FIXED_A)in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t1[3] +=  (FIXED_A)in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+		t1[4] +=  (FIXED_A)in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+		t1[5] +=  (FIXED_A)in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+		t1[6] +=  (FIXED_A)in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t1[7] +=  (FIXED_A)in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t1[8] +=  (FIXED_A)in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t1[9] +=  (FIXED_A)in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t1[10] += (FIXED_A)in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t1[11] += (FIXED_A)in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+		/* t1[12] += (FIXED_A)in[hop + 12] * _sbc_proto_fixed8[hop + 12]; */
+		t1[13] += (FIXED_A)in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+		t1[14] += (FIXED_A)in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t1[15] += (FIXED_A)in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+		
+		hop += 16;
+	}
+
+	/* scaling */
+	t2[0] = (t1[0] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[1] = (t1[1] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[2] = (t1[2] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[3] = (t1[3] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[4] = (t1[4] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[5] = (t1[5] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[6] = (t1[6] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[7] = (t1[7] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[8] = (t1[8] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[9] = (t1[9] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[10] = (t1[10] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[11] = (t1[11] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	/* t2[12] = (t1[12] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE; */
+	t2[13] = (t1[13] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[14] = (t1[14] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[15] = (t1[15] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+
+	R = 1 &lt;&lt; (SBC_COS_TABLE_FIXED8_SCALE-1);
+
+	/* do the cos transform */
+	hop = 0;
+	for (i = 0; i &lt; 8; i++) {
+		t1[i]  = (FIXED_A)t2[0] * cos_table_fixed_8[0 + hop];
+		t1[i] += (FIXED_A)t2[1] * cos_table_fixed_8[1 + hop];
+		t1[i] += (FIXED_A)t2[2] * cos_table_fixed_8[2 + hop];
+		t1[i] += (FIXED_A)t2[3] * cos_table_fixed_8[3 + hop];
+		/* cos_table_fixed_8[4 + hop] = 1.0 */
+		t1[i] += (FIXED_A)t2[4] &lt;&lt; SBC_COS_TABLE_FIXED8_SCALE;
+		t1[i] += (FIXED_A)t2[5] * cos_table_fixed_8[5 + hop];
+		t1[i] += (FIXED_A)t2[6] * cos_table_fixed_8[6 + hop];
+		t1[i] += (FIXED_A)t2[7] * cos_table_fixed_8[7 + hop];
+		t1[i] += (FIXED_A)t2[8] * cos_table_fixed_8[8 + hop];
+		t1[i] += (FIXED_A)t2[9] * cos_table_fixed_8[9 + hop];
+		t1[i] += (FIXED_A)t2[10] * cos_table_fixed_8[10 + hop];
+		t1[i] += (FIXED_A)t2[11] * cos_table_fixed_8[11 + hop];
+		/* cos_table_fixed_8[12 + hop] = 0.0 */
+		/* t1[i] += (FIXED_A)t2[12] * cos_table_fixed_8[12 + hop]; */
+		t1[i] += (FIXED_A)t2[13] * cos_table_fixed_8[13 + hop];
+		t1[i] += (FIXED_A)t2[14] * cos_table_fixed_8[14 + hop];
+		t1[i] += (FIXED_A)t2[15] * cos_table_fixed_8[15 + hop];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	out[0] = (t1[0] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[1] = (t1[1] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[2] = (t1[2] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[3] = (t1[3] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[4] = (t1[4] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[5] = (t1[5] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[6] = (t1[6] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
+	out[7] = (t1[7] + R) &gt;&gt; SBC_COS_TABLE_FIXED8_SCALE;
 }
 
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..6e63f48 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -166,3 +166,81 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+/* data type for fixed point accumulator */
+#define FIXED_A int32_t
+/* data type for fixed point constants */
+#define FIXED_T int16_t
+
+/* A2DP specification: Section 12.8 Tables */
+#define SBC_PROTO_FIXED8_SCALE (sizeof(FIXED_T)*CHAR_BIT - 1)
+#define F(x) (FIXED_T)((x)*((FIXED_A)1&lt;&lt;SBC_PROTO_FIXED8_SCALE)+0.5)
+static const FIXED_T _sbc_proto_fixed8[80] = {
+	 F(0.00000000E+00), F(1.56575398E-04), F(3.43256425E-04), F(5.54620202E-04),
+	 F(8.23919506E-04), F(1.13992507E-03), F(1.47640169E-03), F(1.78371725E-03),
+	 F(2.01182542E-03), F(2.10371989E-03), F(1.99454554E-03), F(1.61656283E-03),
+	 F(9.02154502E-04),-F(1.78805361E-04),-F(1.64973098E-03),-F(3.49717454E-03),
+	 F(5.65949473E-03), F(8.02941163E-03), F(1.04584443E-02), F(1.27472335E-02),
+	 F(1.46525263E-02), F(1.59045603E-02), F(1.62208471E-02), F(1.53184106E-02),
+	 F(1.29371806E-02), F(8.85757540E-03), F(2.92408442E-03),-F(4.91578024E-03),
+	-F(1.46404076E-02),-F(2.61098752E-02),-F(3.90751381E-02),-F(5.31873032E-02),
+	 F(6.79989431E-02), F(8.29847578E-02), F(9.75753918E-02), F(1.11196689E-01),
+	 F(1.23264548E-01), F(1.33264415E-01), F(1.40753505E-01), F(1.45389847E-01),
+	 F(1.46955068E-01), F(1.45389847E-01), F(1.40753505E-01), F(1.33264415E-01),
+	 F(1.23264548E-01), F(1.11196689E-01), F(9.75753918E-02), F(8.29847578E-02),
+	-F(6.79989431E-02),-F(5.31873032E-02),-F(3.90751381E-02),-F(2.61098752E-02),
+	-F(1.46404076E-02),-F(4.91578024E-03), F(2.92408442E-03), F(8.85757540E-03),
+	 F(1.29371806E-02), F(1.53184106E-02), F(1.62208471E-02), F(1.59045603E-02),
+	 F(1.46525263E-02), F(1.27472335E-02), F(1.04584443E-02), F(8.02941163E-03),
+	-F(5.65949473E-03),-F(3.49717454E-03),-F(1.64973098E-03),-F(1.78805361E-04),
+	 F(9.02154502E-04), F(1.61656283E-03), F(1.99454554E-03), F(2.10371989E-03),
+	 F(2.01182542E-03), F(1.78371725E-03), F(1.47640169E-03), F(1.13992507E-03),
+	 F(8.23919506E-04), F(5.54620202E-04), F(3.43256425E-04), F(1.56575398E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7 for j = 0:15 b(i+1, j+1) = cos( (i + 0.5) * (j - 4) * (pi/8) ) endfor endfor;
+ * printf("%.10f, ", b');
+ *
+ */
+#define SBC_COS_TABLE_FIXED8_SCALE (sizeof(FIXED_T)*CHAR_BIT - 1)
+#define F(x) (FIXED_T)((x)*((FIXED_A)1&lt;&lt;SBC_COS_TABLE_FIXED8_SCALE)+0.5)
+static const FIXED_T cos_table_fixed_8[128] = {
+	 F(0.7071067812), F(0.8314696123), F(0.9238795325), F(0.9807852804),
+	 F(1.0000000000), F(0.9807852804), F(0.9238795325), F(0.8314696123),
+	 F(0.7071067812), F(0.5555702330), F(0.3826834324), F(0.1950903220),
+	 F(0.0000000000),-F(0.1950903220),-F(0.3826834324),-F(0.5555702330),
+	-F(0.7071067812),-F(0.1950903220), F(0.3826834324), F(0.8314696123),
+	 F(1.0000000000), F(0.8314696123), F(0.3826834324),-F(0.1950903220),
+	-F(0.7071067812),-F(0.9807852804),-F(0.9238795325),-F(0.5555702330),
+	-F(0.0000000000), F(0.5555702330), F(0.9238795325), F(0.9807852804),
+	-F(0.7071067812),-F(0.9807852804),-F(0.3826834324), F(0.5555702330),
+	 F(1.0000000000), F(0.5555702330),-F(0.3826834324),-F(0.9807852804),
+	-F(0.7071067812), F(0.1950903220), F(0.9238795325), F(0.8314696123),
+	 F(0.0000000000),-F(0.8314696123),-F(0.9238795325),-F(0.1950903220),
+	 F(0.7071067812),-F(0.5555702330),-F(0.9238795325), F(0.1950903220),
+	 F(1.0000000000), F(0.1950903220),-F(0.9238795325),-F(0.5555702330),
+	 F(0.7071067812), F(0.8314696123),-F(0.3826834324),-F(0.9807852804),
+	-F(0.0000000000), F(0.9807852804), F(0.3826834324),-F(0.8314696123),
+	 F(0.7071067812), F(0.5555702330),-F(0.9238795325),-F(0.1950903220),
+	 F(1.0000000000),-F(0.1950903220),-F(0.9238795325), F(0.5555702330),
+	 F(0.7071067812),-F(0.8314696123),-F(0.3826834324), F(0.9807852804),
+	 F(0.0000000000),-F(0.9807852804), F(0.3826834324), F(0.8314696123),
+	-F(0.7071067812), F(0.9807852804),-F(0.3826834324),-F(0.5555702330),
+	 F(1.0000000000),-F(0.5555702330),-F(0.3826834324), F(0.9807852804),
+	-F(0.7071067812),-F(0.1950903220), F(0.9238795325),-F(0.8314696123),
+	-F(0.0000000000), F(0.8314696123),-F(0.9238795325), F(0.1950903220),
+	-F(0.7071067812), F(0.1950903220), F(0.3826834324),-F(0.8314696123),
+	 F(1.0000000000),-F(0.8314696123), F(0.3826834324), F(0.1950903220),
+	-F(0.7071067812), F(0.9807852804),-F(0.9238795325), F(0.5555702330),
+	-F(0.0000000000),-F(0.5555702330), F(0.9238795325),-F(0.9807852804),
+	 F(0.7071067812),-F(0.8314696123), F(0.9238795325),-F(0.9807852804),
+	 F(1.0000000000),-F(0.9807852804), F(0.9238795325),-F(0.8314696123),
+	 F(0.7071067812),-F(0.5555702330), F(0.3826834324),-F(0.1950903220),
+	-F(0.0000000000), F(0.1950903220),-F(0.3826834324), F(0.5555702330),
+};
+#undef F

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081217081634</emailId><senderName>Jaska Uimonen</senderName><senderEmail>jaska.uimonen@nokia.com</senderEmail><timestampReceived>2008-12-17 08:16:34-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hello All,

Sorry about the silence, I was away from the office for 
couple of weeks.

Anyway here is the original patch modified to suit the 
bluez coding conventions. There might still be something 
(I'm quite bad with these issues...)

I also added Siarhei's rounding stuff to the filter 
tables. Good point Siarhei!

Concerning Brad's comments I think the calculation 
of tables should now be quite clear. There are 
comments on the tables how to produce them in Octave and 
the filtering function is very basic fixed point Q15 
calculation. 

I agree that including the original float values to the 
code would probably be a good idea. Then we could just 
use some macro at compile time to modify them to suitable 
Q format and original values would always be there to 
be viewed and compared to.

I would still be careful about the optimization of the 
filtering, so that we don't obfuscate the code too much. 
The filter and cosine table are quite small so we should 
consider how much we save in computation. Anyway if the savings 
are significant let's just add them there.

br,
Jaska Uimonen


 
 


On Wed, 2008-12-17 at 00:37 +0200, Siarhei Siamashka wrote:
&gt; On Monday 15 December 2008 17:16:58 ext Brad Midgley wrote:
&gt; &gt; I like your idea of using a macro with the original floating point
&gt; &gt; tables, as long as we know it is done at compile time, not runtime :)
&gt; 
&gt; What about something like this modification to Jaska's patch? It contains
&gt; floating point constants wrapped into a macro.
&gt; 
&gt; This version is using 16-bit multiplications only (additional natural change
&gt; would be just to convert 'sbc_encoder_state-&gt;' to int16_t because it does not
&gt; need to be int32_t), which is good for performance for the platforms with fast
&gt; 16-bit integer multiplication. But it is also flexible enough to be changed to
&gt; use 32x32-&gt;64 multiplications just by replacing FIXED_A and FIXED_T types
&gt; to int64_t and int32_t respectively (for better precision or experiments with
&gt; conformance testing).
&gt; 
&gt; &gt; &gt; Can anybody try to remember/explain what transformations were applied to
&gt; &gt; &gt; the existing fixed point implementation?
&gt; &gt;
&gt; &gt; it was done by several people and the only record we have is in cvs.
&gt; &gt; (part of it is in the old btsco project's cvs)
&gt; 
&gt; Regarding the code optimizations. Looking at the tables, It can be seen that
&gt; 'cos_table_fixed_8[0+hop]' is always equal to 'cos_table_fixed_8[8+hop]'.
&gt; The same is true for 'cos_table_fixed_8[1+hop]' and 'cos_table_fixed_8[7+hop]'
&gt; So it is possible to join 't1[0] + t1[8]', 't1[1]+ t1[7]' and the other such
&gt; pairs, effectively halving the number of counters. This looks very much like
&gt; the optimization that was applied to the current fixed point code :)
&gt; 
&gt; But now it would be very interesting to see if the conformance tests pass
&gt; rate is better with the new filtering function.
&gt; 
&gt; 
&gt; Best regards,
&gt; Siarhei Siamashka

["0001-New-function-and-tables-for-8-band-fixed-point-analy.patch" (0001-New-function-and-tables-for-8-band-fixed-point-analy.patch)]

From 057e455739a0011b2b7be9d5e219d809e39604ce Mon Sep 17 00:00:00 2001
From: Jaska Uimonen &lt;jaska.uimonen@nokia.com&gt;
Date: Mon, 15 Dec 2008 11:00:19 +0200
Subject: [PATCH] New function and tables for 8 band fixed point analysis.

---
 sbc/sbc.c        |  106 +++++++++++++++++++++++++++++++++++++++++++++++++++++-
 sbc/sbc_tables.h |   47 ++++++++++++++++++++++++
 2 files changed, 152 insertions(+), 1 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 7072673..00a8002 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -862,6 +862,109 @@ static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
 	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
 }
 
+static inline void _sbc_analyze_eight_modified_fixed(const int32_t *in,
+						int32_t *out)
+{
+	int32_t t[16];
+	int i = 0, hop = 0, R = 0;
+
+	/* rounding coefficient for Q15 */
+	R = 1 &lt;&lt; (15-1);
+
+	/* low pass polyphase filter */
+	t[0] = (int32_t)in[0] * _sbc_proto_fixed8[0];
+	t[1] = (int32_t)in[1] * _sbc_proto_fixed8[1];
+	t[2] = (int32_t)in[2] * _sbc_proto_fixed8[2];
+	t[3] = (int32_t)in[3] * _sbc_proto_fixed8[3];
+	t[4] = (int32_t)in[4] * _sbc_proto_fixed8[4];
+	t[5] = (int32_t)in[5] * _sbc_proto_fixed8[5];
+	t[6] = (int32_t)in[6] * _sbc_proto_fixed8[6];
+	t[7] = (int32_t)in[7] * _sbc_proto_fixed8[7];
+	t[8] = (int32_t)in[8] * _sbc_proto_fixed8[8];
+	t[9] = (int32_t)in[9] * _sbc_proto_fixed8[9];
+	t[10] = (int32_t)in[10] * _sbc_proto_fixed8[10];
+	t[11] = (int32_t)in[11] * _sbc_proto_fixed8[11];
+	t[12] = (int32_t)in[12] * _sbc_proto_fixed8[12];
+	t[13] = (int32_t)in[13] * _sbc_proto_fixed8[13];
+	t[14] = (int32_t)in[14] * _sbc_proto_fixed8[14];
+	t[15] = (int32_t)in[15] * _sbc_proto_fixed8[15];
+
+	hop = 16;
+	for (i = 0; i &lt; 4; i++) {
+		t[0] += (int32_t)in[hop] * _sbc_proto_fixed8[hop];
+		t[1] += (int32_t)in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t[2] += (int32_t)in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t[3] += (int32_t)in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+		t[4] += (int32_t)in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+		t[5] += (int32_t)in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+		t[6] += (int32_t)in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t[7] += (int32_t)in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t[8] += (int32_t)in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t[9] += (int32_t)in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t[10] += (int32_t)in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t[11] += (int32_t)in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+		t[12] += (int32_t)in[hop + 12] * _sbc_proto_fixed8[hop + 12];
+		t[13] += (int32_t)in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+		t[14] += (int32_t)in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t[15] += (int32_t)in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	t[0] = (t[0] + R) &gt;&gt; 15;
+	t[1] = (t[1] + R) &gt;&gt; 15;
+	t[2] = (t[2] + R) &gt;&gt; 15;
+	t[3] = (t[3] + R) &gt;&gt; 15;
+	t[4] = (t[4] + R) &gt;&gt; 15;
+	t[5] = (t[5] + R) &gt;&gt; 15;
+	t[6] = (t[6] + R) &gt;&gt; 15;
+	t[7] = (t[7] + R) &gt;&gt; 15;
+	t[8] = (t[8] + R) &gt;&gt; 15;
+	t[9] = (t[9] + R) &gt;&gt; 15;
+	t[10] = (t[10] + R) &gt;&gt; 15;
+	t[11] = (t[11] + R) &gt;&gt; 15;
+	t[12] = (t[12] + R) &gt;&gt; 15;
+	t[13] = (t[13] + R) &gt;&gt; 15;
+	t[14] = (t[14] + R) &gt;&gt; 15;
+	t[15] = (t[15] + R) &gt;&gt; 15;
+
+	/* do the cos transform */
+	hop = 0;
+	for (i = 0; i &lt; 8; i++) {
+		out[i] = 0;
+
+		out[i] += t[0] * cos_table_fixed_8[0 + hop];
+		out[i] += t[1] * cos_table_fixed_8[1 + hop];
+		out[i] += t[2] * cos_table_fixed_8[2 + hop];
+		out[i] += t[3] * cos_table_fixed_8[3 + hop];
+		out[i] += t[4] * cos_table_fixed_8[4 + hop];
+		out[i] += t[5] * cos_table_fixed_8[5 + hop];
+		out[i] += t[6] * cos_table_fixed_8[6 + hop];
+		out[i] += t[7] * cos_table_fixed_8[7 + hop];
+		out[i] += t[8] * cos_table_fixed_8[8 + hop];
+		out[i] += t[9] * cos_table_fixed_8[9 + hop];
+		out[i] += t[10] * cos_table_fixed_8[10 + hop];
+		out[i] += t[11] * cos_table_fixed_8[11 + hop];
+		out[i] += t[12] * cos_table_fixed_8[12 + hop];
+		out[i] += t[13] * cos_table_fixed_8[13 + hop];
+		out[i] += t[14] * cos_table_fixed_8[14 + hop];
+		out[i] += t[15] * cos_table_fixed_8[15 + hop];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	out[0] = (out[0] + R) &gt;&gt; 15;
+	out[1] = (out[1] + R) &gt;&gt; 15;
+	out[2] = (out[2] + R) &gt;&gt; 15;
+	out[3] = (out[3] + R) &gt;&gt; 15;
+	out[4] = (out[4] + R) &gt;&gt; 15;
+	out[5] = (out[5] + R) &gt;&gt; 15;
+	out[6] = (out[6] + R) &gt;&gt; 15;
+	out[7] = (out[7] + R) &gt;&gt; 15;
+}
+
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 					struct sbc_frame *frame, int ch,
 					int blk)
@@ -879,7 +982,8 @@ static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 	x[86] = x[6] = pcm[1];
 	x[87] = x[7] = pcm[0];
 
-	_sbc_analyze_eight(x, frame-&gt;sb_sample_f[blk][ch]);
+	/* _sbc_analyze_eight(x, frame-&gt;sb_sample_f[blk][ch]); */
+	_sbc_analyze_eight_modified_fixed(x, frame-&gt;sb_sample_f[blk][ch]);
 
 	state-&gt;position[ch] -= 8;
 	if (state-&gt;position[ch] &lt; 0)
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..766b20f 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -166,3 +166,50 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+/*
+ * to produce this Q15 format table:
+ *
+ * get the filter coeffs from the spec and multiply them by 2^15 and round
+ * to nearest integer.
+ */
+static const signed short _sbc_proto_fixed8[80] = {
+	0, 5, 11, 18, 27, 37, 48, 58, 66, 69,
+	65, 53, 30, -6, -54, -115, 185, 263, 343, 418,
+	480, 521, 532, 502, 424, 290, 96, -161, -480, -856,
+	-1280, -1743, 2228, 2719, 3197, 3644, 4039, 4367, 4612, 4764,
+	4815, 4764, 4612, 4367, 4039, 3644, 3197, 2719, -2228, -1743,
+	-1280, -856, -480, -161, 96, 290, 424, 502, 532, 521,
+	480, 418, 343, 263, -185, -115, -54, -6, 30, 53,
+	65, 69, 66, 58, 48, 37, 27, 18, 11, 5
+};
+
+/*
+ * to produce this Q15 format cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7 for j = 0:15 b(i+1, j+1) =...
+ * cos( (i + 0.5) * (j - 4) * (pi/8) ) endfor endfor;
+ * cosfixed = round(b*2^15);
+ * for i = 1:8 for j = 1:16 if(cosfixed(i,j) == 32768) cosfixed(i,j) =...
+ * 32767; endif; endfor; endfor;
+ * printf("%d, ", cosfixed');
+ */
+static const signed short cos_table_fixed_8[128] = {
+	23170, 27246, 30274, 32138, 32767, 32138, 30274, 27246,
+	23170, 18205, 12540, 6393, 0, -6393, -12540, -18205,
+	-23170, -6393, 12540, 27246, 32767, 27246, 12540, -6393,
+	-23170, -32138, -30274, -18205, 0, 18205, 30274, 32138,
+	-23170, -32138, -12540, 18205, 32767, 18205, -12540, -32138,
+	-23170, 6393, 30274, 27246, 0, -27246, -30274, -6393,
+	23170, -18205, -30274, 6393, 32767, 6393, -30274, -18205,
+	23170, 27246, -12540, -32138, 0, 32138, 12540, -27246,
+	23170, 18205, -30274, -6393, 32767, -6393, -30274, 18205,
+	23170, -27246, -12540, 32138, 0, -32138, 12540, 27246,
+	-23170, 32138, -12540, -18205, 32767, -18205, -12540, 32138,
+	-23170, -6393, 30274, -27246, 0, 27246, -30274, 6393,
+	-23170, 6393, 12540, -27246, 32767, -27246, 12540, 6393,
+	-23170, 32138, -30274, 18205, 0, -18205, 30274, -32138,
+	23170, -27246, 30274, -32138, 32767, -32138, 30274, -27246,
+	23170, -18205, 12540, -6393, 0, 6393, -12540, 18205
+};
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219221208</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-19 22:12:08-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Wednesday 17 December 2008 00:37:48 ext Siarhei Siamashka wrote:
&gt; On Monday 15 December 2008 17:16:58 ext Brad Midgley wrote:
&gt; &gt; I like your idea of using a macro with the original floating point
&gt; &gt; tables, as long as we know it is done at compile time, not runtime :)
&gt;
&gt; What about something like this modification to Jaska's patch? It contains
&gt; floating point constants wrapped into a macro.
&gt;
&gt; This version is using 16-bit multiplications only (additional natural
&gt; change would be just to convert 'sbc_encoder_state-&gt;' to int16_t because it
&gt; does not need to be int32_t), which is good for performance for the
&gt; platforms with fast 16-bit integer multiplication. But it is also flexible
&gt; enough to be changed to use 32x32-&gt;64 multiplications just by replacing
&gt; FIXED_A and FIXED_T types to int64_t and int32_t respectively (for better
&gt; precision or experiments with conformance testing).
&gt;
&gt; &gt; &gt; Can anybody try to remember/explain what transformations were applied
&gt; &gt; &gt; to the existing fixed point implementation?
&gt; &gt;
&gt; &gt; it was done by several people and the only record we have is in cvs.
&gt; &gt; (part of it is in the old btsco project's cvs)
&gt;
&gt; Regarding the code optimizations. Looking at the tables, It can be seen
&gt; that 'cos_table_fixed_8[0+hop]' is always equal to
&gt; 'cos_table_fixed_8[8+hop]'. The same is true for 'cos_table_fixed_8[1+hop]'
&gt; and 'cos_table_fixed_8[7+hop]' So it is possible to join 't1[0] + t1[8]',
&gt; 't1[1]+ t1[7]' and the other such pairs, effectively halving the number of
&gt; counters. This looks very much like the optimization that was applied to
&gt; the current fixed point code :)
&gt;
&gt; But now it would be very interesting to see if the conformance tests pass
&gt; rate is better with the new filtering function.

Here is one more attempt at improving filtering function. Now I tried to get
the best possible audio quality (using 32-bit fixed point).

16-bit version of filtering function can be enabled by just commenting
out '#define SBC_HIGH_PRECISION' line

The improvements include fixing a problem in scalefactors processing code.
Here we don't want to use the absolute value just because it is possible to
encode more negative values than positive values with the same number
of bits:
-	while (scalefactor[ch][sb] &lt; fabs(frame-&gt;sb_sample_f[blk][ch][sb])) {
+	while ((scalefactor[ch][sb] &lt;&lt; SCALE_OUT_BITS) &lt;= 
neginv(frame-&gt;sb_sample_f[blk][ch][sb])) {

Another quality improvement is achieved by keeping more bits in the output of
filtering function, thus avoiding unnecessary precision loss on quantizing
stage.

Both of these changes also naturally improve audio quality for the 16-bit
variant.

We had a talk with Jaska Uimonen here, and now I'm kind of delegated to finish
the work on this filtering function for SBC encoder (including the final
addition of ARM assembly optimizations).  He provided me with his last variant
of code, which contains some more optimizations to reduce the number of
operations and also loops unrolling. I will add his changes to the patch on
next iteration.

Now the question is how to best integrate a fixed filtering function to git
repository? If I just continue adding changes to the patch in order to make it
a faster, it will be also not so obvious to see how we got to these code
transformations just from the commit log.

I intentionally keep posting work-in-progress variants just to keep track of
the history at least in this mailing list archive :)

As always, feedback is very much welcome.

Best regards,
Siarhei Siamashka

["analyze_eight_modified_32bit.diff" (text/x-diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..873c370 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -40,6 +40,7 @@
 #include &lt;string.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;sys/types.h&gt;
+#include &lt;limits.h&gt;
 
 #include "sbc_math.h"
 #include "sbc_tables.h"
@@ -742,124 +743,108 @@ static inline void sbc_analyze_four(struct sbc_encoder_state *state,
 
 static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[8];
-
-	t[0] = SCALE8_STAGE1( /* Q10 */
-		MULA(_sbc_proto_8[0], (in[16] - in[64]), /* Q18 = Q18 * Q0 */
-		MULA(_sbc_proto_8[1], (in[32] - in[48]),
-		MULA(_sbc_proto_8[2], in[4],
-		MULA(_sbc_proto_8[3], in[20],
-		MULA(_sbc_proto_8[4], in[36],
-		MUL( _sbc_proto_8[5], in[52])))))));
-
-	t[1] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[6], in[2],
-		MULA(_sbc_proto_8[7], in[18],
-		MULA(_sbc_proto_8[8], in[34],
-		MULA(_sbc_proto_8[9], in[50],
-		MUL(_sbc_proto_8[10], in[66]))))));
-
-	t[2] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[11], in[1],
-		MULA(_sbc_proto_8[12], in[17],
-		MULA(_sbc_proto_8[13], in[33],
-		MULA(_sbc_proto_8[14], in[49],
-		MULA(_sbc_proto_8[15], in[65],
-		MULA(_sbc_proto_8[16], in[3],
-		MULA(_sbc_proto_8[17], in[19],
-		MULA(_sbc_proto_8[18], in[35],
-		MULA(_sbc_proto_8[19], in[51],
-		MUL( _sbc_proto_8[20], in[67])))))))))));
-
-	t[3] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[21], in[5],
-		MULA( _sbc_proto_8[22], in[21],
-		MULA( _sbc_proto_8[23], in[37],
-		MULA( _sbc_proto_8[24], in[53],
-		MULA( _sbc_proto_8[25], in[69],
-		MULA(-_sbc_proto_8[15], in[15],
-		MULA(-_sbc_proto_8[14], in[31],
-		MULA(-_sbc_proto_8[13], in[47],
-		MULA(-_sbc_proto_8[12], in[63],
-		MUL( -_sbc_proto_8[11], in[79])))))))))));
-
-	t[4] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[26], in[6],
-		MULA( _sbc_proto_8[27], in[22],
-		MULA( _sbc_proto_8[28], in[38],
-		MULA( _sbc_proto_8[29], in[54],
-		MULA( _sbc_proto_8[30], in[70],
-		MULA(-_sbc_proto_8[10], in[14],
-		MULA(-_sbc_proto_8[9], in[30],
-		MULA(-_sbc_proto_8[8], in[46],
-		MULA(-_sbc_proto_8[7], in[62],
-		MUL( -_sbc_proto_8[6], in[78])))))))))));
-
-	t[5] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[31], in[7],
-		MULA( _sbc_proto_8[32], in[23],
-		MULA( _sbc_proto_8[33], in[39],
-		MULA( _sbc_proto_8[34], in[55],
-		MULA( _sbc_proto_8[35], in[71],
-		MULA(-_sbc_proto_8[20], in[13],
-		MULA(-_sbc_proto_8[19], in[29],
-		MULA(-_sbc_proto_8[18], in[45],
-		MULA(-_sbc_proto_8[17], in[61],
-		MUL( -_sbc_proto_8[16], in[77])))))))))));
-
-	t[6] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[36], (in[8] + in[72]),
-		MULA( _sbc_proto_8[37], (in[24] + in[56]),
-		MULA( _sbc_proto_8[38], in[40],
-		MULA(-_sbc_proto_8[39], in[12],
-		MULA(-_sbc_proto_8[5], in[28],
-		MULA(-_sbc_proto_8[4], in[44],
-		MULA(-_sbc_proto_8[3], in[60],
-		MUL( -_sbc_proto_8[2], in[76])))))))));
-
-	t[7] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[35], in[9],
-		MULA( _sbc_proto_8[34], in[25],
-		MULA( _sbc_proto_8[33], in[41],
-		MULA( _sbc_proto_8[32], in[57],
-		MULA( _sbc_proto_8[31], in[73],
-		MULA(-_sbc_proto_8[25], in[11],
-		MULA(-_sbc_proto_8[24], in[27],
-		MULA(-_sbc_proto_8[23], in[43],
-		MULA(-_sbc_proto_8[22], in[59],
-		MUL( -_sbc_proto_8[21], in[75])))))))))));
-
-	s[0] = MULA(  _anamatrix8[0], t[0],
-		MUL(  _anamatrix8[1], t[6]));
-	s[1] = MUL(   _anamatrix8[7], t[1]);
-	s[2] = MULA(  _anamatrix8[2], t[2],
-		MULA( _anamatrix8[3], t[3],
-		MULA( _anamatrix8[4], t[5],
-		MUL(  _anamatrix8[5], t[7]))));
-	s[3] = MUL(   _anamatrix8[6], t[4]);
-	s[4] = MULA(  _anamatrix8[3], t[2],
-		MULA(-_anamatrix8[5], t[3],
-		MULA(-_anamatrix8[2], t[5],
-		MUL( -_anamatrix8[4], t[7]))));
-	s[5] = MULA(  _anamatrix8[4], t[2],
-		MULA(-_anamatrix8[2], t[3],
-		MULA( _anamatrix8[5], t[5],
-		MUL(  _anamatrix8[3], t[7]))));
-	s[6] = MULA(  _anamatrix8[1], t[0],
-		MUL( -_anamatrix8[0], t[6]));
-	s[7] = MULA(  _anamatrix8[5], t[2],
-		MULA(-_anamatrix8[4], t[3],
-		MULA( _anamatrix8[3], t[5],
-		MUL( -_anamatrix8[2], t[7]))));
-
-	out[0] = SCALE8_STAGE2( s[0] + s[1] + s[2] + s[3]);
-	out[1] = SCALE8_STAGE2( s[1] - s[3] + s[4] + s[6]);
-	out[2] = SCALE8_STAGE2( s[1] - s[3] + s[5] - s[6]);
-	out[3] = SCALE8_STAGE2(-s[0] + s[1] + s[3] + s[7]);
-	out[4] = SCALE8_STAGE2(-s[0] + s[1] + s[3] - s[7]);
-	out[5] = SCALE8_STAGE2( s[1] - s[3] - s[5] - s[6]);
-	out[6] = SCALE8_STAGE2( s[1] - s[3] - s[4] + s[6]);
-	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
+	FIXED_A t1[16];
+	FIXED_T t2[16];
+	FIXED_A R;
+	int i, hop;
+
+	/* rounding coefficient */
+	R = (FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED8_SCALE-1);
+
+	/* low pass polyphase filter */
+	t1[0] =  (FIXED_A)in[0] * _sbc_proto_fixed8[0];
+	t1[1] =  (FIXED_A)in[1] * _sbc_proto_fixed8[1];
+	t1[2] =  (FIXED_A)in[2] * _sbc_proto_fixed8[2];
+	t1[3] =  (FIXED_A)in[3] * _sbc_proto_fixed8[3];
+	t1[4] =  (FIXED_A)in[4] * _sbc_proto_fixed8[4];
+	t1[5] =  (FIXED_A)in[5] * _sbc_proto_fixed8[5];
+	t1[6] =  (FIXED_A)in[6] * _sbc_proto_fixed8[6];
+	t1[7] =  (FIXED_A)in[7] * _sbc_proto_fixed8[7];
+	t1[8] =  (FIXED_A)in[8] * _sbc_proto_fixed8[8];
+	t1[9] =  (FIXED_A)in[9] * _sbc_proto_fixed8[9];
+	t1[10] = (FIXED_A)in[10] * _sbc_proto_fixed8[10];
+	t1[11] = (FIXED_A)in[11] * _sbc_proto_fixed8[11];
+	/* t1[12] = (FIXED_A)in[12] * _sbc_proto_fixed8[12]; */
+	t1[13] = (FIXED_A)in[13] * _sbc_proto_fixed8[13];
+	t1[14] = (FIXED_A)in[14] * _sbc_proto_fixed8[14];
+	t1[15] = (FIXED_A)in[15] * _sbc_proto_fixed8[15];
+
+	hop = 16;
+	for (i = 0; i &lt; 4; i++) {
+		t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed8[hop];
+		t1[1] +=  (FIXED_A)in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t1[2] +=  (FIXED_A)in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t1[3] +=  (FIXED_A)in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+		t1[4] +=  (FIXED_A)in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+		t1[5] +=  (FIXED_A)in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+		t1[6] +=  (FIXED_A)in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t1[7] +=  (FIXED_A)in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t1[8] +=  (FIXED_A)in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t1[9] +=  (FIXED_A)in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t1[10] += (FIXED_A)in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t1[11] += (FIXED_A)in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+		/* t1[12] += (FIXED_A)in[hop + 12] * _sbc_proto_fixed8[hop + 12]; */
+		t1[13] += (FIXED_A)in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+		t1[14] += (FIXED_A)in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t1[15] += (FIXED_A)in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+		
+		hop += 16;
+	}
+
+	/* scaling */
+	t2[0] = (t1[0] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[1] = (t1[1] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[2] = (t1[2] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[3] = (t1[3] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[4] = (t1[4] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[5] = (t1[5] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[6] = (t1[6] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[7] = (t1[7] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[8] = (t1[8] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[9] = (t1[9] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[10] = (t1[10] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[11] = (t1[11] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	/* t2[12] = (t1[12] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE; */
+	t2[13] = (t1[13] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[14] = (t1[14] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[15] = (t1[15] + R) &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+
+	R = (FIXED_A)1 &lt;&lt; (SBC_COS_TABLE_FIXED8_SCALE-1-SCALE_OUT_BITS);
+
+	/* do the cos transform */
+	hop = 0;
+	for (i = 0; i &lt; 8; i++) {
+		t1[i]  = (FIXED_A)t2[0] * cos_table_fixed_8[0 + hop];
+		t1[i] += (FIXED_A)t2[1] * cos_table_fixed_8[1 + hop];
+		t1[i] += (FIXED_A)t2[2] * cos_table_fixed_8[2 + hop];
+		t1[i] += (FIXED_A)t2[3] * cos_table_fixed_8[3 + hop];
+		/* cos_table_fixed_8[4 + hop] = 1.0 */
+		t1[i] += (FIXED_A)t2[4] &lt;&lt; (sizeof(FIXED_T)*CHAR_BIT-1);
+		t1[i] += (FIXED_A)t2[5] * cos_table_fixed_8[5 + hop];
+		t1[i] += (FIXED_A)t2[6] * cos_table_fixed_8[6 + hop];
+		t1[i] += (FIXED_A)t2[7] * cos_table_fixed_8[7 + hop];
+		t1[i] += (FIXED_A)t2[8] * cos_table_fixed_8[8 + hop];
+		t1[i] += (FIXED_A)t2[9] * cos_table_fixed_8[9 + hop];
+		t1[i] += (FIXED_A)t2[10] * cos_table_fixed_8[10 + hop];
+		t1[i] += (FIXED_A)t2[11] * cos_table_fixed_8[11 + hop];
+		/* cos_table_fixed_8[12 + hop] = 0.0 */
+		/* t1[i] += (FIXED_A)t2[12] * cos_table_fixed_8[12 + hop]; */
+		t1[i] += (FIXED_A)t2[13] * cos_table_fixed_8[13 + hop];
+		t1[i] += (FIXED_A)t2[14] * cos_table_fixed_8[14 + hop];
+		t1[i] += (FIXED_A)t2[15] * cos_table_fixed_8[15 + hop];
+
+		hop += 16;
+	}
+
+	/* scaling */
+	out[0] = (t1[0] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[1] = (t1[1] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[2] = (t1[2] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[3] = (t1[3] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[4] = (t1[4] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[5] = (t1[5] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[6] = (t1[6] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[7] = (t1[7] + R) &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
 }
 
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
@@ -1006,7 +991,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			frame-&gt;scale_factor[ch][sb] = 0;
 			scalefactor[ch][sb] = 2;
 			for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
-				while (scalefactor[ch][sb] &lt; fabs(frame-&gt;sb_sample_f[blk][ch][sb])) {
+				while ((scalefactor[ch][sb] &lt;&lt; SCALE_OUT_BITS) &lt;= neginv(frame-&gt;sb_sample_f[blk][ch][sb])) {
 					frame-&gt;scale_factor[ch][sb]++;
 					scalefactor[ch][sb] *= 2;
 				}
@@ -1040,11 +1025,11 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 						frame-&gt;sb_sample_f[blk][1][sb]) &gt;&gt; 1;
 
 				/* calculate scale_factor_j and scalefactor_j for joint case */
-				while (scalefactor_j[0] &lt; fabs(sb_sample_j[blk][0])) {
+				while ((scalefactor_j[0] &lt;&lt; SCALE_OUT_BITS) &lt;= neginv(sb_sample_j[blk][0])) {
 					scale_factor_j[0]++;
 					scalefactor_j[0] *= 2;
 				}
-				while (scalefactor_j[1] &lt; fabs(sb_sample_j[blk][1])) {
+				while ((scalefactor_j[1] &lt;&lt; SCALE_OUT_BITS) &lt;= neginv(sb_sample_j[blk][1])) {
 					scale_factor_j[1]++;
 					scalefactor_j[1] *= 2;
 				}
@@ -1100,11 +1085,11 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 		for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 			for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
 				if (levels[ch][sb] &gt; 0) {
-					audio_sample =
-						(uint16_t) (((((int64_t)frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
-									(frame-&gt;scale_factor[ch][sb] + 1)) +
-								levels[ch][sb]) &gt;&gt; 1);
-					PUT_BITS(audio_sample &amp; levels[ch][sb], bits[ch][sb]);
+					int32_t sample = frame-&gt;sb_sample_f[blk][ch][sb];
+					int32_t s_shift = (frame-&gt;scale_factor[ch][sb] + 1 + SCALE_OUT_BITS);
+					int32_t ls = levels[ch][sb];
+					audio_sample = ((((int64_t)1 &lt;&lt; s_shift) + sample) * ls) &gt;&gt; (s_shift + 1);
+					PUT_BITS(audio_sample, bits[ch][sb]);
 				}
 			}
 		}
diff --git a/sbc/sbc_math.h b/sbc/sbc_math.h
index b3d87a6..b53e3d1 100644
--- a/sbc/sbc_math.h
+++ b/sbc/sbc_math.h
@@ -23,12 +23,14 @@
  *
  */
 
-#define fabs(x) ((x) &lt; 0 ? -(x) : (x))
+#define neginv(x) ((x) &lt; 0 ? ~(x) : (x))
 /* C does not provide an explicit arithmetic shift right but this will
    always be correct and every compiler *should* generate optimal code */
 #define ASR(val, bits) ((-2 &gt;&gt; 1 == -1) ? \
 		 ((int32_t)(val)) &gt;&gt; (bits) : ((int32_t) (val)) / (1 &lt;&lt; (bits)))
 
+#define SCALE_OUT_BITS 14
+
 #define SCALE_PROTO4_TBL	15
 #define SCALE_ANA4_TBL		17
 #define SCALE_PROTO8_TBL	16
@@ -38,7 +40,7 @@
 #define SCALE_NPROTO4_TBL	11
 #define SCALE_NPROTO8_TBL	11
 #define SCALE4_STAGE1_BITS	15
-#define SCALE4_STAGE2_BITS	16
+#define SCALE4_STAGE2_BITS	(16-SCALE_OUT_BITS)
 #define SCALE4_STAGED1_BITS	15
 #define SCALE4_STAGED2_BITS	16
 #define SCALE8_STAGE1_BITS	15
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..eeea7b7 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -166,3 +166,88 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+#define SBC_HIGH_PRECISION
+
+#ifdef SBC_HIGH_PRECISION
+# define FIXED_A int64_t /* data type for fixed point accumulator */
+# define FIXED_T int32_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 15
+#else
+# define FIXED_A int32_t /* data type for fixed point accumulator */
+# define FIXED_T int16_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 0
+#endif
+
+/* A2DP specification: Section 12.8 Tables */
+#define SBC_PROTO_FIXED8_SCALE (sizeof(FIXED_T)*CHAR_BIT-1-SBC_FIXED8_EXTRA_BITS)
+#define F(x) (FIXED_T)(FIXED_A)((x)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5)
+static const FIXED_T _sbc_proto_fixed8[80] = {
+	 F(0.00000000E+00), F(1.56575398E-04), F(3.43256425E-04), F(5.54620202E-04),
+	 F(8.23919506E-04), F(1.13992507E-03), F(1.47640169E-03), F(1.78371725E-03),
+	 F(2.01182542E-03), F(2.10371989E-03), F(1.99454554E-03), F(1.61656283E-03),
+	 F(9.02154502E-04),-F(1.78805361E-04),-F(1.64973098E-03),-F(3.49717454E-03),
+	 F(5.65949473E-03), F(8.02941163E-03), F(1.04584443E-02), F(1.27472335E-02),
+	 F(1.46525263E-02), F(1.59045603E-02), F(1.62208471E-02), F(1.53184106E-02),
+	 F(1.29371806E-02), F(8.85757540E-03), F(2.92408442E-03),-F(4.91578024E-03),
+	-F(1.46404076E-02),-F(2.61098752E-02),-F(3.90751381E-02),-F(5.31873032E-02),
+	 F(6.79989431E-02), F(8.29847578E-02), F(9.75753918E-02), F(1.11196689E-01),
+	 F(1.23264548E-01), F(1.33264415E-01), F(1.40753505E-01), F(1.45389847E-01),
+	 F(1.46955068E-01), F(1.45389847E-01), F(1.40753505E-01), F(1.33264415E-01),
+	 F(1.23264548E-01), F(1.11196689E-01), F(9.75753918E-02), F(8.29847578E-02),
+	-F(6.79989431E-02),-F(5.31873032E-02),-F(3.90751381E-02),-F(2.61098752E-02),
+	-F(1.46404076E-02),-F(4.91578024E-03), F(2.92408442E-03), F(8.85757540E-03),
+	 F(1.29371806E-02), F(1.53184106E-02), F(1.62208471E-02), F(1.59045603E-02),
+	 F(1.46525263E-02), F(1.27472335E-02), F(1.04584443E-02), F(8.02941163E-03),
+	-F(5.65949473E-03),-F(3.49717454E-03),-F(1.64973098E-03),-F(1.78805361E-04),
+	 F(9.02154502E-04), F(1.61656283E-03), F(1.99454554E-03), F(2.10371989E-03),
+	 F(2.01182542E-03), F(1.78371725E-03), F(1.47640169E-03), F(1.13992507E-03),
+	 F(8.23919506E-04), F(5.54620202E-04), F(3.43256425E-04), F(1.56575398E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7 for j = 0:15 b(i+1, j+1) = cos( (i + 0.5) * (j - 4) * (pi/8) ) endfor endfor;
+ * printf("%.10f, ", b');
+ *
+ */
+#define SBC_COS_TABLE_FIXED8_SCALE (sizeof(FIXED_T)*CHAR_BIT-1+SBC_FIXED8_EXTRA_BITS)
+#define F(x) (FIXED_T)(FIXED_A)((x)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5)
+static const FIXED_T cos_table_fixed_8[128] = {
+	 F(0.7071067812), F(0.8314696123), F(0.9238795325), F(0.9807852804),
+	 F(1.0000000000), F(0.9807852804), F(0.9238795325), F(0.8314696123),
+	 F(0.7071067812), F(0.5555702330), F(0.3826834324), F(0.1950903220),
+	 F(0.0000000000),-F(0.1950903220),-F(0.3826834324),-F(0.5555702330),
+	-F(0.7071067812),-F(0.1950903220), F(0.3826834324), F(0.8314696123),
+	 F(1.0000000000), F(0.8314696123), F(0.3826834324),-F(0.1950903220),
+	-F(0.7071067812),-F(0.9807852804),-F(0.9238795325),-F(0.5555702330),
+	-F(0.0000000000), F(0.5555702330), F(0.9238795325), F(0.9807852804),
+	-F(0.7071067812),-F(0.9807852804),-F(0.3826834324), F(0.5555702330),
+	 F(1.0000000000), F(0.5555702330),-F(0.3826834324),-F(0.9807852804),
+	-F(0.7071067812), F(0.1950903220), F(0.9238795325), F(0.8314696123),
+	 F(0.0000000000),-F(0.8314696123),-F(0.9238795325),-F(0.1950903220),
+	 F(0.7071067812),-F(0.5555702330),-F(0.9238795325), F(0.1950903220),
+	 F(1.0000000000), F(0.1950903220),-F(0.9238795325),-F(0.5555702330),
+	 F(0.7071067812), F(0.8314696123),-F(0.3826834324),-F(0.9807852804),
+	-F(0.0000000000), F(0.9807852804), F(0.3826834324),-F(0.8314696123),
+	 F(0.7071067812), F(0.5555702330),-F(0.9238795325),-F(0.1950903220),
+	 F(1.0000000000),-F(0.1950903220),-F(0.9238795325), F(0.5555702330),
+	 F(0.7071067812),-F(0.8314696123),-F(0.3826834324), F(0.9807852804),
+	 F(0.0000000000),-F(0.9807852804), F(0.3826834324), F(0.8314696123),
+	-F(0.7071067812), F(0.9807852804),-F(0.3826834324),-F(0.5555702330),
+	 F(1.0000000000),-F(0.5555702330),-F(0.3826834324), F(0.9807852804),
+	-F(0.7071067812),-F(0.1950903220), F(0.9238795325),-F(0.8314696123),
+	-F(0.0000000000), F(0.8314696123),-F(0.9238795325), F(0.1950903220),
+	-F(0.7071067812), F(0.1950903220), F(0.3826834324),-F(0.8314696123),
+	 F(1.0000000000),-F(0.8314696123), F(0.3826834324), F(0.1950903220),
+	-F(0.7071067812), F(0.9807852804),-F(0.9238795325), F(0.5555702330),
+	-F(0.0000000000),-F(0.5555702330), F(0.9238795325),-F(0.9807852804),
+	 F(0.7071067812),-F(0.8314696123), F(0.9238795325),-F(0.9807852804),
+	 F(1.0000000000),-F(0.9807852804), F(0.9238795325),-F(0.8314696123),
+	 F(0.7071067812),-F(0.5555702330), F(0.3826834324),-F(0.1950903220),
+	-F(0.0000000000), F(0.1950903220),-F(0.3826834324), F(0.5555702330),
+};
+#undef F

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081222233043</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-22 23:30:43-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Saturday 20 December 2008 00:12:08 ext Siarhei Siamashka wrote:
[...]
&gt; We had a talk with Jaska Uimonen here, and now I'm kind of delegated to
&gt; finish the work on this filtering function for SBC encoder (including the
&gt; final addition of ARM assembly optimizations).  He provided me with his
&gt; last variant of code, which contains some more optimizations to reduce the
&gt; number of operations and also loops unrolling. I will add his changes to
&gt; the patch on next iteration.
&gt;
&gt; Now the question is how to best integrate a fixed filtering function to git
&gt; repository? If I just continue adding changes to the patch in order to make
&gt; it a faster, it will be also not so obvious to see how we got to these code
&gt; transformations just from the commit log.

Next iteration done.  Added support for 4 subbands, number of arithmetic
operations reduced (but without loop unrolling for better code readability),
precision improved for both 16-bit and 32-bit fixed point, 'neginv' macro is
now more portable and faster. The rest is in the code comments.


Best regards,
Siarhei Siamashka

["sbc_analyze_modified.diff" (text/x-diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..3d6a412 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -40,6 +40,7 @@
 #include &lt;string.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;sys/types.h&gt;
+#include &lt;limits.h&gt;
 
 #include "sbc_math.h"
 #include "sbc_tables.h"
@@ -93,7 +94,7 @@ struct sbc_decoder_state {
 struct sbc_encoder_state {
 	int subbands;
 	int position[2];
-	int32_t X[2][160];
+	int16_t X[2][160];
 };
 
 /*
@@ -656,75 +657,56 @@ static void sbc_encoder_init(struct sbc_encoder_state *state,
 	state-&gt;position[0] = state-&gt;position[1] = 9 * frame-&gt;subbands;
 }
 
-static inline void _sbc_analyze_four(const int32_t *in, int32_t *out)
+static inline void _sbc_analyze_four(const int16_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[5];
-
-	t[0] = SCALE4_STAGE1( /* Q8 */
-		MULA(_sbc_proto_4[0], in[8] - in[32], /* Q18 */
-		MUL( _sbc_proto_4[1], in[16] - in[24])));
-
-	t[1] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[2], in[1],
-		MULA(_sbc_proto_4[3], in[9],
-		MULA(_sbc_proto_4[4], in[17],
-		MULA(_sbc_proto_4[5], in[25],
-		MUL( _sbc_proto_4[6], in[33]))))));
-
-	t[2] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[7], in[2],
-		MULA(_sbc_proto_4[8], in[10],
-		MULA(_sbc_proto_4[9], in[18],
-		MULA(_sbc_proto_4[10], in[26],
-		MUL( _sbc_proto_4[11], in[34]))))));
-
-	t[3] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[12], in[3],
-		MULA(_sbc_proto_4[13], in[11],
-		MULA(_sbc_proto_4[14], in[19],
-		MULA(_sbc_proto_4[15], in[27],
-		MUL( _sbc_proto_4[16], in[35]))))));
-
-	t[4] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[17], in[4] + in[36],
-		MULA(_sbc_proto_4[18], in[12] + in[28],
-		MUL( _sbc_proto_4[19], in[20]))));
-
-	t[5] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[16], in[5],
-		MULA(_sbc_proto_4[15], in[13],
-		MULA(_sbc_proto_4[14], in[21],
-		MULA(_sbc_proto_4[13], in[29],
-		MUL( _sbc_proto_4[12], in[37]))))));
-
-	/* don't compute t[6]... this term always multiplies
-	 * with cos(pi/2) = 0 */
-
-	t[7] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[6], in[7],
-		MULA(_sbc_proto_4[5], in[15],
-		MULA(_sbc_proto_4[4], in[23],
-		MULA(_sbc_proto_4[3], in[31],
-		MUL( _sbc_proto_4[2], in[39]))))));
-
-	s[0] = MUL( _anamatrix4[0], t[0] + t[4]);
-	s[1] = MUL( _anamatrix4[2], t[2]);
-	s[2] = MULA(_anamatrix4[1], t[1] + t[3],
-		MUL(_anamatrix4[3], t[5]));
-	s[3] = MULA(_anamatrix4[3], t[1] + t[3],
-		MUL(_anamatrix4[1], -t[5] + t[7]));
-	s[4] = MUL( _anamatrix4[3], t[7]);
-
-	out[0] = SCALE4_STAGE2( s[0] + s[1] + s[2] + s[4]); /* Q0 */
-	out[1] = SCALE4_STAGE2(-s[0] + s[1] + s[3]);
-	out[2] = SCALE4_STAGE2(-s[0] + s[1] - s[3]);
-	out[3] = SCALE4_STAGE2( s[0] + s[1] - s[2] - s[4]);
+	FIXED_A t1[4];
+	FIXED_T t2[4];
+	int i = 0, hop = 0;
+
+	/* rounding coefficient */
+
+	t1[0] = t1[1] = t1[2] = t1[3] =
+		(FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE-1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 40; hop += 8) {
+		t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed4[hop];
+		t1[1] +=  (FIXED_A)in[hop + 1] * _sbc_proto_fixed4[hop + 1];
+		t1[2] +=  (FIXED_A)in[hop + 2] * _sbc_proto_fixed4[hop + 2];
+		t1[1] +=  (FIXED_A)in[hop + 3] * _sbc_proto_fixed4[hop + 3];
+		t1[0] +=  (FIXED_A)in[hop + 4] * _sbc_proto_fixed4[hop + 4];
+		t1[3] +=  (FIXED_A)in[hop + 5] * _sbc_proto_fixed4[hop + 5];
+		t1[3] +=  (FIXED_A)in[hop + 7] * _sbc_proto_fixed4[hop + 7];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+
+	/* do the cos transform */
+	for (i = 0, hop = 0; i &lt; 4; hop += 8, i++) {
+		/* rounding coefficient */
+		t1[i]  = (FIXED_A)1 &lt;&lt; (SBC_COS_TABLE_FIXED4_SCALE-1-SCALE_OUT_BITS);
+		
+		t1[i] += (FIXED_A)t2[0] * cos_table_fixed_4[0 + hop];
+		t1[i] += (FIXED_A)t2[1] * cos_table_fixed_4[1 + hop];
+		t1[i] += (FIXED_A)t2[2] * cos_table_fixed_4[2 + hop];
+		t1[i] += (FIXED_A)t2[3] * cos_table_fixed_4[5 + hop];
+	}
+
+	/* scaling */
+	out[0] = t1[0] &gt;&gt; (SBC_COS_TABLE_FIXED4_SCALE-SCALE_OUT_BITS);
+	out[1] = t1[1] &gt;&gt; (SBC_COS_TABLE_FIXED4_SCALE-SCALE_OUT_BITS);
+	out[2] = t1[2] &gt;&gt; (SBC_COS_TABLE_FIXED4_SCALE-SCALE_OUT_BITS);
+	out[3] = t1[3] &gt;&gt; (SBC_COS_TABLE_FIXED4_SCALE-SCALE_OUT_BITS);
 }
 
 static inline void sbc_analyze_four(struct sbc_encoder_state *state,
 				struct sbc_frame *frame, int ch, int blk)
 {
-	int32_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
+	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
 	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 4];
 
 	/* Input 4 Audio Samples */
@@ -740,133 +722,80 @@ static inline void sbc_analyze_four(struct sbc_encoder_state \
*state,  state-&gt;position[ch] = 36;
 }
 
-static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
+static inline void _sbc_analyze_eight(const int16_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[8];
-
-	t[0] = SCALE8_STAGE1( /* Q10 */
-		MULA(_sbc_proto_8[0], (in[16] - in[64]), /* Q18 = Q18 * Q0 */
-		MULA(_sbc_proto_8[1], (in[32] - in[48]),
-		MULA(_sbc_proto_8[2], in[4],
-		MULA(_sbc_proto_8[3], in[20],
-		MULA(_sbc_proto_8[4], in[36],
-		MUL( _sbc_proto_8[5], in[52])))))));
-
-	t[1] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[6], in[2],
-		MULA(_sbc_proto_8[7], in[18],
-		MULA(_sbc_proto_8[8], in[34],
-		MULA(_sbc_proto_8[9], in[50],
-		MUL(_sbc_proto_8[10], in[66]))))));
-
-	t[2] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[11], in[1],
-		MULA(_sbc_proto_8[12], in[17],
-		MULA(_sbc_proto_8[13], in[33],
-		MULA(_sbc_proto_8[14], in[49],
-		MULA(_sbc_proto_8[15], in[65],
-		MULA(_sbc_proto_8[16], in[3],
-		MULA(_sbc_proto_8[17], in[19],
-		MULA(_sbc_proto_8[18], in[35],
-		MULA(_sbc_proto_8[19], in[51],
-		MUL( _sbc_proto_8[20], in[67])))))))))));
-
-	t[3] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[21], in[5],
-		MULA( _sbc_proto_8[22], in[21],
-		MULA( _sbc_proto_8[23], in[37],
-		MULA( _sbc_proto_8[24], in[53],
-		MULA( _sbc_proto_8[25], in[69],
-		MULA(-_sbc_proto_8[15], in[15],
-		MULA(-_sbc_proto_8[14], in[31],
-		MULA(-_sbc_proto_8[13], in[47],
-		MULA(-_sbc_proto_8[12], in[63],
-		MUL( -_sbc_proto_8[11], in[79])))))))))));
-
-	t[4] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[26], in[6],
-		MULA( _sbc_proto_8[27], in[22],
-		MULA( _sbc_proto_8[28], in[38],
-		MULA( _sbc_proto_8[29], in[54],
-		MULA( _sbc_proto_8[30], in[70],
-		MULA(-_sbc_proto_8[10], in[14],
-		MULA(-_sbc_proto_8[9], in[30],
-		MULA(-_sbc_proto_8[8], in[46],
-		MULA(-_sbc_proto_8[7], in[62],
-		MUL( -_sbc_proto_8[6], in[78])))))))))));
-
-	t[5] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[31], in[7],
-		MULA( _sbc_proto_8[32], in[23],
-		MULA( _sbc_proto_8[33], in[39],
-		MULA( _sbc_proto_8[34], in[55],
-		MULA( _sbc_proto_8[35], in[71],
-		MULA(-_sbc_proto_8[20], in[13],
-		MULA(-_sbc_proto_8[19], in[29],
-		MULA(-_sbc_proto_8[18], in[45],
-		MULA(-_sbc_proto_8[17], in[61],
-		MUL( -_sbc_proto_8[16], in[77])))))))))));
-
-	t[6] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[36], (in[8] + in[72]),
-		MULA( _sbc_proto_8[37], (in[24] + in[56]),
-		MULA( _sbc_proto_8[38], in[40],
-		MULA(-_sbc_proto_8[39], in[12],
-		MULA(-_sbc_proto_8[5], in[28],
-		MULA(-_sbc_proto_8[4], in[44],
-		MULA(-_sbc_proto_8[3], in[60],
-		MUL( -_sbc_proto_8[2], in[76])))))))));
-
-	t[7] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[35], in[9],
-		MULA( _sbc_proto_8[34], in[25],
-		MULA( _sbc_proto_8[33], in[41],
-		MULA( _sbc_proto_8[32], in[57],
-		MULA( _sbc_proto_8[31], in[73],
-		MULA(-_sbc_proto_8[25], in[11],
-		MULA(-_sbc_proto_8[24], in[27],
-		MULA(-_sbc_proto_8[23], in[43],
-		MULA(-_sbc_proto_8[22], in[59],
-		MUL( -_sbc_proto_8[21], in[75])))))))))));
-
-	s[0] = MULA(  _anamatrix8[0], t[0],
-		MUL(  _anamatrix8[1], t[6]));
-	s[1] = MUL(   _anamatrix8[7], t[1]);
-	s[2] = MULA(  _anamatrix8[2], t[2],
-		MULA( _anamatrix8[3], t[3],
-		MULA( _anamatrix8[4], t[5],
-		MUL(  _anamatrix8[5], t[7]))));
-	s[3] = MUL(   _anamatrix8[6], t[4]);
-	s[4] = MULA(  _anamatrix8[3], t[2],
-		MULA(-_anamatrix8[5], t[3],
-		MULA(-_anamatrix8[2], t[5],
-		MUL( -_anamatrix8[4], t[7]))));
-	s[5] = MULA(  _anamatrix8[4], t[2],
-		MULA(-_anamatrix8[2], t[3],
-		MULA( _anamatrix8[5], t[5],
-		MUL(  _anamatrix8[3], t[7]))));
-	s[6] = MULA(  _anamatrix8[1], t[0],
-		MUL( -_anamatrix8[0], t[6]));
-	s[7] = MULA(  _anamatrix8[5], t[2],
-		MULA(-_anamatrix8[4], t[3],
-		MULA( _anamatrix8[3], t[5],
-		MUL( -_anamatrix8[2], t[7]))));
-
-	out[0] = SCALE8_STAGE2( s[0] + s[1] + s[2] + s[3]);
-	out[1] = SCALE8_STAGE2( s[1] - s[3] + s[4] + s[6]);
-	out[2] = SCALE8_STAGE2( s[1] - s[3] + s[5] - s[6]);
-	out[3] = SCALE8_STAGE2(-s[0] + s[1] + s[3] + s[7]);
-	out[4] = SCALE8_STAGE2(-s[0] + s[1] + s[3] - s[7]);
-	out[5] = SCALE8_STAGE2( s[1] - s[3] - s[5] - s[6]);
-	out[6] = SCALE8_STAGE2( s[1] - s[3] - s[4] + s[6]);
-	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
+	FIXED_A t1[8];
+	FIXED_T t2[8];
+	int i, hop;
+
+	/* rounding coefficient */
+	t1[0] = t1[1] = t1[2] = t1[3] = t1[4] = t1[5] = t1[6] = t1[7] =
+		(FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED8_SCALE-1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 80; hop += 16) {
+		t1[0] += (FIXED_A)in[hop] * _sbc_proto_fixed8[hop];
+		t1[1] += (FIXED_A)in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t1[2] += (FIXED_A)in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t1[3] += (FIXED_A)in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+
+		t1[4] += (FIXED_A)in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+
+		t1[0] += (FIXED_A)in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t1[1] += (FIXED_A)in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t1[2] += (FIXED_A)in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t1[3] += (FIXED_A)in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+
+		t1[5] += (FIXED_A)in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t1[6] += (FIXED_A)in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t1[7] += (FIXED_A)in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+
+		t1[5] += (FIXED_A)in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+		t1[6] += (FIXED_A)in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t1[7] += (FIXED_A)in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[4] = t1[4] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[5] = t1[5] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[6] = t1[6] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[7] = t1[7] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+
+	/* do the cos transform */
+	for (i = 0, hop = 0; i &lt; 8; hop += 16, i++) {
+		/* rounding coefficient */
+		t1[i] = (FIXED_A)1 &lt;&lt; (SBC_COS_TABLE_FIXED8_SCALE-1-SCALE_OUT_BITS);
+
+		t1[i] += (FIXED_A)t2[0] * cos_table_fixed_8[0 + hop];
+		t1[i] += (FIXED_A)t2[1] * cos_table_fixed_8[1 + hop];
+		t1[i] += (FIXED_A)t2[2] * cos_table_fixed_8[2 + hop];
+		t1[i] += (FIXED_A)t2[3] * cos_table_fixed_8[3 + hop];
+		t1[i] += (FIXED_A)t2[4] * cos_table_fixed_8[4 + hop];
+		t1[i] += (FIXED_A)t2[5] * cos_table_fixed_8[9 + hop];
+		t1[i] += (FIXED_A)t2[6] * cos_table_fixed_8[10 + hop];
+		t1[i] += (FIXED_A)t2[7] * cos_table_fixed_8[11 + hop];
+	}
+
+	/* scaling */
+	out[0] = t1[0] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[1] = t1[1] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[2] = t1[2] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[3] = t1[3] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[4] = t1[4] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[5] = t1[5] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[6] = t1[6] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
+	out[7] = t1[7] &gt;&gt; (SBC_COS_TABLE_FIXED8_SCALE-SCALE_OUT_BITS);
 }
 
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 					struct sbc_frame *frame, int ch,
 					int blk)
 {
-	int32_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
+	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
 	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 8];
 
 	/* Input 8 Audio Samples */
@@ -1006,7 +935,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  frame-&gt;scale_factor[ch][sb] = 0;
 			scalefactor[ch][sb] = 2;
 			for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
-				while (scalefactor[ch][sb] &lt; fabs(frame-&gt;sb_sample_f[blk][ch][sb])) {
+				while ((scalefactor[ch][sb] &lt;&lt; SCALE_OUT_BITS) &lt;= \
neginv(frame-&gt;sb_sample_f[blk][ch][sb])) {  frame-&gt;scale_factor[ch][sb]++;
 					scalefactor[ch][sb] *= 2;
 				}
@@ -1040,11 +969,11 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  frame-&gt;sb_sample_f[blk][1][sb]) &gt;&gt; 1;
 
 				/* calculate scale_factor_j and scalefactor_j for joint case */
-				while (scalefactor_j[0] &lt; fabs(sb_sample_j[blk][0])) {
+				while ((scalefactor_j[0] &lt;&lt; SCALE_OUT_BITS) &lt;= neginv(sb_sample_j[blk][0])) {
 					scale_factor_j[0]++;
 					scalefactor_j[0] *= 2;
 				}
-				while (scalefactor_j[1] &lt; fabs(sb_sample_j[blk][1])) {
+				while ((scalefactor_j[1] &lt;&lt; SCALE_OUT_BITS) &lt;= neginv(sb_sample_j[blk][1])) {
 					scale_factor_j[1]++;
 					scalefactor_j[1] *= 2;
 				}
@@ -1100,11 +1029,11 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 			for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
 				if (levels[ch][sb] &gt; 0) {
-					audio_sample =
-						(uint16_t) (((((int64_t)frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
-									(frame-&gt;scale_factor[ch][sb] + 1)) +
-								levels[ch][sb]) &gt;&gt; 1);
-					PUT_BITS(audio_sample &amp; levels[ch][sb], bits[ch][sb]);
+					int32_t sample = frame-&gt;sb_sample_f[blk][ch][sb];
+					int32_t s_shift = (frame-&gt;scale_factor[ch][sb] + 1 + SCALE_OUT_BITS);
+					int32_t ls = levels[ch][sb];
+					audio_sample = ((((int64_t)1 &lt;&lt; s_shift) + sample) * ls) &gt;&gt; (s_shift + 1);
+					PUT_BITS(audio_sample, bits[ch][sb]);
 				}
 			}
 		}
diff --git a/sbc/sbc_math.h b/sbc/sbc_math.h
index b3d87a6..f3937ce 100644
--- a/sbc/sbc_math.h
+++ b/sbc/sbc_math.h
@@ -23,37 +23,30 @@
  *
  */
 
-#define fabs(x) ((x) &lt; 0 ? -(x) : (x))
 /* C does not provide an explicit arithmetic shift right but this will
    always be correct and every compiler *should* generate optimal code */
 #define ASR(val, bits) ((-2 &gt;&gt; 1 == -1) ? \
 		 ((int32_t)(val)) &gt;&gt; (bits) : ((int32_t) (val)) / (1 &lt;&lt; (bits)))
 
-#define SCALE_PROTO4_TBL	15
-#define SCALE_ANA4_TBL		17
-#define SCALE_PROTO8_TBL	16
-#define SCALE_ANA8_TBL		17
+#define neginv(x) ((-2 &gt;&gt; 1 == -1) ? \
+		 ((((int32_t)(x)) &gt;&gt; 31) ^ (int32_t)(x)) : \
+		 ((x &gt;= 0) ? (x) : -(x)-1))
+
+#define SCALE_OUT_BITS 14
+
 #define SCALE_SPROTO4_TBL	12
 #define SCALE_SPROTO8_TBL	14
 #define SCALE_NPROTO4_TBL	11
 #define SCALE_NPROTO8_TBL	11
-#define SCALE4_STAGE1_BITS	15
-#define SCALE4_STAGE2_BITS	16
 #define SCALE4_STAGED1_BITS	15
 #define SCALE4_STAGED2_BITS	16
-#define SCALE8_STAGE1_BITS	15
-#define SCALE8_STAGE2_BITS	15
 #define SCALE8_STAGED1_BITS	15
 #define SCALE8_STAGED2_BITS	16
 
 typedef int32_t sbc_fixed_t;
 
-#define SCALE4_STAGE1(src)  ASR(src, SCALE4_STAGE1_BITS)
-#define SCALE4_STAGE2(src)  ASR(src, SCALE4_STAGE2_BITS)
 #define SCALE4_STAGED1(src) ASR(src, SCALE4_STAGED1_BITS)
 #define SCALE4_STAGED2(src) ASR(src, SCALE4_STAGED2_BITS)
-#define SCALE8_STAGE1(src)  ASR(src, SCALE8_STAGE1_BITS)
-#define SCALE8_STAGE2(src)  ASR(src, SCALE8_STAGE2_BITS)
 #define SCALE8_STAGED1(src) ASR(src, SCALE8_STAGED1_BITS)
 #define SCALE8_STAGED2(src) ASR(src, SCALE8_STAGED2_BITS)
 
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..9c96732 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -40,40 +40,11 @@ static const int sbc_offset8[4][8] = {
 };
 
 
-#define SP4(val) (((int32_t)(val))/17658) /* Used to be #define SP4(val) ASR(val, \
                SCALE_PROTO4_TBL) but causes wrong gain */
-#define SA4(val) ASR(val, SCALE_ANA4_TBL)
-#define SP8(val) (((int32_t)(val))/57740) /* Used to be #define SP8(val) ASR(val, \
                SCALE_PROTO8_TBL) but causes wrong gain */
-#define SA8(val) ASR(val, SCALE_ANA8_TBL)
 #define SS4(val) ASR(val, SCALE_SPROTO4_TBL)
 #define SS8(val) ASR(val, SCALE_SPROTO8_TBL)
 #define SN4(val) ASR(val, SCALE_NPROTO4_TBL)
 #define SN8(val) ASR(val, SCALE_NPROTO8_TBL)
 
-static const int32_t _sbc_proto_4[20] = {
-	SP4(0x02cb3e8c), SP4(0x22b63dc0), SP4(0x002329cc), SP4(0x053b7548),
-	SP4(0x31eab940), SP4(0xec1f5e60), SP4(0xff3773a8), SP4(0x0061c5a7),
-	SP4(0x07646680), SP4(0x3f239480), SP4(0xf89f23a8), SP4(0x007a4737),
-	SP4(0x00b32807), SP4(0x083ddc80), SP4(0x4825e480), SP4(0x0191e578),
-	SP4(0x00ff11ca), SP4(0x00fb7991), SP4(0x069fdc58), SP4(0x4b584000)
-};
-
-static const int32_t _anamatrix4[4] = {
-	SA4(0x2d413cc0), SA4(0x3b20d780), SA4(0x40000000), SA4(0x187de2a0)
-};
-
-static const int32_t _sbc_proto_8[40] = {
-	SP8(0x02e5cd20), SP8(0x22d0c200), SP8(0x006bfe27), SP8(0x07808930),
-	SP8(0x3f1c8800), SP8(0xf8810d70), SP8(0x002cfdc6), SP8(0x055acf28),
-	SP8(0x31f566c0), SP8(0xebfe57e0), SP8(0xff27c437), SP8(0x001485cc),
-	SP8(0x041c6e58), SP8(0x2a7cfa80), SP8(0xe4c4a240), SP8(0xfe359e4c),
-	SP8(0x0048b1f8), SP8(0x0686ce30), SP8(0x38eec5c0), SP8(0xf2a1b9f0),
-	SP8(0xffe8904a), SP8(0x0095698a), SP8(0x0824a480), SP8(0x443b3c00),
-	SP8(0xfd7badc8), SP8(0x00d3e2d9), SP8(0x00c183d2), SP8(0x084e1950),
-	SP8(0x4810d800), SP8(0x017f43fe), SP8(0x01056dd8), SP8(0x00e9cb9f),
-	SP8(0x07d7d090), SP8(0x4a708980), SP8(0x0488fae8), SP8(0x0113bd20),
-	SP8(0x0107b1a8), SP8(0x069fb3c0), SP8(0x4b3db200), SP8(0x00763f48)
-};
-
 static const int32_t sbc_proto_4_40m0[] = {
 	SS4(0x00000000), SS4(0xffa6982f), SS4(0xfba93848), SS4(0x0456c7b8),
 	SS4(0x005967d1), SS4(0xfffb9ac7), SS4(0xff589157), SS4(0xf9c2a8d8),
@@ -116,11 +87,6 @@ static const int32_t sbc_proto_8_80m1[] = {
 	SS8(0x0d9daee0), SS8(0xeac182c0), SS8(0xfdf1c8d4), SS8(0xfff5bd1a)
 };
 
-static const int32_t _anamatrix8[8] = {
-	SA8(0x3b20d780), SA8(0x187de2a0), SA8(0x3ec52f80), SA8(0x3536cc40),
-	SA8(0x238e7680), SA8(0x0c7c5c20), SA8(0x2d413cc0), SA8(0x40000000)
-};
-
 static const int32_t synmatrix4[8][4] = {
 	{ SN4(0x05a82798), SN4(0xfa57d868), SN4(0xfa57d868), SN4(0x05a82798) },
 	{ SN4(0x030fbc54), SN4(0xf89be510), SN4(0x07641af0), SN4(0xfcf043ac) },
@@ -166,3 +132,169 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+//#define SBC_HIGH_PRECISION
+
+#ifdef SBC_HIGH_PRECISION
+# define FIXED_A int64_t /* data type for fixed point accumulator */
+# define FIXED_T int32_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 16
+#else
+# define FIXED_A int32_t /* data type for fixed point accumulator */
+# define FIXED_T int16_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 0
+#endif
+
+/* A2DP specification: Section 12.8 Tables 
+ *
+ * Original values are premultiplied by 4 for better precision (that is the
+ * maximum which is possible without overflows)
+ *
+ * Note: in each block of 16 numbers sign was changed for elements 4, 13, 14, 15
+ * in order to compensate the same change applied to cos_table_fixed_8
+ */
+#define SBC_PROTO_FIXED8_SCALE (sizeof(FIXED_T)*CHAR_BIT-1-SBC_FIXED8_EXTRA_BITS+2)
+#define F(x) (FIXED_A)((x*4)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5)
+static const FIXED_T _sbc_proto_fixed8[80] = {
+	 F(0.00000000E+00), F(1.56575398E-04), F(3.43256425E-04), F(5.54620202E-04),
+	-F(8.23919506E-04), F(1.13992507E-03), F(1.47640169E-03), F(1.78371725E-03),
+	 F(2.01182542E-03), F(2.10371989E-03), F(1.99454554E-03), F(1.61656283E-03),
+	 F(9.02154502E-04), F(1.78805361E-04), F(1.64973098E-03), F(3.49717454E-03),
+
+	 F(5.65949473E-03), F(8.02941163E-03), F(1.04584443E-02), F(1.27472335E-02),
+	-F(1.46525263E-02), F(1.59045603E-02), F(1.62208471E-02), F(1.53184106E-02),
+	 F(1.29371806E-02), F(8.85757540E-03), F(2.92408442E-03),-F(4.91578024E-03),
+	-F(1.46404076E-02), F(2.61098752E-02), F(3.90751381E-02), F(5.31873032E-02),
+
+	 F(6.79989431E-02), F(8.29847578E-02), F(9.75753918E-02), F(1.11196689E-01),
+	-F(1.23264548E-01), F(1.33264415E-01), F(1.40753505E-01), F(1.45389847E-01),
+	 F(1.46955068E-01), F(1.45389847E-01), F(1.40753505E-01), F(1.33264415E-01),
+	 F(1.23264548E-01),-F(1.11196689E-01),-F(9.75753918E-02),-F(8.29847578E-02),
+
+	-F(6.79989431E-02),-F(5.31873032E-02),-F(3.90751381E-02),-F(2.61098752E-02),
+	 F(1.46404076E-02),-F(4.91578024E-03), F(2.92408442E-03), F(8.85757540E-03),
+	 F(1.29371806E-02), F(1.53184106E-02), F(1.62208471E-02), F(1.59045603E-02),
+	 F(1.46525263E-02),-F(1.27472335E-02),-F(1.04584443E-02),-F(8.02941163E-03),
+
+	-F(5.65949473E-03),-F(3.49717454E-03),-F(1.64973098E-03),-F(1.78805361E-04),
+	-F(9.02154502E-04), F(1.61656283E-03), F(1.99454554E-03), F(2.10371989E-03),
+	 F(2.01182542E-03), F(1.78371725E-03), F(1.47640169E-03), F(1.13992507E-03),
+	 F(8.23919506E-04),-F(5.54620202E-04),-F(3.43256425E-04),-F(1.56575398E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7 for j = 0:15 b(i+1, j+1) = cos( (i + 0.5) * (j - 4) * (pi/8) ) endfor \
endfor; + * printf("%.10f, ", b');
+ *
+ * Note: in each block of 16 numbers sign was changed for elements 4, 13, 14, 15.
+ * Change of sign for element 4 allows to replace constant 1.0 (not representable
+ * in Q15 format) with -1.0 (fine with Q15).
+ * Changed signs for elements 13, 14, 15 allow to have more similar constants
+ * and simplify subband filter function code.
+ */
+#define SBC_COS_TABLE_FIXED8_SCALE \
(sizeof(FIXED_T)*CHAR_BIT-1+SBC_FIXED8_EXTRA_BITS) +#define F(x) \
(FIXED_A)((x)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5) +static const FIXED_T \
cos_table_fixed_8[128] = { +	 F(0.7071067812), F(0.8314696123), F(0.9238795325), \
F(0.9807852804), +	-F(1.0000000000), F(0.9807852804), F(0.9238795325), \
F(0.8314696123), +	 F(0.7071067812), F(0.5555702330), F(0.3826834324), \
F(0.1950903220), +	 F(0.0000000000), F(0.1950903220), F(0.3826834324), \
F(0.5555702330), +
+	-F(0.7071067812),-F(0.1950903220), F(0.3826834324), F(0.8314696123),
+	-F(1.0000000000), F(0.8314696123), F(0.3826834324),-F(0.1950903220),
+	-F(0.7071067812),-F(0.9807852804),-F(0.9238795325),-F(0.5555702330),
+	-F(0.0000000000),-F(0.5555702330),-F(0.9238795325),-F(0.9807852804),
+
+	-F(0.7071067812),-F(0.9807852804),-F(0.3826834324), F(0.5555702330),
+	-F(1.0000000000), F(0.5555702330),-F(0.3826834324),-F(0.9807852804),
+	-F(0.7071067812), F(0.1950903220), F(0.9238795325), F(0.8314696123),
+	 F(0.0000000000), F(0.8314696123), F(0.9238795325), F(0.1950903220),
+
+	 F(0.7071067812),-F(0.5555702330),-F(0.9238795325), F(0.1950903220),
+	-F(1.0000000000), F(0.1950903220),-F(0.9238795325),-F(0.5555702330),
+	 F(0.7071067812), F(0.8314696123),-F(0.3826834324),-F(0.9807852804),
+	-F(0.0000000000),-F(0.9807852804),-F(0.3826834324), F(0.8314696123),
+
+	 F(0.7071067812), F(0.5555702330),-F(0.9238795325),-F(0.1950903220),
+	-F(1.0000000000),-F(0.1950903220),-F(0.9238795325), F(0.5555702330),
+	 F(0.7071067812),-F(0.8314696123),-F(0.3826834324), F(0.9807852804),
+	 F(0.0000000000), F(0.9807852804),-F(0.3826834324),-F(0.8314696123),
+
+	-F(0.7071067812), F(0.9807852804),-F(0.3826834324),-F(0.5555702330),
+	-F(1.0000000000),-F(0.5555702330),-F(0.3826834324), F(0.9807852804),
+	-F(0.7071067812),-F(0.1950903220), F(0.9238795325),-F(0.8314696123),
+	-F(0.0000000000),-F(0.8314696123), F(0.9238795325),-F(0.1950903220),
+
+	-F(0.7071067812), F(0.1950903220), F(0.3826834324),-F(0.8314696123),
+	-F(1.0000000000),-F(0.8314696123), F(0.3826834324), F(0.1950903220),
+	-F(0.7071067812), F(0.9807852804),-F(0.9238795325), F(0.5555702330),
+	-F(0.0000000000), F(0.5555702330),-F(0.9238795325), F(0.9807852804),
+
+	 F(0.7071067812),-F(0.8314696123), F(0.9238795325),-F(0.9807852804),
+	-F(1.0000000000),-F(0.9807852804), F(0.9238795325),-F(0.8314696123),
+	 F(0.7071067812),-F(0.5555702330), F(0.3826834324),-F(0.1950903220),
+	-F(0.0000000000),-F(0.1950903220), F(0.3826834324),-F(0.5555702330),
+};
+#undef F
+
+/* A2DP specification: Section 12.8 Tables
+ *
+ * Original values are premultiplied by 2 for better precision (that is the
+ * maximum which is possible without overflows)
+ *
+ * Note: in each block of 8 numbers sign was changed for elements 2 and 7
+ * in order to compensate the same change applied to cos_table_fixed_4
+ */
+#define SBC_PROTO_FIXED4_SCALE (sizeof(FIXED_T)*CHAR_BIT-1-SBC_FIXED8_EXTRA_BITS+1)
+#define F(x) (FIXED_A)((x*2)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5)
+static const FIXED_T _sbc_proto_fixed4[40] = {
+	 F(0.00000000E+00), F(5.36548976E-04),-F(1.49188357E-03), F(2.73370904E-03),
+	 F(3.83720193E-03), F(3.89205149E-03), F(1.86581691E-03), F(3.06012286E-03),
+
+	 F(1.09137620E-02), F(2.04385087E-02),-F(2.88757392E-02), F(3.21939290E-02),
+	 F(2.58767811E-02), F(6.13245186E-03),-F(2.88217274E-02), F(7.76463494E-02),
+
+	 F(1.35593274E-01), F(1.94987841E-01),-F(2.46636662E-01), F(2.81828203E-01),
+	 F(2.94315332E-01), F(2.81828203E-01), F(2.46636662E-01),-F(1.94987841E-01),
+
+	-F(1.35593274E-01),-F(7.76463494E-02), F(2.88217274E-02), F(6.13245186E-03),
+	 F(2.58767811E-02), F(3.21939290E-02), F(2.88757392E-02),-F(2.04385087E-02),
+
+	-F(1.09137620E-02),-F(3.06012286E-03),-F(1.86581691E-03), F(3.89205149E-03),
+	 F(3.83720193E-03), F(2.73370904E-03), F(1.49188357E-03),-F(5.36548976E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(4, 8);
+ * for i = 0:3 for j = 0:7 b(i+1, j+1) = cos( (i + 0.5) * (j - 2) * (pi/4) ) endfor \
endfor; + * printf("F(%.10f), ", b');
+ *
+ * Note: in each block of 8 numbers sign was changed for elements 2 and 7.
+ * Change of sign for element 2 allows to replace constant 1.0 (not representable
+ * in Q15 format) with -1.0 (fine with Q15).
+ * Changed sign for element 7 allows to have more similar constants
+ * and simplify subband filter function code.
+ */
+#define SBC_COS_TABLE_FIXED4_SCALE \
(sizeof(FIXED_T)*CHAR_BIT-1+SBC_FIXED8_EXTRA_BITS) +#define F(x) \
(FIXED_A)((x)*((FIXED_A)1&lt;&lt;(sizeof(FIXED_T)*CHAR_BIT-1))+0.5) +static const FIXED_T \
cos_table_fixed_4[32] = { +	 F(0.7071067812), F(0.9238795325),-F(1.0000000000), \
F(0.9238795325), +	 F(0.7071067812), F(0.3826834324), F(0.0000000000), \
F(0.3826834324), +
+	-F(0.7071067812), F(0.3826834324),-F(1.0000000000), F(0.3826834324),
+	-F(0.7071067812),-F(0.9238795325),-F(0.0000000000),-F(0.9238795325),
+
+	-F(0.7071067812),-F(0.3826834324),-F(1.0000000000),-F(0.3826834324),
+	-F(0.7071067812), F(0.9238795325), F(0.0000000000), F(0.9238795325),
+
+	 F(0.7071067812),-F(0.9238795325),-F(1.0000000000),-F(0.9238795325),
+	 F(0.7071067812),-F(0.3826834324),-F(0.0000000000),-F(0.3826834324),
+};
+#undef F


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081223005913</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 00:59:13-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi Siarhei,

&gt; &gt; We had a talk with Jaska Uimonen here, and now I'm kind of delegated to
&gt; &gt; finish the work on this filtering function for SBC encoder (including the
&gt; &gt; final addition of ARM assembly optimizations).  He provided me with his
&gt; &gt; last variant of code, which contains some more optimizations to reduce the
&gt; &gt; number of operations and also loops unrolling. I will add his changes to
&gt; &gt; the patch on next iteration.
&gt; &gt;
&gt; &gt; Now the question is how to best integrate a fixed filtering function to git
&gt; &gt; repository? If I just continue adding changes to the patch in order to make
&gt; &gt; it a faster, it will be also not so obvious to see how we got to these code
&gt; &gt; transformations just from the commit log.
&gt; 
&gt; Next iteration done.  Added support for 4 subbands, number of arithmetic
&gt; operations reduced (but without loop unrolling for better code readability),
&gt; precision improved for both 16-bit and 32-bit fixed point, 'neginv' macro is
&gt; now more portable and faster. The rest is in the code comments.

I don't mind having patches as attachment, but this makes it hard to
review and comment on them. Especially when it comes to stuff like
coding style (since I have no ideas about the rest).

+       t1[0] = t1[1] = t1[2] = t1[3] =
+               (FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE-1);

Should be like this: (FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);

Also do you need the (FIXED_A) cast?

+       for (hop = 0; hop &lt; 40; hop += 8) {
+               t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed4[hop];

Same here. There has to be a space after every case.

+               t1[i]  = (FIXED_A)1 &lt;&lt; (SBC_COS_TABLE_FIXED4_SCALE-1-SCALE_OUT_BITS);

And between every operation there has to be a space: SCALE - 1 - SCALE.
In this case I would actually put the - 1 at the end, but that is pure
cosmetics and not a coding style violation.

Please fix all of these. There at least 8 or so.

+#define neginv(x) ((-2 &gt;&gt; 1 == -1) ? \
+                ((((int32_t)(x)) &gt;&gt; 31) ^ (int32_t)(x)) : \
+                ((x &gt;= 0) ? (x) : -(x)-1))

Space after cast. Space before and after operator.

+#ifdef SBC_HIGH_PRECISION
+# define FIXED_A int64_t /* data type for fixed point accumulator */
+# define FIXED_T int32_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 16
+#else
+# define FIXED_A int32_t /* data type for fixed point accumulator */
+# define FIXED_T int16_t /* data type for fixed point constants */
+# define SBC_FIXED8_EXTRA_BITS 0
+#endif

No space between # and define. I know that this is meant to improve
readability, but I don't see it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223082025</emailId><senderName></senderName><senderEmail>jaska.uimonen@nokia.com</senderEmail><timestampReceived>2008-12-23 08:20:25-0400</timestampReceived><subject>RE: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

Hi Guys,

As Siarhei said, we had a talk last week about 
The optimizations to the code. 

I added the modifications to the code, which reduce 
The amount of operations quite a lot. The problem 
With this modification is that it also reduces the 
Readability of the code. 

So because of the redundancy in the cosine transform 
it is possible to reduce the number of variables 
and operations in the preceding filtering. 
This is very hard to explain with comments in the code 
(so you would write something like "here should be t[12], but 
The table goes only to 8 because of redundancy in the following 
Cosine transform). To really make the stuff 
Understandable one should write some small 
Wikipage or extensive comments to the code. 

So this is the path the previous code also took, but 
At some point there was a mistake. I really don't still 
Get how the anamatrix stuff was calculated, but as 
You see it takes time to reverse engineer :) 

But I suggest me and Siarhei clean the code internally 
And try really hard to follow the conventions. It starts 
To get little bit messy, because we both have many 
Versions of the code.

Br,
Jaska



&gt;-----Original Message-----
&gt;From: ext Marcel Holtmann [mailto:marcel@holtmann.org] 
&gt;Sent: 23 December, 2008 03:00
&gt;To: Siamashka Siarhei (Nokia-D/Helsinki)
&gt;Cc: ext Brad Midgley; Uimonen Jaska (Nokia-D/Helsinki); 
&gt;linux-bluetooth@vger.kernel.org
&gt;Subject: Re: [RFC/PATCH] sbc: new filtering function for 8 
&gt;band fixed point encoding
&gt;
&gt;Hi Siarhei,
&gt;
&gt;&gt; &gt; We had a talk with Jaska Uimonen here, and now I'm kind of 
&gt;delegated 
&gt;&gt; &gt; to finish the work on this filtering function for SBC encoder 
&gt;&gt; &gt; (including the final addition of ARM assembly optimizations).  He 
&gt;&gt; &gt; provided me with his last variant of code, which contains 
&gt;some more 
&gt;&gt; &gt; optimizations to reduce the number of operations and also loops 
&gt;&gt; &gt; unrolling. I will add his changes to the patch on next iteration.
&gt;&gt; &gt;
&gt;&gt; &gt; Now the question is how to best integrate a fixed 
&gt;filtering function 
&gt;&gt; &gt; to git repository? If I just continue adding changes to 
&gt;the patch in 
&gt;&gt; &gt; order to make it a faster, it will be also not so obvious 
&gt;to see how 
&gt;&gt; &gt; we got to these code transformations just from the commit log.
&gt;&gt; 
&gt;&gt; Next iteration done.  Added support for 4 subbands, number of 
&gt;&gt; arithmetic operations reduced (but without loop unrolling for better 
&gt;&gt; code readability), precision improved for both 16-bit and 
&gt;32-bit fixed 
&gt;&gt; point, 'neginv' macro is now more portable and faster. The 
&gt;rest is in the code comments.
&gt;
&gt;I don't mind having patches as attachment, but this makes it 
&gt;hard to review and comment on them. Especially when it comes 
&gt;to stuff like coding style (since I have no ideas about the rest).
&gt;
&gt;+       t1[0] = t1[1] = t1[2] = t1[3] =
&gt;+               (FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE-1);
&gt;
&gt;Should be like this: (FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);
&gt;
&gt;Also do you need the (FIXED_A) cast?
&gt;
&gt;+       for (hop = 0; hop &lt; 40; hop += 8) {
&gt;+               t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed4[hop];
&gt;
&gt;Same here. There has to be a space after every case.
&gt;
&gt;+               t1[i]  = (FIXED_A)1 &lt;&lt; 
&gt;+ (SBC_COS_TABLE_FIXED4_SCALE-1-SCALE_OUT_BITS);
&gt;
&gt;And between every operation there has to be a space: SCALE - 1 - SCALE.
&gt;In this case I would actually put the - 1 at the end, but that 
&gt;is pure cosmetics and not a coding style violation.
&gt;
&gt;Please fix all of these. There at least 8 or so.
&gt;
&gt;+#define neginv(x) ((-2 &gt;&gt; 1 == -1) ? \
&gt;+                ((((int32_t)(x)) &gt;&gt; 31) ^ (int32_t)(x)) : \
&gt;+                ((x &gt;= 0) ? (x) : -(x)-1))
&gt;
&gt;Space after cast. Space before and after operator.
&gt;
&gt;+#ifdef SBC_HIGH_PRECISION
&gt;+# define FIXED_A int64_t /* data type for fixed point 
&gt;accumulator */ # 
&gt;+define FIXED_T int32_t /* data type for fixed point constants */ # 
&gt;+define SBC_FIXED8_EXTRA_BITS 16 #else # define FIXED_A 
&gt;int32_t /* data 
&gt;+type for fixed point accumulator */ # define FIXED_T int16_t /* data 
&gt;+type for fixed point constants */ # define SBC_FIXED8_EXTRA_BITS 0 
&gt;+#endif
&gt;
&gt;No space between # and define. I know that this is meant to 
&gt;improve readability, but I don't see it.
&gt;
&gt;Regards
&gt;
&gt;Marcel
&gt;
&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223104514</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-23 10:45:14-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Tuesday 23 December 2008 03:00:15 ext Marcel Holtmann wrote:
&gt; Hi Siarhei,
&gt;
&gt; &gt; &gt; We had a talk with Jaska Uimonen here, and now I'm kind of delegated to
&gt; &gt; &gt; finish the work on this filtering function for SBC encoder (including
&gt; &gt; &gt; the final addition of ARM assembly optimizations).  He provided me with
&gt; &gt; &gt; his last variant of code, which contains some more optimizations to
&gt; &gt; &gt; reduce the number of operations and also loops unrolling. I will add
&gt; &gt; &gt; his changes to the patch on next iteration.
&gt; &gt; &gt;
&gt; &gt; &gt; Now the question is how to best integrate a fixed filtering function to
&gt; &gt; &gt; git repository? If I just continue adding changes to the patch in order
&gt; &gt; &gt; to make it a faster, it will be also not so obvious to see how we got
&gt; &gt; &gt; to these code transformations just from the commit log.
&gt; &gt;
&gt; &gt; Next iteration done.  Added support for 4 subbands, number of arithmetic
&gt; &gt; operations reduced (but without loop unrolling for better code
&gt; &gt; readability), precision improved for both 16-bit and 32-bit fixed point,
&gt; &gt; 'neginv' macro is now more portable and faster. The rest is in the code
&gt; &gt; comments.
&gt;
&gt; I don't mind having patches as attachment, but this makes it hard to
&gt; review and comment on them.

I thought that as long as the attachments are plain text and 'suggest
automatic display' property is set, there should not be much problems
reviewing them.

I'm sorry for my incompetence in this part, but what do you recommend for
posting patches? A link to some guide is sufficient.

Well, it is good to always learn some new things.

&gt; Especially when it comes to stuff like 
&gt; coding style (since I have no ideas about the rest).
&gt;
&gt; +       t1[0] = t1[1] = t1[2] = t1[3] =
&gt; +               (FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE-1);
&gt;
&gt; Should be like this: (FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);

Do you have a reference to the coding style standard guide? This particular
requirement for casts and a space seems quite unusual and I have never seen
it before.

&gt; Also do you need the (FIXED_A) cast?

Yes, it's good to have it for better portability. We need to make sure that
this bit is never shifted outside of the range of int type (constants have int
type by default). FIXED_A type can be 64-bit for high precision enabled build.
Even if SBC_FIXED8_EXTRA_BITS constant is currently set so that there is no
overflow, this kind of precaution is better to have in order not to have any
kind of unexpected nasty effect when experimenting with tuning various shift
values.

&gt;
&gt; +       for (hop = 0; hop &lt; 40; hop += 8) {
&gt; +               t1[0] +=  (FIXED_A)in[hop] * _sbc_proto_fixed4[hop];
&gt;
&gt; Same here. There has to be a space after every case.
&gt;
&gt; +               t1[i]  = (FIXED_A)1 &lt;&lt;
&gt; (SBC_COS_TABLE_FIXED4_SCALE-1-SCALE_OUT_BITS);
&gt;
&gt; And between every operation there has to be a space: SCALE - 1 - SCALE.
&gt; In this case I would actually put the - 1 at the end, but that is pure
&gt; cosmetics and not a coding style violation.

This (SBC_COS_TABLE_FIXED4_SCALE-1-SCALE_OUT_BITS) expression can be
interpreted as ((SBC_COS_TABLE_FIXED4_SCALE - 1) - SCALE_OUT_BITS).
Putting -1 at the end is kind of obfuscation.

&gt; Please fix all of these. There at least 8 or so.
&gt;
&gt; +#define neginv(x) ((-2 &gt;&gt; 1 == -1) ? \
&gt; +                ((((int32_t)(x)) &gt;&gt; 31) ^ (int32_t)(x)) : \
&gt; +                ((x &gt;= 0) ? (x) : -(x)-1))
&gt;
&gt; Space after cast. Space before and after operator.
&gt;
&gt; +#ifdef SBC_HIGH_PRECISION
&gt; +# define FIXED_A int64_t /* data type for fixed point accumulator */
&gt; +# define FIXED_T int32_t /* data type for fixed point constants */
&gt; +# define SBC_FIXED8_EXTRA_BITS 16
&gt; +#else
&gt; +# define FIXED_A int32_t /* data type for fixed point accumulator */
&gt; +# define FIXED_T int16_t /* data type for fixed point constants */
&gt; +# define SBC_FIXED8_EXTRA_BITS 0
&gt; +#endif
&gt;
&gt; No space between # and define. I know that this is meant to improve
&gt; readability, but I don't see it.

OK, I'll try to fix these. Getting rid of some spaces was done to try fitting 
some lines into 80 characters (that's also not always achieved yet).

Right now I'm also doublechecking correctness of the code to ensure that there
are no overflows of other problems related to audio quality.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223111414</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-23 11:14:14-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Tuesday 23 December 2008 10:20:25 Uimonen Jaska (Nokia-D/Helsinki) wrote:
&gt; Hi Guys,
&gt;
&gt; As Siarhei said, we had a talk last week about
&gt; The optimizations to the code.
&gt;
&gt; I added the modifications to the code, which reduce
&gt; The amount of operations quite a lot.

Yes, thank you very much for doing this part of work, I included these
modifications into the last revision of my patch. And of course, your
initial patch to fix the SBC quality issues was invaluable. I hope that you
will not be forgotten to be credited properly when the filtering functions
are complete and committed.

&gt; The problem 
&gt; With this modification is that it also reduces the 
&gt; Readability of the code.

Yes, that's one of the reasons why I'm trying to post different revisions
here, so all the history of modifications can be tracked if somebody is
interested.

&gt; So because of the redundancy in the cosine transform
&gt; it is possible to reduce the number of variables
&gt; and operations in the preceding filtering.
&gt; This is very hard to explain with comments in the code
&gt; (so you would write something like "here should be t[12], but
&gt; The table goes only to 8 because of redundancy in the following
&gt; Cosine transform). To really make the stuff
&gt; Understandable one should write some small
&gt; Wikipage or extensive comments to the code.
&gt;
&gt; So this is the path the previous code also took, but
&gt; At some point there was a mistake. I really don't still
&gt; Get how the anamatrix stuff was calculated, but as
&gt; You see it takes time to reverse engineer :)
&gt;
&gt; But I suggest me and Siarhei clean the code internally
&gt; And try really hard to follow the conventions. It starts
&gt; To get little bit messy, because we both have many
&gt; Versions of the code.

I think that my last revision of patch is more or less complete and needs
only minor tweaks and cosmetic changes. It's not too obfuscated yet, and
the logic still can be seen (hopefully).

I intentionally decided not to include loops unrolling part as it actually
makes code harder to optimize further (for example add SIMD optimizations).
The idea is to have some kind of "reference" implementation, which is
reasonably compact and simple and also configurable for having high
precision mode (very useful for testing purposes).

Implementations, optimized for various platforms can be derived from it:
1. Platforms where multiplications are expensive and you want to avoid as many
of them as possible (reintroduce 'anamatrix' table, have shifts and additions
instead of multiplications, etc)
2. Platforms where the total number of operations is desired to be kept at
minimum (tables need to have unused and duplicate elements removed in
order to reduce the number of operations for loading constants)
3. Platforms where SIMD optimizations are possible (the code and tables should
have a regular structure, suitable for vectorizing, some table elements may
have to be be reordered)

As one can see, these platform specific optimizations have somewhat
contradictory requirements. I tried to arrange the code in such a way, that
any of such further optimizations can be easily introduced based on it.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223114808</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 11:48:08-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi Siarhei,

&gt; &gt; &gt; &gt; We had a talk with Jaska Uimonen here, and now I'm kind of delegated to
&gt; &gt; &gt; &gt; finish the work on this filtering function for SBC encoder (including
&gt; &gt; &gt; &gt; the final addition of ARM assembly optimizations).  He provided me with
&gt; &gt; &gt; &gt; his last variant of code, which contains some more optimizations to
&gt; &gt; &gt; &gt; reduce the number of operations and also loops unrolling. I will add
&gt; &gt; &gt; &gt; his changes to the patch on next iteration.
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; Now the question is how to best integrate a fixed filtering function to
&gt; &gt; &gt; &gt; git repository? If I just continue adding changes to the patch in order
&gt; &gt; &gt; &gt; to make it a faster, it will be also not so obvious to see how we got
&gt; &gt; &gt; &gt; to these code transformations just from the commit log.
&gt; &gt; &gt;
&gt; &gt; &gt; Next iteration done.  Added support for 4 subbands, number of arithmetic
&gt; &gt; &gt; operations reduced (but without loop unrolling for better code
&gt; &gt; &gt; readability), precision improved for both 16-bit and 32-bit fixed point,
&gt; &gt; &gt; 'neginv' macro is now more portable and faster. The rest is in the code
&gt; &gt; &gt; comments.
&gt; &gt;
&gt; &gt; I don't mind having patches as attachment, but this makes it hard to
&gt; &gt; review and comment on them.
&gt; 
&gt; I thought that as long as the attachments are plain text and 'suggest
&gt; automatic display' property is set, there should not be much problems
&gt; reviewing them.
&gt; 
&gt; I'm sorry for my incompetence in this part, but what do you recommend for
&gt; posting patches? A link to some guide is sufficient.
&gt; 
&gt; Well, it is good to always learn some new things.

the kernel contains good documentation about how to send inline patches.
However as I said, I don't mind that much since I can easily apply them,
but for commenting on patches inline is easier.

&gt; &gt; Especially when it comes to stuff like 
&gt; &gt; coding style (since I have no ideas about the rest).
&gt; &gt;
&gt; &gt; +       t1[0] = t1[1] = t1[2] = t1[3] =
&gt; &gt; +               (FIXED_A)1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE-1);
&gt; &gt;
&gt; &gt; Should be like this: (FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);
&gt; 
&gt; Do you have a reference to the coding style standard guide? This
&gt; particular
&gt; requirement for casts and a space seems quite unusual and I have never
&gt; seen
&gt; it before.

It is the kernel coding style. Check Greg KH's paper from OLS some years
ago.

&gt; OK, I'll try to fix these. Getting rid of some spaces was done to try fitting 
&gt; some lines into 80 characters (that's also not always achieved yet).

This depends on the code. In normal code you could use continue and
break a lot, but within SBC this might not generate good binaries.

Don't try to omit whitespaces. Just don't.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229104622</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-29 10:46:22-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point encoding</subject><body>

On Tuesday 23 December 2008 12:45:14 ext Siarhei Siamashka wrote:

[coding style problems description skipped]
 
&gt; OK, I'll try to fix these. 

&gt; Right now I'm also doublechecking correctness of the code to ensure that
&gt; there are no overflows of other problems related to audio quality.

Here is (hopefully) the final revision of patch. I tested it with all the possible files
that I could find or generate myself and it seems to work fine in all cases.

The code was reverted to use fabs macro. After all, looks like it is the right
way to handle scale factors and adheres to the specification. The weird
effects on sound quality related to the use of fabs and the modified macro
which was tried as a replacement have been apparently the side effects of
other bugs.

Also I have to admit that the change from
http://marc.info/?l=linux-bluetooth&amp;m=122946440507726&amp;w=2
is not needed and the original patch was in fact correct. The output of
quantizer is strictly a positive number (unless there are bugs or overflows).
This was also changed back.

Rounding for the values in the final analysis function output was removed
(we already keep a lot of extra bits in output, so it does not matter for
precision). Also the change of SCALE_OUT_BITS to 15 has a nice feature
that the shifting of output values is not needed at all for 16-bit version
(and naturally rounding is not needed here too), this should be good for
performance.


Best regards,
Siarhei Siamashka

["0002-New-SBC-analysis-filter-function-to-replace-current.patch" (text/x-diff)]

From a148f08f98a357c37f2f02efe477948e0723345e Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Sun, 28 Dec 2008 03:22:59 +0200
Subject: [PATCH] New SBC analysis filter function to replace current broken code

This code is heavily based on the patch submitted by Jaska Uimonen.
Additional changes include preserving extra bits in the output of
filter function for better precision, support for both 16-bit and
32-bit fixed point implementation. Sign of some table values was
changed in order to preserve a regular code structure and have
multiply-accumulate oparations only. No additional optimizations
were applied as this code is intended to be some kind of "reference"
implementation. Platform specific optimizations may require
different tricks and can be branched off from this implementation.
Some extra information about this code can be found in linux-bluetooth
mailing list archive for December 2008.

---
 sbc/sbc.c        |  306 +++++++++++++++++++-----------------------------------
 sbc/sbc_math.h   |   14 +--
 sbc/sbc_tables.h |  247 +++++++++++++++++++++++++++++++++++++------
 3 files changed, 323 insertions(+), 244 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index d3dcd9a..ce52e1e 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -40,6 +40,7 @@
 #include &lt;string.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;sys/types.h&gt;
+#include &lt;limits.h&gt;
 
 #include "sbc_math.h"
 #include "sbc_tables.h"
@@ -93,7 +94,7 @@ struct sbc_decoder_state {
 struct sbc_encoder_state {
 	int subbands;
 	int position[2];
-	int32_t X[2][160];
+	int16_t X[2][160];
 };
 
 /*
@@ -656,75 +657,47 @@ static void sbc_encoder_init(struct sbc_encoder_state *state,
 	state-&gt;position[0] = state-&gt;position[1] = 9 * frame-&gt;subbands;
 }
 
-static inline void _sbc_analyze_four(const int32_t *in, int32_t *out)
+static inline void _sbc_analyze_four(const int16_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[5];
-
-	t[0] = SCALE4_STAGE1( /* Q8 */
-		MULA(_sbc_proto_4[0], in[8] - in[32], /* Q18 */
-		MUL( _sbc_proto_4[1], in[16] - in[24])));
-
-	t[1] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[2], in[1],
-		MULA(_sbc_proto_4[3], in[9],
-		MULA(_sbc_proto_4[4], in[17],
-		MULA(_sbc_proto_4[5], in[25],
-		MUL( _sbc_proto_4[6], in[33]))))));
-
-	t[2] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[7], in[2],
-		MULA(_sbc_proto_4[8], in[10],
-		MULA(_sbc_proto_4[9], in[18],
-		MULA(_sbc_proto_4[10], in[26],
-		MUL( _sbc_proto_4[11], in[34]))))));
-
-	t[3] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[12], in[3],
-		MULA(_sbc_proto_4[13], in[11],
-		MULA(_sbc_proto_4[14], in[19],
-		MULA(_sbc_proto_4[15], in[27],
-		MUL( _sbc_proto_4[16], in[35]))))));
-
-	t[4] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[17], in[4] + in[36],
-		MULA(_sbc_proto_4[18], in[12] + in[28],
-		MUL( _sbc_proto_4[19], in[20]))));
-
-	t[5] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[16], in[5],
-		MULA(_sbc_proto_4[15], in[13],
-		MULA(_sbc_proto_4[14], in[21],
-		MULA(_sbc_proto_4[13], in[29],
-		MUL( _sbc_proto_4[12], in[37]))))));
-
-	/* don't compute t[6]... this term always multiplies
-	 * with cos(pi/2) = 0 */
-
-	t[7] = SCALE4_STAGE1(
-		MULA(_sbc_proto_4[6], in[7],
-		MULA(_sbc_proto_4[5], in[15],
-		MULA(_sbc_proto_4[4], in[23],
-		MULA(_sbc_proto_4[3], in[31],
-		MUL( _sbc_proto_4[2], in[39]))))));
-
-	s[0] = MUL( _anamatrix4[0], t[0] + t[4]);
-	s[1] = MUL( _anamatrix4[2], t[2]);
-	s[2] = MULA(_anamatrix4[1], t[1] + t[3],
-		MUL(_anamatrix4[3], t[5]));
-	s[3] = MULA(_anamatrix4[3], t[1] + t[3],
-		MUL(_anamatrix4[1], -t[5] + t[7]));
-	s[4] = MUL( _anamatrix4[3], t[7]);
-
-	out[0] = SCALE4_STAGE2( s[0] + s[1] + s[2] + s[4]); /* Q0 */
-	out[1] = SCALE4_STAGE2(-s[0] + s[1] + s[3]);
-	out[2] = SCALE4_STAGE2(-s[0] + s[1] - s[3]);
-	out[3] = SCALE4_STAGE2( s[0] + s[1] - s[2] - s[4]);
+	FIXED_A t1[4];
+	FIXED_T t2[4];
+	int i = 0, hop = 0;
+
+	/* rounding coefficient */
+	t1[0] = t1[1] = t1[2] = t1[3] =
+		(FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED4_SCALE - 1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 40; hop += 8) {
+		t1[0] += (FIXED_A) in[hop] * _sbc_proto_fixed4[hop];
+		t1[1] += (FIXED_A) in[hop + 1] * _sbc_proto_fixed4[hop + 1];
+		t1[2] += (FIXED_A) in[hop + 2] * _sbc_proto_fixed4[hop + 2];
+		t1[1] += (FIXED_A) in[hop + 3] * _sbc_proto_fixed4[hop + 3];
+		t1[0] += (FIXED_A) in[hop + 4] * _sbc_proto_fixed4[hop + 4];
+		t1[3] += (FIXED_A) in[hop + 5] * _sbc_proto_fixed4[hop + 5];
+		t1[3] += (FIXED_A) in[hop + 7] * _sbc_proto_fixed4[hop + 7];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED4_SCALE;
+
+	/* do the cos transform */
+	for (i = 0, hop = 0; i &lt; 4; hop += 8, i++) {
+		out[i] = ((FIXED_A) t2[0] * cos_table_fixed_4[0 + hop] +
+			  (FIXED_A) t2[1] * cos_table_fixed_4[1 + hop] +
+			  (FIXED_A) t2[2] * cos_table_fixed_4[2 + hop] +
+			  (FIXED_A) t2[3] * cos_table_fixed_4[5 + hop]) &gt;&gt;
+			(SBC_COS_TABLE_FIXED4_SCALE - SCALE_OUT_BITS);
+	}
 }
 
 static inline void sbc_analyze_four(struct sbc_encoder_state *state,
 				struct sbc_frame *frame, int ch, int blk)
 {
-	int32_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
+	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
 	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 4];
 
 	/* Input 4 Audio Samples */
@@ -740,133 +713,64 @@ static inline void sbc_analyze_four(struct sbc_encoder_state \
*state,  state-&gt;position[ch] = 36;
 }
 
-static inline void _sbc_analyze_eight(const int32_t *in, int32_t *out)
+static inline void _sbc_analyze_eight(const int16_t *in, int32_t *out)
 {
-	sbc_fixed_t t[8], s[8];
-
-	t[0] = SCALE8_STAGE1( /* Q10 */
-		MULA(_sbc_proto_8[0], (in[16] - in[64]), /* Q18 = Q18 * Q0 */
-		MULA(_sbc_proto_8[1], (in[32] - in[48]),
-		MULA(_sbc_proto_8[2], in[4],
-		MULA(_sbc_proto_8[3], in[20],
-		MULA(_sbc_proto_8[4], in[36],
-		MUL( _sbc_proto_8[5], in[52])))))));
-
-	t[1] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[6], in[2],
-		MULA(_sbc_proto_8[7], in[18],
-		MULA(_sbc_proto_8[8], in[34],
-		MULA(_sbc_proto_8[9], in[50],
-		MUL(_sbc_proto_8[10], in[66]))))));
-
-	t[2] = SCALE8_STAGE1(
-		MULA(_sbc_proto_8[11], in[1],
-		MULA(_sbc_proto_8[12], in[17],
-		MULA(_sbc_proto_8[13], in[33],
-		MULA(_sbc_proto_8[14], in[49],
-		MULA(_sbc_proto_8[15], in[65],
-		MULA(_sbc_proto_8[16], in[3],
-		MULA(_sbc_proto_8[17], in[19],
-		MULA(_sbc_proto_8[18], in[35],
-		MULA(_sbc_proto_8[19], in[51],
-		MUL( _sbc_proto_8[20], in[67])))))))))));
-
-	t[3] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[21], in[5],
-		MULA( _sbc_proto_8[22], in[21],
-		MULA( _sbc_proto_8[23], in[37],
-		MULA( _sbc_proto_8[24], in[53],
-		MULA( _sbc_proto_8[25], in[69],
-		MULA(-_sbc_proto_8[15], in[15],
-		MULA(-_sbc_proto_8[14], in[31],
-		MULA(-_sbc_proto_8[13], in[47],
-		MULA(-_sbc_proto_8[12], in[63],
-		MUL( -_sbc_proto_8[11], in[79])))))))))));
-
-	t[4] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[26], in[6],
-		MULA( _sbc_proto_8[27], in[22],
-		MULA( _sbc_proto_8[28], in[38],
-		MULA( _sbc_proto_8[29], in[54],
-		MULA( _sbc_proto_8[30], in[70],
-		MULA(-_sbc_proto_8[10], in[14],
-		MULA(-_sbc_proto_8[9], in[30],
-		MULA(-_sbc_proto_8[8], in[46],
-		MULA(-_sbc_proto_8[7], in[62],
-		MUL( -_sbc_proto_8[6], in[78])))))))))));
-
-	t[5] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[31], in[7],
-		MULA( _sbc_proto_8[32], in[23],
-		MULA( _sbc_proto_8[33], in[39],
-		MULA( _sbc_proto_8[34], in[55],
-		MULA( _sbc_proto_8[35], in[71],
-		MULA(-_sbc_proto_8[20], in[13],
-		MULA(-_sbc_proto_8[19], in[29],
-		MULA(-_sbc_proto_8[18], in[45],
-		MULA(-_sbc_proto_8[17], in[61],
-		MUL( -_sbc_proto_8[16], in[77])))))))))));
-
-	t[6] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[36], (in[8] + in[72]),
-		MULA( _sbc_proto_8[37], (in[24] + in[56]),
-		MULA( _sbc_proto_8[38], in[40],
-		MULA(-_sbc_proto_8[39], in[12],
-		MULA(-_sbc_proto_8[5], in[28],
-		MULA(-_sbc_proto_8[4], in[44],
-		MULA(-_sbc_proto_8[3], in[60],
-		MUL( -_sbc_proto_8[2], in[76])))))))));
-
-	t[7] = SCALE8_STAGE1(
-		MULA( _sbc_proto_8[35], in[9],
-		MULA( _sbc_proto_8[34], in[25],
-		MULA( _sbc_proto_8[33], in[41],
-		MULA( _sbc_proto_8[32], in[57],
-		MULA( _sbc_proto_8[31], in[73],
-		MULA(-_sbc_proto_8[25], in[11],
-		MULA(-_sbc_proto_8[24], in[27],
-		MULA(-_sbc_proto_8[23], in[43],
-		MULA(-_sbc_proto_8[22], in[59],
-		MUL( -_sbc_proto_8[21], in[75])))))))))));
-
-	s[0] = MULA(  _anamatrix8[0], t[0],
-		MUL(  _anamatrix8[1], t[6]));
-	s[1] = MUL(   _anamatrix8[7], t[1]);
-	s[2] = MULA(  _anamatrix8[2], t[2],
-		MULA( _anamatrix8[3], t[3],
-		MULA( _anamatrix8[4], t[5],
-		MUL(  _anamatrix8[5], t[7]))));
-	s[3] = MUL(   _anamatrix8[6], t[4]);
-	s[4] = MULA(  _anamatrix8[3], t[2],
-		MULA(-_anamatrix8[5], t[3],
-		MULA(-_anamatrix8[2], t[5],
-		MUL( -_anamatrix8[4], t[7]))));
-	s[5] = MULA(  _anamatrix8[4], t[2],
-		MULA(-_anamatrix8[2], t[3],
-		MULA( _anamatrix8[5], t[5],
-		MUL(  _anamatrix8[3], t[7]))));
-	s[6] = MULA(  _anamatrix8[1], t[0],
-		MUL( -_anamatrix8[0], t[6]));
-	s[7] = MULA(  _anamatrix8[5], t[2],
-		MULA(-_anamatrix8[4], t[3],
-		MULA( _anamatrix8[3], t[5],
-		MUL( -_anamatrix8[2], t[7]))));
-
-	out[0] = SCALE8_STAGE2( s[0] + s[1] + s[2] + s[3]);
-	out[1] = SCALE8_STAGE2( s[1] - s[3] + s[4] + s[6]);
-	out[2] = SCALE8_STAGE2( s[1] - s[3] + s[5] - s[6]);
-	out[3] = SCALE8_STAGE2(-s[0] + s[1] + s[3] + s[7]);
-	out[4] = SCALE8_STAGE2(-s[0] + s[1] + s[3] - s[7]);
-	out[5] = SCALE8_STAGE2( s[1] - s[3] - s[5] - s[6]);
-	out[6] = SCALE8_STAGE2( s[1] - s[3] - s[4] + s[6]);
-	out[7] = SCALE8_STAGE2( s[0] + s[1] - s[2] + s[3]);
+	FIXED_A t1[8];
+	FIXED_T t2[8];
+	int i, hop;
+
+	/* rounding coefficient */
+	t1[0] = t1[1] = t1[2] = t1[3] = t1[4] = t1[5] = t1[6] = t1[7] =
+		(FIXED_A) 1 &lt;&lt; (SBC_PROTO_FIXED8_SCALE-1);
+
+	/* low pass polyphase filter */
+	for (hop = 0; hop &lt; 80; hop += 16) {
+		t1[0] += (FIXED_A) in[hop] * _sbc_proto_fixed8[hop];
+		t1[1] += (FIXED_A) in[hop + 1] * _sbc_proto_fixed8[hop + 1];
+		t1[2] += (FIXED_A) in[hop + 2] * _sbc_proto_fixed8[hop + 2];
+		t1[3] += (FIXED_A) in[hop + 3] * _sbc_proto_fixed8[hop + 3];
+		t1[4] += (FIXED_A) in[hop + 4] * _sbc_proto_fixed8[hop + 4];
+		t1[3] += (FIXED_A) in[hop + 5] * _sbc_proto_fixed8[hop + 5];
+		t1[2] += (FIXED_A) in[hop + 6] * _sbc_proto_fixed8[hop + 6];
+		t1[1] += (FIXED_A) in[hop + 7] * _sbc_proto_fixed8[hop + 7];
+		t1[0] += (FIXED_A) in[hop + 8] * _sbc_proto_fixed8[hop + 8];
+		t1[5] += (FIXED_A) in[hop + 9] * _sbc_proto_fixed8[hop + 9];
+		t1[6] += (FIXED_A) in[hop + 10] * _sbc_proto_fixed8[hop + 10];
+		t1[7] += (FIXED_A) in[hop + 11] * _sbc_proto_fixed8[hop + 11];
+		t1[7] += (FIXED_A) in[hop + 13] * _sbc_proto_fixed8[hop + 13];
+		t1[6] += (FIXED_A) in[hop + 14] * _sbc_proto_fixed8[hop + 14];
+		t1[5] += (FIXED_A) in[hop + 15] * _sbc_proto_fixed8[hop + 15];
+	}
+
+	/* scaling */
+	t2[0] = t1[0] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[1] = t1[1] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[2] = t1[2] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[3] = t1[3] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[4] = t1[4] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[5] = t1[5] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[6] = t1[6] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+	t2[7] = t1[7] &gt;&gt; SBC_PROTO_FIXED8_SCALE;
+
+	/* do the cos transform */
+	for (i = 0, hop = 0; i &lt; 8; hop += 16, i++) {
+		out[i] = ((FIXED_A) t2[0] * cos_table_fixed_8[0 + hop] +
+			  (FIXED_A) t2[1] * cos_table_fixed_8[1 + hop] +
+			  (FIXED_A) t2[2] * cos_table_fixed_8[2 + hop] +
+			  (FIXED_A) t2[3] * cos_table_fixed_8[3 + hop] +
+			  (FIXED_A) t2[4] * cos_table_fixed_8[4 + hop] +
+			  (FIXED_A) t2[5] * cos_table_fixed_8[9 + hop] +
+			  (FIXED_A) t2[6] * cos_table_fixed_8[10 + hop] +
+			  (FIXED_A) t2[7] * cos_table_fixed_8[11 + hop]) &gt;&gt;
+			(SBC_COS_TABLE_FIXED8_SCALE - SCALE_OUT_BITS);
+	}
 }
 
 static inline void sbc_analyze_eight(struct sbc_encoder_state *state,
 					struct sbc_frame *frame, int ch,
 					int blk)
 {
-	int32_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
+	int16_t *x = &amp;state-&gt;X[ch][state-&gt;position[ch]];
 	int16_t *pcm = &amp;frame-&gt;pcm_sample[ch][blk * 8];
 
 	/* Input 8 Audio Samples */
@@ -1004,7 +908,7 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 		for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
 			frame-&gt;scale_factor[ch][sb] = 0;
-			scalefactor[ch][sb] = 2;
+			scalefactor[ch][sb] = 2 &lt;&lt; SCALE_OUT_BITS;
 			for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
 				while (scalefactor[ch][sb] &lt; fabs(frame-&gt;sb_sample_f[blk][ch][sb])) {
 					frame-&gt;scale_factor[ch][sb]++;
@@ -1026,18 +930,18 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  
 		for (sb = 0; sb &lt; frame-&gt;subbands - 1; sb++) {
 			scale_factor_j[0] = 0;
-			scalefactor_j[0] = 2;
+			scalefactor_j[0] = 2 &lt;&lt; SCALE_OUT_BITS;
 			scale_factor_j[1] = 0;
-			scalefactor_j[1] = 2;
+			scalefactor_j[1] = 2 &lt;&lt; SCALE_OUT_BITS;
 
 			for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
 				/* Calculate joint stereo signal */
 				sb_sample_j[blk][0] =
-					(frame-&gt;sb_sample_f[blk][0][sb] +
-						frame-&gt;sb_sample_f[blk][1][sb]) &gt;&gt; 1;
+					ASR(frame-&gt;sb_sample_f[blk][0][sb], 1) +
+					ASR(frame-&gt;sb_sample_f[blk][1][sb], 1);
 				sb_sample_j[blk][1] =
-					(frame-&gt;sb_sample_f[blk][0][sb] -
-						frame-&gt;sb_sample_f[blk][1][sb]) &gt;&gt; 1;
+					ASR(frame-&gt;sb_sample_f[blk][0][sb], 1) -
+					ASR(frame-&gt;sb_sample_f[blk][1][sb], 1);
 
 				/* calculate scale_factor_j and scalefactor_j for joint case */
 				while (scalefactor_j[0] &lt; fabs(sb_sample_j[blk][0])) {
@@ -1099,13 +1003,19 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame \
*frame, size_t len)  for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
 		for (ch = 0; ch &lt; frame-&gt;channels; ch++) {
 			for (sb = 0; sb &lt; frame-&gt;subbands; sb++) {
-				if (levels[ch][sb] &gt; 0) {
-					audio_sample =
-						(uint16_t) (((((int64_t)frame-&gt;sb_sample_f[blk][ch][sb]*levels[ch][sb]) &gt;&gt;
-									(frame-&gt;scale_factor[ch][sb] + 1)) +
-								levels[ch][sb]) &gt;&gt; 1);
-					PUT_BITS(audio_sample &amp; levels[ch][sb], bits[ch][sb]);
-				}
+
+				if (bits[ch][sb] == 0)
+					continue;
+
+				audio_sample = ((uint64_t) levels[ch][sb] *
+					(((uint32_t) 1 &lt;&lt;
+					(frame-&gt;scale_factor[ch][sb] +
+					SCALE_OUT_BITS + 1)) +
+					frame-&gt;sb_sample_f[blk][ch][sb])) &gt;&gt;
+						(frame-&gt;scale_factor[ch][sb] +
+						SCALE_OUT_BITS + 2);
+
+				PUT_BITS(audio_sample, bits[ch][sb]);
 			}
 		}
 	}
diff --git a/sbc/sbc_math.h b/sbc/sbc_math.h
index b3d87a6..1503d75 100644
--- a/sbc/sbc_math.h
+++ b/sbc/sbc_math.h
@@ -29,31 +29,21 @@
 #define ASR(val, bits) ((-2 &gt;&gt; 1 == -1) ? \
 		 ((int32_t)(val)) &gt;&gt; (bits) : ((int32_t) (val)) / (1 &lt;&lt; (bits)))
 
-#define SCALE_PROTO4_TBL	15
-#define SCALE_ANA4_TBL		17
-#define SCALE_PROTO8_TBL	16
-#define SCALE_ANA8_TBL		17
+#define SCALE_OUT_BITS 15
+
 #define SCALE_SPROTO4_TBL	12
 #define SCALE_SPROTO8_TBL	14
 #define SCALE_NPROTO4_TBL	11
 #define SCALE_NPROTO8_TBL	11
-#define SCALE4_STAGE1_BITS	15
-#define SCALE4_STAGE2_BITS	16
 #define SCALE4_STAGED1_BITS	15
 #define SCALE4_STAGED2_BITS	16
-#define SCALE8_STAGE1_BITS	15
-#define SCALE8_STAGE2_BITS	15
 #define SCALE8_STAGED1_BITS	15
 #define SCALE8_STAGED2_BITS	16
 
 typedef int32_t sbc_fixed_t;
 
-#define SCALE4_STAGE1(src)  ASR(src, SCALE4_STAGE1_BITS)
-#define SCALE4_STAGE2(src)  ASR(src, SCALE4_STAGE2_BITS)
 #define SCALE4_STAGED1(src) ASR(src, SCALE4_STAGED1_BITS)
 #define SCALE4_STAGED2(src) ASR(src, SCALE4_STAGED2_BITS)
-#define SCALE8_STAGE1(src)  ASR(src, SCALE8_STAGE1_BITS)
-#define SCALE8_STAGE2(src)  ASR(src, SCALE8_STAGE2_BITS)
 #define SCALE8_STAGED1(src) ASR(src, SCALE8_STAGED1_BITS)
 #define SCALE8_STAGED2(src) ASR(src, SCALE8_STAGED2_BITS)
 
diff --git a/sbc/sbc_tables.h b/sbc/sbc_tables.h
index f5daaa7..8df8c1f 100644
--- a/sbc/sbc_tables.h
+++ b/sbc/sbc_tables.h
@@ -40,40 +40,11 @@ static const int sbc_offset8[4][8] = {
 };
 
 
-#define SP4(val) (((int32_t)(val))/17658) /* Used to be #define SP4(val) ASR(val, \
                SCALE_PROTO4_TBL) but causes wrong gain */
-#define SA4(val) ASR(val, SCALE_ANA4_TBL)
-#define SP8(val) (((int32_t)(val))/57740) /* Used to be #define SP8(val) ASR(val, \
                SCALE_PROTO8_TBL) but causes wrong gain */
-#define SA8(val) ASR(val, SCALE_ANA8_TBL)
 #define SS4(val) ASR(val, SCALE_SPROTO4_TBL)
 #define SS8(val) ASR(val, SCALE_SPROTO8_TBL)
 #define SN4(val) ASR(val, SCALE_NPROTO4_TBL)
 #define SN8(val) ASR(val, SCALE_NPROTO8_TBL)
 
-static const int32_t _sbc_proto_4[20] = {
-	SP4(0x02cb3e8c), SP4(0x22b63dc0), SP4(0x002329cc), SP4(0x053b7548),
-	SP4(0x31eab940), SP4(0xec1f5e60), SP4(0xff3773a8), SP4(0x0061c5a7),
-	SP4(0x07646680), SP4(0x3f239480), SP4(0xf89f23a8), SP4(0x007a4737),
-	SP4(0x00b32807), SP4(0x083ddc80), SP4(0x4825e480), SP4(0x0191e578),
-	SP4(0x00ff11ca), SP4(0x00fb7991), SP4(0x069fdc58), SP4(0x4b584000)
-};
-
-static const int32_t _anamatrix4[4] = {
-	SA4(0x2d413cc0), SA4(0x3b20d780), SA4(0x40000000), SA4(0x187de2a0)
-};
-
-static const int32_t _sbc_proto_8[40] = {
-	SP8(0x02e5cd20), SP8(0x22d0c200), SP8(0x006bfe27), SP8(0x07808930),
-	SP8(0x3f1c8800), SP8(0xf8810d70), SP8(0x002cfdc6), SP8(0x055acf28),
-	SP8(0x31f566c0), SP8(0xebfe57e0), SP8(0xff27c437), SP8(0x001485cc),
-	SP8(0x041c6e58), SP8(0x2a7cfa80), SP8(0xe4c4a240), SP8(0xfe359e4c),
-	SP8(0x0048b1f8), SP8(0x0686ce30), SP8(0x38eec5c0), SP8(0xf2a1b9f0),
-	SP8(0xffe8904a), SP8(0x0095698a), SP8(0x0824a480), SP8(0x443b3c00),
-	SP8(0xfd7badc8), SP8(0x00d3e2d9), SP8(0x00c183d2), SP8(0x084e1950),
-	SP8(0x4810d800), SP8(0x017f43fe), SP8(0x01056dd8), SP8(0x00e9cb9f),
-	SP8(0x07d7d090), SP8(0x4a708980), SP8(0x0488fae8), SP8(0x0113bd20),
-	SP8(0x0107b1a8), SP8(0x069fb3c0), SP8(0x4b3db200), SP8(0x00763f48)
-};
-
 static const int32_t sbc_proto_4_40m0[] = {
 	SS4(0x00000000), SS4(0xffa6982f), SS4(0xfba93848), SS4(0x0456c7b8),
 	SS4(0x005967d1), SS4(0xfffb9ac7), SS4(0xff589157), SS4(0xf9c2a8d8),
@@ -116,11 +87,6 @@ static const int32_t sbc_proto_8_80m1[] = {
 	SS8(0x0d9daee0), SS8(0xeac182c0), SS8(0xfdf1c8d4), SS8(0xfff5bd1a)
 };
 
-static const int32_t _anamatrix8[8] = {
-	SA8(0x3b20d780), SA8(0x187de2a0), SA8(0x3ec52f80), SA8(0x3536cc40),
-	SA8(0x238e7680), SA8(0x0c7c5c20), SA8(0x2d413cc0), SA8(0x40000000)
-};
-
 static const int32_t synmatrix4[8][4] = {
 	{ SN4(0x05a82798), SN4(0xfa57d868), SN4(0xfa57d868), SN4(0x05a82798) },
 	{ SN4(0x030fbc54), SN4(0xf89be510), SN4(0x07641af0), SN4(0xfcf043ac) },
@@ -166,3 +132,216 @@ static const int32_t synmatrix8[16][8] = {
 	{ SN8(0xf9592678), SN8(0x018f8b84), SN8(0x07d8a5f0), SN8(0x0471ced0),
 	  SN8(0xfb8e3130), SN8(0xf8275a10), SN8(0xfe70747c), SN8(0x06a6d988) }
 };
+
+/* Uncomment the following line to enable high precision build of SBC encoder */
+
+/* #define SBC_HIGH_PRECISION */
+
+#ifdef SBC_HIGH_PRECISION
+#define FIXED_A int64_t /* data type for fixed point accumulator */
+#define FIXED_T int32_t /* data type for fixed point constants */
+#define SBC_FIXED_EXTRA_BITS 16
+#else
+#define FIXED_A int32_t /* data type for fixed point accumulator */
+#define FIXED_T int16_t /* data type for fixed point constants */
+#define SBC_FIXED_EXTRA_BITS 0
+#endif
+
+/* A2DP specification: Section 12.8 Tables
+ *
+ * Original values are premultiplied by 2 for better precision (that is the
+ * maximum which is possible without overflows)
+ *
+ * Note: in each block of 8 numbers sign was changed for elements 2 and 7
+ * in order to compensate the same change applied to cos_table_fixed_4
+ */
+#define SBC_PROTO_FIXED4_SCALE \
+	((sizeof(FIXED_T) * CHAR_BIT - 1) - SBC_FIXED_EXTRA_BITS + 1)
+#define F(x) (FIXED_A) ((x * 2) * \
+	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+static const FIXED_T _sbc_proto_fixed4[40] = {
+	 F(0.00000000E+00),  F(5.36548976E-04),
+	-F(1.49188357E-03),  F(2.73370904E-03),
+	 F(3.83720193E-03),  F(3.89205149E-03),
+	 F(1.86581691E-03),  F(3.06012286E-03),
+
+	 F(1.09137620E-02),  F(2.04385087E-02),
+	-F(2.88757392E-02),  F(3.21939290E-02),
+	 F(2.58767811E-02),  F(6.13245186E-03),
+	-F(2.88217274E-02),  F(7.76463494E-02),
+
+	 F(1.35593274E-01),  F(1.94987841E-01),
+	-F(2.46636662E-01),  F(2.81828203E-01),
+	 F(2.94315332E-01),  F(2.81828203E-01),
+	 F(2.46636662E-01), -F(1.94987841E-01),
+
+	-F(1.35593274E-01), -F(7.76463494E-02),
+	 F(2.88217274E-02),  F(6.13245186E-03),
+	 F(2.58767811E-02),  F(3.21939290E-02),
+	 F(2.88757392E-02), -F(2.04385087E-02),
+
+	-F(1.09137620E-02), -F(3.06012286E-03),
+	-F(1.86581691E-03),  F(3.89205149E-03),
+	 F(3.83720193E-03),  F(2.73370904E-03),
+	 F(1.49188357E-03), -F(5.36548976E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(4, 8);
+ * for i = 0:3
+ * for j = 0:7 b(i+1, j+1) = cos((i + 0.5) * (j - 2) * (pi/4))
+ * endfor
+ * endfor;
+ * printf("%.10f, ", b');
+ *
+ * Note: in each block of 8 numbers sign was changed for elements 2 and 7
+ *
+ * Change of sign for element 2 allows to replace constant 1.0 (not
+ * representable in Q15 format) with -1.0 (fine with Q15).
+ * Changed sign for element 7 allows to have more similar constants
+ * and simplify subband filter function code.
+ */
+#define SBC_COS_TABLE_FIXED4_SCALE \
+	((sizeof(FIXED_T) * CHAR_BIT - 1) + SBC_FIXED_EXTRA_BITS)
+#define F(x) (FIXED_A) ((x) * \
+	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+static const FIXED_T cos_table_fixed_4[32] = {
+	 F(0.7071067812),  F(0.9238795325), -F(1.0000000000),  F(0.9238795325),
+	 F(0.7071067812),  F(0.3826834324),  F(0.0000000000),  F(0.3826834324),
+
+	-F(0.7071067812),  F(0.3826834324), -F(1.0000000000),  F(0.3826834324),
+	-F(0.7071067812), -F(0.9238795325), -F(0.0000000000), -F(0.9238795325),
+
+	-F(0.7071067812), -F(0.3826834324), -F(1.0000000000), -F(0.3826834324),
+	-F(0.7071067812),  F(0.9238795325),  F(0.0000000000),  F(0.9238795325),
+
+	 F(0.7071067812), -F(0.9238795325), -F(1.0000000000), -F(0.9238795325),
+	 F(0.7071067812), -F(0.3826834324), -F(0.0000000000), -F(0.3826834324),
+};
+#undef F
+
+/* A2DP specification: Section 12.8 Tables
+ *
+ * Original values are premultiplied by 4 for better precision (that is the
+ * maximum which is possible without overflows)
+ *
+ * Note: in each block of 16 numbers sign was changed for elements 4, 13, 14, 15
+ * in order to compensate the same change applied to cos_table_fixed_8
+ */
+#define SBC_PROTO_FIXED8_SCALE \
+	((sizeof(FIXED_T) * CHAR_BIT - 1) - SBC_FIXED_EXTRA_BITS + 2)
+#define F(x) (FIXED_A) ((x * 4) * \
+	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+static const FIXED_T _sbc_proto_fixed8[80] = {
+	 F(0.00000000E+00),  F(1.56575398E-04),
+	 F(3.43256425E-04),  F(5.54620202E-04),
+	-F(8.23919506E-04),  F(1.13992507E-03),
+	 F(1.47640169E-03),  F(1.78371725E-03),
+	 F(2.01182542E-03),  F(2.10371989E-03),
+	 F(1.99454554E-03),  F(1.61656283E-03),
+	 F(9.02154502E-04),  F(1.78805361E-04),
+	 F(1.64973098E-03),  F(3.49717454E-03),
+
+	 F(5.65949473E-03),  F(8.02941163E-03),
+	 F(1.04584443E-02),  F(1.27472335E-02),
+	-F(1.46525263E-02),  F(1.59045603E-02),
+	 F(1.62208471E-02),  F(1.53184106E-02),
+	 F(1.29371806E-02),  F(8.85757540E-03),
+	 F(2.92408442E-03), -F(4.91578024E-03),
+	-F(1.46404076E-02),  F(2.61098752E-02),
+	 F(3.90751381E-02),  F(5.31873032E-02),
+
+	 F(6.79989431E-02),  F(8.29847578E-02),
+	 F(9.75753918E-02),  F(1.11196689E-01),
+	-F(1.23264548E-01),  F(1.33264415E-01),
+	 F(1.40753505E-01),  F(1.45389847E-01),
+	 F(1.46955068E-01),  F(1.45389847E-01),
+	 F(1.40753505E-01),  F(1.33264415E-01),
+	 F(1.23264548E-01), -F(1.11196689E-01),
+	-F(9.75753918E-02), -F(8.29847578E-02),
+
+	-F(6.79989431E-02), -F(5.31873032E-02),
+	-F(3.90751381E-02), -F(2.61098752E-02),
+	 F(1.46404076E-02), -F(4.91578024E-03),
+	 F(2.92408442E-03),  F(8.85757540E-03),
+	 F(1.29371806E-02),  F(1.53184106E-02),
+	 F(1.62208471E-02),  F(1.59045603E-02),
+	 F(1.46525263E-02), -F(1.27472335E-02),
+	-F(1.04584443E-02), -F(8.02941163E-03),
+
+	-F(5.65949473E-03), -F(3.49717454E-03),
+	-F(1.64973098E-03), -F(1.78805361E-04),
+	-F(9.02154502E-04),  F(1.61656283E-03),
+	 F(1.99454554E-03),  F(2.10371989E-03),
+	 F(2.01182542E-03),  F(1.78371725E-03),
+	 F(1.47640169E-03),  F(1.13992507E-03),
+	 F(8.23919506E-04), -F(5.54620202E-04),
+	-F(3.43256425E-04), -F(1.56575398E-04),
+};
+#undef F
+
+/*
+ * To produce this cosine matrix in Octave:
+ *
+ * b = zeros(8, 16);
+ * for i = 0:7
+ * for j = 0:15 b(i+1, j+1) = cos((i + 0.5) * (j - 4) * (pi/8))
+ * endfor endfor;
+ * printf("%.10f, ", b');
+ *
+ * Note: in each block of 16 numbers sign was changed for elements 4, 13, 14, 15
+ *
+ * Change of sign for element 4 allows to replace constant 1.0 (not
+ * representable in Q15 format) with -1.0 (fine with Q15).
+ * Changed signs for elements 13, 14, 15 allow to have more similar constants
+ * and simplify subband filter function code.
+ */
+#define SBC_COS_TABLE_FIXED8_SCALE \
+	((sizeof(FIXED_T) * CHAR_BIT - 1) + SBC_FIXED_EXTRA_BITS)
+#define F(x) (FIXED_A) ((x) * \
+	((FIXED_A) 1 &lt;&lt; (sizeof(FIXED_T) * CHAR_BIT - 1)) + 0.5)
+static const FIXED_T cos_table_fixed_8[128] = {
+	 F(0.7071067812),  F(0.8314696123),  F(0.9238795325),  F(0.9807852804),
+	-F(1.0000000000),  F(0.9807852804),  F(0.9238795325),  F(0.8314696123),
+	 F(0.7071067812),  F(0.5555702330),  F(0.3826834324),  F(0.1950903220),
+	 F(0.0000000000),  F(0.1950903220),  F(0.3826834324),  F(0.5555702330),
+
+	-F(0.7071067812), -F(0.1950903220),  F(0.3826834324),  F(0.8314696123),
+	-F(1.0000000000),  F(0.8314696123),  F(0.3826834324), -F(0.1950903220),
+	-F(0.7071067812), -F(0.9807852804), -F(0.9238795325), -F(0.5555702330),
+	-F(0.0000000000), -F(0.5555702330), -F(0.9238795325), -F(0.9807852804),
+
+	-F(0.7071067812), -F(0.9807852804), -F(0.3826834324),  F(0.5555702330),
+	-F(1.0000000000),  F(0.5555702330), -F(0.3826834324), -F(0.9807852804),
+	-F(0.7071067812),  F(0.1950903220),  F(0.9238795325),  F(0.8314696123),
+	 F(0.0000000000),  F(0.8314696123),  F(0.9238795325),  F(0.1950903220),
+
+	 F(0.7071067812), -F(0.5555702330), -F(0.9238795325),  F(0.1950903220),
+	-F(1.0000000000),  F(0.1950903220), -F(0.9238795325), -F(0.5555702330),
+	 F(0.7071067812),  F(0.8314696123), -F(0.3826834324), -F(0.9807852804),
+	-F(0.0000000000), -F(0.9807852804), -F(0.3826834324),  F(0.8314696123),
+
+	 F(0.7071067812),  F(0.5555702330), -F(0.9238795325), -F(0.1950903220),
+	-F(1.0000000000), -F(0.1950903220), -F(0.9238795325),  F(0.5555702330),
+	 F(0.7071067812), -F(0.8314696123), -F(0.3826834324),  F(0.9807852804),
+	 F(0.0000000000),  F(0.9807852804), -F(0.3826834324), -F(0.8314696123),
+
+	-F(0.7071067812),  F(0.9807852804), -F(0.3826834324), -F(0.5555702330),
+	-F(1.0000000000), -F(0.5555702330), -F(0.3826834324),  F(0.9807852804),
+	-F(0.7071067812), -F(0.1950903220),  F(0.9238795325), -F(0.8314696123),
+	-F(0.0000000000), -F(0.8314696123),  F(0.9238795325), -F(0.1950903220),
+
+	-F(0.7071067812),  F(0.1950903220),  F(0.3826834324), -F(0.8314696123),
+	-F(1.0000000000), -F(0.8314696123),  F(0.3826834324),  F(0.1950903220),
+	-F(0.7071067812),  F(0.9807852804), -F(0.9238795325),  F(0.5555702330),
+	-F(0.0000000000),  F(0.5555702330), -F(0.9238795325),  F(0.9807852804),
+
+	 F(0.7071067812), -F(0.8314696123),  F(0.9238795325), -F(0.9807852804),
+	-F(1.0000000000), -F(0.9807852804),  F(0.9238795325), -F(0.8314696123),
+	 F(0.7071067812), -F(0.5555702330),  F(0.3826834324), -F(0.1950903220),
+	-F(0.0000000000), -F(0.1950903220),  F(0.3826834324), -F(0.5555702330),
+};
+#undef F
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081218225920</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-18 22:59:20-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hi Siarhei,

&gt; This simple patch resolves one more SBC encoding quality issue. Now SBC
&gt; audio encoding quality should be fine in almost all cases after applying it
&gt; together with a new 8 subband filter.
&gt; 
&gt; The patch conflicts with the bitstream packing optimization, but I hope that
&gt; after all the encoding quality problems are fixed, we can get back to it.

both of your patches have been applied and pushed upstream. Please keep
developing against the upstream tree.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219212546</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-19 21:25:46-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

On Friday 19 December 2008 00:59:20 ext Marcel Holtmann wrote:
&gt; Hi Siarhei,
&gt;
&gt; &gt; This simple patch resolves one more SBC encoding quality issue. Now SBC
&gt; &gt; audio encoding quality should be fine in almost all cases after applying
&gt; &gt; it together with a new 8 subband filter.
&gt; &gt;
&gt; &gt; The patch conflicts with the bitstream packing optimization, but I hope
&gt; &gt; that after all the encoding quality problems are fixed, we can get back
&gt; &gt; to it.
&gt;
&gt; both of your patches have been applied and pushed upstream. Please keep
&gt; developing against the upstream tree.

Thanks.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219222300</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-19 22:23:00-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hi Siarhei, Jaska,

So what about the subband filters fixes and 16 bit fixed point, do you
thing it can be done? I left this out since the last patch was only
dealing with 8 subband and was 32 bit.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219225152</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-12-19 22:51:52-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Luiz,

&gt; So what about the subband filters fixes and 16 bit fixed point, do you
&gt; thing it can be done? I left this out since the last patch was only
&gt; dealing with 8 subband and was 32 bit.

FYI, I made some testing changes some time ago from 32-bit to 16-bit
integers that didn't improve performance on arm at all... we shouldn't
sacrifice quality for no real improvement in performance.

The story may be different on a mips etc core, but I think we should
realize real performance improvements in order to justify lowering
fidelity.

Brad
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222113753</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-22 11:37:53-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

On Saturday 20 December 2008 00:51:52 ext Brad Midgley wrote:
&gt; Luiz,
&gt;
&gt; &gt; So what about the subband filters fixes and 16 bit fixed point, do you
&gt; &gt; thing it can be done? I left this out since the last patch was only
&gt; &gt; dealing with 8 subband and was 32 bit.
&gt;
&gt; FYI, I made some testing changes some time ago from 32-bit to 16-bit
&gt; integers that didn't improve performance on arm at all...

There are a few things to note:
1. Subband filter, while using a noticeable amount of CPU, is not the only
bottleneck in SBC encoder. Other parts of code also need to be improved in
order to see a major overall performance improvement as a result of
subband filter optimization
2. If you want to benefit from 16-bit math on ARM, you need to compile the
code with right -mcpu/-march settings. Fast single cycle 16-bit multiplication
instructions were introduced on ARM with armv5te instruction set and ARM9E
core. If you compile the code for armv4, you will hardly see any improvements
at all. Also current code explicitly uses 32-bit multiply-accumulate
instruction in inline assembly macro, preventing the compiler from using
16-bit instructions even for the cases where it could.

Performance improvement of using 16-bit multiplication instructions on ARM for
the subband filter function should be really high, if done right.

&gt; we shouldn't sacrifice quality for no real improvement in performance.

With the patch from http://marc.info/?l=linux-bluetooth&amp;m=122972547004294&amp;w=2
anyone can already estimate the quality difference between using 16-bit fixed
point and 32-bit fixed point.

If we take http://media.xiph.org/BBB/BigBuckBunny-stereo.flac , convert it to
au format and use in testing, we get the following results (encoding was done
with bluez sbc encoder, decoding was done with some conformant reference
win32 decoder binary, original file was compared with the decoded result using
tiny_psnr tool).

First we can try to crank up bitrate to the very maximum and encode the file
with the following command line:
./sbcenc -j -S -b 255 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc

bluez 16-bit fixed point:
stddev:    2.55 PSNR: 88.16 bytes:114491016/114491308

bluez 32-bit fixed point:
stddev:    1.09 PSNR: 95.56 bytes:114491016/114491308

reference encoder:
stddev:    1.09 PSNR: 95.56 bytes:114491016/114491308

Looks like a major difference and 16-bit fixed point looks bad in comparison,
right? But this is the artificial case when the compressed file is even bigger
than the original.

If we try to use more realistic settings similar to the recommended high
quality settings from SBC specification (Table 4.7):
./sbcenc -j -S -b 51 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc

bluez 16-bit fixed point:
stddev:   43.82 PSNR: 63.48 bytes:114491016/114491308

bluez 32-bit fixed point:
stddev:   43.78 PSNR: 63.49 bytes:114491016/114491308

reference encoder:
stddev:   43.37 PSNR: 63.57 bytes:114491016/114491308

Now as you see, effects of having not very precise calculations are completely
eclipsed by the quantization and compression artefacts. I think that the 
difference is really negligible.

If anybody wants to help, results of blind ABX tests with a real A2DP headset
are very much welcome. But I suspect that nobody will be able to tell the
difference between 16-bit and 32-bit version.

PS. I still wonder why there is a loss when compared to reference encoder.
32-bit fixed point version should be even more precise than single precision
floating point. Maybe there could be another minor bug in the code, or it is
just a random deviation and there could be a win for other audio files.

&gt; The story may be different on a mips etc core, but I think we should
&gt; realize real performance improvements in order to justify lowering
&gt; fidelity.

I don't know anything about mips at all.

-- 
Best regards,
Siarhei Siamashka
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222122903</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-22 12:29:03-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hi Siarhei,

&gt; &gt; &gt; So what about the subband filters fixes and 16 bit fixed point, do you
&gt; &gt; &gt; thing it can be done? I left this out since the last patch was only
&gt; &gt; &gt; dealing with 8 subband and was 32 bit.
&gt; &gt;
&gt; &gt; FYI, I made some testing changes some time ago from 32-bit to 16-bit
&gt; &gt; integers that didn't improve performance on arm at all...
&gt; 
&gt; There are a few things to note:
&gt; 1. Subband filter, while using a noticeable amount of CPU, is not the only
&gt; bottleneck in SBC encoder. Other parts of code also need to be improved in
&gt; order to see a major overall performance improvement as a result of
&gt; subband filter optimization
&gt; 2. If you want to benefit from 16-bit math on ARM, you need to compile the
&gt; code with right -mcpu/-march settings. Fast single cycle 16-bit multiplication
&gt; instructions were introduced on ARM with armv5te instruction set and ARM9E
&gt; core. If you compile the code for armv4, you will hardly see any improvements
&gt; at all. Also current code explicitly uses 32-bit multiply-accumulate
&gt; instruction in inline assembly macro, preventing the compiler from using
&gt; 16-bit instructions even for the cases where it could.
&gt; 
&gt; Performance improvement of using 16-bit multiplication instructions on ARM for
&gt; the subband filter function should be really high, if done right.
&gt; 
&gt; &gt; we shouldn't sacrifice quality for no real improvement in performance.
&gt; 
&gt; With the patch from http://marc.info/?l=linux-bluetooth&amp;m=122972547004294&amp;w=2
&gt; anyone can already estimate the quality difference between using 16-bit fixed
&gt; point and 32-bit fixed point.
&gt; 
&gt; If we take http://media.xiph.org/BBB/BigBuckBunny-stereo.flac , convert it to
&gt; au format and use in testing, we get the following results (encoding was done
&gt; with bluez sbc encoder, decoding was done with some conformant reference
&gt; win32 decoder binary, original file was compared with the decoded result using
&gt; tiny_psnr tool).
&gt; 
&gt; First we can try to crank up bitrate to the very maximum and encode the file
&gt; with the following command line:
&gt; ./sbcenc -j -S -b 255 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc
&gt; 
&gt; bluez 16-bit fixed point:
&gt; stddev:    2.55 PSNR: 88.16 bytes:114491016/114491308
&gt; 
&gt; bluez 32-bit fixed point:
&gt; stddev:    1.09 PSNR: 95.56 bytes:114491016/114491308
&gt; 
&gt; reference encoder:
&gt; stddev:    1.09 PSNR: 95.56 bytes:114491016/114491308
&gt; 
&gt; Looks like a major difference and 16-bit fixed point looks bad in comparison,
&gt; right? But this is the artificial case when the compressed file is even bigger
&gt; than the original.
&gt; 
&gt; If we try to use more realistic settings similar to the recommended high
&gt; quality settings from SBC specification (Table 4.7):
&gt; ./sbcenc -j -S -b 51 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc
&gt; 
&gt; bluez 16-bit fixed point:
&gt; stddev:   43.82 PSNR: 63.48 bytes:114491016/114491308
&gt; 
&gt; bluez 32-bit fixed point:
&gt; stddev:   43.78 PSNR: 63.49 bytes:114491016/114491308
&gt; 
&gt; reference encoder:
&gt; stddev:   43.37 PSNR: 63.57 bytes:114491016/114491308
&gt; 
&gt; Now as you see, effects of having not very precise calculations are completely
&gt; eclipsed by the quantization and compression artefacts. I think that the 
&gt; difference is really negligible.
&gt; 
&gt; If anybody wants to help, results of blind ABX tests with a real A2DP headset
&gt; are very much welcome. But I suspect that nobody will be able to tell the
&gt; difference between 16-bit and 32-bit version.
&gt; 
&gt; PS. I still wonder why there is a loss when compared to reference encoder.
&gt; 32-bit fixed point version should be even more precise than single precision
&gt; floating point. Maybe there could be another minor bug in the code, or it is
&gt; just a random deviation and there could be a win for other audio files.

so it seems that best is to go for 16-bit fixed point and get us some
nice autoconf/automake magic to set the right GCC option to get the best
optimization. If you guys tell which options are needed for which
platform, I can easily make the autoconf/automake magic happen.

Personally I like the idea to let the compiler do the optimization for
the specific target CPU. That keeps the code simple.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222175051</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-22 17:50:51-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hi,

If I remember it correctly we announce our bitpool range 2-64 bits, so
if we could maintain a good quality in this scenarios there is no
reason to not adopt 16 bit.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229102200</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-29 10:22:00-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

On Monday 22 December 2008 13:37:53 ext Siarhei Siamashka wrote:
[...]
&gt; If we try to use more realistic settings similar to the recommended high
&gt; quality settings from SBC specification (Table 4.7):
&gt; ./sbcenc -j -S -b 51 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc
&gt;
&gt; bluez 16-bit fixed point:
&gt; stddev:   43.82 PSNR: 63.48 bytes:114491016/114491308
&gt;
&gt; bluez 32-bit fixed point:
&gt; stddev:   43.78 PSNR: 63.49 bytes:114491016/114491308
&gt;
&gt; reference encoder:
&gt; stddev:   43.37 PSNR: 63.57 bytes:114491016/114491308
[...]
&gt; PS. I still wonder why there is a loss when compared to reference encoder.
&gt; 32-bit fixed point version should be even more precise than single
&gt; precision floating point. Maybe there could be another minor bug in the
&gt; code, or it is just a random deviation and there could be a win for other
&gt; audio files.

Found what's the matter. It's a problem in subbands selection criteria for
joint-stereo. The following patch fixes it.

Best regards,
Siarhei Siamashka

["0001-Fixed-subbands-selection-for-joint-stereo-in-SBC-enc.patch" (text/x-diff)]

From c1e98a7130377c126b6cdf93812016eab9151729 Mon Sep 17 00:00:00 2001
From: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
Date: Sat, 27 Dec 2008 19:36:14 +0200
Subject: [PATCH] Fixed subbands selection for joint-stereo in SBC encoder

Signed-off-by: Siarhei Siamashka &lt;siarhei.siamashka@nokia.com&gt;
---
 sbc/sbc.c |    8 ++++----
 1 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/sbc/sbc.c b/sbc/sbc.c
index a3a3ac1..d3dcd9a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1051,15 +1051,15 @@ static int sbc_pack_frame(uint8_t *data, struct sbc_frame *frame, size_t len)
 			}
 
 			/* decide whether to join this subband */
-			if ((scalefactor[0][sb] + scalefactor[1][sb]) &gt;
-					(scalefactor_j[0] + scalefactor_j[1]) ) {
+			if ((frame-&gt;scale_factor[0][sb] +
+					frame-&gt;scale_factor[1][sb]) &gt;
+					(scale_factor_j[0] +
+					scale_factor_j[1])) {
 				/* use joint stereo for this subband */
 				joint |= 1 &lt;&lt; (frame-&gt;subbands - 1 - sb);
 				frame-&gt;joint |= 1 &lt;&lt; sb;
 				frame-&gt;scale_factor[0][sb] = scale_factor_j[0];
 				frame-&gt;scale_factor[1][sb] = scale_factor_j[1];
-				scalefactor[0][sb] = scalefactor_j[0];
-				scalefactor[1][sb] = scalefactor_j[1];
 				for (blk = 0; blk &lt; frame-&gt;blocks; blk++) {
 					frame-&gt;sb_sample_f[blk][0][sb] =
 							sb_sample_j[blk][0];
-- 
1.5.6.5


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081224034136</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-24 03:41:36-0400</timestampReceived><subject>Re: [patch] obexd: if path == NULL, don't call</subject><body>

Hi Raymond,

&gt; 	Just a minor fix for g_dbus_unregister_interface to avoid calling \
&gt; dbus_connection_get_object_path_data when path is NULL.

@@ -494,7 +494,7 @@ gboolean g_dbus_unregister_interface(DBusConnection *connection,
        struct generic_data *data = NULL;
        struct interface_data *iface;
 
-       if (dbus_connection_get_object_path_data(connection, path,
+       if (!path || dbus_connection_get_object_path_data(connection, path,
                                                (void *) &amp;data) == FALSE)
                return FALSE;

So doing some like this would be better:

	if (!path)
		return FALSE;

	if (dbus_connection ...)
		return FALSE;

You should really start thinking for the error =&gt; return paradigm all
the time. This makes the code a lot simpler to read.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081224050551</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-12-24 05:05:51-0400</timestampReceived><subject>RE: [patch] obexd: if path == NULL, don't call</subject><body>

Hi Marcel

&gt;
&gt;You should really start thinking for the error =3D&gt; return paradigm all
&gt;the time. This makes the code a lot simpler to read.
&gt;
&gt;Regards
&gt;Marcel
&gt;

OK, Got it. Resent

Raymond


["0001-bug-fix-if-path-NULL-don-t-call-dbus_connection.patch" (application/octet-stream)]

From baea853a2338b65feb68e0103ef8795467cada7d Mon Sep 17 00:00:00 2001
From: Raymond Liu &lt;raymond.liu@intel.com&gt;
Date: Wed, 24 Dec 2008 10:54:47 +0800
Subject: [PATCH] bug fix: if path == NULL, don't call dbus_connection_get_object_path_data

---
 gdbus/object.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/gdbus/object.c b/gdbus/object.c
index 432a8a0..a41617d 100644
--- a/gdbus/object.c
+++ b/gdbus/object.c
@@ -494,6 +494,9 @@ gboolean g_dbus_unregister_interface(DBusConnection *connection,
 	struct generic_data *data = NULL;
 	struct interface_data *iface;
 
+	if (!path)
+		return FALSE;
+
 	if (dbus_connection_get_object_path_data(connection, path,
 						(void *) &amp;data) == FALSE)
 		return FALSE;
-- 
1.5.6.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081223005145</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 00:51:45-0400</timestampReceived><subject>Re: understading bluetooth init</subject><body>

Hi Claudio,

&gt; is there any point of start to know what exactly happens when i plug a
&gt; BT dongle in my usb port? I mean what code is sent to BT through USB?

this is kinda generic broad questions that can't be answered here
quickly by anybody. It would take some time to write this up. Why are
you asking?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223191154</emailId><senderName>Claudio Fiorini</senderName><senderEmail>claudio@cfiorini.it</senderEmail><timestampReceived>2008-12-23 19:11:54-0400</timestampReceived><subject>Re: understading bluetooth init</subject><body>

Thanks for your answer.
I'm using an arduino board and a ps3 gamepad to move 3 servos for a
small robotic arm. I would like to put a BT dongle to the arduino, the
one that is used from a normal computer, without buy a bluetooth module
that cost too much for now because my arm is just a prototype for
something that i'll build in the few months.
Anyway to make it short, i don't need to make huge data transfer, but
just some bytes, so i can skip many USB and BT features to do that?

I know something about bluez because is searched inside source code to
create Rbluez, ruby c extension, but i tried to find out what exactly
happen, in kernel space and user space, when i plug a usb dongle but,
for me, is too much now.

Maybe to start this search you can tell me which file is have to
investigate!

Thanks

claudio


On Tue, 2008-12-23 at 01:51 +0100, Marcel Holtmann wrote:
&gt; Hi Claudio,
&gt; 
&gt; &gt; is there any point of start to know what exactly happens when i plug a
&gt; &gt; BT dongle in my usb port? I mean what code is sent to BT through USB?
&gt; 
&gt; this is kinda generic broad questions that can't be answered here
&gt; quickly by anybody. It would take some time to write this up. Why are
&gt; you asking?
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223114932</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 11:49:32-0400</timestampReceived><subject>Re: Does anyone know how to change the a2dp audio output stream</subject><body>

Hi,

&gt; Does anyone know how to change the a2dp audio output stream properly
&gt; between Speaker and Bluetooth stereo headset?

that is a job for systems like PulseAudio.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223120451</emailId><senderName>Chan-Yeol Park</senderName><senderEmail>chanyeol.park@samsung.com</senderEmail><timestampReceived>2008-12-23 12:04:51-0400</timestampReceived><subject>RE: Does anyone know how to change the a2dp audio output stream</subject><body>


Somebody said that Pulse audio needs a lot of resource.
( I don't know well pulse audio.. but in case of me I should check the performance )

Do you think that this matter is solved only by pulse audio or like that..?

Regards 
ChanYeol, Park

-----Original Message-----
From: Marcel Holtmann [mailto:marcel@holtmann.org] 
Sent: Tuesday, December 23, 2008 8:50 PM
To: Chan-Yeol Park
Cc: linux-bluetooth@vger.kernel.org; ���������/S/W Platform Lab.(����� \
                ���)/E5(������)/������� ����
Subject: Re: Does anyone know how to change the a2dp audio output stream between \
Speaker and bluetooth stereo headset?

Hi,

&gt; Does anyone know how to change the a2dp audio output stream properly
&gt; between Speaker and Bluetooth stereo headset?

that is a job for systems like PulseAudio.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081223125620</emailId><senderName>Christian Hoene</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-23 12:56:20-0400</timestampReceived><subject>Re: Patch for supporting even more command line parameters in</subject><body>

Hi Marcel,


&gt; can you get me one with proper coding style please. Also the maximum
&gt; width is 80 characters :)

Fixed. Attached the patch.

 Christian




["patch_for_empty_frames_and_more_sbcenc_parameters.diff" (patch_for_empty_frames_and_more_sbcenc_parameters.diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..263d46a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1196,6 +1196,9 @@ int sbc_decode(sbc_t *sbc, void *input, int input_len, void *output,
 	if (written)
 		*written = 0;
 
+	if (framelen&lt;=0)
+		return framelen;
+
 	samples = sbc_synthesize_audio(&amp;priv-&gt;dec_state, &amp;priv-&gt;frame);
 
 	ptr = output;
diff --git a/sbc/sbcenc.c b/sbc/sbcenc.c
index 74a3434..c595725 100644
--- a/sbc/sbcenc.c
+++ b/sbc/sbcenc.c
@@ -72,8 +72,8 @@ static ssize_t __write(int fd, const void *buf, size_t count)
 	return pos;
 }
 
-static void encode(char *filename, int subbands,
-					int bitpool, int joint, int snr)
+static void encode(char *filename, int subbands, int bitpool, int joint,
+   			int dualchannel, int snr, int blocks)
 {
 	struct au_header *au_hdr;
 	unsigned char input[2048], output[2048];
@@ -131,12 +131,24 @@ static void encode(char *filename, int subbands,
 
 	sbc.subbands = subbands == 4 ? SBC_SB_4 : SBC_SB_8;
 
-	if (BE_INT(au_hdr-&gt;channels) == 1)
+	if (BE_INT(au_hdr-&gt;channels) == 1) {
 		sbc.mode = SBC_MODE_MONO;
-	else if (joint)
+		if (joint || dualchannel) {
+			fprintf(stderr, "Audio file is mono but joint or"
+				"dualchannel mode has been specified\n");
+			goto done;
+		}
+	} else if (joint &amp;&amp; !dualchannel)
 		sbc.mode = SBC_MODE_JOINT_STEREO;
-	else
-		sbc.mode = SBC_MODE_STEREO;
+	else if (!joint &amp;&amp; dualchannel)
+    		sbc.mode = SBC_MODE_DUAL_CHANNEL;
+	else if (!joint &amp;&amp; !dualchannel)
+    		sbc.mode = SBC_MODE_STEREO;
+	else  {
+		fprintf(stderr, "Both joint and dualchannel mode have been"
+				"specified\n");
+		goto done;
+	}
 
 	sbc.endian = SBC_BE;
 	count = BE_INT(au_hdr-&gt;data_size);
@@ -145,15 +157,18 @@ static void encode(char *filename, int subbands,
 
 	sbc.bitpool = bitpool;
 	sbc.allocation = snr ? SBC_AM_SNR : SBC_AM_LOUDNESS;
+	sbc.blocks = blocks / 4;
 
-	if(verbose) {
+	if (verbose) {
 		fprintf(stderr,"encoding %s with rate %d, %d subbands, "
-			"%d bits, allocation method %s and mode %s\n",
+			"%d bits, allocation method %s, mode %s, "
+			"and %d blocks\n",
 			filename, srate, subbands, bitpool,
 			sbc.allocation == SBC_AM_SNR ? "SNR" : "LOUDNESS",
 			sbc.mode == SBC_MODE_MONO ? "MONO" :
 					sbc.mode == SBC_MODE_STEREO ?
-						"STEREO" : "JOINTSTEREO");
+						"STEREO" : "JOINTSTEREO",
+			blocks);
 	}
 
 	while (1) {
@@ -209,7 +224,10 @@ static void usage(void)
 		"\t-s, --subbands       Number of subbands to use (4 or 8)\n"
 		"\t-b, --bitpool        Bitpool value (default is 32)\n"
 		"\t-j, --joint          Joint stereo\n"
+		"\t-d, --dualchannel    Dual channel\n"
 		"\t-S, --snr            Use SNR mode (default is loudness)\n"
+		"\t-B, --blocks         Number of blocks to use (4, 8, 12 "
+			"or 16)\n"
 		"\n");
 }
 
@@ -219,15 +237,18 @@ static struct option main_options[] = {
 	{ "subbands",	1, 0, 's' },
 	{ "bitpool",	1, 0, 'b' },
 	{ "joint",	0, 0, 'j' },
+	{ "dualchannel",0, 0, 'd' },
 	{ "snr",	0, 0, 'S' },
+	{ "blocks",	1, 0, 'B' },
 	{ 0, 0, 0, 0 }
 };
 
 int main(int argc, char *argv[])
 {
-	int i, opt, subbands = 8, bitpool = 32, joint = 0, snr= 0;
+	int i, opt, subbands = 8, bitpool = 32, joint = 0, dualchannel = 0;
+	int snr = 0, blocks = 16;
 
-	while ((opt = getopt_long(argc, argv, "+hvs:b:jS",
+	while ((opt = getopt_long(argc, argv, "+hvs:b:jdSB:",
 						main_options, NULL)) != -1) {
 		switch(opt) {
 		case 'h':
@@ -255,10 +276,24 @@ int main(int argc, char *argv[])
 			joint = 1;
 			break;
 
+		case 'd':
+			dualchannel = 1;
+			break;
+
 		case 'S':
 			snr = 1;
 			break;
 
+		case 'B':
+    		        blocks = atoi(optarg);
+			if (blocks != 16 &amp;&amp; blocks != 12 &amp;&amp;
+				blocks != 8 &amp;&amp; blocks != 4) {
+				fprintf(stderr, "Invalid blocks %d!\n",
+					blocks);
+				exit(1);
+			}
+			break;
+
 		default:
 			exit(1);
 		}
@@ -274,7 +309,8 @@ int main(int argc, char *argv[])
 	}
 
 	for (i = 0; i &lt; argc; i++)
-		encode(argv[i], subbands, bitpool, joint, snr);
+	        encode(argv[i], subbands, bitpool, joint, dualchannel,
+		       snr, blocks);
 
 	return 0;
 }

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081219021508</emailId><senderName>"jaikumar Ganesh"</senderName><senderEmail>jaikumarg@gmail.com</senderEmail><timestampReceived>2008-12-19 02:15:08-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

Looking at this a bit further, I see a discrepancy between the code in
function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
Is this intentional or a bug ? Like I said below, using
hci_conn_complete_evt (when the AG doesn't support eSCO) results in
the connect() never returning because the socket state is not updated.

//hci_conn_complete_evt
        if (ev-&gt;status) {
                hci_proto_connect_cfm(conn, ev-&gt;status);
                hci_conn_del(conn);
        }

unlock:
        hci_dev_unlock(hdev);
        hci_conn_check_pending(hdev);
}

//hci_sync_conn_complete_evt.

        hci_proto_connect_cfm(conn, ev-&gt;status);
        if (ev-&gt;status)
                hci_conn_del(conn);
unlock:
        hci_dev_unlock(hdev);
}

Any pointers / hints ?

Thanks
Jaikumar
On Wed, Dec 17, 2008 at 2:07 PM, jaikumar Ganesh &lt;jaikumarg@gmail.com&gt; wrote:
&gt;  Folks,
&gt;     I have a device which supports only SCO connections.  So when the
&gt; application calls sco_sock_connect -&gt; sco_connect, the conn-&gt;state is
&gt; set to BT_CONNECT and then bt_sock_state is called waiting for the
&gt; conn-&gt;sk-&gt;sk_state to be set to BT_CONNECTED.
&gt;     When the HCI Connection Complete event comes, the conn-&gt;state is
&gt; set to BT_CONNECTED.
&gt;
&gt;     In 2.6.25 -&gt;  hci_proto_connect_cfm(conn, ev-&gt;status) was called
&gt; at the end of hci_conn_complete_evt which used to set the
&gt; conn-&gt;sk-&gt;sk_state to BT_CONNECTED in sco_conn_ready.
&gt;     In 2.6.27-&gt;  hci_proto_connect_cfm(conn, ev-&gt;status) is called
&gt; only if the ev_status is 1.
&gt;                      Hence, the conn-&gt;sk-&gt;sk_state doesn't get set to
&gt; BT_CONNECTED and hence the connect() times out.
&gt;
&gt;    Should we be calling sco_conn_ready in sco_connect similar to
&gt; sco_connect_cfm if conn != null ?
&gt;    I didn't see anyone else complain so am I missing something obvious ?
&gt;
&gt;
&gt;     * I am new to this list so please excuse me if the above doesn't
&gt; make sense.
&gt;
&gt;  Thanks
&gt;  Jaikumar
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219175702</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 17:57:02-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

Hi Jaikumar,

&gt; Looking at this a bit further, I see a discrepancy between the code in
&gt; function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
&gt; Is this intentional or a bug ? Like I said below, using
&gt; hci_conn_complete_evt (when the AG doesn't support eSCO) results in
&gt; the connect() never returning because the socket state is not updated.

I still have no idea what's your problem. It doesn't matter if the
remote side supports eSCO or not. The sync setup commands can be used
even for setting up SCO channels.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219182824</emailId><senderName>"jaikumar Ganesh"</senderName><senderEmail>jaikumarg@gmail.com</senderEmail><timestampReceived>2008-12-19 18:28:24-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

Hi Marcel,

On Fri, Dec 19, 2008 at 10:58 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Jaikumar,
&gt;
&gt;&gt; Looking at this a bit further, I see a discrepancy between the code in
&gt;&gt; function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
&gt;&gt; Is this intentional or a bug ? Like I said below, using
&gt;&gt; hci_conn_complete_evt (when the AG doesn't support eSCO) results in
&gt;&gt; the connect() never returning because the socket state is not updated.
&gt;
&gt; I still have no idea what's your problem. It doesn't matter if the
&gt; remote side supports eSCO or not. The sync setup commands can be used
&gt; even for setting up SCO channels.
&gt;

  So here is the problem:
     The  AG doesn't support eSCO i.e disable_esco is Y and
lmp_esco_capable(dev) evaluates to 0, so we try to establish a SCO
channel irrespective of whether the remote support eSCO or not.

  So sco_connect is called, and after the hci_connect, hcon-&gt;state is
BT_CONNECT and the sk-&gt;sk_state = BT_CONNECT.
  When we get a response from the remote device
hci_connect_complete_evt is called which sets the conn-&gt;state to
BT_CONNECTED. However, as
  hci_proto_connect_cfm is not called (this was being called in
2.6.25) ,  sk-&gt;sk_state remained in BT_CONNECT state. Hence, we get
stuck in bt_sock_wait_state
  and the connect() times out.

Thanks
Jaikumar
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222161602</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-12-22 16:16:02-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

On Fri, Dec 19, 2008 at 10:28 AM, jaikumar Ganesh &lt;jaikumarg@gmail.com&gt; wrote:
&gt; Hi Marcel,
&gt;
&gt; On Fri, Dec 19, 2008 at 10:58 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt;&gt; Hi Jaikumar,
&gt;&gt;
&gt;&gt;&gt; Looking at this a bit further, I see a discrepancy between the code in
&gt;&gt;&gt; function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
&gt;&gt;&gt; Is this intentional or a bug ? Like I said below, using
&gt;&gt;&gt; hci_conn_complete_evt (when the AG doesn't support eSCO) results in
&gt;&gt;&gt; the connect() never returning because the socket state is not updated.
&gt;&gt;
&gt;&gt; I still have no idea what's your problem. It doesn't matter if the
&gt;&gt; remote side supports eSCO or not. The sync setup commands can be used
&gt;&gt; even for setting up SCO channels.
&gt;&gt;
&gt;
&gt;  So here is the problem:
&gt;     The  AG doesn't support eSCO i.e disable_esco is Y and
&gt; lmp_esco_capable(dev) evaluates to 0, so we try to establish a SCO
&gt; channel irrespective of whether the remote support eSCO or not.
&gt;
&gt;  So sco_connect is called, and after the hci_connect, hcon-&gt;state is
&gt; BT_CONNECT and the sk-&gt;sk_state = BT_CONNECT.
&gt;  When we get a response from the remote device
&gt; hci_connect_complete_evt is called which sets the conn-&gt;state to
&gt; BT_CONNECTED. However, as
&gt;  hci_proto_connect_cfm is not called (this was being called in
&gt; 2.6.25) ,  sk-&gt;sk_state remained in BT_CONNECT state. Hence, we get
&gt; stuck in bt_sock_wait_state
&gt;  and the connect() times out.


Explained another way:

JK found that in 2.6.27 with "echo Y &gt;
/sys/module/sco/parameters/disable_esco" the socket state is never
updated to BT_CONNECTED. The userspace connect() call then times out,
even though the transport is connected. This appears to be because
hci_proto_connect_cfm() is not called when the connection complete
event arrives. Below is a patch that resolves this issue for us.

This is a request for comment as to whether this patch is correct. It
contradicts Marcel's change 769be974 which explicitly moved
hci_proto_connect_cfm() into the ev-&gt;status conditional.

Thanks,
Nick



commit 654488a822615b645c43605ab24f0305b56b40dc
Author: Jaikumar Ganesh &lt;jaikumar@google.com&gt;
Date:   Fri Dec 19 14:17:53 2008 -0800

    [Bluetooth] Fix SCO connection issue

    When the AG supports only SCO connections, on receipt of the
    HCI_EV_CONN_COMPLETE packet, the connect state is changed to
    BT_CONNECTED but the socket state is not updated. Hence, the
    connect() call times out even though the SCO connection has
    been established.

    Signed-off-by: Jaikumar Ganesh &lt;jaikumar@google.com&gt;

diff --git a/net/bluetooth/hci_event.c b/net/bluetooth/hci_event.c
index ad7a553..3cba788 100644
--- a/net/bluetooth/hci_event.c
+++ b/net/bluetooth/hci_event.c
@@ -916,8 +916,8 @@ static inline void hci_conn_complete_evt(struct
hci_dev *hdev, struct sk_buff *s
                }
        }

+       hci_proto_connect_cfm(conn, ev-&gt;status);
        if (ev-&gt;status) {
-               hci_proto_connect_cfm(conn, ev-&gt;status);
                hci_conn_del(conn);
        }
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222191814</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-22 19:18:14-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

Hi Nick,

&gt; &gt;&gt;&gt; Looking at this a bit further, I see a discrepancy between the code in
&gt; &gt;&gt;&gt; function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
&gt; &gt;&gt;&gt; Is this intentional or a bug ? Like I said below, using
&gt; &gt;&gt;&gt; hci_conn_complete_evt (when the AG doesn't support eSCO) results in
&gt; &gt;&gt;&gt; the connect() never returning because the socket state is not updated.
&gt; &gt;&gt;
&gt; &gt;&gt; I still have no idea what's your problem. It doesn't matter if the
&gt; &gt;&gt; remote side supports eSCO or not. The sync setup commands can be used
&gt; &gt;&gt; even for setting up SCO channels.
&gt; &gt;&gt;
&gt; &gt;
&gt; &gt;  So here is the problem:
&gt; &gt;     The  AG doesn't support eSCO i.e disable_esco is Y and
&gt; &gt; lmp_esco_capable(dev) evaluates to 0, so we try to establish a SCO
&gt; &gt; channel irrespective of whether the remote support eSCO or not.
&gt; &gt;
&gt; &gt;  So sco_connect is called, and after the hci_connect, hcon-&gt;state is
&gt; &gt; BT_CONNECT and the sk-&gt;sk_state = BT_CONNECT.
&gt; &gt;  When we get a response from the remote device
&gt; &gt; hci_connect_complete_evt is called which sets the conn-&gt;state to
&gt; &gt; BT_CONNECTED. However, as
&gt; &gt;  hci_proto_connect_cfm is not called (this was being called in
&gt; &gt; 2.6.25) ,  sk-&gt;sk_state remained in BT_CONNECT state. Hence, we get
&gt; &gt; stuck in bt_sock_wait_state
&gt; &gt;  and the connect() times out.
&gt; 
&gt; 
&gt; Explained another way:
&gt; 
&gt; JK found that in 2.6.27 with "echo Y &gt;
&gt; /sys/module/sco/parameters/disable_esco" the socket state is never
&gt; updated to BT_CONNECTED. The userspace connect() call then times out,
&gt; even though the transport is connected. This appears to be because
&gt; hci_proto_connect_cfm() is not called when the connection complete
&gt; event arrives. Below is a patch that resolves this issue for us.
&gt; 
&gt; This is a request for comment as to whether this patch is correct. It
&gt; contradicts Marcel's change 769be974 which explicitly moved
&gt; hci_proto_connect_cfm() into the ev-&gt;status conditional.

now I get what you are talking about. You guys should have sent the
patch from the beginning since that makes it clear what you are trying
to achieve.

So the patch is wrong, because it breaks Simple Pairing. What you have
to do is check if it is an ACL link, then the code is doing the right
thing and doing features requests first.

        if (ev-&gt;status) {
                hci_proto_connect_cfm(conn, ev-&gt;status);
                hci_conn_del(conn);
        } else if (ev-&gt;link_type != ACL_LINK)
                hci_proto_connect_cfm(conn, ev-&gt;status);

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219175933</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 17:59:33-0400</timestampReceived><subject>Re: /var/lib/bluetooth/$BDADDR/names, when does that file get</subject><body>

Hi Folkert,

&gt; When does /var/lib/bluetooth/$BDADDR/names get updated?
&gt; Because hcitool inq does not tell the names while hcitool scan does not
&gt; tell class of the devices.

every time a HCI remote name complete event is received. Or in case of
Bluetooth 2.1 when an Extended Inquiry Result with name information is
recieved.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>200812191751400</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 17:51:40-0400</timestampReceived><subject>Re: Connection time behaviour question</subject><body>

Hi Simon,

&gt; I have a question about behaviour establishing connections that seems  
&gt; to have changed between different versions of BlueZ, and I'm hoping  
&gt; someone will be good enough to help explain what's going on for me!
&gt; 
&gt; I have a test program that opens an L2CAP connection to a device,  
&gt; reads the RSSI, closes it again, waits a few seconds and repeats the  
&gt; process.  Optionally, it will do clock caching - i.e. read the clock  
&gt; offset when a connection is established and pass this in when making  
&gt; the next connection.  Using version 3.18 the BlueZ libraries, this  
&gt; behaves more or less as I would expect:  if clock caching is not  
&gt; turned on, the connection times are distributed fairly evenly and if  
&gt; it is they are much quicker and fairly constant (e.g. 1300 ms, plus or  
&gt; minus a hundred or so for a particular device).  Using various  
&gt; subsequent versions however (in particular 3.29 and 4.22) we see  
&gt; different behaviour: whether clock caching is turned on or not, the  
&gt; connection times follow a sawtooth pattern, starting very low (about  
&gt; 100 ms), then going up steadily in increments of a couple of hundred  
&gt; ms until they reach a peak (1000-2000) and then fall back to a very  
&gt; low value and the process repeats.  I'm somewhat confused as to why  
&gt; this is happening - I've tried to read through the code changes but  
&gt; without much success.  Can anyone shed any light on this for me?

I don't see any issue here, but the whole concept of connecting to a
remote device to read its RSSI is broken by design. The RSSI value of an
already connection is basically useless. What you want is the link
quality, but even that doesn't really help you since it is vendor
specific and every company defines it differently.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219175852</emailId><senderName>Simon Hay</senderName><senderEmail>sjeh3@cam.ac.uk</senderEmail><timestampReceived>2008-12-19 17:58:52-0400</timestampReceived><subject>Re: Connection time behaviour question</subject><body>

Hi Marcel,

On 19 Dec 2008, at 18:49, Marcel Holtmann wrote:

&gt;
&gt; I don't see any issue here, but the whole concept of connecting to a
&gt; remote device to read its RSSI is broken by design. The RSSI value  
&gt; of an
&gt; already connection is basically useless. What you want is the link
&gt; quality, but even that doesn't really help you since it is vendor
&gt; specific and every company defines it differently.


Thanks for the reply.  I appreciate your point about RSSI vs link  
quality, and understand the issue there, but actually that's  
incidental to the point I'm really trying to understand - reading the  
RSSI is just something to do with the connection before I throw it  
away again.  I'm trying to get to the bottom of what's changed to  
cause the different behaviour in the connection times - why passing in  
a clock offset doesn't seem to make a difference any more, and why we  
see this regular pattern of times going up and up then jumping back  
down again.  Is there anything that was deliberately changed in this  
regard, or is it a side effect of something else?

I really appreciate all your help and patience on this!

Simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219180513</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-19 18:05:13-0400</timestampReceived><subject>Re: Connection time behaviour question</subject><body>

Hi Simon,

&gt; &gt; I don't see any issue here, but the whole concept of connecting to a
&gt; &gt; remote device to read its RSSI is broken by design. The RSSI value  
&gt; &gt; of an
&gt; &gt; already connection is basically useless. What you want is the link
&gt; &gt; quality, but even that doesn't really help you since it is vendor
&gt; &gt; specific and every company defines it differently.
&gt; 
&gt; 
&gt; Thanks for the reply.  I appreciate your point about RSSI vs link  
&gt; quality, and understand the issue there, but actually that's  
&gt; incidental to the point I'm really trying to understand - reading the  
&gt; RSSI is just something to do with the connection before I throw it  
&gt; away again.  I'm trying to get to the bottom of what's changed to  
&gt; cause the different behaviour in the connection times - why passing in  
&gt; a clock offset doesn't seem to make a difference any more, and why we  
&gt; see this regular pattern of times going up and up then jumping back  
&gt; down again.  Is there anything that was deliberately changed in this  
&gt; regard, or is it a side effect of something else?

you can't pass in the clock offset except you use the low-level HCI
Create Connection command. And that is not guaranteed to work as
expected at all. The kernel has full control over these information and
you should not mess with it. However when reading the clock offset of a
remote connection the kernel will store that clock offset and reuse
during the next connection attempt. You have to create proper L2CAP
connections and not just fake them via HCI Create Connection.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219181243</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-12-19 18:12:43-0400</timestampReceived><subject>Re: How can I know BlueZ A2DP, AVRCP profile version.?</subject><body>

Hi,

On Dec 19, 2008, at 20:53, Marcel Holtmann wrote:
&gt;&gt; How can I know BlueZ A2DP, AVRCP profile version.?
&gt;&gt;
&gt;&gt; As far as I search on the web site, A2DP,AVRCP version is 1.0  
&gt;&gt; respectively
&gt;&gt;
&gt;&gt; But I expect BlueZ version is higher than we search.
&gt;
&gt; I think that Johan and Luiz can give you more detailed answers here.
&gt; However normally BlueZ follows the latest specs., but in the case of
&gt; AVRCP I am sure we only implement some of the optional features.

For A2DP we support 1.2, or at least that's the spec version I've been  
using when doing the implementation. For AVRCP we've used the latest  
spec. version but since we don't have metadata transfer support yet we  
can only claim 1.0 conformance (the code might actually register a SDP  
record with a higher version so you'll need to modify that if you  
intend to do qualification).

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081219191415</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-12-19 19:14:15-0400</timestampReceived><subject>[RFC] Control of uart clock from tty client</subject><body>

Hi,

On embedded architectures we need to clk_enable()/clk_disable() the
bluetooth uart clock when the bluetooth chip enters/exits low power
mode, to reduce power usage.

This needs to occur independently of the linux cpu suspend/resume
paths, because many bluetooth chips (TI BRF6300 in our case) have
power states that transition independently of the linux cpu: we need
to be able to turn the BT uart off while the linux CPU is running, and
leave the BT uart on while the linux CPU is in suspend.

The BT power state is known in drivers/bluetooth/hci_ll.c which reads
headers on the BT HCI traffic to determine what power state the BT
chip is in.

Our current implementation makes calls directly from hci_ll.c into our
uart driver to tell it when it can clk_enable() / clk_disable().
Sample patch is attached.

We know that calling the uart driver directly from hci_ll.c is
unlikely to get merged upstream, because we have by-passed the tty and
serial_core layers. Are there any suggestions on how to plumb clock
control from hci_ll.c to our uart driver in a way that could get
merged upstream?

Would probably need to use an existing uart_ops (serial_core.h). But
none seem suitable:
   .ioctl uses a mutex, but we cannot sleep from hci_ll.c
   .pm is also called during suspend / resume
   .set_termios using a baud rate of zero to clk_disable() seems
workable, but how to clk_enable() ?

Anyway here is a sample patch. I've just shown how hci_ll.c calls the
msm_serial_clock_*() interface we introduced. The implementation of
msm_serial_clock_*() in msm_serial.c is fairly hefty because of our
requirement to flush the tx path before clk_disable(), and
msm_serial.c is not yet in mainline linux, so for this side of the
implementation please see:
http://android.git.kernel.org/?p=kernel/msm.git;f=drivers/serial/msm_serial.c;hb=android-msm-htc-2.6.25
http://android.git.kernel.org/?p=kernel/msm.git;f=drivers/serial/msm_serial.h;hb=android-msm-htc-2.6.25

Requesting comments on how to implement this clock control in a way
that could get merged upstream.


commit 16be2941c59b3fe089149b4cf15543
499a3e1819
Author: Nick Pelly &lt;npelly@google.com&gt;
Date:   Mon Jun 30 16:41:58 2008 -0700

   bluetooth: use msm_serial clock control for power management of bt uart.

   Signed-off-by: Nick Pelly &lt;npelly@google.com&gt;

diff --git a/drivers/bluetooth/Kconfig b/drivers/bluetooth/Kconfig
index 075598e..f99d89d 100644
--- a/drivers/bluetooth/Kconfig
+++ b/drivers/bluetooth/Kconfig
@@ -90,6 +90,16 @@ config BT_HCIUART_LL

         Say Y here to compile support for HCILL protocol.

+config BT_HCIUART_LL_USE_MSM_SERIAL_CLOCK_CONTROL
+       bool "Make msm serial clock requests when the BT chip sleeps."
+       depends on SERIAL_MSM_CLOCK_CONTROL
+       default n
+       help
+         Sends requests to msm_serial to turn the uart clock on and off as the
+         Bluetooth chip enters/exists deep sleep, providing power savings.
+         This requires that the tty layer for bluetooth uses the msm_serial
+         driver.
+
 config BT_HCIBCM203X
       tristate "HCI BCM203x USB driver"
       depends on USB
diff --git a/drivers/bluetooth/hci_ll.c b/drivers/bluetooth/hci_ll.c
index b91d45a..6c4d698 100644
--- a/drivers/bluetooth/hci_ll.c
+++ b/drivers/bluetooth/hci_ll.c
@@ -45,6 +45,8 @@
 #include &lt;linux/signal.h&gt;
 #include &lt;linux/ioctl.h&gt;
 #include &lt;linux/skbuff.h&gt;
+#include &lt;linux/serial_core.h&gt;
+#include &lt;linux/tty.h&gt;

 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
@@ -173,6 +175,28 @@ static int ll_close(struct hci_uart *hu)
       return 0;
 }

+#ifdef CONFIG_BT_HCIUART_LL_USE_MSM_SERIAL_CLOCK_CONTROL
+void msm_serial_clock_on(struct uart_port *port);
+void msm_serial_clock_request_off(struct uart_port *port);
+
+static void __ll_msm_serial_clock_on(struct tty_struct *tty) {
+       struct uart_state *state = tty-&gt;driver_data;
+       struct uart_port *port = state-&gt;port;
+
+       msm_serial_clock_on(port);
+}
+
+static void __ll_msm_serial_clock_request_off(struct tty_struct *tty) {
+       struct uart_state *state = tty-&gt;driver_data;
+       struct uart_port *port = state-&gt;port;
+
+       msm_serial_clock_request_off(port);
+}
+#else
+static inline void __ll_msm_serial_clock_on(struct tty_struct *tty) {}
+static inline void __ll_msm_serial_clock_request_off(struct tty_struct *tty) {}
+#endif
+
 /*
 * internal function, which does common work of the device wake up process:
 * 1. places all pending packets (waiting in tx_wait_q list) in txq list.
@@ -218,6 +242,10 @@ static void ll_device_want_to_wakeup(struct hci_uart *hu)
               BT_DBG("dual wake-up-indication");
               /* deliberate fall-through - do not add break */
       case HCILL_ASLEEP:
+               /* Make sure clock is on - we may have turned clock off since
+                * receiving the wake up indicator
+         */
+               __ll_msm_serial_clock_on(hu-&gt;tty);
               /* acknowledge device wake up */
               if (send_hcill_cmd(HCILL_WAKE_UP_ACK, hu) &lt; 0) {
                       BT_ERR("cannot acknowledge device wake up");
@@ -271,6 +299,11 @@ out:

       /* actually send the sleep ack packet */
       hci_uart_tx_wakeup(hu);
+
+       spin_lock_irqsave(&amp;ll-&gt;hcill_lock, flags);
+       if (ll-&gt;hcill_state == HCILL_ASLEEP)
+               __ll_msm_serial_clock_request_off(hu-&gt;tty);
+       spin_unlock_irqrestore(&amp;ll-&gt;hcill_lock, flags);
 }

 /*
@@ -322,6 +355,7 @@ static int ll_enqueue(struct hci_uart *hu, struct
sk_buff *skb)
               break;
       case HCILL_ASLEEP:
               BT_DBG("device asleep, waking up and queueing packet");
+               __ll_msm_serial_clock_on(hu-&gt;tty);
               /* save packet for later */
               skb_queue_tail(&amp;ll-&gt;tx_wait_q, skb);
               /* awake device */
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081220044207</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-20 04:42:07-0400</timestampReceived><subject>Re: FYI, regarding AVRCP</subject><body>

Hi David,

&gt; Since our meeting in PortlandI have been busy dealing with both "day 
&gt; job" issues, as well as finishing up some Intellectual Property issues 
&gt; surrounding my ongoing evening/weekend project, of which AVRCP and my 
&gt; remote are a small but critical part.  Within the next two weeks I will 
&gt; reengage AVRCP and expect to soon bring it up to 1.3 (metadata transfer) 
&gt; as we discussed in Portland.  Sorry it has taken so long.

great, because I was going to ping you about that part :)

&gt; With regard to the question from Park Chan-Yeol, I suggest we consider a 
&gt; Bluez/DBUS "version" property (for simplicity, a String) for the 
&gt; org.bluez.Control interface, to allow users to know just what they are 
&gt; dealing with.  Any thoughts?

Yeah. Looks good to me.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222132205</emailId><senderName>Folkert van Heusden</senderName><senderEmail>folkert@vanheusden.com</senderEmail><timestampReceived>2008-12-22 13:22:05-0400</timestampReceived><subject>Re: /var/lib/bluetooth/$BDADDR/names, when does that file get</subject><body>

&gt; &gt; When does /var/lib/bluetooth/$BDADDR/names get updated?
&gt; &gt; Because hcitool inq does not tell the names while hcitool scan does not
&gt; &gt; tell class of the devices.
&gt; every time a HCI remote name complete event is received. Or in case of
&gt; Bluetooth 2.1 when an Extended Inquiry Result with name information is
&gt; recieved.

Ah ok.

F.y.i.: I was trying to monitor 24/7 if a bluetooth device with a specific
mac-address and device-name was in reach of the system with that bluetooth-
dongle. Worked like a charm but unfortunately these usb-dongles die
(brakedown) in a couple of days.


Folkert van Heusden

-- 
MultiTail cok yonlu kullanimli bir program, loglari okumak, verilen
kommandolari yerine getirebilen. Filter, renk verme, merge, 'diff-
view', vs.  http://www.vanheusden.com/multitail/
----------------------------------------------------------------------
Phone: +31-6-41278122, PGP-key: 1F28D8AE, www.vanheusden.com
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081222161621</emailId><senderName>"Christian Hoene"</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-22 16:16:21-0400</timestampReceived><subject>Fix for not decoding a too small SBC frame</subject><body>

Dies ist eine mehrteilige Nachricht im MIME-Format.


Hello,

is it for any good that SBC tries to decode a frame even if it is too =
small
or missing?
Attached you find a patch.

Greetings

 Christian


--------------------------------------------------------
Dr.-Ing. Christian Hoene
Computer Networks and Internet, University of T=FCbingen
Sand 13, 72076 T=FCbingen, Germany, Phone +49 7071 2970532
http://net.informatik.uni-tuebingen.de/~hoene



["do_not_decode_frame_that_is_too_small.patch" (application/octet-stream)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..263d46a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1196,6 +1196,9 @@ int sbc_decode(sbc_t *sbc, void *input, int input_len, void *output,
 	if (written)
 		*written = 0;
 
+	if (framelen&lt;=0)
+		return framelen;
+
 	samples = sbc_synthesize_audio(&amp;priv-&gt;dec_state, &amp;priv-&gt;frame);
 
 	ptr = output;

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081222192103</emailId><senderName>"jaikumar Ganesh"</senderName><senderEmail>jaikumarg@gmail.com</senderEmail><timestampReceived>2008-12-22 19:21:03-0400</timestampReceived><subject>Re: conn-&gt;state vs conn-&gt;sk-&gt;sk_state</subject><body>

Hi Marcel,

On Mon, Dec 22, 2008 at 2:18 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; &gt;&gt;&gt; Looking at this a bit further, I see a discrepancy between the code in
&gt;&gt; &gt;&gt;&gt; function  hci_conn_complete_evt and hci_sync_conn_complete_evt.
&gt;&gt; &gt;&gt;&gt; Is this intentional or a bug ? Like I said below, using
&gt;&gt; &gt;&gt;&gt; hci_conn_complete_evt (when the AG doesn't support eSCO) results in
&gt;&gt; &gt;&gt;&gt; the connect() never returning because the socket state is not updated.
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;&gt; I still have no idea what's your problem. It doesn't matter if the
&gt;&gt; &gt;&gt; remote side supports eSCO or not. The sync setup commands can be used
&gt;&gt; &gt;&gt; even for setting up SCO channels.
&gt;&gt; &gt;&gt;
&gt;&gt; &gt;
&gt;&gt; &gt;  So here is the problem:
&gt;&gt; &gt;     The  AG doesn't support eSCO i.e disable_esco is Y and
&gt;&gt; &gt; lmp_esco_capable(dev) evaluates to 0, so we try to establish a SCO
&gt;&gt; &gt; channel irrespective of whether the remote support eSCO or not.
&gt;&gt; &gt;
&gt;&gt; &gt;  So sco_connect is called, and after the hci_connect, hcon-&gt;state is
&gt;&gt; &gt; BT_CONNECT and the sk-&gt;sk_state = BT_CONNECT.
&gt;&gt; &gt;  When we get a response from the remote device
&gt;&gt; &gt; hci_connect_complete_evt is called which sets the conn-&gt;state to
&gt;&gt; &gt; BT_CONNECTED. However, as
&gt;&gt; &gt;  hci_proto_connect_cfm is not called (this was being called in
&gt;&gt; &gt; 2.6.25) ,  sk-&gt;sk_state remained in BT_CONNECT state. Hence, we get
&gt;&gt; &gt; stuck in bt_sock_wait_state
&gt;&gt; &gt;  and the connect() times out.
&gt;&gt;
&gt;&gt;
&gt;&gt; Explained another way:
&gt;&gt;
&gt;&gt; JK found that in 2.6.27 with "echo Y &gt;
&gt;&gt; /sys/module/sco/parameters/disable_esco" the socket state is never
&gt;&gt; updated to BT_CONNECTED. The userspace connect() call then times out,
&gt;&gt; even though the transport is connected. This appears to be because
&gt;&gt; hci_proto_connect_cfm() is not called when the connection complete
&gt;&gt; event arrives. Below is a patch that resolves this issue for us.
&gt;&gt;
&gt;&gt; This is a request for comment as to whether this patch is correct. It
&gt;&gt; contradicts Marcel's change 769be974 which explicitly moved
&gt;&gt; hci_proto_connect_cfm() into the ev-&gt;status conditional.
&gt;
&gt; now I get what you are talking about. You guys should have sent the
&gt; patch from the beginning since that makes it clear what you are trying
&gt; to achieve.
&gt;
&gt; So the patch is wrong, because it breaks Simple Pairing. What you have
&gt; to do is check if it is an ACL link, then the code is doing the right
&gt; thing and doing features requests first.
&gt;
&gt;        if (ev-&gt;status) {
&gt;                hci_proto_connect_cfm(conn, ev-&gt;status);
&gt;                hci_conn_del(conn);
&gt;        } else if (ev-&gt;link_type != ACL_LINK)
&gt;                hci_proto_connect_cfm(conn, ev-&gt;status);
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;
&gt;
Sorry for not sending the patch before, we did the patch only on Friday.
Will change it according to your suggestion and submit.

Thanks
Jaikumar
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223005034</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 00:50:34-0400</timestampReceived><subject>Re: Tools for AVDTP / AVCTP qualification</subject><body>

Hi Nick,

&gt; Do there exist any tools to help pass Bluez AVDTP and AVCTP stack qualification?
&gt; 
&gt; Looking at the test spec it seems some command line tools might be
&gt; handy. I am thinking along the lines of l2test, hcitool etc. I'll be
&gt; writing some similar for AVDTP and AVCTP unless there are already some
&gt; floating around?

we only have avinfo at the moment since the whole AVDTP and AVCTP is
highly integrated into our audio plugin. At some point we were thinking
of doing a AVDTP kernel layer, but never got to it and also it was not
really needed. Putting AVCTP in the kernel would make no sense anyway.

So instead of implementing the whole protocol again to just pass the
qualification tests would be totally stupid. And to be honest the
testing should be just working fine with establishing or accepting
proper A2DP connection.

For the A2DP tests of the PTS suite, I just used GStreamer's gst-launch
with a proper pipeline.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223142830</emailId><senderName>Christian Hoene</senderName><senderEmail>hoene@uni-tuebingen.de</senderEmail><timestampReceived>2008-12-23 14:28:30-0400</timestampReceived><subject>Re: Patch for supporting even more command line parameters in</subject><body>

&gt; Fixed. Attached the patch.

Sorry, not perfect yet. Here an UPDATE.

&gt; 
&gt;  Christian
&gt; 
&gt; 
&gt; 

["patch_for_empty_frames_and_more_sbcenc_parameters2.diff" (patch_for_empty_frames_and_more_sbcenc_parameters2.diff)]

diff --git a/sbc/sbc.c b/sbc/sbc.c
index 5411893..263d46a 100644
--- a/sbc/sbc.c
+++ b/sbc/sbc.c
@@ -1196,6 +1196,9 @@ int sbc_decode(sbc_t *sbc, void *input, int input_len, void *output,
 	if (written)
 		*written = 0;
 
+	if (framelen&lt;=0)
+		return framelen;
+
 	samples = sbc_synthesize_audio(&amp;priv-&gt;dec_state, &amp;priv-&gt;frame);
 
 	ptr = output;
diff --git a/sbc/sbcenc.c b/sbc/sbcenc.c
index 74a3434..362c77d 100644
--- a/sbc/sbcenc.c
+++ b/sbc/sbcenc.c
@@ -72,8 +72,8 @@ static ssize_t __write(int fd, const void *buf, size_t count)
 	return pos;
 }
 
-static void encode(char *filename, int subbands,
-					int bitpool, int joint, int snr)
+static void encode(char *filename, int subbands, int bitpool, int joint,
+   			int dualchannel, int snr, int blocks)
 {
 	struct au_header *au_hdr;
 	unsigned char input[2048], output[2048];
@@ -131,12 +131,24 @@ static void encode(char *filename, int subbands,
 
 	sbc.subbands = subbands == 4 ? SBC_SB_4 : SBC_SB_8;
 
-	if (BE_INT(au_hdr-&gt;channels) == 1)
+	if (BE_INT(au_hdr-&gt;channels) == 1) {
 		sbc.mode = SBC_MODE_MONO;
-	else if (joint)
+		if (joint || dualchannel) {
+			fprintf(stderr, "Audio file is mono but joint or"
+				"dualchannel mode has been specified\n");
+			goto done;
+		}
+	} else if (joint &amp;&amp; !dualchannel)
 		sbc.mode = SBC_MODE_JOINT_STEREO;
-	else
-		sbc.mode = SBC_MODE_STEREO;
+	else if (!joint &amp;&amp; dualchannel)
+    		sbc.mode = SBC_MODE_DUAL_CHANNEL;
+	else if (!joint &amp;&amp; !dualchannel)
+    		sbc.mode = SBC_MODE_STEREO;
+	else  {
+		fprintf(stderr, "Both joint and dualchannel mode have been"
+				"specified\n");
+		goto done;
+	}
 
 	sbc.endian = SBC_BE;
 	count = BE_INT(au_hdr-&gt;data_size);
@@ -145,15 +157,20 @@ static void encode(char *filename, int subbands,
 
 	sbc.bitpool = bitpool;
 	sbc.allocation = snr ? SBC_AM_SNR : SBC_AM_LOUDNESS;
+	sbc.blocks = blocks == 4 ? SBC_BLK_4 :
+			blocks == 8 ? SBC_BLK_8 :
+			blocks == 12 ? SBC_BLK_12 : SBC_BLK_16;
 
-	if(verbose) {
+	if (verbose) {
 		fprintf(stderr,"encoding %s with rate %d, %d subbands, "
-			"%d bits, allocation method %s and mode %s\n",
+			"%d bits, allocation method %s, mode %s, "
+			"and %d blocks\n",
 			filename, srate, subbands, bitpool,
 			sbc.allocation == SBC_AM_SNR ? "SNR" : "LOUDNESS",
 			sbc.mode == SBC_MODE_MONO ? "MONO" :
 					sbc.mode == SBC_MODE_STEREO ?
-						"STEREO" : "JOINTSTEREO");
+						"STEREO" : "JOINTSTEREO",
+			blocks);
 	}
 
 	while (1) {
@@ -209,7 +226,10 @@ static void usage(void)
 		"\t-s, --subbands       Number of subbands to use (4 or 8)\n"
 		"\t-b, --bitpool        Bitpool value (default is 32)\n"
 		"\t-j, --joint          Joint stereo\n"
+		"\t-d, --dualchannel    Dual channel\n"
 		"\t-S, --snr            Use SNR mode (default is loudness)\n"
+		"\t-B, --blocks         Number of blocks to use (4, 8, 12 "
+			"or 16)\n"
 		"\n");
 }
 
@@ -219,15 +239,18 @@ static struct option main_options[] = {
 	{ "subbands",	1, 0, 's' },
 	{ "bitpool",	1, 0, 'b' },
 	{ "joint",	0, 0, 'j' },
+	{ "dualchannel",0, 0, 'd' },
 	{ "snr",	0, 0, 'S' },
+	{ "blocks",	1, 0, 'B' },
 	{ 0, 0, 0, 0 }
 };
 
 int main(int argc, char *argv[])
 {
-	int i, opt, subbands = 8, bitpool = 32, joint = 0, snr= 0;
+	int i, opt, subbands = 8, bitpool = 32, joint = 0, dualchannel = 0;
+	int snr = 0, blocks = 16;
 
-	while ((opt = getopt_long(argc, argv, "+hvs:b:jS",
+	while ((opt = getopt_long(argc, argv, "+hvs:b:jdSB:",
 						main_options, NULL)) != -1) {
 		switch(opt) {
 		case 'h':
@@ -255,10 +278,24 @@ int main(int argc, char *argv[])
 			joint = 1;
 			break;
 
+		case 'd':
+			dualchannel = 1;
+			break;
+
 		case 'S':
 			snr = 1;
 			break;
 
+		case 'B':
+    		        blocks = atoi(optarg);
+			if (blocks != 16 &amp;&amp; blocks != 12 &amp;&amp;
+				blocks != 8 &amp;&amp; blocks != 4) {
+				fprintf(stderr, "Invalid blocks %d!\n",
+					blocks);
+				exit(1);
+			}
+			break;
+
 		default:
 			exit(1);
 		}
@@ -274,7 +311,8 @@ int main(int argc, char *argv[])
 	}
 
 	for (i = 0; i &lt; argc; i++)
-		encode(argv[i], subbands, bitpool, joint, snr);
+	        encode(argv[i], subbands, bitpool, joint, dualchannel,
+		       snr, blocks);
 
 	return 0;
 }

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081223230418</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 23:04:18-0400</timestampReceived><subject>Re: Two updated patches</subject><body>

Hi Christian,

&gt; again. Hopefully, I got all coding style rules right this time.
&gt; Here my two patches.

so I applied both patches, but I actually had to touch your options
patch to make it look a little bit nicer and fix some pending coding
style stuff. Don't worry, non of that is obvious. The cases where you
have too many options or statements in if/while etc. for format strings
are kind nasty. The reason for being so strict here is that the code
must remain easy readable even after years. The right and more clean
indentation is crucial here 

Also in the future please use git-format-patch so I can just commit them
directly. That way also your name shows up in the repository. And that
way you get forced to write a commit message. If I have to write the
commit message by myself, I don't bother changing the author ;)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223230624</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 23:06:24-0400</timestampReceived><subject>RE: Does anyone know how to change the a2dp audio output stream</subject><body>

Hi,

&gt; Somebody said that Pulse audio needs a lot of resource.
&gt; ( I don't know well pulse audio.. but in case of me I should check the performance )

I don't know how much resources PulseAudio actually consumes and you
better ask the Pulse guys directly.

&gt; Do you think that this matter is solved only by pulse audio or like that..?

The BlueZ implementation for A2DP is not responsible for mixing or
anything else. It is just an audio transport. It is like _one_ audio
card with hotplug. Every mixing or stream switching must be done by the
audio system itself.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223231040</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 23:10:40-0400</timestampReceived><subject>Re: understading bluetooth init</subject><body>

Hi Claudio,

first things first, don't top-post on the mailing list. It is a proper
open source mailing list that uses bottom posting and inline quoting.

&gt; I'm using an arduino board and a ps3 gamepad to move 3 servos for a
&gt; small robotic arm. I would like to put a BT dongle to the arduino, the
&gt; one that is used from a normal computer, without buy a bluetooth module
&gt; that cost too much for now because my arm is just a prototype for
&gt; something that i'll build in the few months.
&gt; Anyway to make it short, i don't need to make huge data transfer, but
&gt; just some bytes, so i can skip many USB and BT features to do that?
&gt; 
&gt; I know something about bluez because is searched inside source code to
&gt; create Rbluez, ruby c extension, but i tried to find out what exactly
&gt; happen, in kernel space and user space, when i plug a usb dongle but,
&gt; for me, is too much now.
&gt; 
&gt; Maybe to start this search you can tell me which file is have to
&gt; investigate!

as I said before, there is no easy answer to such a question. You can
grab one of my old presentation that I did around 2003, but even that
might not help that much. It is a really complex system. Sorry, there is
nothing I can really do in a quick answer. If you wanna look into the
kernel code, look at net/bluetooth/ and include/net/bluetooth/. The
actual drivers for the USB dongle is at drivers/bluetooth/btusb.c.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081223231151</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-23 23:11:51-0400</timestampReceived><subject>Re: python examples for keyboard connection</subject><body>

Hi Brad,

&gt; I'm working on gumstix overo/oe so the regular gnome stuff is not
&gt; available. This system is running bluez 3.36. I can work on updating
&gt; to 4.x if it helps.

you should do that since the 3.x series is kinda outdated.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229223740</emailId><senderName>David Thornton</senderName><senderEmail>david@villagepublishing.com.au</senderEmail><timestampReceived>2008-12-29 22:37:40-0400</timestampReceived><subject>BCCMDs</subject><body>

Hi,

(sorry, i posted to Marcel - then joined the mailing list so it looked 
like i posted to him directly sorry!)

Well any way: i was wondering if someone could show me a quick bluecore 
comand demo - like a warm reset or something
(in a C array, and if you could heavily commented :)

Anything you have to teach me about bccmds would be appreciated!

Thanks
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229230034</emailId><senderName>David Thornton</senderName><senderEmail>david@villagepublishing.com.au</senderEmail><timestampReceived>2008-12-29 23:00:34-0400</timestampReceived><subject>Re: BCCMDs</subject><body>

Hi,

Also (and this was my main problem) how do you dissect bccmd responses - 
lol i know 0x04 then 0xff then im stumped!

(do bccmds generate COMMAND_STATUS (0x0f) HCI responses ? )

thanks again!

David Thornton wrote:
&gt; Hi,
&gt;
&gt; (sorry, i posted to Marcel - then joined the mailing list so it looked 
&gt; like i posted to him directly sorry!)
&gt;
&gt; Well any way: i was wondering if someone could show me a quick 
&gt; bluecore comand demo - like a warm reset or something
&gt; (in a C array, and if you could heavily commented :)
&gt;
&gt; Anything you have to teach me about bccmds would be appreciated!
&gt;
&gt; Thanks
&gt; -- 
&gt; To unsubscribe from this list: send the line "unsubscribe 
&gt; linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
&gt;

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081225130933</emailId><senderName>"eial () cs ! bgu ! ac ! il"</senderName><senderEmail>eial@cs.bgu.ac.il</senderEmail><timestampReceived>2008-12-25 13:09:33-0400</timestampReceived><subject>can't seem to be able to get bluez working with motorola H500 headset</subject><body>


hello, I got a gentoo 64 bit os, with kernel 2.6.27, I'm trying to make my motorola \
h500 work but after starting the service and the headset, scanning after the headsets \
wont return findings...

got the following installed bluez programs:
bluez-utils-3.36, bluez-libs-3.36.

here is my relevant .config section
CONFIG_BT=y
CONFIG_BT_L2CAP=m
CONFIG_BT_SCO=m
CONFIG_BT_RFCOMM=m
CONFIG_BT_RFCOMM_TTY=y
CONFIG_BT_BNEP=m
CONFIG_BT_BNEP_MC_FILTER=y
CONFIG_BT_BNEP_PROTO_FILTER=y
CONFIG_BT_HIDP=m

#
# Bluetooth device drivers
#
CONFIG_BT_HCIBTUSB=m
CONFIG_BT_HCIBTSDIO=m
CONFIG_BT_HCIUART=m
CONFIG_BT_HCIUART_H4=y
CONFIG_BT_HCIUART_BCSP=y
CONFIG_BT_HCIUART_LL=y
CONFIG_BT_HCIBCM203X=m
CONFIG_BT_HCIBPA10X=m
CONFIG_BT_HCIBFUSB=m
CONFIG_BT_HCIVHCI=m
# CONFIG_AF_RXRPC is not set

here is lsusb output:
Bus 003 Device 005: ID 0a5c:4500 Broadcom Corp.
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0         8
  idVendor           0x0a5c Broadcom Corp.
  idProduct          0x4500
  bcdDevice            1.00
  iManufacturer           1 Broadcom
  iProduct                2 BCM2046B1
  iSerial                 0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower               94mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0001  1x 1 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             3
  wHubCharacteristic 0x0004
    Ganged power switching
    Compound device
    Ganged overcurrent protection
  bPwrOn2PwrGood       50 * 2 milli seconds
  bHubContrCurrent    100 milli Ampere
  DeviceRemovable    0x0e
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0103 power enable connect
   Port 2: 0000.0103 power enable connect
   Port 3: 0000.0100 power
Device Status:     0x0001
  Self Powered

here are the config files:
# Configuration file for the audio service

# This section contains options which are not specific to any
# particular interface
[General]

# Switch to master role for incoming connections (defaults to true)
#Master=true

# If we want to disable support for specific services
# Defaults to supporting all implemented services
#Disable=Control,Source

# SCO routing. Either PCM or HCI (in which case audio is routed to/from ALSA)
# Defaults to HCI
#SCORouting=PCM

# Headset interface specific options (i.e. options which affect how the audio
# service interacts with remote headset devices)
[Headset]

# Set to true to support HFP (in addition to HSP only which is the default)
# Defaults to false
HFP=false

# HFP Gateway features
# Defaults to false
3WayCalling=false
EchoCancelNoiseCancel=false
VoiceRecognition=false
InBandRingtone=false
VoiceTags=false
RejectingCalls=false
EnhancedCallStatus=false
EnhancedCallControl=false
ExtendedErrorResultCodes=false

# Just an example of potential config options for the other interfaces
#[A2DP]
#SBCSources=1
#MPEG12Sources=0
#
# HCI daemon configuration file.
#

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        #   none  - Pairing disabled
        #   multi - Allow pairing with already paired devices
        #   once  - Pair once and deny successive attempts
        pairing multi;

        # Default PIN code for incoming connections
        passkey "0000";
}

# Default settings for HCI devices
device {
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ (%d)";

        # Local device class
        class 0x000100;

        # Default packet type
        #pkt_type DH1,DM1,HV1;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        #   none   - no specific policy
        #   accept - always accept incoming connections
        #   master - become master on incoming connections,
        #            deny role switch on outgoing connections
        lm accept;

        # Default link policy
        #   none    - no specific policy
        #   rswitch - allow role switch
        #   hold    - allow hold mode
        #   sniff   - allow sniff mode
        #   park    - allow park mode
        lp rswitch,hold,sniff,park;
}
# Configuration file for the input service

# This section contains options which are not specific to any
# particular interface
[General]

# Set idle timeout (in minutes) before the connection will
# be disconnect (defaults to 0 for no timeout)
#IdleTimeout=30
# Configuration file for the network service

# This section contains options which are not specific to any
# particular interface
[General]

# If we want to disable support for specific services
# Defaults to supporting all implemented services
#Disable=Connection,Server

# Disable link encryption: default=false
#DisableSecurity=true

[PANU Role]

# Network interface name for PANU for connections. default:bnep%d
# (up to 16 characters)
#Interface=

# PAN user connection interface up script. default:none
Script=avahi-autoipd

[GN Role]

# Network Interface name for Group Network server. default:pan0
#Interface=

# Group Network connection interface up script. default:none
Script=avahi-autoipd

[NAP Role]

# Network Interface name for Network Access Point server. default:pan1
#Interface=

# Network Access Point connection interface up script. default:none
Script=dhclient
#
# RFCOMM configuration file.
#

#rfcomm0 {
#       # Automatically bind the device at startup
#       bind no;
#
#       # Bluetooth address of the device
#       device 11:22:33:44:55:66;
#
#       # RFCOMM channel for the connection
#       channel 1;
#
#       # Description of the connection
#       comment "Example Bluetooth device";
#}

anymore needed data I'll provide, just ask, thanks in advance for the help.


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081230014747</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-30 01:47:47-0400</timestampReceived><subject>Re: BCCMDs</subject><body>

Hi David,

&gt; (sorry, i posted to Marcel - then joined the mailing list so it looked 
&gt; like i posted to him directly sorry!)
&gt; 
&gt; Well any way: i was wondering if someone could show me a quick bluecore 
&gt; comand demo - like a warm reset or something
&gt; (in a C array, and if you could heavily commented :)
&gt; 
&gt; Anything you have to teach me about bccmds would be appreciated!

the bccmd tool comes with full source code and it contains an example to
warm reset a device. Same as the bdaddr tool. So what else do you need.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081230051514</emailId><senderName>David Thornton</senderName><senderEmail>david@villagepublishing.com.au</senderEmail><timestampReceived>2008-12-30 05:15:14-0400</timestampReceived><subject>bccmds</subject><body>

Thanks,

I looked at bccmd.c in /tools right after you posted - and hence solved 
my problem.

I am, though, getting a strange error after sending an HCI inquiry command.

here are the first 15 lines of each response:

thingo: 0x04
thingo: 0x0f
thingo: 0x04
thingo: 0x00
thingo: 0x01
thingo: 0x00
thingo: 0x00
thingo: 0x00
thingo: 0x00
thingo: 0x00

that packet is normal - command status event

thingo: 0x04
thingo: 0x10
thingo: 0x01
thingo: 0x35
thingo: 0x01
thingo: 0x00
thingo: 0x00
thingo: 0x00
thingo: 0x00
thingo: 0x00

hardware error - but i cannot tell what the error code means (yes i will 
check Core Spec 2.0 now :) )

thingo: 0x04
thingo: 0xff
thingo: 0x1f
thingo: 0xc3
thingo: 0x02
thingo: 0x00
thingo: 0x0f
thingo: 0x00
thingo: 0x20
thingo: 0xa7

this packet looks like a CSR manufaturer specific response (0xff) what 
does that mean?

even stranger is when run again and every subsequent time before a 
reboot (of bluecore) it  works and gives back the correct amount of 
hosts found!!!

Is it to do with some kind of baud error? Bluecore can adapt to 
different baud rates just by looking at the data sent over time - but i 
want to know what effect this - moreover what it mucks up.

thanks and sorry for the long email
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081230201526</emailId><senderName>Steffen Pankratz</senderName><senderEmail>kratz00@gmx.de</senderEmail><timestampReceived>2008-12-30 20:15:26-0400</timestampReceived><subject>hci_usb problem after rmmod/modprobe</subject><body>

[Attachment #2 (multipart/mixed)]


Hi,

everything is fine until I unload and reload hci_usb:

hciconfig hci0 up
Can't init device hci0: Input/output error (5)

from dmesg:
hci_usb_intr_rx_submit: hci0 intr rx submit failed urb f406cf54 err -2

I tried 'modprobe hci_usb reset=1' which did not solve the problem.

To get it working again I have to do:

rmmod hci_usb bluetooth uhci_hcd
modprobe uhci_hcd
modprobe hci_usb

Not sure what information could be helpful:

Linux hermes 2.6.28 #2 PREEMPT Tue Dec 30 16:30:47 CET 2008 i686 i686
i386 GNU/Linux

lsusb -v output is attached
lspci -vv output is attached


Thanks
-Steffen

-- 
Hermes powered by LFS SVN-20070420 (Linux 2.6.28)

Best regards, Steffen Pankratz.

["lspci" (application/octet-stream)]
["lsusb" (application/octet-stream)]
["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081230202220</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-30 20:22:20-0400</timestampReceived><subject>Re: hci_usb problem after rmmod/modprobe</subject><body>

Hi Steffen,

&gt; everything is fine until I unload and reload hci_usb:
&gt; 
&gt; hciconfig hci0 up
&gt; Can't init device hci0: Input/output error (5)
&gt; 
&gt; from dmesg:
&gt; hci_usb_intr_rx_submit: hci0 intr rx submit failed urb f406cf54 err -2
&gt; 
&gt; I tried 'modprobe hci_usb reset=1' which did not solve the problem.
&gt; 
&gt; To get it working again I have to do:
&gt; 
&gt; rmmod hci_usb bluetooth uhci_hcd
&gt; modprobe uhci_hcd
&gt; modprobe hci_usb
&gt; 
&gt; Not sure what information could be helpful:
&gt; 
&gt; Linux hermes 2.6.28 #2 PREEMPT Tue Dec 30 16:30:47 CET 2008 i686 i686
&gt; i386 GNU/Linux

if you are using 2.6.28 kernel, then just use the btusb driver instead
of hci_usb. The hci_usb will be removed with 2.6.29 anyway.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081231100229</emailId><senderName>"menno"</senderName><senderEmail>jongerenchaos@zonnet.nl</senderEmail><timestampReceived>2008-12-31 10:02:29-0400</timestampReceived><subject>Bluez disconnect Motorola phone when using in combination with</subject><body>

I use chan_mobile for incomming and outbound calls in combination with
bluez 4.19. This works well but i
think there is a problem with the audio buffer. Some examples:

Inbound call (from cellphone):
Audio from cellphone to asterisk is delayed (with 1 second and after a
while this will be bigger and bigger)
Audio from asterisk to the cellphone is NOT delayed

Outbound call (to the cellphone):
Audio from cellphone to asterisk is delayed (with 1 second and after a
while this will be bigger and bigger)
Audio from asterisk to the cellphone is NOT delayed

I use:
- Asterisk SVN-trunk-r166731
- CSR BC4(bluetooth dongle)
- 2.6.28-3-server ubuntu kernel
- bluez 4.19 (tar.gz version)
- L6 motorola phones
- Class: 0x200404
- Chan_mobile (
http://svn.digium.com/svn/asterisk-addons/trunk/channels/chan_mobile.c )

I think there is a problem with the buffer. I think he can't loose the
bufferoverflow and the frame size is bigger and bigger or something.

When i use bluez 4.25 the audio is in the begin also delayed (short delay
&lt;0.5 second). But within 1 minute the delay is away for the next 5
minutes! After 5 minutes the delay becomes again higher and higher and
after 20 &lt;&gt; 40 minutes the connection is broken between the bluetooth
phone and asterisk.

How can we resolve this problem (can anybody look at the chan_mobile file
and give a patch so that i can test it)??


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081224012326</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-12-24 01:23:26-0400</timestampReceived><subject>Re: [patch] fix the bug of obex_object_resume(), obex_server() in openobex</subject><body>

Hi Forrest,

On Dec 23, 2008, at 3:33, Zhao Forrest wrote:
&gt; When developing the PBAP server in obexd we found that
&gt; obex_object_resume() can't work as expected. After debugging openobex
&gt; we post this patch to fix the bug. We did the internal test with PBAP
&gt; server/client. The below patch fixes the bug in obex_object_resume()
&gt; and obex_server().

The patch seems fine and has been pushed upstream, thanks! Btw, in the  
future please use the openobex-users mailing list for openobex  
specific patches.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081224061737</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-24 06:17:37-0400</timestampReceived><subject>RE: [patch] obexd: if path == NULL, don't call</subject><body>

Hi Raymond,

&gt; &gt;You should really start thinking for the error =&gt; return paradigm all
&gt; &gt;the time. This makes the code a lot simpler to read.
&gt;
&gt; OK, Got it. Resent

applied to the bluez.git and obexd.git trees. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229101813</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-12-29 10:18:13-0400</timestampReceived><subject>Re: can somebody show me an example asound configuration for dmixing</subject><body>

&gt; Hello everybody,
&gt; 
&gt; I have been periodically trying to get multiple audio sources to play
&gt; together (dmixing) to a hifi bluetooth speaker system or hifi bluetooth
&gt; headset.
&gt; 
&gt; I am using only alsa and no pulseaudio, esd, jack, mas of something else
&gt; just alsa with asoundrc configuration files and no graphical environment.
&gt; 
&gt; Can somebody show me an example asoundrc config file to make it possible
&gt; to use software audio mixing with my bluetooth devices. If this is
&gt; currently not possible, please tell why and what we can do about it. I
&gt; am willing to donate some payal money to the person providing me with a
&gt; working asoundrc configuration file that allows me to play multiple
&gt; audio sources at the same time.
&gt; 
&gt; Thanks in advance,
&gt; 
&gt; Jelle
&gt; 

Bumping up this mail, I would really like to see a solution for my
problem or receive information why the problem is not possible not solvable?

Thanks in advance for any help,

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229103350</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 10:33:50-0400</timestampReceived><subject>Re: [PATCH] sbc: fix for overflow bug in quantization code</subject><body>

Hi Siarhei,

&gt; &gt; If we try to use more realistic settings similar to the recommended high
&gt; &gt; quality settings from SBC specification (Table 4.7):
&gt; &gt; ./sbcenc -j -S -b 51 BigBuckBunny-stereo.au &gt;BigBuckBunny-stereo.sbc
&gt; &gt;
&gt; &gt; bluez 16-bit fixed point:
&gt; &gt; stddev:   43.82 PSNR: 63.48 bytes:114491016/114491308
&gt; &gt;
&gt; &gt; bluez 32-bit fixed point:
&gt; &gt; stddev:   43.78 PSNR: 63.49 bytes:114491016/114491308
&gt; &gt;
&gt; &gt; reference encoder:
&gt; &gt; stddev:   43.37 PSNR: 63.57 bytes:114491016/114491308
&gt; [...]
&gt; &gt; PS. I still wonder why there is a loss when compared to reference encoder.
&gt; &gt; 32-bit fixed point version should be even more precise than single
&gt; &gt; precision floating point. Maybe there could be another minor bug in the
&gt; &gt; code, or it is just a random deviation and there could be a win for other
&gt; &gt; audio files.
&gt; 
&gt; Found what's the matter. It's a problem in subbands selection criteria for
&gt; joint-stereo. The following patch fixes it.

patch has been applied and pushed upstream. In the future, please leave
the Signed-off-by line out of it. That one is only a requirement for
kernel code and I never required it for BlueZ.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229113740</emailId><senderName>"Ronald"</senderName><senderEmail>emasa@cox.net</senderEmail><timestampReceived>2008-12-29 11:37:40-0400</timestampReceived><subject>Ronald sent you a Greeting!</subject><body>

Ronald has sent a Xmas Greeting.
Here's your Christmas e-card: http://itsfatherchristmas.com/?code=e350b8a74ba
Cheers, Cardweaver.com Team

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229115611</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-29 11:56:11-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Hi Siarhei,

&gt; &gt; Right now I'm also doublechecking correctness of the code to ensure that
&gt; &gt; there are no overflows of other problems related to audio quality.
&gt; 
&gt; Here is (hopefully) the final revision of patch. I tested it with all the possible files
&gt; that I could find or generate myself and it seems to work fine in all cases.
&gt; 
&gt; The code was reverted to use fabs macro. After all, looks like it is the right
&gt; way to handle scale factors and adheres to the specification. The weird
&gt; effects on sound quality related to the use of fabs and the modified macro
&gt; which was tried as a replacement have been apparently the side effects of
&gt; other bugs.
&gt; 
&gt; Also I have to admit that the change from
&gt; http://marc.info/?l=linux-bluetooth&amp;m=122946440507726&amp;w=2
&gt; is not needed and the original patch was in fact correct. The output of
&gt; quantizer is strictly a positive number (unless there are bugs or overflows).
&gt; This was also changed back.
&gt; 
&gt; Rounding for the values in the final analysis function output was removed
&gt; (we already keep a lot of extra bits in output, so it does not matter for
&gt; precision). Also the change of SCALE_OUT_BITS to 15 has a nice feature
&gt; that the shifting of output values is not needed at all for 16-bit version
&gt; (and naturally rounding is not needed here too), this should be good for
&gt; performance.

I applied your patch to the upstream tree. Thanks for your work. I know
like to get feedback from other people if this helps us with the SBC
conformance testing and the audio quality.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081229150403</emailId><senderName>Siarhei Siamashka</senderName><senderEmail>siarhei.siamashka@nokia.com</senderEmail><timestampReceived>2008-12-29 15:04:03-0400</timestampReceived><subject>Re: Testing SBC filtering functions</subject><body>

On Monday 29 December 2008 16:36:15 ext Siarhei Siamashka wrote:
&gt; On Monday 29 December 2008 14:04:29 ext Marcel Holtmann wrote:
&gt; &gt; Hi Siarhei,
&gt; &gt; 
&gt; &gt; &gt; &gt; I wrote this script to make some tests on the SBC decoder and encoder using
&gt; &gt; &gt; &gt; the recommended testing procedure with the reference bitstreams, the
&gt; &gt; &gt; &gt; reference codec and PEAQ. 
&gt; &gt; &gt; &gt; http://net.cs.uni-tuebingen.de/html/nexgenvoip/html/
&gt; &gt; &gt; &gt; I got little bit confused with all the latest patches and whether they are
&gt; &gt; &gt; &gt; included or not. Just send me an email on which patch you like to have
&gt; &gt; &gt; &gt; tested. Running the tests just takes half an hour; me to answer my emails
&gt; &gt; &gt; &gt; maybe a bit longer.
&gt; &gt; &gt; 
&gt; &gt; &gt; Please try the following patch (apply it to the latest git):
&gt; &gt; &gt; http://marc.info/?l=linux-bluetooth&amp;m=123054787830678&amp;w=2
&gt; &gt; &gt; 
&gt; &gt; &gt; You can try the patch "as is", and also with SBC_HIGH_PRECISION define
&gt; &gt; &gt; uncommented. High precision mode is naturally more likely to pass the
&gt; &gt; &gt; conformance tests.
&gt; &gt; &gt; 
&gt; &gt; &gt; I used my own script for testing with 'tiny_psnr' tool for comparing original file
&gt; &gt; &gt; before encoding and the final decoded result (it measures standard deviation
&gt; &gt; &gt; and PSNR). It would be interesting to see how our results correlate.
&gt; &gt; 
&gt; &gt; can you open source tiny_psnr an we merge it into the BlueZ source?
&gt; 
&gt; It is already open source. This very simple tool is used in ffmpeg project
&gt; regression tests (and is part of ffmpeg distribution). It does not do
&gt; anything extraordinary, but just analyzes the difference between several
&gt; audio files and gets standard deviation and PSNR statistics. I just did not
&gt; feel like reinventing the wheel and used it for estimating quality :)
&gt; 
&gt; I only use the following patch on top of it (it can do automatic shift detection):
&gt; http://article.gmane.org/gmane.comp.video.ffmpeg.devel/74597
&gt; I find this patch quite useful (especially as it turns out for SBC), but ffmpeg
&gt; developers do not think so...
&gt; 
&gt; A crude ruby script (sorry, I don't speak shell scripting language) is attached.
&gt; I have been using it for testing audio quality.
&gt; 
&gt; For example, here is the test of a high precision sbcenc build (bitpool=255):
&gt; 
&gt; ./sbc_encode_test.rb BigBuckBunny-stereo.flac
&gt; [2, 48000]
&gt; ["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
&gt; --- comparing original / sbcenc + sbcdec ---
&gt; stddev:  108.67 PSNR: 55.60 bytes:114519261/114520000
&gt; 
&gt; --- comparing original / sbcenc + sbc_decoder.exe ---
&gt; stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000
&gt; 
&gt; --- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
&gt; stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000
&gt; 
&gt; --- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
&gt; stddev:    0.01 PSNR:130.99 bytes:114519552/114519552
&gt; 
&gt; Test of a standard sbcenc build (bitpool=255):
&gt; 
&gt; ./sbc_encode_test.rb BigBuckBunny-stereo.flac
&gt; [2, 48000]
&gt; ["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
&gt; --- comparing original / sbcenc + sbcdec ---
&gt; stddev:  108.71 PSNR: 55.59 bytes:114519261/114520000
&gt; 
&gt; --- comparing original / sbcenc + sbc_decoder.exe ---
&gt; stddev:    2.07 PSNR: 89.98 bytes:114519260/114520000
&gt; 
&gt; --- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
&gt; stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000
&gt; 
&gt; --- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
&gt; stddev:    1.77 PSNR: 91.34 bytes:114519552/114519552

[...] 

&gt; By the way, 'sbcdec' seems to introduce quite a noticeable distortion and
&gt; is orders of magnitude less precise than the encoder.

Please disregard this statement. I only tried to add support for sbcdec as the
last minute change (I did not pay any attention to the decoder audio quality
before today) and forgot to change its output to a normal WAV format
before comparing files. Sorry about that. A fixed script is attached and
updated results are below.

Test of a high precision sbcenc build (bitpool=255):

./sbc_encode_test.rb BigBuckBunny-stereo.flac
[2, 48000]
["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
--- comparing original / sbcenc + sbcdec ---
stddev:    4.49 PSNR: 83.26 bytes:114519260/114520000

--- comparing original / sbcenc + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
stddev:    0.01 PSNR:130.99 bytes:114519552/114519552

Test of a standard sbcenc build (bitpool=255):

./sbc_encode_test.rb BigBuckBunny-stereo.flac
[2, 48000]
["-j -S -s8 -B16 -b255", "-j -l16 -n8 -r1569000"]
--- comparing original / sbcenc + sbcdec ---
stddev:    4.85 PSNR: 82.60 bytes:114519260/114520000

--- comparing original / sbcenc + sbc_decoder.exe ---
stddev:    2.07 PSNR: 89.98 bytes:114519260/114520000

--- comparing original / sbc_encoder.exe + sbc_decoder.exe ---
stddev:    1.09 PSNR: 95.56 bytes:114519260/114520000

--- comparing sbcenc + sbc_decoder.exe / sbc_encoder.exe + sbc_decoder.exe
stddev:    1.77 PSNR: 91.34 bytes:114519552/114519552

Still the sbcdec seems to be the major contributor to quality loss in all cases.


Best regards,
Siarhei Siamashka

["sbc_encode_test.rb" (application/x-ruby)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081230014511</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-30 01:45:11-0400</timestampReceived><subject>Re: Manufacturer ID</subject><body>

Hi Krishnan,

&gt; hci_read_local_version gives the manufacturer of the BT chip. The same id is used \
&gt; in get_inquiry_mode to get the inquiry mode. But I am not seeing any details \
&gt; elsewhere regarding this. Mainly, I am concerned whether manufacturer can be used \
&gt; to find the BT chip make?

check the Bluetooth Assigned Number specification. It defines the
manufacturer id as a unique implementation of LMP. Normally this is done
by the chip manufacturers.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081230051920</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-12-30 05:19:20-0400</timestampReceived><subject>Re: bccmds</subject><body>

Hi David,

&gt; I looked at bccmd.c in /tools right after you posted - and hence solved 
&gt; my problem.
&gt; 
&gt; I am, though, getting a strange error after sending an HCI inquiry command.
&gt; 
&gt; here are the first 15 lines of each response:
&gt; 
&gt; thingo: 0x04
&gt; thingo: 0x0f
&gt; thingo: 0x04
&gt; thingo: 0x00
&gt; thingo: 0x01
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; 
&gt; that packet is normal - command status event
&gt; 
&gt; thingo: 0x04
&gt; thingo: 0x10
&gt; thingo: 0x01
&gt; thingo: 0x35
&gt; thingo: 0x01
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; thingo: 0x00
&gt; 
&gt; hardware error - but i cannot tell what the error code means (yes i will 
&gt; check Core Spec 2.0 now :) )
&gt; 
&gt; thingo: 0x04
&gt; thingo: 0xff
&gt; thingo: 0x1f
&gt; thingo: 0xc3
&gt; thingo: 0x02
&gt; thingo: 0x00
&gt; thingo: 0x0f
&gt; thingo: 0x00
&gt; thingo: 0x20
&gt; thingo: 0xa7
&gt; 
&gt; this packet looks like a CSR manufaturer specific response (0xff) what 
&gt; does that mean?
&gt; 
&gt; even stranger is when run again and every subsequent time before a 
&gt; reboot (of bluecore) it  works and gives back the correct amount of 
&gt; hosts found!!!
&gt; 
&gt; Is it to do with some kind of baud error? Bluecore can adapt to 
&gt; different baud rates just by looking at the data sent over time - but i 
&gt; want to know what effect this - moreover what it mucks up.

you can use "hcidump -X -V -m 10" to have it decode CSR vendor commands
and events. It has support for decoding BCCMDs.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081230052229</emailId><senderName>David Thornton</senderName><senderEmail>david@villagepublishing.com.au</senderEmail><timestampReceived>2008-12-30 05:22:29-0400</timestampReceived><subject>not exactly linux...</subject><body>

I am actually working on porting bluez to the iPhone and as such - 
cannot compile it... yet

Is there some documentation on CSR vendor events i could look at?

thanks for all you help so far.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081230061808</emailId><senderName>"eial () cs ! bgu ! ac ! il"</senderName><senderEmail>eial@cs.bgu.ac.il</senderEmail><timestampReceived>2008-12-30 06:18:08-0400</timestampReceived><subject>Re: can't seem to be able to get bluez working with motorola H500 headset</subject><body>

no one can help me on this issue?

On Thu 25 Dec 15:09 2008 eial@cs.bgu.ac.il wrote:
&gt; 
&gt; hello, I got a gentoo 64 bit os, with kernel 2.6.27, I'm trying to make my motorola \
&gt; h500 work but after starting the service and the headset, scanning after the \
&gt; headsets wont return findings... 
&gt; got the following installed bluez programs:
&gt; bluez-utils-3.36, bluez-libs-3.36.
&gt; 
&gt; here is my relevant .config section
&gt; CONFIG_BT=y
&gt; CONFIG_BT_L2CAP=m
&gt; CONFIG_BT_SCO=m
&gt; CONFIG_BT_RFCOMM=m
&gt; CONFIG_BT_RFCOMM_TTY=y
&gt; CONFIG_BT_BNEP=m
&gt; CONFIG_BT_BNEP_MC_FILTER=y
&gt; CONFIG_BT_BNEP_PROTO_FILTER=y
&gt; CONFIG_BT_HIDP=m
&gt; 
&gt; #
&gt; # Bluetooth device drivers
&gt; #
&gt; CONFIG_BT_HCIBTUSB=m
&gt; CONFIG_BT_HCIBTSDIO=m
&gt; CONFIG_BT_HCIUART=m
&gt; CONFIG_BT_HCIUART_H4=y
&gt; CONFIG_BT_HCIUART_BCSP=y
&gt; CONFIG_BT_HCIUART_LL=y
&gt; CONFIG_BT_HCIBCM203X=m
&gt; CONFIG_BT_HCIBPA10X=m
&gt; CONFIG_BT_HCIBFUSB=m
&gt; CONFIG_BT_HCIVHCI=m
&gt; # CONFIG_AF_RXRPC is not set
&gt; 
&gt; here is lsusb output:
&gt; Bus 003 Device 005: ID 0a5c:4500 Broadcom Corp.
&gt; Device Descriptor:
&gt; bLength                18
&gt; bDescriptorType         1
&gt; bcdUSB               2.00
&gt; bDeviceClass            9 Hub
&gt; bDeviceSubClass         0 Unused
&gt; bDeviceProtocol         0 Full speed (or root) hub
&gt; bMaxPacketSize0         8
&gt; idVendor           0x0a5c Broadcom Corp.
&gt; idProduct          0x4500
&gt; bcdDevice            1.00
&gt; iManufacturer           1 Broadcom
&gt; iProduct                2 BCM2046B1
&gt; iSerial                 0
&gt; bNumConfigurations      1
&gt; Configuration Descriptor:
&gt; bLength                 9
&gt; bDescriptorType         2
&gt; wTotalLength           25
&gt; bNumInterfaces          1
&gt; bConfigurationValue     1
&gt; iConfiguration          0
&gt; bmAttributes         0xe0
&gt; Self Powered
&gt; Remote Wakeup
&gt; MaxPower               94mA
&gt; Interface Descriptor:
&gt; bLength                 9
&gt; bDescriptorType         4
&gt; bInterfaceNumber        0
&gt; bAlternateSetting       0
&gt; bNumEndpoints           1
&gt; bInterfaceClass         9 Hub
&gt; bInterfaceSubClass      0 Unused
&gt; bInterfaceProtocol      0 Full speed (or root) hub
&gt; iInterface              0
&gt; Endpoint Descriptor:
&gt; bLength                 7
&gt; bDescriptorType         5
&gt; bEndpointAddress     0x81  EP 1 IN
&gt; bmAttributes            3
&gt; Transfer Type            Interrupt
&gt; Synch Type               None
&gt; Usage Type               Data
&gt; wMaxPacketSize     0x0001  1x 1 bytes
&gt; bInterval             255
&gt; Hub Descriptor:
&gt; bLength               9
&gt; bDescriptorType      41
&gt; nNbrPorts             3
&gt; wHubCharacteristic 0x0004
&gt; Ganged power switching
&gt; Compound device
&gt; Ganged overcurrent protection
&gt; bPwrOn2PwrGood       50 * 2 milli seconds
&gt; bHubContrCurrent    100 milli Ampere
&gt; DeviceRemovable    0x0e
&gt; PortPwrCtrlMask    0xff
&gt; Hub Port Status:
&gt; Port 1: 0000.0103 power enable connect
&gt; Port 2: 0000.0103 power enable connect
&gt; Port 3: 0000.0100 power
&gt; Device Status:     0x0001
&gt; Self Powered
&gt; 
&gt; here are the config files:
&gt; # Configuration file for the audio service
&gt; 
&gt; # This section contains options which are not specific to any
&gt; # particular interface
&gt; [General]
&gt; 
&gt; # Switch to master role for incoming connections (defaults to true)
&gt; #Master=true
&gt; 
&gt; # If we want to disable support for specific services
&gt; # Defaults to supporting all implemented services
&gt; #Disable=Control,Source
&gt; 
&gt; # SCO routing. Either PCM or HCI (in which case audio is routed to/from ALSA)
&gt; # Defaults to HCI
&gt; #SCORouting=PCM
&gt; 
&gt; # Headset interface specific options (i.e. options which affect how the audio
&gt; # service interacts with remote headset devices)
&gt; [Headset]
&gt; 
&gt; # Set to true to support HFP (in addition to HSP only which is the default)
&gt; # Defaults to false
&gt; HFP=false
&gt; 
&gt; # HFP Gateway features
&gt; # Defaults to false
&gt; 3WayCalling=false
&gt; EchoCancelNoiseCancel=false
&gt; VoiceRecognition=false
&gt; InBandRingtone=false
&gt; VoiceTags=false
&gt; RejectingCalls=false
&gt; EnhancedCallStatus=false
&gt; EnhancedCallControl=false
&gt; ExtendedErrorResultCodes=false
&gt; 
&gt; # Just an example of potential config options for the other interfaces
&gt; #[A2DP]
&gt; #SBCSources=1
&gt; #MPEG12Sources=0
&gt; #
&gt; # HCI daemon configuration file.
&gt; #
&gt; 
&gt; # HCId options
&gt; options {
&gt; # Automatically initialize new devices
&gt; autoinit yes;
&gt; 
&gt; # Security Manager mode
&gt; #   none - Security manager disabled
&gt; #   auto - Use local PIN for incoming connections
&gt; #   user - Always ask user for a PIN
&gt; #
&gt; security auto;
&gt; 
&gt; # Pairing mode
&gt; #   none  - Pairing disabled
&gt; #   multi - Allow pairing with already paired devices
&gt; #   once  - Pair once and deny successive attempts
&gt; pairing multi;
&gt; 
&gt; # Default PIN code for incoming connections
&gt; passkey "0000";
&gt; }
&gt; 
&gt; # Default settings for HCI devices
&gt; device {
&gt; # Local device name
&gt; #   %d - device id
&gt; #   %h - host name
&gt; name "BlueZ (%d)";
&gt; 
&gt; # Local device class
&gt; class 0x000100;
&gt; 
&gt; # Default packet type
&gt; #pkt_type DH1,DM1,HV1;
&gt; 
&gt; # Inquiry and Page scan
&gt; iscan enable; pscan enable;
&gt; 
&gt; # Default link mode
&gt; #   none   - no specific policy
&gt; #   accept - always accept incoming connections
&gt; #   master - become master on incoming connections,
&gt; #            deny role switch on outgoing connections
&gt; lm accept;
&gt; 
&gt; # Default link policy
&gt; #   none    - no specific policy
&gt; #   rswitch - allow role switch
&gt; #   hold    - allow hold mode
&gt; #   sniff   - allow sniff mode
&gt; #   park    - allow park mode
&gt; lp rswitch,hold,sniff,park;
&gt; }
&gt; # Configuration file for the input service
&gt; 
&gt; # This section contains options which are not specific to any
&gt; # particular interface
&gt; [General]
&gt; 
&gt; # Set idle timeout (in minutes) before the connection will
&gt; # be disconnect (defaults to 0 for no timeout)
&gt; #IdleTimeout=30
&gt; # Configuration file for the network service
&gt; 
&gt; # This section contains options which are not specific to any
&gt; # particular interface
&gt; [General]
&gt; 
&gt; # If we want to disable support for specific services
&gt; # Defaults to supporting all implemented services
&gt; #Disable=Connection,Server
&gt; 
&gt; # Disable link encryption: default=false
&gt; #DisableSecurity=true
&gt; 
&gt; [PANU Role]
&gt; 
&gt; # Network interface name for PANU for connections. default:bnep%d
&gt; # (up to 16 characters)
&gt; #Interface=
&gt; 
&gt; # PAN user connection interface up script. default:none
&gt; Script=avahi-autoipd
&gt; 
&gt; [GN Role]
&gt; 
&gt; # Network Interface name for Group Network server. default:pan0
&gt; #Interface=
&gt; 
&gt; # Group Network connection interface up script. default:none
&gt; Script=avahi-autoipd
&gt; 
&gt; [NAP Role]
&gt; 
&gt; # Network Interface name for Network Access Point server. default:pan1
&gt; #Interface=
&gt; 
&gt; # Network Access Point connection interface up script. default:none
&gt; Script=dhclient
&gt; #
&gt; # RFCOMM configuration file.
&gt; #
&gt; 
&gt; #rfcomm0 {
&gt; #       # Automatically bind the device at startup
&gt; #       bind no;
&gt; #
&gt; #       # Bluetooth address of the device
&gt; #       device 11:22:33:44:55:66;
&gt; #
&gt; #       # RFCOMM channel for the connection
&gt; #       channel 1;
&gt; #
&gt; #       # Description of the connection
&gt; #       comment "Example Bluetooth device";
&gt; #}
&gt; 
&gt; anymore needed data I'll provide, just ask, thanks in advance for the help.
&gt; 
&gt; 
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 




--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081230062656</emailId><senderName>Khem Raj</senderName><senderEmail>raj.khem@gmail.com</senderEmail><timestampReceived>2008-12-30 06:26:56-0400</timestampReceived><subject>Re: [patch] hid2hci check usb_init return value</subject><body>

On (29/12/08 13:12), Marcel Holtmann wrote:
&gt; Hi Khem,
&gt; 
&gt; &gt; Working on a system which did not have a USB in it. I was getting a
&gt; &gt; segfault with hid2hci. The problem tracked down was usb_init () was 
&gt; &gt; failing and we did not check for it and carried on with execution. 
&gt; &gt; As a result the next call to libusb failed because we passed in NULL for
&gt; &gt; ctx because during usb_init () this should have been malloc'ed if all
&gt; &gt; have gone correctly but in case of error usb_init () free's up the
&gt; &gt; allocated memory and hence the segfault. 
&gt; &gt; 
&gt; &gt; We should check for return value of usb_init () call and exit
&gt; &gt; immediately if it fails. Tested on 4.24 release. 
&gt; 
&gt; the problem is that usb_init() doesn't return any errors on the versions
&gt; that I have here:
&gt; 
&gt; ii  libusb-0.1-4   2:0.1.12-12    userspace USB programming library
&gt; ii  libusb-dev     2:0.1.12-12    userspace USB programming library
&gt; 
&gt; Applying your patch would break complication on multiple platforms.
What you have is libusb-0.1 which has older API I suppose. There is 
libusb-compat which can be used as a wrapper over libusb1 to give
libusb0 like interfaces. 

Actually I was using libusb-1.0.0 API as mentioned here
http://libusb.sourceforge.net/api-1.0/group__lib.html
that also means that the patch I attached should have been using
libusb_init() instead. 

Here is updated patch

Thanks

-Khem


["hid2hci_usb_init.patch" (text/x-diff)]

# Signed-off-by: Khem Raj &lt;raj.khem@gmail.com&gt;
#
# Use the new usb1 API for usb_init() and check for fails from 
# usb_init (). Currently we see a crash on a system which does
# not have USB because usb_init() fails and it cleans up all initialized
# data (e.g. ctx) which is used in subsequent calls to libusb
# We return immediately if usb_init() fails for some reason.

Index: bluez-4.24/tools/hid2hci.c
===================================================================
--- bluez-4.24.orig/tools/hid2hci.c	2008-10-25 23:40:34.000000000 -0700
+++ bluez-4.24/tools/hid2hci.c	2008-12-29 22:06:04.000000000 -0800
@@ -337,7 +337,7 @@
 int main(int argc, char *argv[])
 {
 	struct device_info dev[16];
-	int i, opt, num, quiet = 0, mode = HCI;
+	int i, ret, opt, num, quiet = 0, mode = HCI;
 
 	while ((opt = getopt_long(argc, argv, "+01qh", main_options, NULL)) != -1) {
 		switch (opt) {
@@ -361,8 +361,9 @@
 	argc -= optind;
 	argv += optind;
 	optind = 0;
-
-	usb_init();
+	ret = libusb_init();
+	if (ret &lt; 0)
+		return ret;
 
 	num = find_devices(mode, dev, sizeof(dev) / sizeof(dev[0]));
 	if (num &lt;= 0) {

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081230111237</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-12-30 11:12:37-0400</timestampReceived><subject>[patch] Fix rfcomm might_sleep issue</subject><body>

Hi,

Here is a patch to fix might_sleep issue that was found during testing.

-- 
Ville

["20081230-0001--BLUETOOTH-Remove-sleeping-functions-from-__rfcomm_.patch" (text/x-patch)]

From a9bcfd0886bd6f54486a277b74247b32fd60f02f Mon Sep 17 00:00:00 2001
From: Ville Tervo &lt;ville.tervo@nokia.com&gt;
Date: Tue, 30 Dec 2008 12:59:01 +0200
Subject: [PATCH] [BLUETOOTH] Remove sleeping functions from __rfcomm_dlc_close

This patch removes code paths that uses functions
that might sleep. In case of rfcomm_send_disc sock_lock()
in l2cap_sock_sendmsg() and in case of rfcomm_queue_disc()
alloc_skb(size, GFP_KERNEL).


Signed-off-by: Ville Tervo &lt;ville.tervo@nokia.com&gt;
---
 net/bluetooth/rfcomm/core.c |   11 +++--------
 1 files changed, 3 insertions(+), 8 deletions(-)

diff --git a/net/bluetooth/rfcomm/core.c b/net/bluetooth/rfcomm/core.c
index ba537fa..5aad9c7 100644
--- a/net/bluetooth/rfcomm/core.c
+++ b/net/bluetooth/rfcomm/core.c
@@ -430,13 +430,8 @@ static int __rfcomm_dlc_close(struct rfcomm_dlc *d, int err)
 	case BT_CONFIG:
 	case BT_CONNECT:
 		d-&gt;state = BT_DISCONN;
-		if (skb_queue_empty(&amp;d-&gt;tx_queue)) {
-			rfcomm_send_disc(s, d-&gt;dlci);
-			rfcomm_dlc_set_timer(d, RFCOMM_DISC_TIMEOUT);
-		} else {
-			rfcomm_queue_disc(d);
-			rfcomm_dlc_set_timer(d, RFCOMM_DISC_TIMEOUT * 2);
-		}
+		rfcomm_queue_disc(d);
+		rfcomm_dlc_set_timer(d, RFCOMM_DISC_TIMEOUT * 2);
 		break;
 
 	default:
@@ -746,7 +741,7 @@ static int rfcomm_queue_disc(struct rfcomm_dlc *d)
 
 	BT_DBG("dlc %p dlci %d", d, d-&gt;dlci);
 
-	skb = alloc_skb(sizeof(*cmd), GFP_KERNEL);
+	skb = alloc_skb(sizeof(*cmd), GFP_ATOMIC);
 	if (!skb)
 		return -ENOMEM;
 
-- 
1.6.0.4


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081231094354</emailId><senderName>Steffen Pankratz</senderName><senderEmail>kratz00@gmx.de</senderEmail><timestampReceived>2008-12-31 09:43:54-0400</timestampReceived><subject>Re: hci_usb problem after rmmod/modprobe</subject><body>

On Tue, 30 Dec 2008 21:22:20 +0100
Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:

&gt; Hi Steffen,
&gt; 
&gt; &gt; everything is fine until I unload and reload hci_usb:
&gt; &gt; 
&gt; &gt; hciconfig hci0 up
&gt; &gt; Can't init device hci0: Input/output error (5)
&gt; &gt; 
&gt; &gt; from dmesg:
&gt; &gt; hci_usb_intr_rx_submit: hci0 intr rx submit failed urb f406cf54 err -2
&gt; &gt; 
&gt; &gt; I tried 'modprobe hci_usb reset=1' which did not solve the problem.
&gt; &gt; 
&gt; &gt; To get it working again I have to do:
&gt; &gt; 
&gt; &gt; rmmod hci_usb bluetooth uhci_hcd
&gt; &gt; modprobe uhci_hcd
&gt; &gt; modprobe hci_usb
&gt; &gt; 
&gt; &gt; Not sure what information could be helpful:
&gt; &gt; 
&gt; &gt; Linux hermes 2.6.28 #2 PREEMPT Tue Dec 30 16:30:47 CET 2008 i686 i686
&gt; &gt; i386 GNU/Linux
&gt; 
&gt; if you are using 2.6.28 kernel, then just use the btusb driver instead
&gt; of hci_usb. The hci_usb will be removed with 2.6.29 anyway.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 

Hi Marcel,

thanks for your suggestion.
I am now using the btusb driver but the problem remains,
except the kernel message has changed:

btusb_submit_intr_urb: hci0 urb f61e37c0 submission failed (2)

Regards
-Steffen

-- 
Hermes powered by LFS SVN-20070420 (Linux 2.6.28)

Best regards, Steffen Pankratz.

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081231101339</emailId><senderName>"menno"</senderName><senderEmail>jongerenchaos@zonnet.nl</senderEmail><timestampReceived>2008-12-31 10:13:39-0400</timestampReceived><subject>Bluez disconnect Motorola phone when using in combination with</subject><body>


I use chan_mobile for incomming and outbound calls in combination with
bluez 4.19. This works well but i
think there is a problem with the audio buffer. Some examples:

Inbound call (from cellphone):
Audio from cellphone to asterisk is delayed (with 1 second and after a
while this will be bigger and bigger)
Audio from asterisk to the cellphone is NOT delayed

Outbound call (to the cellphone):
Audio from cellphone to asterisk is delayed (with 1 second and after a
while this will be bigger and bigger)
Audio from asterisk to the cellphone is NOT delayed

I use:
- Asterisk SVN-trunk-r166731
- CSR BC4(bluetooth dongle)
- 2.6.28-3-server ubuntu kernel
- bluez 4.19 (tar.gz version)
- L6 motorola phones
- Class: 0x200404
- Chan_mobile (
http://svn.digium.com/svn/asterisk-addons/trunk/channels/chan_mobile.c )

I think there is a problem with the buffer. I think he can't loose the
bufferoverflow and the frame size is bigger and bigger or something.

When i use bluez 4.25 the audio is in the begin also delayed (short delay
&lt;0.5 second). But within 1 minute the delay is away for the next 5
minutes! After 5 minutes the delay becomes again higher and higher and
after 20 &lt;&gt; 40 minutes the connection is broken between the bluetooth
phone and asterisk.

How can we resolve this problem (can anybody look at the chan_mobile file
and give a patch so that i can test it)??


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081231205524</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-31 20:55:24-0400</timestampReceived><subject>Re: [PATCH/RFC] SIMD optimizations for SBC encoder analysis filter</subject><body>

I wonder why don't we use liboil
(http://liboil.freedesktop.org/wiki/). Since we can't keep
implementing, or don't want to, optimization code for each instruction
extension around. Liboil detects which implementation is faster at
runtime and there are many other codec implementations that depend on
it, it actually makes a lot of sense to gstream and PulseAudio which
already uses liboil. I know that means adding another dependency to
BlueZ, or perhaps it is time to make libsbc a real library?


-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081231210420</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-12-31 21:04:20-0400</timestampReceived><subject>Re: [PATCH] Added possibility to analyze 4 blocks at once in SBC encoder</subject><body>

Hi Siarhei,


&gt; Nevertheless, I think it is time to focus on performance :) The attached patch
&gt; contains code preparations which are needed for SIMD optimizations for
&gt; the analysis filter. Also theoretically it should be possible to tweak code to
&gt; have both 32-bit and 16-bit fixed point analysis filter compiled in and switch
&gt; between them at runtime (at user's request or semi-intelligently depending
&gt; on audio bitrate).

Picking a implementation at runtime would be really great, that is why
I suggested using liboil in the other thread.


-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120131619</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-20 13:16:19-0400</timestampReceived><subject>Simple-agent in C</subject><body>

Hi All,

I am looking for a C version of simple-agent application.

I am developing an embedded system project and don't want to make
Python a dependence (and Pygobject as well).

There is some way to use bluez-4.xx without DBUS? I already compiled
it to board, but if bluez can works without it will be "better".

Please, can you point me to some simple-agent implemented in C?

Best Regards,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081121112836</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-21 11:28:36-0400</timestampReceived><subject>Unable to get on D-Bus</subject><body>

Hi all,

I am tracing bluetoothd in order to find why it is not working. Please
see strace output at bottom.

First I started DBUS:

# dbus-daemon --system --print-address
unix:path=/var/run/dbus/system_bus_socket,guid=bd671c01bf0366c80869f10000014a47

Then tried to start bluetoothd:

# bluetoothd -nd
bluetoothd[1795]: Bluetooth daemon
bluetoothd[1795]: Enabling debug information
bluetoothd[1795]: parsing main.conf
bluetoothd[1795]: offmode=NoScan
bluetoothd[1795]: discovto=0
bluetoothd[1795]: pageto=8192
bluetoothd[1795]: name=%h-%d
bluetoothd[1795]: class=0x000100
bluetoothd[1795]: inqmode=0
bluetoothd[1795]: Unable to get on D-Bus

It appears strange, bluetoothd can't get D-BUS, strace showed it is
not trying to open /var/run/dbus/system_bus_socket!

I am going to test older bluez version.

Please, can you suggest to me some idea to fix this issue?

Best Regards,

Alan

# strace bluetoothd -nd
execve("/usr/sbin/bluetoothd", ["bluetoothd", "-nd"], [/* 12 vars */]) = 0
brk(0)                                  = 0x2a030000
uname({sys="Linux", node="freescale", ...}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1,
0) = 0x4001c000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
open("/etc/ld.so.cache", O_RDONLY)      = 3
fstat64(3, {st_mode=S_IFREG|0644, st_size=6365, ...}) = 0
mmap2(NULL, 6365, PROT_READ, MAP_PRIVATE, 3, 0) = 0x4001d000
close(3)                                = 0
open("/usr/lib/libglib-2.0.so.0", O_RDONLY) = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0`\340\0\000"...,
512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=2072788, ...}) = 0
mmap2(NULL, 806572, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3,
0) = 0x40025000
mprotect(0x400e2000, 28672, PROT_NONE)  = 0
mmap2(0x400e9000, 4096, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xbc) = 0x400e9000
close(3)                                = 0
open("/usr/lib/libdbus-1.so.3", O_RDONLY) = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0\10H\0\000"...,
512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=718147, ...}) = 0
mmap2(NULL, 252104, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3,
0) = 0x400ea000
mprotect(0x4011f000, 32768, PROT_NONE)  = 0
mmap2(0x40127000, 4096, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x35) = 0x40127000
close(3)                                = 0
open("/usr/lib/libbluetooth.so.3", O_RDONLY) = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0\334@\0\000"...,
512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=93389, ...}) = 0
mmap2(NULL, 110372, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3,
0) = 0x40128000
mprotect(0x4013a000, 32768, PROT_NONE)  = 0
mmap2(0x40142000, 4096, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x12) = 0x40142000
close(3)                                = 0
open("/lib/libdl.so.2", O_RDONLY)       = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0X\n\0\000"..., 512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=14085, ...}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1,
0) = 0x4001f000
mmap2(NULL, 41116, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3,
0) = 0x40143000
mprotect(0x40145000, 28672, PROT_NONE)  = 0
mmap2(0x4014c000, 8192, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0x4014c000
close(3)                                = 0
open("/lib/libc.so.6", O_RDONLY)        = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0\10C\1\000"...,
512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=1346605, ...}) = 0
mmap2(NULL, 1134988, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE,
3, 0) = 0x4014e000
mprotect(0x40257000, 28672, PROT_NONE)  = 0
mmap2(0x4025e000, 12288, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x108) = 0x4025e000
mmap2(0x40261000, 8588, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x40261000
close(3)                                = 0
open("/lib/libgcc_s.so.1", O_RDONLY)    = 3
read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0(\0\1\0\0\0\320!\0\000"...,
512) = 512
fstat64(3, {st_mode=S_IFREG|0755, st_size=58792, ...}) = 0
mmap2(NULL, 74872, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3,
0) = 0x40264000
mprotect(0x4026f000, 28672, PROT_NONE)  = 0
mmap2(0x40276000, 4096, PROT_READ|PROT_WRITE,
MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xa) = 0x40276000
close(3)                                = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1,
0) = 0x40020000
syscall_983045(0x400201e0, 0x400201e0, 0x40024058, 0x400208b8, 0x40,
0x40024058, 0, 0xf0005, 0x6fffff40, 0x2a000034, 0x40024000,
0xbed41b6c, 0, 0xbed41890, 0x4001473c, 0x40001ff0, 0x20000010,
0x400201e0, 0xc2a4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) = 0
mprotect(0x4025e000, 8192, PROT_READ)   = 0
mprotect(0x4014c000, 4096, PROT_READ)   = 0
mprotect(0x2a000000, 159744, PROT_READ|PROT_WRITE) = 0
mprotect(0x2a000000, 159744, PROT_READ|PROT_EXEC) = 0
mprotect(0x40023000, 4096, PROT_READ)   = 0
munmap(0x4001d000, 6365)                = 0
brk(0)                                  = 0x2a030000
brk(0x2a051000)                         = 0x2a051000
uname({sys="Linux", node="freescale", ...}) = 0
gettimeofday({84905, 186849}, NULL)     = 0
umask(077)                              = 022
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 3
fcntl64(3, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x3, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(3)                                = 0
gettimeofday({84905, 188751}, NULL)     = 0
open("/etc/localtime", O_RDONLY)        = 3
fstat64(3, {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
fstat64(3, {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1,
0) = 0x4001d000
read(3, "TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\2\0\0"...,
4096) = 177
close(3)                                = 0
munmap(0x4001d000, 4096)                = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
getpid()                                = 1791
writev(2, [{"bluetoothd[1791]: Bluetooth daem"..., 34}, {"\n", 1}],
2bluetoothd[1791]: Bluetooth daemon
) = 35
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 3
fcntl64(3, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x3, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(3)                                = 0
rt_sigaction(SIGTERM, {0x2a0098a0, [], SA_NOCLDSTOP|0x4000000}, NULL, 8) = 0
rt_sigaction(SIGINT, {0x2a0098a0, [], SA_NOCLDSTOP|0x4000000}, NULL, 8) = 0
rt_sigaction(SIGUSR2, {0x2a00989c, [], SA_NOCLDSTOP|0x4000000}, NULL, 8) = 0
rt_sigaction(SIGPIPE, {SIG_IGN}, NULL, 8) = 0
gettimeofday({84905, 195535}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: Enabling debug"..., 44}, {"\n", 1}],
2bluetoothd[1791]: Enabling debug information
) = 45
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 3
fcntl64(3, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x3, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(3)                                = 0
mq_notify(31, ptrace: umoven: Input/output error
{...})                    = 3
SYS_294(0x3, 0, 0x2, 0xbed41c9c, 0x10)  = 0
mq_getsetattr(3, {mq_flags=O_DIRECT|O_LARGEFILE|O_NOATIME|0xfff80020,
mq_maxmsg=0, mq_msgsize=704677448, mq_curmsg=0}, ptrace: umoven:
Input/output error
{...}) = 0
open("/usr/etc/bluetooth/main.conf", O_RDONLY|O_LARGEFILE) = 4
fstat64(4, {st_mode=S_IFREG|0644, st_size=912, ...}) = 0
read(4, "[General]\n\n# List of plugins tha"..., 4096) = 912
read(4, "", 4096)                       = 0
close(4)                                = 0
gettimeofday({84905, 202773}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: parsing main.c"..., 35}, {"\n", 1}],
2bluetoothd[1791]: parsing main.conf
) = 36
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 205567}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: offmode=NoScan", 32}, {"\n", 1}],
2bluetoothd[1791]: offmode=NoScan
) = 33
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 208422}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: discovto=0", 28}, {"\n", 1}],
2bluetoothd[1791]: discovto=0
) = 29
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 211018}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: pageto=8192", 29}, {"\n", 1}],
2bluetoothd[1791]: pageto=8192
) = 30
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 213550}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: name=%h-%d", 28}, {"\n", 1}],
2bluetoothd[1791]: name=%h-%d
) = 29
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 216100}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: class=0x000100", 32}, {"\n", 1}],
2bluetoothd[1791]: class=0x000100
) = 33
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
gettimeofday({84905, 218784}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: inqmode=0", 27}, {"\n", 1}],
2bluetoothd[1791]: inqmode=0
) = 28
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 4
fcntl64(4, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x4, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(4)                                = 0
pipe([4, 5])                            = 0
fstat64(4, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0
fcntl64(4, F_GETFL)                     = 0 (flags O_RDONLY)
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 6
SYS_283(0x6, 0xbed41a2e, 0x21, 0, 0x1f) = 0
fcntl64(6, F_GETFL)                     = 0x2 (flags O_RDWR)
fcntl64(6, F_SETFL, O_RDWR|O_NONBLOCK)  = 0
fcntl64(6, F_GETFD)                     = 0
fcntl64(6, F_SETFD, FD_CLOEXEC)         = 0
getuid32()                              = 0
rt_sigaction(SIGPIPE, {SIG_IGN}, {SIG_IGN}, 8) = 0
poll([{fd=6, events=POLLOUT, revents=POLLOUT}], 1, 0) = 1
write(6, "\0", 1)                       = 1
write(6, "AUTH EXTERNAL 30\r\n", 18)    = 18
poll([{fd=6, events=POLLIN, revents=POLLIN}], 1, -1) = 1
read(6, "OK bd671c01bf0366c80869f10000014"..., 2048) = 37
poll([{fd=6, events=POLLOUT, revents=POLLOUT}], 1, -1) = 1
write(6, "BEGIN\r\n", 7)                = 7
poll([{fd=6, events=POLLIN|POLLOUT, revents=POLLOUT}], 1, -1) = 1
writev(6, [{"l\1\0\1\0\0\0\0\1\0\0\0n\0\0\0\1\1o\0\25\0\0\0/org/fre"...,
128}, {"", 0}], 2) = 128
gettimeofday({84905, 233252}, NULL)     = 0
poll([{fd=6, events=POLLIN, revents=POLLIN}], 1, 25000) = 1
read(6, "l\2\1\1\t\0\0\0\1\0\0\0=\0\0\0\6\1s\0\4\0\0\0:1.1\0\0\0"...,
2048) = 258
read(6, 0x2a033bd0, 2048)               = -1 EAGAIN (Resource
temporarily unavailable)
writev(6, [{"l\1\0\1\24\0\0\0\2\0\0\0\200\0\0\0\1\1o\0\25\0\0\0/org"...,
144}, {"\t\0\0\0org.bluez\0\0\0\4\0\0\0", 20}], 2) = 164
gettimeofday({84905, 236746}, NULL)     = 0
poll([{fd=6, events=POLLIN, revents=POLLIN}], 1, 25000) = 1
read(6, "l\3\1\1w\0\0\0\3\0\0\0m\0\0\0\6\1s\0\4\0\0\0:1.1\0\0\0"..., 2048) = 247
read(6, 0x2a033bd0, 2048)               = -1 EAGAIN (Resource
temporarily unavailable)
gettimeofday({84905, 238176}, NULL)     = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=177, ...}) = 0
writev(2, [{"bluetoothd[1791]: Unable to get "..., 40}, {"\n", 1}],
2bluetoothd[1791]: Unable to get on D-Bus
) = 41
mq_notify(1, ptrace: umoven: Input/output error
{...})                     = 7
fcntl64(7, F_SETFD, FD_CLOEXEC)         = 0
SYS_283(0x7, 0x40261a2c, 0x6e, 0x10, 0x1) = -1 ENOENT (No such file or
directory)
close(7)                                = 0
io_submit(0x1, 0x1, 0xfbad2088 &lt;unfinished ... exit status 1&gt;
Process 1791 detached
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081121215611</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-11-21 21:56:11-0400</timestampReceived><subject>Place-Holder for a driver</subject><body>


Hi,

The OMAP Zoom2 board has a bluetooth chip which needs to be enabled to be used. When \
running on Android, the Bluetooth service of Android uses the rfkill sysfs entry to \
turn on bluetooth.

So I linked the Bluetooth enable GPIO to the sys-fs entry, Now the question is where \
should/does this driver fit in ?

I've thought of drivers/misc, Any suggestions are welcome.

Thanks &amp; Regards,
Pavan Savoy.


--
The New Maruti A-Star is here. View pics, videos, read expert opinion and more on \
ZigWheels.com http://images.zigwheels.com/b2cam/a_star.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081119180146</emailId><senderName>Ron Murray</senderName><senderEmail>rjmx@rjmx.net</senderEmail><timestampReceived>2008-11-19 18:01:46-0400</timestampReceived><subject>bcm203x bluetooth dongle still does not work in kernel 2.6.27.6</subject><body>

Hi.

   I have a couple of boxes that I'm using with (admittedly fairly old)
Tecon bluetooth devices using the BCM-2033 chipset, and I've been having
trouble with them since you switched to the workqueue. For quite some
time I applied the patch referred to in the message below, and that
worked, but it wouldn't apply on kernel 2.6.27. Rather than fix it, I
decided to try the kernel driver as-is, with patchy results. Sometimes
it works, sometimes it doesn't. The symptoms are the same as below: my
syslog says

Nov 19 12:38:45 rjmx kernel: firmware: requesting BCM2033-MD.hex
Nov 19 12:38:45 rjmx kernel: firmware: requesting BCM2033-FW.bin

   but nothing seems to happen: an 'lsusb' still gives

Bus 001 Device 004: ID 0a5c:2033 Broadcom Corp. BCM2033 Bluetooth

   ... which is the wrong ID for a device that's had its firmware
properly loaded. The firmware files themselves seem to be readable, and
in fact an 'ls -lut' gives me a "last access time" similar to the actual
time I tried plugging in the device.

   Any suggestions?

Thanks,

 .....Ron Murray

&gt; Subject	Re: [2.6.24] bcm203x bluetooth dongle does not work
&gt; From	Marcel Holtmann &lt;&gt;
&gt; Date	Wed, 30 Jan 2008 18:33:52 +0100
&gt; 
&gt; Hi Florian,
&gt; 
&gt;&gt; after trying around with my ancient bcm2033 bluetooth dongle i found it
&gt;&gt; not working in 2.6.24 - I debugged udev and found it loading the
&gt;&gt; firmware correctly but the device seems to have problems disconnecting.
&gt;&gt; 
&gt;&gt; I found an Ubuntu bug which mentions a patch which supposed to be
&gt;&gt; 2.6.20 material. It still applies and fixes my problem:
&gt;&gt; 
&gt;&gt; Ubuntu Bug:
&gt;&gt; 	https://bugs.launchpad.net/ubuntu/+source/linux-source-2.6.20/+bug/85247
&gt;&gt; 
&gt;&gt; Patch:
&gt;&gt; 	http://launchpadlibrarian.net/7058766/bcm203x-2.6.20-backport.diff
&gt;&gt; 
&gt;&gt; So it seems this patch never went in but most likely should.
&gt; 
&gt; we moved away from using a timer and using a workqueue now. It wrote the
&gt; patch to use a workqueue and tested that it works. Starting with 2.6.19
&gt; we the usage of a workqueue is default. Can you verify that non of the
&gt; kernels 2.6.19-2.6.23 are working. We might have missed a change inside
&gt; the USB subsystem within the 2.6.24 timeframe.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel


-- 
Ron Murray   (rjmx@rjmx.net)
http://www.rjmx.net/~ron
GPG Public Key Fingerprint:
  F2C1 FC47 5EF7 0317 133C  D66B 8ADA A3C4 D86C 74DE

Save energy: Drive a smaller shell.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081118194820</emailId><senderName>"David Merrill"</senderName><senderEmail>dmerrill@media.mit.edu</senderEmail><timestampReceived>2008-11-18 19:48:20-0400</timestampReceived><subject>one "talker" multiple "listeners" possible for inquiry scan with RSSI?</subject><body>

Hello everyone -

I am getting to know bluez, reading the BT spec, playing with pybluez
- and I have a multi-adapter question I hope someone may know the
answer to.

I want to capture the RSSI from a mobile phone from several Bluetooth
radio dongles on a linux system, so I can try to estimate where the
mobile phone is. I find that when I have all radios doing inquiry
scans with RSSI at the same time, it generates a lot of radio traffic,
and WiFi in the area slows down.

So I'm wondering, can I have one radio initiate the inquiry scan with
RSSI, and have the other 5 radios just listen for the replies from the
mobile phone without "talking"? Could this be accomplished just by
setting the hardware address of the "listeners" to match the address
of the "talker", then they would receive the replies - or is there
some hand-shaking / delivery guarantee algorithm that is required that
would not be possible if the listeners remain quiet?

thanks!
-David Merrill
--
MIT Media Lab
dmerrill@media.mit.edu
http://web.media.mit.edu/~dmerrill/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081104170352</emailId><senderName>"David Merrill"</senderName><senderEmail>dmerrill@media.mit.edu</senderEmail><timestampReceived>2008-11-04 17:03:52-0400</timestampReceived><subject>how to: Inquiry with RSSI?</subject><body>

Hello all -
First, thanks to the developers for creating Bluez - it's so nice to
have such a useful, open-source Bluetooth option.

I am writing with a question: how can I do an inquiry scan with RSSI,
and read out the RSSI values? (without making a connection to devices)
When I run "hciconfig hci0 inqmode" I get the following:

Inquiry mode: Inquiry with RSSI

..so I think the adapter supports this, and is in the correct
configuration - but when I run "hcitool scan", I only get the HW
address and name of local adapters - no RSSI. Is there some flag, or
option that I need to pass to hcitool in order to get RSSI as well?

thanks very much,
David Merrill
--
MIT Media Lab
dmerrill@media.mit.edu
http://web.media.mit.edu/~dmerrill/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081104131519</emailId><senderName>Florian Schwehn</senderName><senderEmail>f.schwehn@wizai.com</senderEmail><timestampReceived>2008-11-04 13:15:19-0400</timestampReceived><subject>Question about power tables or other transmit power limit</subject><body>

Hi all,

we are looking into limiting transmit power for our bluetooth file  
server project. The idea is to limit sending radius so that people  
don't feel harassed if they do not want to receive files.

First we tried to read the RSSI during device discovery and base our  
decision on that. But the readings varied too much because of power  
saving methods like power tables.

Since we cannot update the firmware of the mobile phones, we decided  
to try to limit the transmit power for our device discovery HCI  
device. After reading about things a bit and browsing through the docs  
that CSR provides, we tried to cap the maximum power or to change the  
power tables with the bccmd. Unfortunately, the dongle doesn't seem to  
accept the change. After setting the value and re-reading it, the  
change is gone:

[root@horst Desktop]# bccmd psget 0x0017
Maximum transmit power: 0x0004 (4)
[root@horst Desktop]# bccmd psset 0x0017 0
[root@horst Desktop]# bccmd psget 0x0017
Maximum transmit power: 0x0004 (4)

I also tried dump all PS keys and restoring the modified dump - same  
issue.

Does anybody have experience with this? Do we need special BT dongles?  
We are also inquiring with CSR at the moment, but using a windows  
software is not an option, as our project is using embedded Linux (of  
course :).

Looking forward to any help.

Best regards,

Florian.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124020133</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-24 02:01:33-0400</timestampReceived><subject>Can we change org.openobex.Client's dbus node path?</subject><body>

Hi

	I notice that, in obex-client, we create the org.openobex.Client interface under \
path "/".  It's the same as org.openobex.manager in obexd.

	While, when create new session for say FTP, Obexd put Session interface under path \
"/session*" , and obex client put the Session interface under path \
"/org/openobex/Session*"

	And this will make the introspect function on client: dbus-send --print-reply \
--dest=org.openobex.client / org.freedesktop.DBus.Introspectable.Introspect fail to \
show the node for /org/openobex/Session* (but dbus-send --print-reply \
--dest=org.openobex.client /org org.freedesktop.DBus.Introspectable.Introspect will \
work)  While for obexd: dbus-send --print-reply --dest=org.openobex / \
org.freedesktop.DBus.Introspectable.Introspect can show the node for /Session*.

	So, can we change the path for org.openobex.Client and register it under path \
"/org/openobex/Client"?  Or we register session, FTP interfaces under root path like \
that in the obexd? Either way can solve the introspect problem.

Best Regards,
Raymond Liu

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081110092009</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-11-10 09:20:09-0400</timestampReceived><subject>compat/Makefile.am manpages fix / pand/dund question</subject><body>

Hi,

pand.1 and dund.1 are always installed. Fix below.

Then some kind of packaging question:
I got users that request pand and dund. I am under the impression
that this should be handled by the networking service, however was
unable to find anything understandable on the WIKI where I can point
them to.

Am I still "allowed" to package pand and dund, e.g. in a "bluez-compat"
package? I guess that I should not package hidd, no matter how much
users would like it, though ;-)

Thanks,

	Stefan

diff --git a/compat/Makefile.am b/compat/Makefile.am
index f3422fc..58254ad 100644
--- a/compat/Makefile.am
+++ b/compat/Makefile.am
@@ -20,11 +20,11 @@ bin_PROGRAMS += pand
 pand_SOURCES = pand.c pand.h bnep.c sdp.h sdp.c
 
 pand_LDADD = $(top_builddir)/common/libhelper.a @BLUEZ_LIBS@
-endif
 
 if MANPAGES
 man_MANS += pand.1
 endif
+endif
 
 if DUND
 bin_PROGRAMS += dund
@@ -32,11 +32,11 @@ bin_PROGRAMS += dund
 dund_SOURCES = dund.c dund.h lib.h sdp.h sdp.c dun.c msdun.c
 
 dund_LDADD = $(top_builddir)/common/libhelper.a @BLUEZ_LIBS@
-endif
 
 if MANPAGES
 man_MANS += dund.1
 endif
+endif
 
 AM_CFLAGS = @BLUEZ_CFLAGS@
 

-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out." 

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126013808</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-11-26 01:38:08-0400</timestampReceived><subject>l2ping only works for 10 seconds with 2.6.27</subject><body>

Hi,

I have noticed with 2.6.27 that a bluez receiving side of l2ping will
detch the ACL connection (preventing further l2cap echos) after 10
seconds. HCI log below.

Is this by design, or was it unintentional?

I notice the OSX stack will detach after 60 seconds, so maybe it is by
design, after all the receiving side may not want to deal with these
unsolicited pings forever. In that case do you know the right place to
revert this behavior (l2ping is useful for testing).

Nick

2008-11-25 17:32:06.310607 &gt; HCI Event: Connect Request (0x04) plen 10
    bdaddr 00:17:E8:2E:6B:E3 class 0x00020c type ACL
2008-11-25 17:32:06.310821 &lt; HCI Command: Accept Connection Request
(0x01|0x0009) plen 7
    bdaddr 00:17:E8:2E:6B:E3 role 0x00
    Role: Master
2008-11-25 17:32:06.315826 &gt; HCI Event: Command Status (0x0f) plen 4
    Accept Connection Request (0x01|0x0009) status 0x00 ncmd 1
2008-11-25 17:32:06.484832 &gt; HCI Event: Role Change (0x12) plen 8
    status 0x00 bdaddr 00:17:E8:2E:6B:E3 role 0x00
    Role: Master
2008-11-25 17:32:06.517578 &gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 1 bdaddr 00:17:E8:2E:6B:E3 type ACL encrypt 0x00
2008-11-25 17:32:06.517639 &gt; HCI Event: Page Scan Repetition Mode
Change (0x20) plen 7
    bdaddr 00:17:E8:2E:6B:E3 mode 1
2008-11-25 17:32:06.517883 &lt; HCI Command: Read Remote Supported
Features (0x01|0x001b) plen 2
    handle 1
2008-11-25 17:32:06.523284 &gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 1
2008-11-25 17:32:06.530517 &gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 1 slots 5
2008-11-25 17:32:06.530548 &gt; ACL data: handle 1 flags 0x02 dlen 10
    L2CAP(s): Info req: type 2
2008-11-25 17:32:06.530670 &lt; ACL data: handle 1 flags 0x02 dlen 16
    L2CAP(s): Info rsp: type 2 result 0
      Extended feature mask 0x0000
2008-11-25 17:32:06.540283 &lt; HCI Command: Remote Name Request
(0x01|0x0019) plen 10
    bdaddr 00:17:E8:2E:6B:E3 mode 2 clkoffset 0x0000
2008-11-25 17:32:06.545532 &gt; HCI Event: Command Status (0x0f) plen 4
    Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
2008-11-25 17:32:06.577911 &gt; HCI Event: Read Remote Supported Features
(0x0b) plen 11
    status 0x00 handle 1
    Features: 0xff 0xff 0x2d 0xfe 0x9b 0xf9 0x00 0x80
2008-11-25 17:32:06.577941 &gt; HCI Event: Remote Name Req Complete (0x07) plen 255
    status 0x00 bdaddr 00:17:E8:2E:6B:E3 name 'dream'
2008-11-25 17:32:06.577941 &gt; HCI Event: Number of Completed Packets
(0x13) plen 5
    handle 1 packets 1
2008-11-25 17:32:06.610351 &gt; ACL data: handle 1 flags 0x02 dlen 52
    L2CAP(s): Echo req: dlen 44
    0000: 41 42 43 44 45 46 47 48  49 4a 4b 4c 4d 4e 4f 50  ABCDEFGHIJKLMNOP
    0010: 51 52 53 54 55 56 57 58  59 5a 5b 5c 5d 5e 5f 60  QRSTUVWXYZ[\]^_`
    0020: 61 62 63 64 65 66 67 68  41 42 43 44              abcdefghABCD
2008-11-25 17:32:06.610504 &lt; ACL data: handle 1 flags 0x02 dlen 52
    L2CAP(s): Echo rsp: dlen 44
    0000: 41 42 43 44 45 46 47 48  49 4a 4b 4c 4d 4e 4f 50  ABCDEFGHIJKLMNOP
    0010: 51 52 53 54 55 56 57 58  59 5a 5b 5c 5d 5e 5f 60  QRSTUVWXYZ[\]^_`
    0020: 61 62 63 64 65 66 67 68  41 42 43 44              abcdefghABCD
2008-11-25 17:32:06.622192 &gt; HCI Event: Number of Completed Packets
(0x13) plen 5
    handle 1 packets 1

[ 10 seconds ]

2008-11-25 17:32:16.169464 &gt; ACL data: handle 1 flags 0x02 dlen 52
    L2CAP(s): Echo req: dlen 44
    0000: 41 42 43 44 45 46 47 48  49 4a 4b 4c 4d 4e 4f 50  ABCDEFGHIJKLMNOP
    0010: 51 52 53 54 55 56 57 58  59 5a 5b 5c 5d 5e 5f 60  QRSTUVWXYZ[\]^_`
    0020: 61 62 63 64 65 66 67 68  41 42 43 44              abcdefghABCD
2008-11-25 17:32:16.169616 &lt; ACL data: handle 1 flags 0x02 dlen 52
    L2CAP(s): Echo rsp: dlen 44
    0000: 41 42 43 44 45 46 47 48  49 4a 4b 4c 4d 4e 4f 50  ABCDEFGHIJKLMNOP
    0010: 51 52 53 54 55 56 57 58  59 5a 5b 5c 5d 5e 5f 60  QRSTUVWXYZ[\]^_`
    0020: 61 62 63 64 65 66 67 68  41 42 43 44              abcdefghABCD
2008-11-25 17:32:16.183380 &gt; HCI Event: Number of Completed Packets
(0x13) plen 5
    handle 1 packets 1
2008-11-25 17:32:16.576141 &lt; HCI Command: Disconnect (0x01|0x0006) plen 3
    handle 1 reason 0x13
    Reason: Remote User Terminated Connection
2008-11-25 17:32:16.589813 &gt; HCI Event: Command Status (0x0f) plen 4
    Disconnect (0x01|0x0006) status 0x00 ncmd 1
2008-11-25 17:32:16.589843 &gt; HCI Event: Disconn Complete (0x05) plen 4
    status 0x00 handle 1 reason 0x16
    Reason: Connection Terminated by Local Host
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081125041000</emailId><senderName>Sam Lin</senderName><senderEmail>itrs.lin@gmail.com</senderEmail><timestampReceived>2008-11-25 04:10:00-0400</timestampReceived><subject>HBH-PV270 headset get locked</subject><body>

Hi All,

I tried Sony Ericsson HBH-PV720 with aplay and found something wrong.
Log as attachment.

from first try (timestamp in log 11:24:23 - 11:24:31 ) it works fine.
sound played.

but since 2nd try (timestamp in log 11:25:21 - 11:25:26) SCO packets
flow but no sound played.
something outstanding is:

Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Unable to lock headset
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: config failed

then headset works no more, SCO packets keep flow until powerdown headset.

would you please give any hint on this ?

Sam Lin


["bluez-debug.log" (text/x-log)]

Nov 25 11:24:01 itrs-ubuntu bluetoothd[10399]: Discovery session 0xb950df70 with \
                :1.52 activated
Nov 25 11:24:01 itrs-ubuntu bluetoothd[10399]: session_ref(0xb950df70): ref=1
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: session_unref(0xb950df70): ref=0
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: Discovery session 0xb950df70 with \
                :1.52 deactivated
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: Stopping discovery
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: bonding_request_new(00:1E:DC:AB:6D:3F)
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: \
                adapter_create_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: Creating device \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:05 itrs-ubuntu bluetoothd[10399]: Temporary agent registered for \
                hci0/00:1E:DC:AB:6D:3F at :1.52:/org/bluez/agent/wizard
Nov 25 11:24:06 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:06 itrs-ubuntu bluetoothd[10399]: link_key_request \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:24:06 itrs-ubuntu bluetoothd[10399]: kernel auth requirements = 0x04
Nov 25 11:24:06 itrs-ubuntu bluetoothd[10399]: pin_code_request \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:24:06 itrs-ubuntu bluetoothd[10399]: hcid_dbus_new_auth_request
Nov 25 11:24:07 itrs-ubuntu bluetoothd[10399]: link_key_notify \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:24:07 itrs-ubuntu bluetoothd[10399]: hcid_dbus_bonding_process_complete: \
                status=00
Nov 25 11:24:07 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:07 itrs-ubuntu bluetoothd[10399]: Releasing agent :1.52, \
                /org/bluez/agent/wizard
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Probe drivers for \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Found Headset record
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Discovered Headset service on RFCOMM \
                channel 1
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Registered interface org.bluez.Headset \
                on path /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: audio handle_uuid: server not enabled \
                for 0000111e-0000-1000-8000-00805f9b34fb (0x111e)
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: headset_probe: path \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F 
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Registered interface org.bluez.Input \
                on path /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: serial_probe: path \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: \
                00001108-0000-1000-8000-00805f9b34fb 
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: Registered interface org.bluez.Serial \
                on path /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:08 itrs-ubuntu bluetoothd[10399]: serial_probe: path \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: \
                0000111e-0000-1000-8000-00805f9b34fb 
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: Accepted new client connection on unix \
                socket (fd=24)
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_GETCAPABILITIES_REQ
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_GETCAPABILITIES_RSP
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_SETCONFIGURATION_REQ
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: config sco - device = \
                00:1E:DC:AB:6D:3F access_mode = 2
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connecting to 00:1E:DC:AB:6D:3F channel \
                1
Nov 25 11:24:23 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Nov 25 11:24:24 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:24:24 itrs-ubuntu bluetoothd[10399]: link_key_request \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:24:24 itrs-ubuntu bluetoothd[10399]: kernel auth requirements = 0x04
Nov 25 11:24:24 itrs-ubuntu bluetoothd[10399]: stored link key type = 0x00
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connected to \
                00:1E:DC:AB:6D:3F
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                connected
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
                HEADSET_STATE_PLAY_IN_PROGRESS
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+CLIP=1
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: SCO socket opened for headset \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: SCO fd=26
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_SETCONFIGURATION_RSP
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAY_IN_PROGRESS -&gt; \
                HEADSET_STATE_PLAYING
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Audio API: received BT_STREAMSTART_REQ
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Audio API: sending BT_STREAMSTART_RSP
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Audio API: sending BT_STREAMFD_IND
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+VGS=7
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+CSCS="UTF-8"
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CSCS="UTF-8"
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT*SEAM="HBH-PV720",13
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*SEAM="HBH-PV720",13
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+CLAN?
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CLAN?
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT*EIPS=2,1
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*EIPS=2,1
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+COLP=1
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+COLP=1
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Received AT+CCLK?
Nov 25 11:24:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CCLK?
Nov 25 11:24:27 itrs-ubuntu bluetoothd[10399]: Unix client disconnected (fd=24)
Nov 25 11:24:27 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAYING -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:24:27 itrs-ubuntu bluetoothd[10399]: No matching connection for handle 46
Nov 25 11:24:31 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                disconnected
Nov 25 11:24:31 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_DISCONNECTED

-----------------------------------------


Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: Accepted new client connection on unix \
                socket (fd=24)
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_GETCAPABILITIES_REQ
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_GETCAPABILITIES_RSP
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_SETCONFIGURATION_REQ
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: config sco - device = \
                00:1E:DC:AB:6D:3F access_mode = 2
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connecting to 00:1E:DC:AB:6D:3F channel \
                1
Nov 25 11:24:55 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: connect(): Host is down (112)
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_SETCONFIGURATION_RSP
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                disconnected
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_DISCONNECTED
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Audio API: received BT_STREAMSTART_REQ
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Audio API: sending BT_STREAMSTART_RSP
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Audio API: sending BT_STREAMFD_IND
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: unix_sendmsg_fd: Bad file \
                descriptor(9)
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: resume failed
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Audio API: sending BT_STREAMSTART_RSP
Nov 25 11:25:00 itrs-ubuntu bluetoothd[10399]: Unix client disconnected (fd=24)


-----------------------------------------


Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: Accepted new client connection on unix \
                socket (fd=24)
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_GETCAPABILITIES_REQ
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_GETCAPABILITIES_RSP
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_SETCONFIGURATION_REQ
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: config sco - device = \
                00:1E:DC:AB:6D:3F access_mode = 2
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connecting to 00:1E:DC:AB:6D:3F channel \
                1
Nov 25 11:25:21 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Nov 25 11:25:24 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: link_key_request \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: kernel auth requirements = 0x04
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: stored link key type = 0x00
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connected to \
                00:1E:DC:AB:6D:3F
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                connected
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
                HEADSET_STATE_PLAY_IN_PROGRESS
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT+CLIP=1
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: SCO socket opened for headset \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: SCO fd=26
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Unable to lock headset
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: config failed
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_SETCONFIGURATION_RSP
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAY_IN_PROGRESS -&gt; \
                HEADSET_STATE_PLAYING
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Unix client disconnected (fd=24)
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT+VGS=7
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT+CSCS="UTF-8"
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CSCS="UTF-8"
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT*SEAM="HBH-PV720",13
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*SEAM="HBH-PV720",13
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT+CLAN?
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CLAN?
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT*EIPS=2,1
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*EIPS=2,1
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Received AT+COLP=1
Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+COLP=1
Nov 25 11:25:26 itrs-ubuntu bluetoothd[10399]: Received AT+CCLK?
Nov 25 11:25:26 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CCLK?
Nov 25 11:26:07 itrs-ubuntu bluetoothd[10399]: No matching connection for handle 45
Nov 25 11:26:07 itrs-ubuntu bluetoothd[10399]: Audio connection got disconnected
Nov 25 11:26:07 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAYING -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:26:30 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                disconnected
Nov 25 11:26:30 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_DISCONNECTED



-----------------------------------------



Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: Accepted new client connection on unix \
                socket (fd=24)
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_GETCAPABILITIES_REQ
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_GETCAPABILITIES_RSP
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: Audio API: received \
                BT_SETCONFIGURATION_REQ
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: config sco - device = \
                00:1E:DC:AB:6D:3F access_mode = 2
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connecting to 00:1E:DC:AB:6D:3F channel \
                1
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_DISCONNECTED -&gt; \
                HEADSET_STATE_CONNECT_IN_PROGRESS
Nov 25 11:28:45 itrs-ubuntu bluetoothd[10399]: adapter_get_device(00:1E:DC:AB:6D:3F)
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: link_key_request \
                (sba=00:02:5B:00:A5:A5, dba=00:1E:DC:AB:6D:3F)
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: kernel auth requirements = 0x04
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: stored link key type = 0x00
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: Connected to \
                00:1E:DC:AB:6D:3F
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                connected
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
                HEADSET_STATE_PLAY_IN_PROGRESS
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+CLIP=1
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: SCO socket opened for headset \
                /org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: SCO fd=26
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Unable to lock headset
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: config failed
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Audio API: sending \
                BT_SETCONFIGURATION_RSP
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAY_IN_PROGRESS -&gt; \
                HEADSET_STATE_PLAYING
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Unix client disconnected (fd=24)
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+VGS=7
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+CSCS="UTF-8"
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CSCS="UTF-8"
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT*SEAM="HBH-PV720",13
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*SEAM="HBH-PV720",13
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+CLAN?
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CLAN?
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT*EIPS=2,1
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT*EIPS=2,1
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+COLP=1
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+COLP=1
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Received AT+CCLK?
Nov 25 11:28:46 itrs-ubuntu bluetoothd[10399]: Badly formated or unrecognized \
                command: AT+CCLK?
Nov 25 11:29:08 itrs-ubuntu bluetoothd[10399]: No matching connection for handle 45
Nov 25 11:29:08 itrs-ubuntu bluetoothd[10399]: Audio connection got disconnected
Nov 25 11:29:08 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAYING -&gt; \
                HEADSET_STATE_CONNECTED
Nov 25 11:29:10 itrs-ubuntu bluetoothd[10399]: telephony-dummy: device 0xb950ba28 \
                disconnected
Nov 25 11:29:10 itrs-ubuntu bluetoothd[10399]: State changed \
/org/bluez/10399/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt; \
HEADSET_STATE_DISCONNECTED


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081125160434</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-25 16:04:34-0400</timestampReceived><subject>agent.c</subject><body>

Hi list,

I am updating agent.c in order to it works with new bluez versions.

Everything appears to work, but after "hcitool cc ..." my agent is not
called (at least Methods on agent_message are not called).

Any tests and help are welcome!

Best Regards,

Alan

/*
 *
 *  BlueZ - Bluetooth protocol stack for Linux
 *
 *  Copyright (C) 2004-2008  Marcel Holtmann &lt;marcel@holtmann.org&gt;
 *
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */

#ifdef HAVE_CONFIG_H
#include &lt;config.h&gt;
#endif

#include &lt;stdio.h&gt;
#include &lt;errno.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;
#include &lt;getopt.h&gt;
#include &lt;string.h&gt;

#include &lt;dbus/dbus.h&gt;

static char *passkey = NULL;

static int do_reject = 0;

static volatile sig_atomic_t __io_canceled = 0;
static volatile sig_atomic_t __io_terminated = 0;

static void sig_term(int sig)
{
	__io_canceled = 1;
}

static DBusHandlerResult agent_filter(DBusConnection *conn,
						DBusMessage *msg, void *data)
{
	const char *name, *old, *new;

	if (!dbus_message_is_signal(msg, DBUS_INTERFACE_DBUS, "NameOwnerChanged"))
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;

	if (!dbus_message_get_args(msg, NULL,
			DBUS_TYPE_STRING, &amp;name, DBUS_TYPE_STRING, &amp;old,
				DBUS_TYPE_STRING, &amp;new, DBUS_TYPE_INVALID)) {
		fprintf(stderr, "Invalid arguments for NameOwnerChanged signal");
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
	}

	if (!strcmp(name, "org.bluez") &amp;&amp; *new == '\0') {
		fprintf(stderr, "Agent has been terminated\n");
		__io_terminated = 1;
	}

	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
}

static DBusHandlerResult request_message(DBusConnection *conn,
						DBusMessage *msg, void *data)
{
	DBusMessage *reply;
	const char *path, *address;
	dbus_bool_t numeric;

	if (!passkey)
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;

	if (!dbus_message_get_args(msg, NULL,
			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
			DBUS_TYPE_BOOLEAN, &amp;numeric, DBUS_TYPE_INVALID)) {
		fprintf(stderr, "Invalid arguments for passkey Request method");
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
	}

	if (do_reject) {
		reply = dbus_message_new_error(msg,
					"org.bluez.Error.Rejected", "");
		goto send;
	}

	reply = dbus_message_new_method_return(msg);
	if (!reply) {
		fprintf(stderr, "Can't create reply message\n");
		return DBUS_HANDLER_RESULT_NEED_MEMORY;
	}

	printf("Passkey request for device %s\n", address);

	dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;passkey,
					DBUS_TYPE_INVALID);

send:
	dbus_connection_send(conn, reply, NULL);

	dbus_connection_flush(conn);

	dbus_message_unref(reply);

	return DBUS_HANDLER_RESULT_HANDLED;
}

static DBusHandlerResult cancel_message(DBusConnection *conn,
						DBusMessage *msg, void *data)
{
	DBusMessage *reply;
	const char *path, *address;

	if (!dbus_message_get_args(msg, NULL,
			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
							DBUS_TYPE_INVALID)) {
		fprintf(stderr, "Invalid arguments for passkey Confirm method");
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
	}

	printf("Request canceled for device %s\n", address);

	reply = dbus_message_new_method_return(msg);
	if (!reply) {
		fprintf(stderr, "Can't create reply message\n");
		return DBUS_HANDLER_RESULT_NEED_MEMORY;
	}

	dbus_connection_send(conn, reply, NULL);

	dbus_connection_flush(conn);

	dbus_message_unref(reply);

	return DBUS_HANDLER_RESULT_HANDLED;
}

static DBusHandlerResult release_message(DBusConnection *conn,
						DBusMessage *msg, void *data)
{
	DBusMessage *reply;

	if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_INVALID)) {
		fprintf(stderr, "Invalid arguments for Release method");
		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
	}

	if (!__io_canceled)
		fprintf(stderr, "Agent has been released\n");

	__io_terminated = 1;

	reply = dbus_message_new_method_return(msg);
	if (!reply) {
		fprintf(stderr, "Can't create reply message\n");
		return DBUS_HANDLER_RESULT_NEED_MEMORY;
	}

	dbus_connection_send(conn, reply, NULL);

	dbus_connection_flush(conn);

	dbus_message_unref(reply);

	return DBUS_HANDLER_RESULT_HANDLED;
}

static DBusHandlerResult agent_message(DBusConnection *conn,
						DBusMessage *msg, void *data)
{
	printf("Agent_message was called!\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release"))
		printf("Agent called: Release\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPinCode"))
		printf("Agent called: RequestPinCode\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPasskey"))
		printf("Agent called: RequestPasskey\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "DisplayPasskey"))
		printf("Agent called: DisplayPasskey\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestConfirmation"))
		printf("Agent called: RequestConfirmation\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Authorize"))
		printf("Agent called: Authorize\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "ConfirmModeChange"))
		printf("Agent called: ConfirmModeChange\n");

	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
		printf("Agent called: Cancel\n");

	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
}

static const DBusObjectPathVTable agent_table = {
	.message_function = agent_message,
};

static int register_agent(DBusConnection *conn, const char *device_path,
						const char *agent_path,
						const char *capabilities)
{
	DBusMessage *msg, *reply;
	DBusError err;

	if (!dbus_connection_register_object_path(conn, agent_path,
							&amp;agent_table, NULL)) {
		fprintf(stderr, "Can't register object path for agent\n");
		return -1;
	}

	msg = dbus_message_new_method_call("org.bluez", device_path,
					"org.bluez.Adapter", "RegisterAgent");
	if (!msg) {
		fprintf(stderr, "Can't allocate new method call\n");
		return -1;
	}

	dbus_message_append_args(msg, DBUS_TYPE_OBJECT_PATH, &amp;agent_path,
					DBUS_TYPE_STRING, &amp;capabilities,
							DBUS_TYPE_INVALID);

	dbus_error_init(&amp;err);

	reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);

	dbus_message_unref(msg);

	if (!reply) {
		fprintf(stderr, "Can't register agent\n");
		if (dbus_error_is_set(&amp;err)) {
			fprintf(stderr, "%s\n", err.message);
			dbus_error_free(&amp;err);
		}
		return -1;
	}

	dbus_message_unref(reply);

	dbus_connection_flush(conn);

	return 0;
}

static int unregister_agent(DBusConnection *conn, const char *device_path,
							const char *agent_path)
{
	DBusMessage *msg, *reply;
	DBusError err;

	msg = dbus_message_new_method_call("org.bluez", device_path,
					"org.bluez.Adapter", "UnregisterAgent");
	if (!msg) {
		fprintf(stderr, "Can't allocate new method call\n");
		return -1;
	}

	dbus_message_append_args(msg, DBUS_TYPE_OBJECT_PATH, &amp;agent_path,
							DBUS_TYPE_INVALID);

	dbus_error_init(&amp;err);

	reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);

	dbus_message_unref(msg);

	if (!reply) {
		fprintf(stderr, "Can't unregister agent\n");
		if (dbus_error_is_set(&amp;err)) {
			fprintf(stderr, "%s\n", err.message);
			dbus_error_free(&amp;err);
		}
		return -1;
	}

	dbus_message_unref(reply);

	dbus_connection_flush(conn);

	dbus_connection_unregister_object_path(conn, agent_path);

	return 0;
}

static char *get_device(DBusConnection *conn)
{
	char *path, *device_path = NULL;
	DBusMessage *msg, *reply;
	DBusError err;

	msg = dbus_message_new_method_call("org.bluez", "/",
					"org.bluez.Manager", "DefaultAdapter");
	if (!msg) {
		fprintf(stderr, "Can't allocate new method call\n");
		return NULL;
	}

	dbus_error_init(&amp;err);

	reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);

	dbus_message_unref(msg);

	if (!reply) {
		fprintf(stderr, "Can't get Adapter path\n");
		if (dbus_error_is_set(&amp;err)) {
			fprintf(stderr, "%s\n", err.message);
			dbus_error_free(&amp;err);
		}
		return NULL;
	}

	dbus_message_get_args(reply, NULL, DBUS_TYPE_OBJECT_PATH,
&amp;device_path, DBUS_TYPE_INVALID);

	dbus_message_unref(reply);

	dbus_connection_flush(conn);

	return device_path;
}

static void usage(void)
{
	printf("Bluetooth agent ver %s\n\n", "4.18");

	printf("Usage:\n"
		"\tagent [--device interface] [--path agent-path] &lt;passkey&gt;\n"
		"\n");
}

static struct option main_options[] = {
	{ "device",	1, 0, 'i' },
	{ "path",	1, 0, 'p' },
	{ "capabilites",1, 0, 'c' },
	{ "reject",	0, 0, 'r' },
	{ "help",	0, 0, 'h' },
	{ 0, 0, 0, 0 }
};

int main(int argc, char *argv[])
{
	const char *capabilities = "DisplayYesNo";
	struct sigaction sa;
	DBusConnection *conn;
	char match_string[128], default_path[128], *device_id = NULL;
	char *device_path = NULL, *agent_path = NULL;
	int opt;

	snprintf(default_path, sizeof(default_path),
					"/org/bluez/agent_%d", getpid());

	while ((opt = getopt_long(argc, argv, "+i:p:c:rh", main_options,
NULL)) != EOF) {
		switch(opt) {
		case 'i':
			device_id = optarg;
			break;
		case 'p':
			if (optarg[0] != '/') {
				fprintf(stderr, "Invalid path\n");
				exit(1);
			}
			agent_path = strdup(optarg);
			break;
		case 'c':
			capabilities = optarg;
			break;
		case 'r':
			do_reject = 1;
			break;
		case 'h':
			usage();
			exit(0);
		default:
			exit(1);
		}
	}

	argc -= optind;
	argv += optind;
	optind = 0;

	if (argc &lt; 1) {
		usage();
		exit(1);
	}

	passkey = strdup(argv[0]);

	if (!agent_path)
		agent_path = strdup(default_path);

	conn = dbus_bus_get(DBUS_BUS_SYSTEM, NULL);
	if (!conn) {
		fprintf(stderr, "Can't get on system bus");
		exit(1);
	}

	if (!device_path)
		device_path = get_device(conn);

	printf("Adapter path: %s\n", device_path);

	if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
		dbus_connection_unref(conn);
		exit(1);
	}

	if (!dbus_connection_add_filter(conn, agent_filter, NULL, NULL))
		fprintf(stderr, "Can't add signal filter");

	snprintf(match_string, sizeof(match_string),
			"interface=%s,member=NameOwnerChanged,arg0=%s",
					DBUS_INTERFACE_DBUS, "org.bluez");

	dbus_bus_add_match(conn, match_string, NULL);

	memset(&amp;sa, 0, sizeof(sa));
	sa.sa_flags   = SA_NOCLDSTOP;
	sa.sa_handler = sig_term;
	sigaction(SIGTERM, &amp;sa, NULL);
	sigaction(SIGINT,  &amp;sa, NULL);

	while (!__io_canceled &amp;&amp; !__io_terminated) {
		if (dbus_connection_read_write_dispatch(conn, 500) != TRUE)
			break;
	}

	if (!__io_terminated)
		unregister_agent(conn, device_path, agent_path);

	free(device_path);
	free(agent_path);

	free(passkey);

	dbus_connection_unref(conn);

	return 0;
}
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081116121121</emailId><senderName>Oleg Kravchenko</senderName><senderEmail>oleg@kaa.org.ua</senderEmail><timestampReceived>2008-11-16 12:11:21-0400</timestampReceived><subject>BCM2045B2</subject><body>

Hello! My hardware:
Asus P535 details on http://www.kaa.org.ua/asus-p535/hardware.html
Bluetooth chip BCM2045B2 connected to the pxa internal usb host.

I think this chip need firmware, because it is can only search
How I can upload firmware to the this chip?









["oleg.vcf" (text/x-vcard)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081127095450</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-27 09:54:50-0400</timestampReceived><subject>Sony BD Remote (help requested)</subject><body>

i'm trying to get y BD Remote to work.

this is what i have done so far:

installed bluez from git (as of yesterday)
configured it (i think)
when i:

hidd --search

i see the remote

by using udev rules i create /dev/bdremote (which links to 
/dev/input/event&lt;x&gt;, for the correct &lt;x&gt;)
i can see the key presses on the remote being transmitted (using hcidump)

what i cannot do see is ny events occuring (by loading evbug)
i'm trying to get the events into lirc

i promise to write up the steps if i get it working

i'm running a pretty standard gentoo setup with kde (not gnome)

any help would be appreciated
--
simon

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081110170126</emailId><senderName>Matthieu CASTET</senderName><senderEmail>matthieu.castet@parrot.com</senderEmail><timestampReceived>2008-11-10 17:01:26-0400</timestampReceived><subject>btusb and HCI_RAW</subject><body>

Hi,


with HCI_RAW, application can bypass the bluez stack and send raw stuff
to dongle.

This seems not possible anymore with btusb because it uses
"hdev-&gt;conn_hash" to check if ACLDATA/SCODATA should be send/received.

These checks make the HCI_RAW mode a bit useless (ie not working for acl
and sco).

Can we make the HCI_RAW work like before with acl and sco data ?
For example we can ignore theses check in HCI_RAW mode and send a notify
event when we turn on/off HCI_RAW mode.


Matthieu


PS : what happen if a dongle receive acl/sco data that aren't collected
by the host (because urb aren't submitted) ?
They remain in a FIFO ? There are dropped ?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128153826</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-28 15:38:26-0400</timestampReceived><subject>[PATCH] Modification on agent.c in order to it support new API</subject><body>

This is my effort to adapt agent.c to new API.

I started doing it as single agent, but jhe suggest me to separate it
on two agents, but after doing that none agent Methods are called.

As single agent I got it:

# agent 00:0E:ED:29:4F:2D
Pairing to 00:0E:ED:29:4F:2D
Adapter path: /org/bluez/1780/hci0
Agent_message was called!
Agent called: RequestPinCode
Device path = /org/bluez/1780/hci0/dev_00_0E_ED_29_4F_2D
Agent has been released
Agent_message was called!
Agent called: Cancel
Request canceled for device
Agent_message was called!
Agent called: Release
Agent has been released

To test it as double agent just remove C++ style comments on main
scope, then execute:

# agent &amp;

# agent 00:0E:ED:29:4F:2D
Pairing to 00:0E:ED:29:4F:2D
Adapter path: /org/bluez/1780/hci0

As you can see it doesn't call any agent methods.

Please, some idea about this problem?

Best Regards,

Alan


Signed-off-by: Alan Carvalho &lt;acassis@gmail.com&gt;
---
 test/agent.c |  194 ++++++++++++++++++++++++++++++++++++++++++----------------
 1 files changed, 142 insertions(+), 52 deletions(-)

diff --git a/test/agent.c b/test/agent.c
index a8d880a..fdab641 100644
--- a/test/agent.c
+++ b/test/agent.c
@@ -35,7 +35,7 @@

 #include &lt;dbus/dbus.h&gt;

-static char *passkey = NULL;
+static char *devaddr = NULL, *pincode = "0000";

 static int do_reject = 0;

@@ -70,28 +70,19 @@ static DBusHandlerResult agent_filter(DBusConnection *conn,
 	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }

-static DBusHandlerResult request_message(DBusConnection *conn,
+
+static DBusHandlerResult cancel_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
 	DBusMessage *reply;
 	const char *path, *address;
-	dbus_bool_t numeric;
-
-	if (!passkey)
-		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;

-	if (!dbus_message_get_args(msg, NULL,
-			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
-			DBUS_TYPE_BOOLEAN, &amp;numeric, DBUS_TYPE_INVALID)) {
-		fprintf(stderr, "Invalid arguments for passkey Request method");
+	if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_INVALID)) {
+		fprintf(stderr, "Invalid arguments for Cancel method");
 		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 	}

-	if (do_reject) {
-		reply = dbus_message_new_error(msg,
-					"org.bluez.Error.Rejected", "");
-		goto send;
-	}
+	printf("Request canceled for device %s\n", address);

 	reply = dbus_message_new_method_return(msg);
 	if (!reply) {
@@ -99,12 +90,6 @@ static DBusHandlerResult
request_message(DBusConnection *conn,
 		return DBUS_HANDLER_RESULT_NEED_MEMORY;
 	}

-	printf("Passkey request for device %s\n", address);
-
-	dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;passkey,
-					DBUS_TYPE_INVALID);
-
-send:
 	dbus_connection_send(conn, reply, NULL);

 	dbus_connection_flush(conn);
@@ -114,20 +99,23 @@ send:
 	return DBUS_HANDLER_RESULT_HANDLED;
 }

-static DBusHandlerResult cancel_message(DBusConnection *conn,
+static DBusHandlerResult reqpincode_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
 	DBusMessage *reply;
-	const char *path, *address;
+	char *dev_path;

-	if (!dbus_message_get_args(msg, NULL,
-			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
-							DBUS_TYPE_INVALID)) {
-		fprintf(stderr, "Invalid arguments for passkey Confirm method");
+	if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_OBJECT_PATH,
&amp;dev_path, DBUS_TYPE_INVALID)) {
+		fprintf(stderr, "Invalid arguments for RequestPinCode method");
 		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 	}

-	printf("Request canceled for device %s\n", address);
+	printf("Device path = %s\n",dev_path);
+
+	if (!__io_canceled)
+		fprintf(stderr, "Agent has been released\n");
+
+	//__io_terminated = 1;

 	reply = dbus_message_new_method_return(msg);
 	if (!reply) {
@@ -135,6 +123,9 @@ static DBusHandlerResult
cancel_message(DBusConnection *conn,
 		return DBUS_HANDLER_RESULT_NEED_MEMORY;
 	}

+	dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;pincode,
+					DBUS_TYPE_INVALID);
+
 	dbus_connection_send(conn, reply, NULL);

 	dbus_connection_flush(conn);
@@ -177,14 +168,37 @@ static DBusHandlerResult
release_message(DBusConnection *conn,
 static DBusHandlerResult agent_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Request"))
-		return request_message(conn, msg, data);
+	printf("Agent_message was called!\n");

-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
-		return cancel_message(conn, msg, data);
-
-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release"))
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release")){
+		printf("Agent called: Release\n");
 		return release_message(conn, msg, data);
+	}
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPinCode")){
+		printf("Agent called: RequestPinCode\n");
+		return reqpincode_message(conn, msg, data);
+	}
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPasskey"))
+		printf("Agent called: RequestPasskey\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "DisplayPasskey"))
+		printf("Agent called: DisplayPasskey\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"RequestConfirmation"))
+		printf("Agent called: RequestConfirmation\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Authorize"))
+		printf("Agent called: Authorize\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "ConfirmModeChange"))
+		printf("Agent called: ConfirmModeChange\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel")){
+		printf("Agent called: Cancel\n");
+		return cancel_message(conn, msg, data);
+	}

 	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
@@ -279,21 +293,88 @@ static int unregister_agent(DBusConnection
*conn, const char *device_path,
 	return 0;
 }

-static char *get_device(const char *device)
+static char *get_device(DBusConnection *conn)
 {
-	char *path;
+	char *path, *device_path = NULL;
+	DBusMessage *msg, *reply;
+	DBusError err;

-	path = strdup("/org/bluez/hci0");
+	msg = dbus_message_new_method_call("org.bluez", "/",
+					"org.bluez.Manager", "DefaultAdapter");
+	if (!msg) {
+		fprintf(stderr, "Can't allocate new method call\n");
+		return NULL;
+	}

-	return path;
+	dbus_error_init(&amp;err);
+
+	reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);
+
+	dbus_message_unref(msg);
+
+	if (!reply) {
+		fprintf(stderr, "Can't get Adapter path\n");
+		if (dbus_error_is_set(&amp;err)) {
+			fprintf(stderr, "%s\n", err.message);
+			dbus_error_free(&amp;err);
+		}
+		return NULL;
+	}
+
+	dbus_message_get_args(reply, NULL, DBUS_TYPE_OBJECT_PATH,
&amp;device_path, DBUS_TYPE_INVALID);
+
+	dbus_message_unref(reply);
+
+	dbus_connection_flush(conn);
+
+	return device_path;
+}
+
+static int pair_device(DBusConnection *conn, const char *device_path,
+					const char *agent_path,
+					const char *capabilities)
+{
+	DBusMessage *msg;
+	DBusPendingCall *pending;
+	int ret;
+
+
+	printf("Adapter path: %s\n", device_path);
+
+	msg = dbus_message_new_method_call("org.bluez", device_path,
+					"org.bluez.Adapter", "CreatePairedDevice");
+	if (!msg) {
+		fprintf(stderr, "Can't allocate new method call\n");
+		return -1;
+	}
+
+	dbus_message_append_args(msg, DBUS_TYPE_STRING, &amp;devaddr,
+					DBUS_TYPE_OBJECT_PATH, &amp;agent_path,
+					DBUS_TYPE_STRING, &amp;capabilities,
+							DBUS_TYPE_INVALID);
+
+	ret = dbus_connection_send_with_reply(conn, msg, &amp;pending, 100000);
+
+	if (!ret) {
+		fprintf(stderr, "Can't pair to device\n");
+		return -1;
+	}
+
+	dbus_message_unref(msg);
+
+	dbus_connection_flush(conn);
+
+	dbus_pending_call_block(pending);
+
+	return 0;
 }

 static void usage(void)
 {
-	printf("Bluetooth agent ver %s\n\n", VERSION);
+	printf("Bluetooth agent ver %s\n\n", "4.18");

 	printf("Usage:\n"
-		"\tagent [--device interface] [--path agent-path] &lt;passkey&gt;\n"
+		"\tagent &lt;device address&gt; [pincode]\n"
 		"\n");
 }

@@ -348,12 +429,10 @@ int main(int argc, char *argv[])
 	argv += optind;
 	optind = 0;

-	if (argc &lt; 1) {
+	/*if (argc &lt; 1) {
 		usage();
 		exit(1);
-	}
-
-	passkey = strdup(argv[0]);
+	}*/

 	if (!agent_path)
 		agent_path = strdup(default_path);
@@ -365,12 +444,25 @@ int main(int argc, char *argv[])
 	}

 	if (!device_path)
-		device_path = get_device(device_id);
+		device_path = get_device(conn);

-	if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
-		dbus_connection_unref(conn);
-		exit(1);
-	}
+
+	//if (argc &gt;= 1){
+		devaddr = strdup(argv[0]);
+		printf("Pairing to %s\n",devaddr);
+		if (pair_device(conn, device_path, agent_path, capabilities) &lt; 0){
+				dbus_connection_unref(conn);
+				printf("Pairing failed\n");
+				exit(1);
+		}
+	//}
+	//else {
+		if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
+			dbus_connection_unref(conn);
+			exit(1);
+		}
+
+	//}

 	if (!dbus_connection_add_filter(conn, agent_filter, NULL, NULL))
 		fprintf(stderr, "Can't add signal filter");
@@ -395,11 +487,9 @@ int main(int argc, char *argv[])
 	if (!__io_terminated)
 		unregister_agent(conn, device_path, agent_path);

-	free(device_path);
+	free(devaddr);
 	free(agent_path);

-	free(passkey);
-
 	dbus_connection_unref(conn);

 	return 0;
-- 
1.5.6.3
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124025701</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:57:01-0400</timestampReceived><subject>Re: btusb and HCI_RAW</subject><body>

Hi Matthieu,

&gt; with HCI_RAW, application can bypass the bluez stack and send raw  
&gt; stuff
&gt; to dongle.
&gt;
&gt; This seems not possible anymore with btusb because it uses
&gt; "hdev-&gt;conn_hash" to check if ACLDATA/SCODATA should be send/received.
&gt;
&gt; These checks make the HCI_RAW mode a bit useless (ie not working for  
&gt; acl
&gt; and sco).
&gt;
&gt; Can we make the HCI_RAW work like before with acl and sco data ?
&gt; For example we can ignore theses check in HCI_RAW mode and send a  
&gt; notify
&gt; event when we turn on/off HCI_RAW mode.

we could, but that will cost a lot of CPU power. The SCO data packets  
are just not an option here. Also without a full blown Bluetooth  
stack, you don't know with alternate setting to use. So this is a  
little bit pointless here and before just worked by pure luck. Why do  
you want this support in the first place?

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127170222</emailId><senderName>Matthieu CASTET</senderName><senderEmail>matthieu.castet@parrot.com</senderEmail><timestampReceived>2008-11-27 17:02:22-0400</timestampReceived><subject>Re: btusb and HCI_RAW</subject><body>

Hi Marcel,


Marcel Holtmann a écrit :
&gt; Hi Matthieu,
&gt; 
&gt;&gt; with HCI_RAW, application can bypass the bluez stack and send raw stuff
&gt;&gt; to dongle.
&gt;&gt;
&gt;&gt; This seems not possible anymore with btusb because it uses
&gt;&gt; "hdev-&gt;conn_hash" to check if ACLDATA/SCODATA should be send/received.
&gt;&gt;
&gt;&gt; These checks make the HCI_RAW mode a bit useless (ie not working for acl
&gt;&gt; and sco).
&gt;&gt;
&gt;&gt; Can we make the HCI_RAW work like before with acl and sco data ?
&gt;&gt; For example we can ignore theses check in HCI_RAW mode and send a notify
&gt;&gt; event when we turn on/off HCI_RAW mode.
&gt; 
&gt; we could, but that will cost a lot of CPU power. The SCO data packets
&gt; are just not an option here. Also without a full blown Bluetooth stack,
&gt; you don't know with alternate setting to use.
But hci_usb wasn't doing that (ie always use max alternate setting +
submit sco/alc urb), and I wasn't under the impression that it costs too
much CPU power.


&gt; So this is a little bit
&gt; pointless here and before just worked by pure luck. Why do you want this
&gt; support in the first place?
&gt;
This can be helpful to test userspace bluetooth stack or do some fuzzing.

What is the goal of HCI_RAW ?
With btusb it seems useless in the tx path.


Matthieu

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127190802</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-27 19:08:02-0400</timestampReceived><subject>Re: btusb and HCI_RAW</subject><body>

Hi Matthieu,

&gt;&gt;&gt; with HCI_RAW, application can bypass the bluez stack and send raw  
&gt;&gt;&gt; stuff
&gt;&gt;&gt; to dongle.
&gt;&gt;&gt;
&gt;&gt;&gt; This seems not possible anymore with btusb because it uses
&gt;&gt;&gt; "hdev-&gt;conn_hash" to check if ACLDATA/SCODATA should be send/ 
&gt;&gt;&gt; received.
&gt;&gt;&gt;
&gt;&gt;&gt; These checks make the HCI_RAW mode a bit useless (ie not working  
&gt;&gt;&gt; for acl
&gt;&gt;&gt; and sco).
&gt;&gt;&gt;
&gt;&gt;&gt; Can we make the HCI_RAW work like before with acl and sco data ?
&gt;&gt;&gt; For example we can ignore theses check in HCI_RAW mode and send a  
&gt;&gt;&gt; notify
&gt;&gt;&gt; event when we turn on/off HCI_RAW mode.
&gt;&gt;
&gt;&gt; we could, but that will cost a lot of CPU power. The SCO data packets
&gt;&gt; are just not an option here. Also without a full blown Bluetooth  
&gt;&gt; stack,
&gt;&gt; you don't know with alternate setting to use.
&gt; But hci_usb wasn't doing that (ie always use max alternate setting +
&gt; submit sco/alc urb), and I wasn't under the impression that it costs  
&gt; too
&gt; much CPU power.

there is not concept of max alternate setting. You just have to use  
the right one and powertop showed the difference in power consumption.

&gt;&gt; So this is a little bit
&gt;&gt; pointless here and before just worked by pure luck. Why do you want  
&gt;&gt; this
&gt;&gt; support in the first place?
&gt;&gt;
&gt; This can be helpful to test userspace bluetooth stack or do some  
&gt; fuzzing.

I seriously couldn't care less about any userspace Bluetooth stack.  
Also why is RAW not working for ACL packets. It actually should work  
if the adapter is brought up properly and switched to RUNNING state.  
SCO will not be possible without magic.

&gt; What is the goal of HCI_RAW ?
&gt; With btusb it seems useless in the tx path.

It is mainly used for commands and events and for that it works  
perfectly fine.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127105636</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-27 10:56:36-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

On Thu, 2008-11-27 at 09:54 +0000, Simon Kenyon wrote:
&gt; i'm trying to get y BD Remote to work.
&gt; 
&gt; this is what i have done so far:
&gt; 
&gt; installed bluez from git (as of yesterday)
&gt; configured it (i think)
&gt; when i:
&gt; 
&gt; hidd --search
&gt; 
&gt; i see the remote

Your remote won't work using hidd. There's no code in hidd to decode the
custom protocol.

Pair it with the bluetooth-wizard and you can be on your way.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127105918</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-27 10:59:18-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Simon Kenyon wrote:
&gt; i'm trying to get y BD Remote to work.
&gt; 
&gt; this is what i have done so far:
&gt; 
&gt; installed bluez from git (as of yesterday)
&gt; configured it (i think)
&gt; when i:
&gt; 
&gt; hidd --search
&gt; 
&gt; i see the remote
&gt; 
&gt; by using udev rules i create /dev/bdremote (which links to 
&gt; /dev/input/event&lt;x&gt;, for the correct &lt;x&gt;)
&gt; i can see the key presses on the remote being transmitted (using hcidump)
&gt; 
&gt; what i cannot do see is ny events occuring (by loading evbug)
&gt; i'm trying to get the events into lirc
&gt; 
&gt; i promise to write up the steps if i get it working
&gt; 
&gt; i'm running a pretty standard gentoo setup with kde (not gnome)
&gt; 
&gt; any help would be appreciated
&gt; --
&gt; simon

I talked to Marcel about the Sony BD Remote on the CELINUX event in the
Netherlands. I took my Sony BD Remote with me to show some issues.
Marcel did some on the fly coding to get the device connected, but there
is missing an hid driver that maps the keys to an input event xorg can use.

So the device is not working yet, until somebody creates a proper hid
driver for the device to map the keys.

I don't know if Marcel commited the code to make the device connect.

I spent far to much time trying to get this device working, there are a
few bug reports and some post on the archive from me about this subject...

Hope this information helps you understand.

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127111043</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-27 11:10:43-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

On Thu, 2008-11-27 at 11:59 +0100, Jelle de Jong wrote:
&lt;snip&gt;
&gt; I talked to Marcel about the Sony BD Remote on the CELINUX event in the
&gt; Netherlands. I took my Sony BD Remote with me to show some issues.
&gt; Marcel did some on the fly coding to get the device connected, but there
&gt; is missing an hid driver that maps the keys to an input event xorg can use.
&gt; 
&gt; So the device is not working yet, until somebody creates a proper hid
&gt; driver for the device to map the keys.

Should just work with a (very) recent distro:
https://bugs.freedesktop.org/show_bug.cgi?id=16519

This might be missing some keys in the X evdev keyboard map, although I
believe Peter already fixed this.

And it should also just work using LIRC (which is how I got it to work
in the first place). Use gnome-lirc-properties to set it up.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128153655</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-28 15:36:55-0400</timestampReceived><subject>[PATCH] Move PIN codes to an external database</subject><body>

Heya,

This is a patch to move the PIN quirks to an external tab-separated text
file. The parser is very simple and naive, but does the job for all the
devices I tested.

string_to_type() should probably be using an array instead of the
current code, and I've managed to move the current quirks to the
external file without a problem.

When this gets in, I'll work on moving all the quirks filed as bugs
against the wizard[1] into bluez-gnome proper.

Cheers

[1]: http://bugzilla.gnome.org/buglist.cgi?product=bluez-gnome&amp;bug_status=NEW&amp;bug_status=REOPENED&amp;bug_status=ASSIGNED&amp;bug_status=UNCONFIRMED&amp;component=wizard



["0001-Move-the-PIN-quirks-to-an-external-database.patch" (0001-Move-the-PIN-quirks-to-an-external-database.patch)]

From a09d96d61f1fdf691abd9a35ade5151c466992d1 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Fri, 28 Nov 2008 15:27:54 +0000
Subject: [PATCH] Move the PIN quirks to an external database

Move the PIN quirks to a simple tab-separated text file.
---
 wizard/Makefile.am           |    7 ++-
 wizard/main.c                |  112 ++++++++++++++++++++++++++++++++++--------
 wizard/pin-code-database.txt |   24 +++++++++
 3 files changed, 120 insertions(+), 23 deletions(-)
 create mode 100644 wizard/pin-code-database.txt

diff --git a/wizard/Makefile.am b/wizard/Makefile.am
index 0a2ba45..ddf2cab 100644
--- a/wizard/Makefile.am
+++ b/wizard/Makefile.am
@@ -6,12 +6,15 @@ bluetooth_wizard_SOURCES = main.c
 bluetooth_wizard_LDADD = $(top_builddir)/common/libcommon.a \
 						@GTK_LIBS@ @DBUS_LIBS@
 
-AM_CFLAGS = @DBUS_CFLAGS@ @GTK_CFLAGS@
+AM_CFLAGS = -DPKGDATADIR="\"$(pkgdatadir)\"" @DBUS_CFLAGS@ @GTK_CFLAGS@
 
 INCLUDES = -I$(top_srcdir)/common
 
+pin_DATA = pin-code-database.txt
+pindir = $(pkgdatadir)
+
 man_MANS = bluetooth-wizard.1
 
-EXTRA_DIST = $(man_MANS)
+EXTRA_DIST = $(man_MANS) $(pin_DATA)
 
 MAINTAINERCLEANFILES = Makefile.in
diff --git a/wizard/main.c b/wizard/main.c
index 09209a9..b29552c 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -37,6 +37,7 @@
 #include "helper.h"
 
 #define AGENT_PATH "/org/bluez/agent/wizard"
+#define PIN_CODE_DB "pin-code-database.txt"
 
 static BluetoothClient *client;
 static BluetoothAgent *agent;
@@ -56,32 +57,100 @@ static GtkWidget *label_passkey = NULL;
 
 static GtkTreeSelection *search_selection = NULL;
 
+#define TYPE_IS(x, r) {				\
+	if (g_str_equal(type, x)) return r;	\
+}
+
+static guint string_to_type(const char *type)
+{
+	TYPE_IS ("any", BLUETOOTH_TYPE_ANY);
+	TYPE_IS ("mouse", BLUETOOTH_TYPE_MOUSE);
+	TYPE_IS ("keyboard", BLUETOOTH_TYPE_KEYBOARD);
+	TYPE_IS ("headset", BLUETOOTH_TYPE_HEADSET);
+	TYPE_IS ("headphone", BLUETOOTH_TYPE_HEADPHONE);
+
+	g_warning ("unhandled type '%s'", type);
+	return BLUETOOTH_TYPE_ANY;
+}
+
+static char *set_pincode_for_device(guint type, const char *address, const char *name)
+{
+	char *contents, **lines;
+	char *ret_pin = NULL;
+	guint i;
+
+	/* Load the PIN database and split it in lines */
+	if (!g_file_get_contents(PIN_CODE_DB, &amp;contents, NULL, NULL)) {
+		char *filename;
+
+		filename = g_build_filename(PKGDATADIR, PIN_CODE_DB, NULL);
+		if (!g_file_get_contents(filename, &amp;contents, NULL, NULL)) {
+			g_warning("Could not load "PIN_CODE_DB);
+			g_free (filename);
+			return NULL;
+		}
+		g_free (filename);
+	}
+
+	lines = g_strsplit(contents, "\n", -1);
+	g_free (contents);
+	if (lines == NULL) {
+		g_warning("Could not parse "PIN_CODE_DB);
+		return NULL;
+	}
+
+	/* And now process each line */
+	for (i = 0; lines[i] != NULL; i++) {
+		char **items;
+		guint ltype;
+		const char *laddress, *lname, *lpin;
+
+		/* Ignore comments and empty lines */
+		if (lines[i][0] == '#' || lines[i][0] == '\0')
+			continue;
+
+		items = g_strsplit(lines[i], "\t", 4);
+		ltype = string_to_type(items[0]);
+
+		if (ltype != BLUETOOTH_TYPE_ANY &amp;&amp; ltype != type) {
+			g_strfreev (items);
+			continue;
+		}
+		laddress = items[1];
+		lname = items[2];
+		lpin = items[3];
+
+		/* If we have an address, does the OUI prefix match? */
+		if (strlen(laddress) &gt; 0 &amp;&amp; g_str_has_prefix(address, laddress) == FALSE) {
+			g_strfreev (items);
+			continue;
+		}
+
+		/* If we have a name, does it match? */
+		if (strlen(lname) &gt; 0 &amp;&amp; g_str_equal(name, lname) == FALSE) {
+			g_strfreev (items);
+			continue;
+		}
+
+		/* Everything matches, we have a pincode */
+		ret_pin = g_strdup(lpin);
+		g_strfreev(items);
+		break;
+	}
+
+	g_strfreev(lines);
+	return ret_pin;
+}
+
 static gboolean pincode_callback(DBusGMethodInvocation *context,
 					DBusGProxy *device, gpointer user_data)
 {
-	const char *pincode = target_pincode;
+	char *pincode;
 	gchar *text;
 
-	/* Apple Wireless and Mighty Mouse */
-	if (target_type == BLUETOOTH_TYPE_MOUSE &amp;&amp; 
-				(g_str_has_prefix(target_address,
-							"00:0A:95:") == TRUE ||
-				g_str_has_prefix(target_address,
-							"00:14:51:") == TRUE))
-		pincode = "0000";
-
-	/* Most headsets are using 0000 as pincode */
-	if (target_type == BLUETOOTH_TYPE_HEADSET ||
-				target_type == BLUETOOTH_TYPE_HEADPHONE)
-		pincode = "0000";
-
-	/* Most GPS devices are using 0000 as pincode */
-	if (g_str_has_prefix(target_address, "00:0D:B5") == TRUE &amp;&amp;
-				(g_str_equal(target_name,
-					"TomTom Wireless GPS MkII") == TRUE ||
-				g_str_equal(target_name,
-						"GPS-GW-005") == TRUE))
-		pincode = "0000";
+	pincode = set_pincode_for_device(target_type, target_address, target_name);
+	if (pincode == NULL)
+		pincode = g_strdup(target_pincode);
 
 	text = g_strdup_printf(_("Please enter the following PIN code: %s"),
 								pincode);
@@ -89,6 +158,7 @@ static gboolean pincode_callback(DBusGMethodInvocation *context,
 	g_free(text);
 
 	dbus_g_method_return(context, pincode);
+	g_free(pincode);
 
 	return TRUE;
 }
diff --git a/wizard/pin-code-database.txt b/wizard/pin-code-database.txt
new file mode 100644
index 0000000..653fc2c
--- /dev/null
+++ b/wizard/pin-code-database.txt
@@ -0,0 +1,24 @@
+# This is a PIN code database for use in the Bluetooth wizard.
+#
+# The syntax is a simple tab-separated file with 4 fields:
+# type	bdaddr_prefix	device_name	device_pin
+# 
+# Lines starting with # (such as this one) and empty lines are ignored
+# Recognised types are:
+# any, mouse, keyboard, headset, headphones
+# 
+# The bdaddr_prefix and device_name fields can be left empty
+
+# Apple Wireless and Mighty Mouse
+mouse	00:0A:95:		0000
+mouse	00:14:51:		0000
+
+# GPS devices
+any	00:0D:B5:	TomTom Wireless GPS MkII	0000
+any	00:0D:B5:	GPS-GW-005	0000
+
+######## Generic type ########
+
+# Headphones and headsets
+headphone			0000
+headset			0000
-- 
1.6.0.4


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081128155046</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-28 15:50:46-0400</timestampReceived><subject>Re: [PATCH] Move PIN codes to an external database</subject><body>

Hi Bastien,

&gt; This is a patch to move the PIN quirks to an external tab-separated text
&gt; file. The parser is very simple and naive, but does the job for all the
&gt; devices I tested.
&gt; 
&gt; string_to_type() should probably be using an array instead of the
&gt; current code, and I've managed to move the current quirks to the
&gt; external file without a problem.
&gt; 
&gt; When this gets in, I'll work on moving all the quirks filed as bugs
&gt; against the wizard[1] into bluez-gnome proper.

should we not better store this in GConf?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128161559</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-28 16:15:59-0400</timestampReceived><subject>Re: [PATCH] Move PIN codes to an external database</subject><body>

On Fri, 2008-11-28 at 16:50 +0100, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; This is a patch to move the PIN quirks to an external tab-separated text
&gt; &gt; file. The parser is very simple and naive, but does the job for all the
&gt; &gt; devices I tested.
&gt; &gt; 
&gt; &gt; string_to_type() should probably be using an array instead of the
&gt; &gt; current code, and I've managed to move the current quirks to the
&gt; &gt; external file without a problem.
&gt; &gt; 
&gt; &gt; When this gets in, I'll work on moving all the quirks filed as bugs
&gt; &gt; against the wizard[1] into bluez-gnome proper.
&gt; 
&gt; should we not better store this in GConf?

GConf is a configuration database. This isn't configuration...

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127111705</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-27 11:17:05-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Bastien Nocera wrote:
&gt; On Thu, 2008-11-27 at 11:59 +0100, Jelle de Jong wrote:
&gt; &lt;snip&gt;
&gt;&gt; I talked to Marcel about the Sony BD Remote on the CELINUX event in the
&gt;&gt; Netherlands. I took my Sony BD Remote with me to show some issues.
&gt;&gt; Marcel did some on the fly coding to get the device connected, but there
&gt;&gt; is missing an hid driver that maps the keys to an input event xorg can use.
&gt;&gt;
&gt;&gt; So the device is not working yet, until somebody creates a proper hid
&gt;&gt; driver for the device to map the keys.
&gt; 
&gt; Should just work with a (very) recent distro:
&gt; https://bugs.freedesktop.org/show_bug.cgi?id=16519
&gt; 
&gt; This might be missing some keys in the X evdev keyboard map, although I
&gt; believe Peter already fixed this.
&gt; 
&gt; And it should also just work using LIRC (which is how I got it to work
&gt; in the first place). Use gnome-lirc-properties to set it up.
&gt; 
&gt; Cheers

So does it create an input event that I can use with evtest and
xbindkeys --key to add commands to the keys. I really really don't like
all those gnome apps.... to get hardware working, hardware should be
graphical destkop independent configured. A month ago the device was not
working yet.

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127113010</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-27 11:30:10-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

On Thu, 2008-11-27 at 12:17 +0100, Jelle de Jong wrote:
&gt; Bastien Nocera wrote:
&gt; &gt; On Thu, 2008-11-27 at 11:59 +0100, Jelle de Jong wrote:
&gt; &gt; &lt;snip&gt;
&gt; &gt;&gt; I talked to Marcel about the Sony BD Remote on the CELINUX event in the
&gt; &gt;&gt; Netherlands. I took my Sony BD Remote with me to show some issues.
&gt; &gt;&gt; Marcel did some on the fly coding to get the device connected, but there
&gt; &gt;&gt; is missing an hid driver that maps the keys to an input event xorg can use.
&gt; &gt;&gt;
&gt; &gt;&gt; So the device is not working yet, until somebody creates a proper hid
&gt; &gt;&gt; driver for the device to map the keys.
&gt; &gt; 
&gt; &gt; Should just work with a (very) recent distro:
&gt; &gt; https://bugs.freedesktop.org/show_bug.cgi?id=16519
&gt; &gt; 
&gt; &gt; This might be missing some keys in the X evdev keyboard map, although I
&gt; &gt; believe Peter already fixed this.
&gt; &gt; 
&gt; &gt; And it should also just work using LIRC (which is how I got it to work
&gt; &gt; in the first place). Use gnome-lirc-properties to set it up.
&gt; &gt; 
&gt; &gt; Cheers
&gt; 
&gt; So does it create an input event that I can use with evtest and
&gt; xbindkeys --key to add commands to the keys.

That's what the point of the patch was.

&gt;  I really really don't like
&gt; all those gnome apps.... to get hardware working, hardware should be
&gt; graphical destkop independent configured.

And that's what those apps do. If you want to configure the stuff by
hand, be my guest, but don't come complaining to me if you can't figure
out how to setup LIRC.

&gt;  A month ago the device was not
&gt; working yet.

It's working, it can talk to the computer and generates input layer
events. Everything on top is minor niggles, and integration. And that
doesn't just happen out of thin air.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127154157</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-27 15:41:57-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Bastien Nocera wrote:
&gt; It's working, it can talk to the computer and generates input layer
&gt; events. Everything on top is minor niggles, and integration. And that
&gt; doesn't just happen out of thin air.
&gt;   
i am running code from git which i fetched yesterday
so i have all the patches i believe

what do i have to do the generate input events?
i'm running bluetoothd. do i need to run hid2hci and if so, should the 
option be -0 or -1?

i have bluez-gnome installed. is there any documentation to tell me how 
to run them?
when i run bluetooth-wizard the list of devices is empty


evtest shows no events being generated

i only get an entry in /dev/input/ when i go hidd --search
is there some other way of doing that?


thanks in advance
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127231039</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-27 23:10:39-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Bastien Nocera wrote:
&gt; On Thu, 2008-11-27 at 09:54 +0000, Simon Kenyon wrote:
&gt;   
&gt;&gt; i'm trying to get y BD Remote to work.
&gt;&gt;
&gt;&gt; this is what i have done so far:
&gt;&gt;
&gt;&gt; installed bluez from git (as of yesterday)
&gt;&gt; configured it (i think)
&gt;&gt; when i:
&gt;&gt;
&gt;&gt; hidd --search
&gt;&gt;
&gt;&gt; i see the remote
&gt;&gt;     
&gt;
&gt; Your remote won't work using hidd. There's no code in hidd to decode the
&gt; custom protocol.
&gt;
&gt; Pair it with the bluetooth-wizard and you can be on your way.
&gt;
&gt; Cheers
&gt;
&gt;   
but when i run bluetooth-wizard nothing is shown
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127231347</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-27 23:13:47-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

On Thu, 2008-11-27 at 23:10 +0000, Simon Kenyon wrote:
&gt; Bastien Nocera wrote:
&gt; &gt; On Thu, 2008-11-27 at 09:54 +0000, Simon Kenyon wrote:
&gt; &gt;   
&gt; &gt;&gt; i'm trying to get y BD Remote to work.
&gt; &gt;&gt;
&gt; &gt;&gt; this is what i have done so far:
&gt; &gt;&gt;
&gt; &gt;&gt; installed bluez from git (as of yesterday)
&gt; &gt;&gt; configured it (i think)
&gt; &gt;&gt; when i:
&gt; &gt;&gt;
&gt; &gt;&gt; hidd --search
&gt; &gt;&gt;
&gt; &gt;&gt; i see the remote
&gt; &gt;&gt;     
&gt; &gt;
&gt; &gt; Your remote won't work using hidd. There's no code in hidd to decode the
&gt; &gt; custom protocol.
&gt; &gt;
&gt; &gt; Pair it with the bluetooth-wizard and you can be on your way.
&gt; &gt;
&gt; &gt; Cheers
&gt; &gt;
&gt; &gt;   
&gt; but when i run bluetooth-wizard nothing is shown

Then probably don't even have a bluetooth adapter setup, or no visible
devices around.

To setup the remote:
https://fedoraproject.org/wiki/Documentation/Bluetooth#Remote_controls_.28PS3_Blu-Ray_remote.29

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128031830</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-11-28 03:18:30-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Simon Kenyon wrote:
&gt; Bastien Nocera wrote:
&gt;&gt;
&gt;&gt; Pair it with the bluetooth-wizard and you can be on your way.
&gt;&gt;
&gt;&gt; Cheers
&gt;&gt;
&gt;&gt;   
&gt; but when i run bluetooth-wizard nothing is shown

In great excitement I rushed out and bought one of these :)  A Bluetooth 
remote - brilliant!  I might even think about buying a Playstation 3 to 
go with it :)  Infrared is for suckers...

In order to get it into pairing mode (and thus be able to see it from 
bluetooth-wizard) it looks like you need to press *AND HOLD* the "Enter" 
and "Start" buttons at the same time (for something like one second).  
The Fedora Wiki page is lamely unclear about that.

Sadly I can't pair with it yet, pairing fails - for reasons I'll try and 
figure out later...
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128084934</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 08:49:34-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

Bastien Nocera wrote:
&gt; Then probably don't even have a bluetooth adapter setup, or no visible
&gt; devices around.
&gt;   
but i do.
as i said previously, i can see the key presses coming from the ps3 
remote if i use hcidump
what i don't know is how to configure things to get the events into the 
input subsystem.
do you know what to do?
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124025340</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:53:40-0400</timestampReceived><subject>Re: BCM2045B2</subject><body>

Hi Oleg,

&gt; Asus P535 details on http://www.kaa.org.ua/asus-p535/hardware.html
&gt; Bluetooth chip BCM2045B2 connected to the pxa internal usb host.
&gt;
&gt; I think this chip need firmware, because it is can only search
&gt; How I can upload firmware to the this chip?

no, the chip needs a HCI Reset call. Load btusb with reset=1. And send  
the output of /proc/bus/usb/devices for this dongle.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126045707</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-26 04:57:07-0400</timestampReceived><subject>Re: agent.c</subject><body>

Hi Alan,

&gt; I am updating agent.c in order to it works with new bluez versions.

please send patches and not full *.c source code.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081125081442</emailId><senderName>Sam Lin</senderName><senderEmail>itrs.lin@gmail.com</senderEmail><timestampReceived>2008-11-25 08:14:42-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

Hi All,

I traced code and found in some case headset is not unlocked well.
for example when something goes wrong in headset_resume_complete(),
client-&gt;dev = NULL

so client_cb() will skip headset_unlock()

then headset will be locked forever until restart bluetoothd.

I have no idea what's the lock idea behind, BTW still unclear how the
problem happens to cause this.

Please help to provide idea.

log:

Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: Accepted new client
connection on unix socket (fd=22)
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: Audio API: received
BT_GETCAPABILITIES_REQ
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: Audio API: sending
BT_GETCAPABILITIES_RSP
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: Audio API: received
BT_SETCONFIGURATION_REQ
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: config sco - device =
00:1E:DC:AB:6D:3F access_mode = 2
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]:
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: Connecting to 00:1E:DC:AB:6D:3F
channel 1
Nov 25 15:55:50 itrs-ubuntu bluetoothd[26202]: State changed
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_DISCONNECTED -&gt;
HEADSET_STATE_CONNECT_IN_PROGRESS
Nov 25 15:56:09 itrs-ubuntu bluetoothd[26202]:
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: Connected to 00:1E:DC:AB:6D:3F
Nov 25 15:56:09 itrs-ubuntu bluetoothd[26202]: telephony-dummy: device
0xb8486ba8 connected
Nov 25 15:56:09 itrs-ubuntu bluetoothd[26202]: State changed
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECT_IN_PROGRESS
-&gt; HEADSET_STATE_CONNECTED
Nov 25 15:56:09 itrs-ubuntu bluetoothd[26202]: State changed
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_CONNECTED -&gt;
HEADSET_STATE_PLAY_IN_PROGRESS
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: connect(): Connection
refused (111)
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: headset_lock(before):
hs-&gt;lock:0, lock:2, state:3
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: headset_lock: pass lock check
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: headset_lock(after):
hs-&gt;lock:2, lock:2, state:3
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Audio API: sending
BT_SETCONFIGURATION_RSP
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: State changed
/org/bluez/hci0/dev_00_1E_DC_AB_6D_3F: HEADSET_STATE_PLAY_IN_PROGRESS -&gt;
HEADSET_STATE_CONNECTED
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Audio API: received
BT_STREAMSTART_REQ
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Audio API: sending
BT_STREAMSTART_RSP
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Audio API: sending
BT_STREAMFD_IND
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: unix_sendmsg_fd: Bad file
descriptor(9)
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: resume failed
(headset_resume_complete)
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Audio API: sending
BT_STREAMSTART_RSP
Nov 25 15:56:12 itrs-ubuntu bluetoothd[26202]: Unix client disconnected
(fd=22), type:1, dev:
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Received AT+CLIP=1
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Received AT+CSCS="UTF-8"
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Badly formated or
unrecognized command: AT+CSCS="UTF-8"
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Received
AT*SEAM="HBH-PV720",13
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Badly formated or
unrecognized command: AT*SEAM="HBH-PV720",13
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Received AT+CLAN?
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Badly formated or
unrecognized command: AT+CLAN?
Nov 25 15:56:17 itrs-ubuntu bluetoothd[26202]: Received AT*EIPS=2,1
321,48 77%

......


Sam Lin

Sam Lin ´£¨ì:
&gt; Hi All,
&gt;
&gt; I tried Sony Ericsson HBH-PV720 with aplay and found something wrong.
&gt; Log as attachment.
&gt;
&gt; from first try (timestamp in log 11:24:23 - 11:24:31 ) it works fine.
&gt; sound played.
&gt;
&gt; but since 2nd try (timestamp in log 11:25:21 - 11:25:26) SCO packets
&gt; flow but no sound played.
&gt; something outstanding is:
&gt;
&gt; Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: Unable to lock headset
&gt; Nov 25 11:25:25 itrs-ubuntu bluetoothd[10399]: config failed
&gt;
&gt; then headset works no more, SCO packets keep flow until powerdown headset.
&gt;
&gt; would you please give any hint on this ?
&gt;
&gt; Sam Lin
&gt;
&gt;   

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081125091559</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-11-25 09:15:59-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

Hi,

Thanks for taking the time to investigate this.

On Nov 25, 2008, at 10:14, Sam Lin wrote:
&gt; I traced code and found in some case headset is not unlocked well.
&gt; for example when something goes wrong in headset_resume_complete(),
&gt; client-&gt;dev = NULL
&gt;
&gt; so client_cb() will skip headset_unlock()
&gt;
&gt; then headset will be locked forever until restart bluetoothd.
&gt;
&gt; I have no idea what's the lock idea behind, BTW still unclear how the
&gt; problem happens to cause this.

The lock part is used for making sure that only one unix socket client  
can have read or write access to a remote device at a time. The part  
that's setting client-&gt;dev to NULL seems definitely wrong to me but  
I'll let Luiz comment on it before making any changes (since according  
to git blame he was the last one to touch this part of the code). The  
A2DP resume function has similar logic so it probably needs fixing too.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081125143435</emailId><senderName>"Luiz Augusto von Dentz"</senderName><senderEmail>luiz.dentz@gmail.com</senderEmail><timestampReceived>2008-11-25 14:34:35-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

yep, client-&gt;dev = NULL seems to be a bug, although by looking the log
 it seems there is another problem, the sco connection doesn't succeed
but it still attempt to send the file descriptor. The logic on a2dp is
a little different, since it doesn't start the stream on
BT_SETCONFIGURATION_REQ and unlock the sep in any possible error.

Btw, I couldn't reproduce the problem here by using aplay, arecord or
even both together.

-- 
Luiz Augusto von Dentz
Engenheiro de Computação
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126000902</emailId><senderName>Sam Lin</senderName><senderEmail>itrs.lin@gmail.com</senderEmail><timestampReceived>2008-11-26 00:09:02-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

I have several headset to try and only HBH-PV270 has this problem.
So it seems to be device dependant and causes compatibility problem.

Sam Lin


Luiz Augusto von Dentz 提到:
&gt; yep, client-&gt;dev = NULL seems to be a bug, although by looking the log
&gt;  it seems there is another problem, the sco connection doesn't succeed
&gt; but it still attempt to send the file descriptor. The logic on a2dp is
&gt; a little different, since it doesn't start the stream on
&gt; BT_SETCONFIGURATION_REQ and unlock the sep in any possible error.
&gt;
&gt; Btw, I couldn't reproduce the problem here by using aplay, arecord or
&gt; even both together.
&gt;
&gt;   

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126100608</emailId><senderName>Sam Lin</senderName><senderEmail>itrs.lin@gmail.com</senderEmail><timestampReceived>2008-11-26 10:06:08-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

1. so do you suggest to just remove the client-&gt;dev = NULL statement in 
headset_setup_complete() and headset_resume_complete() ?

2. for the file descriptor sending issue have you any suggestion ?
(a hint to trigger this is repeatly run aplay, what i found is while 
finishing aplay the hcidump still takes some time to make traffics 
settle down (about 3-7 secs), if i repeat aplay in this period it's easy 
to trigger the problem)

Thanks,

Sam Lin


Luiz Augusto von Dentz 提到:
&gt; yep, client-&gt;dev = NULL seems to be a bug, although by looking the log
&gt;  it seems there is another problem, the sco connection doesn't succeed
&gt; but it still attempt to send the file descriptor. The logic on a2dp is
&gt; a little different, since it doesn't start the stream on
&gt; BT_SETCONFIGURATION_REQ and unlock the sep in any possible error.
&gt;
&gt; Btw, I couldn't reproduce the problem here by using aplay, arecord or
&gt; even both together.
&gt;
&gt;   

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126050038</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-26 05:00:38-0400</timestampReceived><subject>Re: l2ping only works for 10 seconds with 2.6.27</subject><body>

Hi Nick,

&gt; I have noticed with 2.6.27 that a bluez receiving side of l2ping will
&gt; detch the ACL connection (preventing further l2cap echos) after 10
&gt; seconds. HCI log below.
&gt;
&gt; Is this by design, or was it unintentional?

it is not fully intentional, but it result due the fact on how we had  
to implement the Simple Pairing support. Problem here is that l2ping  
can not create a remote reference count of the connection. So BlueZ  
will clean up the ACL link. And we do have to do that since otherwise  
we waste power with an unused link.

So if you do l2test -P 1 -n &lt;bdaddr&gt; first and then l2ping you will  
see that the ACL link stays up since the l2test hold a remote  
reference count.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124025811</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:58:11-0400</timestampReceived><subject>Re: compat/Makefile.am manpages fix / pand/dund question</subject><body>

Hi Stefan,

&gt; pand.1 and dund.1 are always installed. Fix below.

I fixed that already. Thanks for reporting.

&gt; Then some kind of packaging question:
&gt; I got users that request pand and dund. I am under the impression
&gt; that this should be handled by the networking service, however was
&gt; unable to find anything understandable on the WIKI where I can point
&gt; them to.
&gt;
&gt; Am I still "allowed" to package pand and dund, e.g. in a "bluez- 
&gt; compat"
&gt; package? I guess that I should not package hidd, no matter how much
&gt; users would like it, though ;-)

You can put hidd in bluez-compat if you like. It is useful for  
debugging since it can show the actual kernel state of the hidp.ko  
module.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124024113</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:41:13-0400</timestampReceived><subject>Re: Can we change org.openobex.Client's dbus node path?</subject><body>

Hi Raymond,

&gt; 	I notice that, in obex-client, we create the org.openobex.Client  
&gt; interface under path "/".
&gt; 	It's the same as org.openobex.manager in obexd.
&gt;
&gt; 	While, when create new session for say FTP, Obexd put Session  
&gt; interface under path "/session*" , and obex client put the Session  
&gt; interface under path "/org/openobex/Session*"
&gt;
&gt; 	And this will make the introspect function on client: dbus-send -- 
&gt; print-reply --dest=org.openobex.client /  
&gt; org.freedesktop.DBus.Introspectable.Introspect fail to show the node  
&gt; for /org/openobex/Session* (but dbus-send --print-reply -- 
&gt; dest=org.openobex.client /org  
&gt; org.freedesktop.DBus.Introspectable.Introspect will work)
&gt; 	While for obexd: dbus-send --print-reply --dest=org.openobex /  
&gt; org.freedesktop.DBus.Introspectable.Introspect can show the node  
&gt; for /Session*.
&gt;
&gt; 	So, can we change the path for org.openobex.Client and register it  
&gt; under path "/org/openobex/Client"?  Or we register session, FTP  
&gt; interfaces under root path like that in the obexd? Either way can  
&gt; solve the introspect problem.

we can put the object path wherever we want. That is the whole point  
of having a manager interface to discover/create them. The API  
specification mentions "variable prefix" for a really good reason. So  
whatever is broken here, the fix is not to change the object path. We  
have to fix the broken introspection.

Also I don't see your issue here. So you are saying that within obex- 
client when you introspect / that you are not getting /org in the list  
of paths.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124032449</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-24 03:24:49-0400</timestampReceived><subject>RE: Can we change org.openobex.Client's dbus node path?</subject><body>

&gt;
&gt;Also I don't see your issue here. So you are saying that within obex-
&gt;client when you introspect / that you are not getting /org in the list
&gt;of paths.
&gt;

Yes, can not get /org in the node list for org.openobex.client

&gt;Regards
&gt;
&gt;Marcel
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124033050</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 03:30:50-0400</timestampReceived><subject>Re: Can we change org.openobex.Client's dbus node path?</subject><body>

Hi Raymond,

&gt;&gt; Also I don't see your issue here. So you are saying that within obex-
&gt;&gt; client when you introspect / that you are not getting /org in the  
&gt;&gt; list
&gt;&gt; of paths.
&gt;&gt;
&gt;
&gt; Yes, can not get /org in the node list for org.openobex.client

this is a bug in gdbus then. The exactly same code is used in  
bluetoothd and connmand so it seems weird. Did you try to debug it  
where it actually fails to get this wrong? Are we missing some  
"invalidate parent" calls?

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124053952</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-24 05:39:52-0400</timestampReceived><subject>RE: Can we change org.openobex.Client's dbus node path?</subject><body>

&gt; 
&gt; this is a bug in gdbus then. The exactly same code is used in
&gt; bluetoothd and connmand so it seems weird. Did you try to debug it
&gt; where it actually fails to get this wrong? Are we missing some
&gt; "invalidate parent" calls?
&gt; 
&gt; Regards
&gt; 
&gt; Marcel

Hi Marcel

	I found the reason. During interface register object_path_unref did call \
invalidate_parent_data. But for our case: we have path "/" at first, and we register \
interface at "/org/openobex/Session0", there are no data for "/org/openobex", so no \
any parent introspect data is invalidated. But the whole /org/openobex path is \
created for the first time. So actually the "/"'s introspect data need to be \
invalidated.

I modify the code as below to invalidate the parent data up to "/", so that it will \
fix this problem.

-------------------------------------------------------------------
diff --git a/gdbus/object.c b/gdbus/object.c
old mode 100644
new mode 100755
index a417ab9..074f40b
--- a/gdbus/object.c
+++ b/gdbus/object.c
@@ -299,25 +299,28 @@ static void invalidate_parent_data(DBusConnection *conn, const \
char *child_path)  char *parent_path, *slash;

        parent_path = g_strdup(child_path);
-       slash = strrchr(parent_path, '/');
-       if (!slash)
-               goto done;
-
-       *slash = '\0';
-       if (!strlen(parent_path))
-               goto done;
+       do{
+               slash = strrchr(parent_path, '/');
+               if (!slash)
+                       break;

-       if (!dbus_connection_get_object_path_data(conn, parent_path,
-                                                       (void *) &amp;data))
-               goto done;
+               if (slash == parent_path) {
+                       *(slash+1) = '\0';
+               } else {
+                       *slash = '\0';
+               }

-       if (!data)
-               goto done;
+               if (!dbus_connection_get_object_path_data(conn, parent_path,
+                                                               (void *) &amp;data))
+                       continue;

-       g_free(data-&gt;introspect);
-       data-&gt;introspect = NULL;
+               if (!data)
+                       continue;

-done:
+               g_free(data-&gt;introspect);
+               data-&gt;introspect = NULL;
+       }while(slash != parent_path);
+
        g_free(parent_path);
 }

-------------------------------------------------------------------------

However, It got some drawback here: if part of the parent path did exist before, and \
the parent's parents data do not need to change. This fix will do much more thing \
then it should. I guess to found out all the change up to the necessay level will \
need more code. So I just make it simple here.

Raymond

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081124054810</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-24 05:48:10-0400</timestampReceived><subject>RE: Can we change org.openobex.Client's dbus node path?</subject><body>

&gt;
&gt;	I found the reason. During interface register object_path_unref did call
Sorry, typo here: should be object_path_ref

&gt;invalidate_parent_data. But for our case: we have path "/" at first, and we
&gt;register interface at "/org/openobex/Session0", there are no data for
&gt;"/org/openobex", so no any parent introspect data is invalidated. But the whole
&gt;/org/openobex path is created for the first time. So actually the "/"'s
&gt;introspect data need to be invalidated.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124082918</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 08:29:18-0400</timestampReceived><subject>Re: Can we change org.openobex.Client's dbus node path?</subject><body>

Hi Raymond,

&gt;&gt; this is a bug in gdbus then. The exactly same code is used in
&gt;&gt; bluetoothd and connmand so it seems weird. Did you try to debug it
&gt;&gt; where it actually fails to get this wrong? Are we missing some
&gt;&gt; "invalidate parent" calls?
&gt;&gt;
&gt; 	I found the reason. During interface register object_path_unref did  
&gt; call invalidate_parent_data. But for our case: we have path "/" at  
&gt; first, and we register interface at "/org/openobex/Session0", there  
&gt; are no data for "/org/openobex", so no any parent introspect data is  
&gt; invalidated. But the whole /org/openobex path is created for the  
&gt; first time. So actually the "/"'s introspect data need to be  
&gt; invalidated.

I suspected that this might be the reason. I fixed a similar bug some  
time ago. Funny that BlueZ didn't run into this since it might suffer  
the same with the new modified adapter and device object paths.

&gt; I modify the code as below to invalidate the parent data up to "/",  
&gt; so that it will fix this problem.
&gt;
&gt; -------------------------------------------------------------------
&gt; diff --git a/gdbus/object.c b/gdbus/object.c
&gt; old mode 100644
&gt; new mode 100755
&gt; index a417ab9..074f40b
&gt; --- a/gdbus/object.c
&gt; +++ b/gdbus/object.c
&gt; @@ -299,25 +299,28 @@ static void  
&gt; invalidate_parent_data(DBusConnection *conn, const char *child_path)
&gt;        char *parent_path, *slash;
&gt;
&gt;        parent_path = g_strdup(child_path);
&gt; -       slash = strrchr(parent_path, '/');
&gt; -       if (!slash)
&gt; -               goto done;
&gt; -
&gt; -       *slash = '\0';
&gt; -       if (!strlen(parent_path))
&gt; -               goto done;
&gt; +       do{
&gt; +               slash = strrchr(parent_path, '/');
&gt; +               if (!slash)
&gt; +                       break;
&gt;
&gt; -       if (!dbus_connection_get_object_path_data(conn, parent_path,
&gt; -                                                       (void *)  
&gt; &amp;data))
&gt; -               goto done;
&gt; +               if (slash == parent_path) {
&gt; +                       *(slash+1) = '\0';
&gt; +               } else {
&gt; +                       *slash = '\0';
&gt; +               }
&gt;
&gt; -       if (!data)
&gt; -               goto done;
&gt; +               if (!dbus_connection_get_object_path_data(conn,  
&gt; parent_path,
&gt; +                                                                
&gt; (void *) &amp;data))
&gt; +                       continue;
&gt;
&gt; -       g_free(data-&gt;introspect);
&gt; -       data-&gt;introspect = NULL;
&gt; +               if (!data)
&gt; +                       continue;
&gt;
&gt; -done:
&gt; +               g_free(data-&gt;introspect);
&gt; +               data-&gt;introspect = NULL;
&gt; +       }while(slash != parent_path);
&gt; +
&gt;        g_free(parent_path);
&gt; }
&gt;
&gt; -------------------------------------------------------------------------
&gt;
&gt; However, It got some drawback here: if part of the parent path did  
&gt; exist before, and the parent's parents data do not need to change.  
&gt; This fix will do much more thing then it should. I guess to found  
&gt; out all the change up to the necessay level will need more code. So  
&gt; I just make it simple here.

so first, please fix the coding style here. I can tell from just the  
pure email that you are mixing up tabs and spaces and also that you  
are missing whitespaces here and there. Check that your mail client  
doesn't mangle it. If in doubt send it as attachment.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120133426</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-11-20 13:34:26-0400</timestampReceived><subject>Re: Simple-agent in C</subject><body>

Hi Alan,

On Thu, Nov 20, 2008, Alan Carvalho de Assis wrote:
&gt; Please, can you point me to some simple-agent implemented in C?

There's test/agent.c in the source tree. However, now that I took a
quick look at it it's not up-to-date with the latest 4.x API (it e.g.
hardcodes "/org/bluez/hci0" and doesn't use the correct Agent method
names). You'll still be able to use it as a good starting point though.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120152238</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-20 15:22:38-0400</timestampReceived><subject>Re: Simple-agent in C</subject><body>

Hi Johan,

On Thu, Nov 20, 2008 at 1:34 PM, Johan Hedberg &lt;johan.hedberg@nokia.com&gt; wrote:
&gt;
&gt; There's test/agent.c in the source tree. However, now that I took a
&gt; quick look at it it's not up-to-date with the latest 4.x API (it e.g.
&gt; hardcodes "/org/bluez/hci0" and doesn't use the correct Agent method
&gt; names). You'll still be able to use it as a good starting point though.
&gt;

I noticed this agent.c doesn't use any Glib function, is it right?

I am comparing agent.c against simple-agent and verified it is very different.

&gt; Johan

Best Regards,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120153258</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@nokia.com</senderEmail><timestampReceived>2008-11-20 15:32:58-0400</timestampReceived><subject>Re: Simple-agent in C</subject><body>

On Thu, Nov 20, 2008, Alan Carvalho de Assis wrote:
&gt; I noticed this agent.c doesn't use any Glib function, is it right?

Yes.

&gt; I am comparing agent.c against simple-agent and verified it is very different.

Yes, as I said you'll need to fill in the proper agent callbacks (right
now there's something called "Request" which does not exist in the API)
as well as make it get the adapter path using e.g. DefaultAdapter().

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081120234511</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-20 23:45:11-0400</timestampReceived><subject>Re: Simple-agent in C</subject><body>

Sorry my mistake, I replied onf to Johan...

On Thu, Nov 20, 2008 at 3:32 PM, Johan Hedberg &lt;johan.hedberg@nokia.com&gt; wrote:
&gt;
&gt; Yes, as I said you'll need to fill in the proper agent callbacks (right
&gt; now there's something called "Request" which does not exist in the API)
&gt; as well as make it get the adapter path using e.g. DefaultAdapter().

All right. Thank you again!

When I run this agent it is reporting here is not org.bluez DBUS
service, then I verified bluetoothd is is starting correctly:

# bluetoothd -nd
bluetoothd[1888]: Bluetooth daemon
bluetoothd[1888]: Enabling debug information
bluetoothd[1888]: parsing main.conf
bluetoothd[1888]: offmode=NoScan
bluetoothd[1888]: discovto=0
bluetoothd[1888]: pageto=8192
bluetoothd[1888]: name=%h-%d
bluetoothd[1888]: class=0x000100
bluetoothd[1888]: inqmode=0
bluetoothd[1888]: Unable to get on D-Bus

This is the very same error reported here:
https://lists.ubuntu.com/archives/ubuntu-bluetooth/2008-November/002629.html

I am starting dbus this way:
# dbus-daemon --system

I tried to strace bluetoothd but it doesn't helped much, none suspect
problem. Is this some specific problem of this version (4.18)?

Some idea about how to solve this problem?
I think "Unable to get on D-Bus" means bluetoothd are not listening to
same d-bus socket started by dbus-daemon. Isn't it?

&gt; Johan

Best Regards,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081121130506</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-21 13:05:06-0400</timestampReceived><subject>Re: Unable to get on D-Bus</subject><body>

Hi all,

Good news, I found the problem, see below!

On Fri, Nov 21, 2008 at 11:28 AM, Alan Carvalho de Assis
&lt;acassis@gmail.com&gt; wrote:
&gt; Hi all,
&gt;
&gt; First I started DBUS:
&gt;
&gt; # dbus-daemon --system --print-address
&gt; unix:path=/var/run/dbus/system_bus_socket,guid=bd671c01bf0366c80869f10000014a47
&gt;
&gt; Then tried to start bluetoothd:
&gt;
&gt; # bluetoothd -nd
&gt; bluetoothd[1795]: Bluetooth daemon
&gt; bluetoothd[1795]: Enabling debug information
&gt; bluetoothd[1795]: parsing main.conf
&gt; bluetoothd[1795]: offmode=NoScan
&gt; bluetoothd[1795]: discovto=0
&gt; bluetoothd[1795]: pageto=8192
&gt; bluetoothd[1795]: name=%h-%d
&gt; bluetoothd[1795]: class=0x000100
&gt; bluetoothd[1795]: inqmode=0
&gt; bluetoothd[1795]: Unable to get on D-Bus

My bluez installation is placing bluetooth.conf at
/etc/dbus-1/system.d/ but dbus is looking for files at
/usr/etc/dbus-1/system.d!!!

I am posting it here because other people can get same problem.

Best Regards,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081123014155</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-23 01:41:55-0400</timestampReceived><subject>Re: Place-Holder for a driver</subject><body>

Hi Pavan,

&gt; The OMAP Zoom2 board has a bluetooth chip which needs to be enabled  
&gt; to be used. When running on Android, the Bluetooth service of  
&gt; Android uses the rfkill sysfs entry to turn on bluetooth.
&gt;
&gt; So I linked the Bluetooth enable GPIO to the sys-fs entry, Now the  
&gt; question is where should/does this driver fit in ?
&gt;
&gt; I've thought of drivers/misc, Any suggestions are welcome.

it depends a little bit. If it is purely architecture specific then it  
might fit better with the arch drivers. If it is has a more general  
use, then drivers/misc/ is fine. Drivers like thinkpad_acpi (which  
includes the Bluetooth rfkill switch) are also located there.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124025006</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:50:06-0400</timestampReceived><subject>Re: bcm203x bluetooth dongle still does not work in kernel 2.6.27.6</subject><body>

Hi Ron,

&gt;   I have a couple of boxes that I'm using with (admittedly fairly old)
&gt; Tecon bluetooth devices using the BCM-2033 chipset, and I've been  
&gt; having
&gt; trouble with them since you switched to the workqueue. For quite some
&gt; time I applied the patch referred to in the message below, and that
&gt; worked, but it wouldn't apply on kernel 2.6.27. Rather than fix it, I
&gt; decided to try the kernel driver as-is, with patchy results. Sometimes
&gt; it works, sometimes it doesn't. The symptoms are the same as below: my
&gt; syslog says
&gt;
&gt; Nov 19 12:38:45 rjmx kernel: firmware: requesting BCM2033-MD.hex
&gt; Nov 19 12:38:45 rjmx kernel: firmware: requesting BCM2033-FW.bin
&gt;
&gt;   but nothing seems to happen: an 'lsusb' still gives
&gt;
&gt; Bus 001 Device 004: ID 0a5c:2033 Broadcom Corp. BCM2033 Bluetooth
&gt;
&gt;   ... which is the wrong ID for a device that's had its firmware
&gt; properly loaded. The firmware files themselves seem to be readable,  
&gt; and
&gt; in fact an 'ls -lut' gives me a "last access time" similar to the  
&gt; actual
&gt; time I tried plugging in the device.

I don't have the Tecon device and my BCM2033 is at home. So I can't  
tell you what's going on here. Play with the drivers source code. It  
is pretty simple.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124025126</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 02:51:26-0400</timestampReceived><subject>Re: one "talker" multiple "listeners" possible for inquiry scan with RSSI?</subject><body>

Hi David,

&gt; I am getting to know bluez, reading the BT spec, playing with pybluez
&gt; - and I have a multi-adapter question I hope someone may know the
&gt; answer to.
&gt;
&gt; I want to capture the RSSI from a mobile phone from several Bluetooth
&gt; radio dongles on a linux system, so I can try to estimate where the
&gt; mobile phone is. I find that when I have all radios doing inquiry
&gt; scans with RSSI at the same time, it generates a lot of radio traffic,
&gt; and WiFi in the area slows down.
&gt;
&gt; So I'm wondering, can I have one radio initiate the inquiry scan with
&gt; RSSI, and have the other 5 radios just listen for the replies from the
&gt; mobile phone without "talking"? Could this be accomplished just by
&gt; setting the hardware address of the "listeners" to match the address
&gt; of the "talker", then they would receive the replies - or is there
&gt; some hand-shaking / delivery guarantee algorithm that is required that
&gt; would not be possible if the listeners remain quiet?

the simple answer is no. It is not how Bluetooth works. For more  
details you should get a book on Bluetooth that explains how the radio/ 
baseband actually works.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124030013</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 03:00:13-0400</timestampReceived><subject>Re: how to: Inquiry with RSSI?</subject><body>

Hi David,

&gt; First, thanks to the developers for creating Bluez - it's so nice to
&gt; have such a useful, open-source Bluetooth option.
&gt;
&gt; I am writing with a question: how can I do an inquiry scan with RSSI,
&gt; and read out the RSSI values? (without making a connection to devices)
&gt; When I run "hciconfig hci0 inqmode" I get the following:
&gt;
&gt; Inquiry mode: Inquiry with RSSI
&gt;
&gt; ..so I think the adapter supports this, and is in the correct
&gt; configuration - but when I run "hcitool scan", I only get the HW
&gt; address and name of local adapters - no RSSI. Is there some flag, or
&gt; option that I need to pass to hcitool in order to get RSSI as well?

run hcidump to see that you get the right events. Also just use the D- 
Bus interface of bluetoothd since that gives you the RSSI values.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124030338</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-24 03:03:38-0400</timestampReceived><subject>Re: Question about power tables or other transmit power limit</subject><body>

Hi Florian,

&gt; we are looking into limiting transmit power for our bluetooth file  
&gt; server project. The idea is to limit sending radius so that people  
&gt; don't feel harassed if they do not want to receive files.
&gt;
&gt; First we tried to read the RSSI during device discovery and base our  
&gt; decision on that. But the readings varied too much because of power  
&gt; saving methods like power tables.
&gt;
&gt; Since we cannot update the firmware of the mobile phones, we decided  
&gt; to try to limit the transmit power for our device discovery HCI  
&gt; device. After reading about things a bit and browsing through the  
&gt; docs that CSR provides, we tried to cap the maximum power or to  
&gt; change the power tables with the bccmd. Unfortunately, the dongle  
&gt; doesn't seem to accept the change. After setting the value and re- 
&gt; reading it, the change is gone:
&gt;
&gt; [root@horst Desktop]# bccmd psget 0x0017
&gt; Maximum transmit power: 0x0004 (4)
&gt; [root@horst Desktop]# bccmd psset 0x0017 0
&gt; [root@horst Desktop]# bccmd psget 0x0017
&gt; Maximum transmit power: 0x0004 (4)
&gt;
&gt; I also tried dump all PS keys and restoring the modified dump - same  
&gt; issue.
&gt;
&gt; Does anybody have experience with this? Do we need special BT  
&gt; dongles? We are also inquiring with CSR at the moment, but using a  
&gt; windows software is not an option, as our project is using embedded  
&gt; Linux (of course :).

this is a hardware detail that you better discuss with CSR people  
since while I know a lot about their hardware, I am not that deep into  
all the details. And messing with PS keys can result in unexpected  
things.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081124101120</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-24 10:11:20-0400</timestampReceived><subject>RE: Can we change org.openobex.Client's dbus node path?</subject><body>

&gt; 
&gt; so first, please fix the coding style here. I can tell from just the
&gt; pure email that you are mixing up tabs and spaces and also that you
&gt; are missing whitespaces here and there. Check that your mail client
&gt; doesn't mangle it. If in doubt send it as attachment.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel


Hi Marcel

Thanks for point out the tabs and spaces issue, I think this is might be related to \
my terminal setting when I do the copy/paste with the diff output. And 3 whitespaces \
added. So here it is:

---------------------------------------------------------------------------

diff --git a/gdbus/object.c b/gdbus/object.c
index a417ab9..9cf6f09 100644
--- a/gdbus/object.c
+++ b/gdbus/object.c
@@ -299,25 +299,28 @@ static void invalidate_parent_data(DBusConnection *conn, const \
char *child_path)  char *parent_path, *slash;
 
 	parent_path = g_strdup(child_path);
-	slash = strrchr(parent_path, '/');
-	if (!slash)
-		goto done;
-
-	*slash = '\0';
-	if (!strlen(parent_path))
-		goto done;
+	do {
+		slash = strrchr(parent_path, '/');
+		if (!slash)
+			break;
 
-	if (!dbus_connection_get_object_path_data(conn, parent_path,
-							(void *) &amp;data))
-		goto done;
+		if (slash == parent_path) {
+			*(slash + 1) = '\0';
+		} else {
+			*slash = '\0';
+		}
 
-	if (!data)
-		goto done;
+		if (!dbus_connection_get_object_path_data(conn, parent_path,
+								(void *) &amp;data))
+			continue;
 
-	g_free(data-&gt;introspect);
-	data-&gt;introspect = NULL;
+		if (!data)
+			continue;
 
-done:
+		g_free(data-&gt;introspect);
+		data-&gt;introspect = NULL;
+	} while (slash != parent_path);
+	
 	g_free(parent_path);
 }

---------------------------------------------

Raymond
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081124110037</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-11-24 11:00:37-0400</timestampReceived><subject>Re: compat/Makefile.am manpages fix / pand/dund question</subject><body>

Hi Marcel,

On Mon, Nov 24, 2008 at 03:58:11AM +0100, Marcel Holtmann wrote:
&gt;&gt; package? I guess that I should not package hidd, no matter how much
&gt;&gt; users would like it, though ;-)
&gt;
&gt; You can put hidd in bluez-compat if you like. It is useful for debugging 
&gt; since it can show the actual kernel state of the hidp.ko module.

Fortunately nobody has requested it for quite some time.
Would it be helpful to remove the "--server" code from hidd, since I guess
that this will not be useful anymore (and I fear that once I package up
hidd, people _will_ use "hidd --server", because they read that in some
outdated README). I can come op with a patch for that, if wanted.

Thanks,

	seife
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out." 

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126075257</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-11-26 07:52:57-0400</timestampReceived><subject>Re: l2ping only works for 10 seconds with 2.6.27</subject><body>

On Tue, Nov 25, 2008 at 9:00 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Nick,
&gt;
&gt;&gt; I have noticed with 2.6.27 that a bluez receiving side of l2ping will
&gt;&gt; detch the ACL connection (preventing further l2cap echos) after 10
&gt;&gt; seconds. HCI log below.
&gt;&gt;
&gt;&gt; Is this by design, or was it unintentional?
&gt;
&gt; it is not fully intentional, but it result due the fact on how we had to
&gt; implement the Simple Pairing support. Problem here is that l2ping can not
&gt; create a remote reference count of the connection. So BlueZ will clean up
&gt; the ACL link. And we do have to do that since otherwise we waste power with
&gt; an unused link.

Yeah I think it is an ok policy, like you say its bad for power to
maintain to link with no local client using it.

&gt; So if you do l2test -P 1 -n &lt;bdaddr&gt; first and then l2ping you will see that
&gt; the ACL link stays up since the l2test hold a remote reference count.

Ok, that'll do for a workaround for testing.

By the way, what happened to the HCI_UART_DEBUG patch I sent a few days ago?

Thanks,

Nick
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126081805</emailId><senderName>"Liu, Raymond"</senderName><senderEmail>raymond.liu@intel.com</senderEmail><timestampReceived>2008-11-26 08:18:05-0400</timestampReceived><subject>Pbap Client code for review</subject><body>

Hi Marcel

	I have finished the initial code for PBAP client. Can you help to have a review?  I \
have to write another get function for PBAP since the current code does not read \
application header information

	The code is at:
	http://git.moblin.org/repos/users/raymond/obexd.git dev

Thanks.
Raymond
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081126130522</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-11-26 13:05:22-0400</timestampReceived><subject>Re: HBH-PV270 headset get locked</subject><body>

Hi,

On Nov 26, 2008, at 12:06, Sam Lin wrote:

&gt; 1. so do you suggest to just remove the client-&gt;dev = NULL statement  
&gt; in headset_setup_complete() and headset_resume_complete() ?

There were already fixes pushed to the git for this. Please test them  
and let us know if they help.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126141455</emailId><senderName>John</senderName><senderEmail>jmuielewicz@yahoo.com</senderEmail><timestampReceived>2008-11-26 14:14:55-0400</timestampReceived><subject>hcitool will not pair with Think Outside Stowaway Travel Mouse</subject><body>

I tried version 3 up to version 4.19. No version of hcitool will pair with the mouse. A "hcitool cc "bt address of mouse"" will give a Input/Output error. Hidd -s , however, will pair with it. Appears hidd has been removed from version 4 though. 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081126151933</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-26 15:19:33-0400</timestampReceived><subject>Re: agent.c</subject><body>

Sorry, now reply to all

On Wed, Nov 26, 2008 at 4:57 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Alan,
&gt;
&gt;&gt; I am updating agent.c in order to it works with new bluez versions.
&gt;
&gt; please send patches and not full *.c source code.
&gt;

Sorry!

Please find it below (I hope my email client don't mess this code)

--- agent_orig.c        2008-10-04 16:32:08.000000000 +0000
+++ agent.c     2008-11-25 13:59:57.000000000 +0000
@@ -177,14 +177,31 @@
 static DBusHandlerResult agent_message(DBusConnection *conn,
                                               DBusMessage *msg, void *data)
 {
-       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Request"))
-               return request_message(conn, msg, data);
-
-       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
-               return cancel_message(conn, msg, data);
+       printf("Agent_message was called!\n");

       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release"))
-               return release_message(conn, msg, data);
+               printf("Agent called: Release\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"RequestPinCode"))
+               printf("Agent called: RequestPinCode\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"RequestPasskey"))
+               printf("Agent called: RequestPasskey\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"DisplayPasskey"))
+               printf("Agent called: DisplayPasskey\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"RequestConfirmation"))
+               printf("Agent called: RequestConfirmation\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Authorize"))
+               printf("Agent called: Authorize\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
"ConfirmModeChange"))
+               printf("Agent called: ConfirmModeChange\n");
+
+       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
+               printf("Agent called: Cancel\n");

       return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
@@ -279,18 +296,46 @@
       return 0;
 }

-static char *get_device(const char *device)
+static char *get_device(DBusConnection *conn)
 {
-       char *path;
+       char *path, *device_path = NULL;
+       DBusMessage *msg, *reply;
+       DBusError err;
+
+       msg = dbus_message_new_method_call("org.bluez", "/",
+                                       "org.bluez.Manager", "DefaultAdapter");
+       if (!msg) {
+               fprintf(stderr, "Can't allocate new method call\n");
+               return NULL;
+       }
+
+       dbus_error_init(&amp;err);

-       path = strdup("/org/bluez/hci0");
+       reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);

-       return path;
+       dbus_message_unref(msg);
+
+       if (!reply) {
+               fprintf(stderr, "Can't get Adapter path\n");
+               if (dbus_error_is_set(&amp;err)) {
+                       fprintf(stderr, "%s\n", err.message);
+                       dbus_error_free(&amp;err);
+               }
+               return NULL;
+       }
+
+       dbus_message_get_args(reply, NULL, DBUS_TYPE_OBJECT_PATH,
&amp;device_path, DBUS_TYPE_INVALID);
+
+       dbus_message_unref(reply);
+
+       dbus_connection_flush(conn);
+
+       return device_path;
 }

 static void usage(void)
 {
-       printf("Bluetooth agent ver %s\n\n", VERSION);
+       printf("Bluetooth agent ver %s\n\n", "4.18");

       printf("Usage:\n"
               "\tagent [--device interface] [--path agent-path] &lt;passkey&gt;\n"
@@ -365,7 +410,9 @@
       }

       if (!device_path)
-               device_path = get_device(device_id);
+               device_path = get_device(conn);
+
+       printf("Adapter path: %s\n", device_path);

       if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
               dbus_connection_unref(conn);


&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;

Best Regards,

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081127200236</emailId><senderName>Oleg Kravchenko</senderName><senderEmail>oleg@kaa.org.ua</senderEmail><timestampReceived>2008-11-27 20:02:36-0400</timestampReceived><subject>Re: BCM2045B2</subject><body>

Marcel Holtmann написав(ла):
&gt; Hi Oleg,
&gt;
&gt;&gt; Asus P535 details on http://www.kaa.org.ua/asus-p535/hardware.html
&gt;&gt; Bluetooth chip BCM2045B2 connected to the pxa internal usb host.
&gt;&gt;
&gt;&gt; I think this chip need firmware, because it is can only search
&gt;&gt; How I can upload firmware to the this chip?
&gt;
&gt; no, the chip needs a HCI Reset call. Load btusb with reset=1. And send
&gt; the output of /proc/bus/usb/devices for this dongle.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt; -- 
&gt; To unsubscribe from this list: send the line "unsubscribe
&gt; linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
I am load modprobe btusb reset=1

Content of /proc/bus/usb/devices:

T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 3
B:  Alloc= 22/900 us ( 2%), #Int=  1, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1d6b ProdID=0001 Rev= 2.06
S:  Manufacturer=Linux 2.6.27 ohci_hcd
S:  Product=PXA27x OHCI
S:  SerialNumber=pxa27x
C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms

T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a5c ProdID=2045 Rev= 1.12
S:  Manufacturer=Broadcom Corp
S:  Product=BCM2045A
S:  SerialNumber=000000000000
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

When I try establish bnep connection:
localhost ~ # ifconfig bnep0 10.9.0.2
SIOCSIFFLAGS: Cannot assign requested address

So when I enable bluetooth in Windows Mobile
localhost ~ # ifconfig bnep0 10.9.0.2
work's fine :)

This is a Windows bluetooth log:
15:16:55:512 RadioInitPreLoad Start
15:16:55:553 Using USB, no PreLoad code
15:16:55:579 RadioInitPreLoad End
15:16:56:351 RadioInitPostLoad Start
15:16:56:365 BRCM_PostLoad TOP
15:16:56:385 Send_HCI_Read_BDaddr was successful
15:16:56:399 BRCM2045CFG2RAMmain(USB) TOP
15:16:56:412 Sending HCI_DOWNLOAD_MINIDRIVER
15:16:57:946 Writing config binary image through HCI_WRITE_RAM commands
15:16:57:971 Loaded config data file
\Windows\BCM2045B2_002.002.011.0131.0001.hcd, length=9459 bytes
15:16:57:985 Using USB, and using an external .hcd config file
15:16:57:000     target_ram_addr = 0x00:08:5c:70
15:16:57:014     launch_ram_addr = 0x00:08:8b:d8
15:16:57:039 HCIVSWriteRAM(addr=0x70:0x5c:0x08:0x00, nbytes=139)
15:16:57:067 HCIVSWriteRAM(addr=0xf7:0x5c:0x08:0x00, nbytes=255)
15:16:57:106 HCIVSWriteRAM(addr=0xf2:0x5d:0x08:0x00, nbytes=255)
15:16:57:136 HCIVSWriteRAM(addr=0xed:0x5e:0x08:0x00, nbytes=255)
15:16:57:165 HCIVSWriteRAM(addr=0xe8:0x5f:0x08:0x00, nbytes=255)
15:16:57:195 HCIVSWriteRAM(addr=0xe3:0x60:0x08:0x00, nbytes=255)
15:16:57:226 HCIVSWriteRAM(addr=0xde:0x61:0x08:0x00, nbytes=255)
15:16:57:257 HCIVSWriteRAM(addr=0xd9:0x62:0x08:0x00, nbytes=255)
15:16:57:287 HCIVSWriteRAM(addr=0xd4:0x63:0x08:0x00, nbytes=255)
15:16:57:317 HCIVSWriteRAM(addr=0xcf:0x64:0x08:0x00, nbytes=255)
15:16:57:347 HCIVSWriteRAM(addr=0xca:0x65:0x08:0x00, nbytes=255)
15:16:57:377 HCIVSWriteRAM(addr=0xc5:0x66:0x08:0x00, nbytes=255)
15:16:57:429 HCIVSWriteRAM(addr=0xc0:0x67:0x08:0x00, nbytes=255)
15:16:57:459 HCIVSWriteRAM(addr=0xbb:0x68:0x08:0x00, nbytes=255)
15:16:57:489 HCIVSWriteRAM(addr=0xb6:0x69:0x08:0x00, nbytes=255)
15:16:57:553 HCIVSWriteRAM(addr=0xb1:0x6a:0x08:0x00, nbytes=255)
15:16:57:654 HCIVSWriteRAM(addr=0xac:0x6b:0x08:0x00, nbytes=255)
15:16:57:729 HCIVSWriteRAM(addr=0xa7:0x6c:0x08:0x00, nbytes=255)
15:16:58:767 HCIVSWriteRAM(addr=0xa2:0x6d:0x08:0x00, nbytes=255)
15:16:58:890 HCIVSWriteRAM(addr=0x9d:0x6e:0x08:0x00, nbytes=255)
15:16:58:973 HCIVSWriteRAM(addr=0x98:0x6f:0x08:0x00, nbytes=255)
15:16:58:208 HCIVSWriteRAM(addr=0x93:0x70:0x08:0x00, nbytes=255)
15:16:58:384 HCIVSWriteRAM(addr=0x8e:0x71:0x08:0x00, nbytes=255)
15:16:58:607 HCIVSWriteRAM(addr=0x89:0x72:0x08:0x00, nbytes=255)
15:16:58:737 HCIVSWriteRAM(addr=0x84:0x73:0x08:0x00, nbytes=255)
15:16:59:972 HCIVSWriteRAM(addr=0x7f:0x74:0x08:0x00, nbytes=255)
15:16:59:025 HCIVSWriteRAM(addr=0x7a:0x75:0x08:0x00, nbytes=255)
15:16:59:126 HCIVSWriteRAM(addr=0x75:0x76:0x08:0x00, nbytes=255)
15:16:59:155 HCIVSWriteRAM(addr=0x70:0x77:0x08:0x00, nbytes=255)
15:16:59:372 HCIVSWriteRAM(addr=0x6b:0x78:0x08:0x00, nbytes=255)
15:16:59:447 HCIVSWriteRAM(addr=0x66:0x79:0x08:0x00, nbytes=255)
15:16:59:590 HCIVSWriteRAM(addr=0x61:0x7a:0x08:0x00, nbytes=255)
15:16:59:621 HCIVSWriteRAM(addr=0x5c:0x7b:0x08:0x00, nbytes=255)
15:16:59:670 HCIVSWriteRAM(addr=0x57:0x7c:0x08:0x00, nbytes=255)
15:16:59:711 HCIVSWriteRAM(addr=0x52:0x7d:0x08:0x00, nbytes=255)
15:16:59:752 HCIVSWriteRAM(addr=0x4d:0x7e:0x08:0x00, nbytes=255)
15:17:00:807 HCIVSWriteRAM(addr=0x48:0x7f:0x08:0x00, nbytes=222)
15:17:00:930 HCIVSWriteRAM(addr=0xd8:0x8b:0x08:0x00, nbytes=52)
15:17:00:949 HCI_WRITE_RAM commands done
15:17:00:964 Sending HCI_LAUNCH_RAM command
15:17:00:984 HCI_LAUNCH_RAM was successful
15:17:00:499 BRCM2045CFG2RAMmain() END, config data downloaded successfully
15:17:00:519 Send_HCI_Read_BDaddr was successful
15:17:00:534 Read BDAddr [00:1a:92:ab:e3:31] from the registry
15:17:00:554 Send_Broadcom_Write_BD_ADDR was successful
15:17:00:574 Send_HCI_Read_BDaddr was successful
15:17:00:599 HCIWriteChannelClassificationMode : bResult=1
15:17:00:614 HCIVSSetSleepModeParam() Mode=USB with
HOST_WAKE,HostIdleThreshold=10, HCIdleThreshold=10, BT_WAKE active HIGH,
HOST_WAKE active HIGH
15:17:00:628     USB AutoSleepOnSuspend=1, USB Resume Timeout = 3
15:17:00:650 HCIVSSetSleepModeParam(mode=5, timeout=3000ms): bResult=1
15:17:00:665 BRCM_PostLoad : RadioInitConfigureAudio set, configuring
2045 audio
15:17:00:686 HCIVSWriteSCOPCMIntParameters(0,2,0,0,0) : bResult=1
15:17:00:705 HCIVSWritePCMDataFormatParameters(0,0,2,3,1) : bResult=1
15:17:00:721 HCIVSWriteSCOTimeSlot(SCO Time Slot=0)
15:17:00:741 HCIVSWriteSCOTimeSlot : bResult=1
15:17:00:754 BRCM_PostLoad : RadioInitEnableCoexistence set, configuring
2045 BT/WLAN coexistence
15:17:01:774 HCIVSWriteCollaborationMode(1,1,0xcb7fbdb0,10) : bResult=1
15:17:01:787 BRCM_PostLoad END
15:17:01:801 RadioInitPostLoad End

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128085401</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 08:54:01-0400</timestampReceived><subject>Re: Sony BD Remote (help requested)</subject><body>

David Sainty wrote:
&gt; Simon Kenyon wrote:
&gt;&gt; Bastien Nocera wrote:
&gt;&gt;&gt;
&gt;&gt;&gt; Pair it with the bluetooth-wizard and you can be on your way.
&gt;&gt;&gt;
&gt;&gt;&gt; Cheers
&gt;&gt;&gt;
&gt;&gt;&gt;   
&gt;&gt; but when i run bluetooth-wizard nothing is shown
&gt;
&gt; In great excitement I rushed out and bought one of these :)  A 
&gt; Bluetooth remote - brilliant!  I might even think about buying a 
&gt; Playstation 3 to go with it :)  Infrared is for suckers...
&gt;
&gt; In order to get it into pairing mode (and thus be able to see it from 
&gt; bluetooth-wizard) it looks like you need to press *AND HOLD* the 
&gt; "Enter" and "Start" buttons at the same time (for something like one 
&gt; second).  The Fedora Wiki page is lamely unclear about that.
&gt;
&gt; Sadly I can't pair with it yet, pairing fails - for reasons I'll try 
&gt; and figure out later...
&gt;
i did know that thanks

why is this so difficult?

i suspect all these suboptimal solutions like bdremoted are around 
because people having been banging there head against a brick wall have 
mostly given up on doing things the "correct" way and resort to 
"anything that will work"

i really didn't want to do this as my focus was on mythtv, but i will 
have to start hacking the bluetooth system (just like i had to do with 
lirc before)
seems kind of crazy that all the snippets of bluetooth documentation is 
spread all over the place and not on the bluez.org site. oh well.
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081129163917</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-29 16:39:17-0400</timestampReceived><subject>[PATCH] More PIN quirks</subject><body>

This builds on top of the move to a PIN database.

This fixes all but one bug filed against the wizard in the GNOME
bugzilla.

I hope it shows that the PIN database is workable.

Cheers

["0001-Add-other-audio-devices.patch" (0001-Add-other-audio-devices.patch)]

From e3419bae8524e86902b69c7d9bfdd580ea394786 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 29 Nov 2008 16:18:46 +0000
Subject: [PATCH] Add other audio devices

And special-case them in the wizard.
---
 common/bluetooth-client.c    |    4 ++++
 common/bluetooth-client.h    |   13 +++++++------
 wizard/main.c                |    1 +
 wizard/pin-code-database.txt |    1 +
 4 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/common/bluetooth-client.c b/common/bluetooth-client.c
index 5c55a00..bd42132 100644
--- a/common/bluetooth-client.c
+++ b/common/bluetooth-client.c
@@ -92,6 +92,8 @@ const gchar *bluetooth_type_to_string(guint type)
 		return N_("Headset");
 	case BLUETOOTH_TYPE_HEADPHONE:
 		return N_("Headphone");
+	case BLUETOOTH_TYPE_OTHER_AUDIO:
+		return N_("Audio device");
 	case BLUETOOTH_TYPE_KEYBOARD:
 		return N_("Keyboard");
 	case BLUETOOTH_TYPE_MOUSE:
@@ -134,6 +136,8 @@ static guint class_to_type(guint32 class)
 			return BLUETOOTH_TYPE_HEADSET;
 		case 0x06:
 			return BLUETOOTH_TYPE_HEADPHONE;
+		default:
+			return BLUETOOTH_TYPE_OTHER_AUDIO;
 		}
 		break;
 	case 0x05:
diff --git a/common/bluetooth-client.h b/common/bluetooth-client.h
index 09f91ab..5c35213 100644
--- a/common/bluetooth-client.h
+++ b/common/bluetooth-client.h
@@ -112,12 +112,13 @@ enum {
 	BLUETOOTH_TYPE_NETWORK		= 1 &lt;&lt; 4,
 	BLUETOOTH_TYPE_HEADSET		= 1 &lt;&lt; 5,
 	BLUETOOTH_TYPE_HEADPHONE	= 1 &lt;&lt; 6,
-	BLUETOOTH_TYPE_KEYBOARD		= 1 &lt;&lt; 7,
-	BLUETOOTH_TYPE_MOUSE		= 1 &lt;&lt; 8,
-	BLUETOOTH_TYPE_CAMERA		= 1 &lt;&lt; 9,
-	BLUETOOTH_TYPE_PRINTER		= 1 &lt;&lt; 10,
-	BLUETOOTH_TYPE_JOYPAD		= 1 &lt;&lt; 11,
-	BLUETOOTH_TYPE_TABLET		= 1 &lt;&lt; 12,
+	BLUETOOTH_TYPE_OTHER_AUDIO	= 1 &lt;&lt; 7,
+	BLUETOOTH_TYPE_KEYBOARD		= 1 &lt;&lt; 8,
+	BLUETOOTH_TYPE_MOUSE		= 1 &lt;&lt; 9,
+	BLUETOOTH_TYPE_CAMERA		= 1 &lt;&lt; 10,
+	BLUETOOTH_TYPE_PRINTER		= 1 &lt;&lt; 11,
+	BLUETOOTH_TYPE_JOYPAD		= 1 &lt;&lt; 12,
+	BLUETOOTH_TYPE_TABLET		= 1 &lt;&lt; 13,
 };
 
 #define _BLUETOOTH_TYPE_NUM_TYPES 12
diff --git a/wizard/main.c b/wizard/main.c
index b29552c..2342040 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -68,6 +68,7 @@ static guint string_to_type(const char *type)
 	TYPE_IS ("keyboard", BLUETOOTH_TYPE_KEYBOARD);
 	TYPE_IS ("headset", BLUETOOTH_TYPE_HEADSET);
 	TYPE_IS ("headphone", BLUETOOTH_TYPE_HEADPHONE);
+	TYPE_IS ("audio", BLUETOOTH_TYPE_OTHER_AUDIO);
 
 	g_warning ("unhandled type '%s'", type);
 	return BLUETOOTH_TYPE_ANY;
diff --git a/wizard/pin-code-database.txt b/wizard/pin-code-database.txt
index 653fc2c..a12dcb4 100644
--- a/wizard/pin-code-database.txt
+++ b/wizard/pin-code-database.txt
@@ -22,3 +22,4 @@ any	00:0D:B5:	GPS-GW-005	0000
 # Headphones and headsets
 headphone			0000
 headset			0000
+audio			0000
-- 
1.6.0.4


["0002-Handle-printers-in-the-wizard.patch" (0002-Handle-printers-in-the-wizard.patch)]

From 9890adcebaf94a8051d948e215d752e3b22a2f3b Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 29 Nov 2008 16:20:33 +0000
Subject: [PATCH] Handle printers in the wizard

.
---
 wizard/main.c                |    1 +
 wizard/pin-code-database.txt |    3 +++
 2 files changed, 4 insertions(+), 0 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index 2342040..763d5e3 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -69,6 +69,7 @@ static guint string_to_type(const char *type)
 	TYPE_IS ("headset", BLUETOOTH_TYPE_HEADSET);
 	TYPE_IS ("headphone", BLUETOOTH_TYPE_HEADPHONE);
 	TYPE_IS ("audio", BLUETOOTH_TYPE_OTHER_AUDIO);
+	TYPE_IS ("printer", BLUETOOTH_TYPE_PRINTER);
 
 	g_warning ("unhandled type '%s'", type);
 	return BLUETOOTH_TYPE_ANY;
diff --git a/wizard/pin-code-database.txt b/wizard/pin-code-database.txt
index a12dcb4..4eaf23c 100644
--- a/wizard/pin-code-database.txt
+++ b/wizard/pin-code-database.txt
@@ -19,6 +19,9 @@ any	00:0D:B5:	GPS-GW-005	0000
 
 ######## Generic type ########
 
+# Printers
+printer			0000
+
 # Headphones and headsets
 headphone			0000
 headset			0000
-- 
1.6.0.4


["0003-Add-quirks-for-loads-of-GPS-devices.patch" (0003-Add-quirks-for-loads-of-GPS-devices.patch)]

From 90d37d576e95685f0d46be13008cea2f5a0b85b6 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 29 Nov 2008 16:28:25 +0000
Subject: [PATCH] Add quirks for loads of GPS devices

All from the GNOME bugzilla.
---
 wizard/pin-code-database.txt |   16 ++++++++++++++++
 1 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/wizard/pin-code-database.txt b/wizard/pin-code-database.txt
index 4eaf23c..773d69b 100644
--- a/wizard/pin-code-database.txt
+++ b/wizard/pin-code-database.txt
@@ -16,6 +16,22 @@ mouse	00:14:51:		0000
 # GPS devices
 any	00:0D:B5:	TomTom Wireless GPS MkII	0000
 any	00:0D:B5:	GPS-GW-005	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560870
+any	00:0A:3A:	BT GPS	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560606
+any	00:1B:C1:	HOLUX_M-241	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560713
+any	00:0B:24:	Triceiver	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560715
+any	00:00:00:	BT-Q880	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560625
+any	00:11:67:	eGPS-397	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=560604
+any	00:1B:C1:	HOLUX_M-1000	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=561326
+any	00:0B:0D:	G-Rays1	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=561327
+any	00:0A:3A:	HUDGPS	0000
 
 ######## Generic type ########
 
-- 
1.6.0.4


["0004-Add-more-PIN-quirks.patch" (0004-Add-more-PIN-quirks.patch)]

From 7e0ec64061abb7b17a6d7dbe9cbbd2a6036e857a Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 29 Nov 2008 16:34:41 +0000
Subject: [PATCH] Add more PIN quirks

From GNOME bugzilla again.
---
 wizard/main.c                |    1 +
 wizard/pin-code-database.txt |   12 ++++++++++++
 2 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index 763d5e3..f165778 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -70,6 +70,7 @@ static guint string_to_type(const char *type)
 	TYPE_IS ("headphone", BLUETOOTH_TYPE_HEADPHONE);
 	TYPE_IS ("audio", BLUETOOTH_TYPE_OTHER_AUDIO);
 	TYPE_IS ("printer", BLUETOOTH_TYPE_PRINTER);
+	TYPE_IS ("network", BLUETOOTH_TYPE_NETWORK);
 
 	g_warning ("unhandled type '%s'", type);
 	return BLUETOOTH_TYPE_ANY;
diff --git a/wizard/pin-code-database.txt b/wizard/pin-code-database.txt
index 773d69b..3971ae2 100644
--- a/wizard/pin-code-database.txt
+++ b/wizard/pin-code-database.txt
@@ -32,6 +32,18 @@ any	00:1B:C1:	HOLUX_M-1000	0000
 any	00:0B:0D:	G-Rays1	0000
 # http://bugzilla.gnome.org/show_bug.cgi?id=561327
 any	00:0A:3A:	HUDGPS	0000
+# http://bugzilla.gnome.org/show_bug.cgi?id=562479
+any	00:0B:0D:	iBT-GPS	0000
+
+# Audio devices
+# http://bugzilla.gnome.org/show_bug.cgi?id=560315
+headset		X3 micro	1234
+# http://bugzilla.gnome.org/show_bug.cgi?id=561324
+headset	00:03:C9:	BT Headset	1111
+
+# Network devices
+# http://bugzilla.gnome.org/show_bug.cgi?id=561325
+network	00:06:66:	OBDPros scantool	1234
 
 ######## Generic type ########
 
-- 
1.6.0.4


["0001-Add-icon-for-other-audio-device.patch" (0001-Add-icon-for-other-audio-device.patch)]

From 9c85f509761b3f5484f988c485bc42b555c03871 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 29 Nov 2008 16:17:53 +0000
Subject: [PATCH] Add icon for other audio device

.
---
 src/dbus-hci.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/src/dbus-hci.c b/src/dbus-hci.c
index f2b6f2e..a0de9a0 100644
--- a/src/dbus-hci.c
+++ b/src/dbus-hci.c
@@ -85,6 +85,8 @@ const char *class_to_icon(uint32_t class)
 			return "audio-card";	/* Headset */
 		case 0x06:
 			return "audio-card";	/* Headphone */
+		default:
+			return "audio-card";	/* Other audio device */
 		}
 		break;
 	case 0x05:
-- 
1.6.0.4


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081127164935</emailId><senderName>Tyson Whitehead</senderName><senderEmail>twhitehead@gmail.com</senderEmail><timestampReceived>2008-11-27 16:49:35-0400</timestampReceived><subject>Bluetooth and "IRQ 19 and nobody cared" on a HP 8510w with Debian 2.6.24 or 2.6.26</subject><body>

I've been getting these "irq 19: nobody cared (try booting with "irqpoll" 
option)" messages on my HP 8510w.  Recently I googled it, which lead me to the 
following discussion from another fellow with the same problem on the LKML

http://lkml.org/lkml/2008/6/24/357

In this discussion it was mentioned that pressing the radio kill switch 
stopped this message from appearing, which implied it might be iwl4965.

I had already tried blacklisting the iwl4965 module (adding it to 
/etc/modprobe.d/blacklist) with no success.  But it got me thinking radio, so 
I tried blacklisting hci_usb and there were no more "irq 19: nobody cared" 
messages.  Loading hci_usb subsequently resulted in a message within 10min.

I tried this another three times to verify it (reboot, wait 30min with no 
messages, load hci_usb, and a message appears within 10min).  Hopefully David 
will be able to verify these results also apply to his 8510w as well.

I've attached the output of "lsusb -v".  Is there any other information that 
would help, or something I can do (kernel log messages are as was given by 
David in the original LKML list, but I could attach another if you wish)?

Cheers!  -Tyson


["lsusb_output.txt" (text/plain)]

Bus 004 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         1 Single TT
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 ehci_hcd
  iProduct                2 EHCI Host Controller
  iSerial                 1 0000:00:1d.7
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0004  1x 4 bytes
        bInterval              12
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             6
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
    TT think time 8 FS bits
  bPwrOn2PwrGood       10 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0100 power
   Port 3: 0000.0100 power
   Port 4: 0000.0100 power
   Port 5: 0000.0100 power
   Port 6: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 003 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         1 Single TT
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 ehci_hcd
  iProduct                2 EHCI Host Controller
  iSerial                 1 0000:00:1a.7
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0004  1x 4 bytes
        bInterval              12
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             4
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
    TT think time 8 FS bits
  bPwrOn2PwrGood       10 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0100 power
   Port 3: 0000.0100 power
   Port 4: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 007 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 uhci_hcd
  iProduct                2 UHCI Host Controller
  iSerial                 1 0000:00:1d.2
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0002  1x 2 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             2
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
  bPwrOn2PwrGood        1 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 006 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 uhci_hcd
  iProduct                2 UHCI Host Controller
  iSerial                 1 0000:00:1d.1
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0002  1x 2 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             2
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
  bPwrOn2PwrGood        1 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 005 Device 003: ID 08ff:2580 AuthenTec, Inc. AES2501 Fingerprint Sensor
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass          255 Vendor Specific Class
  bDeviceSubClass       255 Vendor Specific Subclass
  bDeviceProtocol       255 Vendor Specific Protocol
  bMaxPacketSize0         8
  idVendor           0x08ff AuthenTec, Inc.
  idProduct          0x2580 AES2501 Fingerprint Sensor
  bcdDevice            6.23
  iManufacturer           0 
  iProduct                1 Fingerprint Sensor
  iSerial                 0 
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           32
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xa0
      (Bus Powered)
      Remote Wakeup
    MaxPower              100mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       255 Vendor Specific Class
      bInterfaceSubClass    255 Vendor Specific Subclass
      bInterfaceProtocol    255 Vendor Specific Protocol
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x02  EP 2 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0008  1x 8 bytes
        bInterval               0
Device Status:     0x0000
  (Bus Powered)

Bus 005 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 uhci_hcd
  iProduct                2 UHCI Host Controller
  iSerial                 1 0000:00:1d.0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0002  1x 2 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             2
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
  bPwrOn2PwrGood        1 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0103 power enable connect
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 002 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 uhci_hcd
  iProduct                2 UHCI Host Controller
  iSerial                 1 0000:00:1a.1
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0002  1x 2 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             2
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
  bPwrOn2PwrGood        1 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0100 power
   Port 2: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled

Bus 001 Device 004: ID 03f0:171d Hewlett-Packard Wireless (Bluetooth + WLAN) \
Interface [Integrated Module] Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass          224 Wireless
  bDeviceSubClass         1 Radio Frequency
  bDeviceProtocol         1 Bluetooth
  bMaxPacketSize0        64
  idVendor           0x03f0 Hewlett-Packard
  idProduct          0x171d Wireless (Bluetooth + WLAN) Interface [Integrated Module]
  bcdDevice            1.00
  iManufacturer           1 Broadcom Corp
  iProduct                2 HP Integrated Module
  iSerial                 0 
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength          216
    bNumInterfaces          4
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           3
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0010  1x 16 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x82  EP 2 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x02  EP 2 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0000  1x 0 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0000  1x 0 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       1
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0009  1x 9 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0009  1x 9 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       2
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0011  1x 17 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0011  1x 17 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       3
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       4
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        1
      bAlternateSetting       5
      bNumEndpoints           2
      bInterfaceClass       224 Wireless
      bInterfaceSubClass      1 Radio Frequency
      bInterfaceProtocol      1 Bluetooth
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x83  EP 3 IN
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x03  EP 3 OUT
        bmAttributes            1
          Transfer Type            Isochronous
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0040  1x 64 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        2
      bAlternateSetting       0
      bNumEndpoints           2
      bInterfaceClass       255 Vendor Specific Class
      bInterfaceSubClass    255 Vendor Specific Subclass
      bInterfaceProtocol    255 Vendor Specific Protocol
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x84  EP 4 IN
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x04  EP 4 OUT
        bmAttributes            2
          Transfer Type            Bulk
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0020  1x 32 bytes
        bInterval               1
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        3
      bAlternateSetting       0
      bNumEndpoints           0
      bInterfaceClass       254 Application Specific Interface
      bInterfaceSubClass      1 Device Firmware Update
      bInterfaceProtocol      0 
      iInterface              0 
      ** UNRECOGNIZED:  07 21 07 88 13 40 00
Device Status:     0x0001
  Self Powered

Bus 001 Device 001: ID 0000:0000  
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               1.10
  bDeviceClass            9 Hub
  bDeviceSubClass         0 Unused
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x0000 
  idProduct          0x0000 
  bcdDevice            2.06
  iManufacturer           3 Linux 2.6.24-etchnhalf.1-amd64 uhci_hcd
  iProduct                2 UHCI Host Controller
  iSerial                 1 0000:00:1a.0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength           25
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0 
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0 Unused
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0 
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0002  1x 2 bytes
        bInterval             255
Hub Descriptor:
  bLength               9
  bDescriptorType      41
  nNbrPorts             2
  wHubCharacteristic 0x000a
    No power switching (usb 1.0)
    Per-port overcurrent protection
  bPwrOn2PwrGood        1 * 2 milli seconds
  bHubContrCurrent      0 milli Ampere
  DeviceRemovable    0x00
  PortPwrCtrlMask    0xff
 Hub Port Status:
   Port 1: 0000.0103 power enable connect
   Port 2: 0000.0100 power
Device Status:     0x0003
  Self Powered
  Remote Wakeup Enabled


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081125131454</emailId><senderName>Julia Lawall</senderName><senderEmail>julia@diku.dk</senderEmail><timestampReceived>2008-11-25 13:14:54-0400</timestampReceived><subject>[PATCH 4/5] drivers/bluetooth: change simple_strtol to simple_strtoul</subject><body>

From: Julia Lawall &lt;julia@diku.dk&gt;

Since size, addr, fcs, and tmp are unsigned, it would seem better to use
simple_strtoul that simple_strtol.

A simplified version of the semantic patch that makes this change is as
follows: (http://www.emn.fr/x-info/coccinelle/)

// &lt;smpl&gt;
@r2@
long e;
position p;
@@

e = simple_strtol@p(...)

@@
position p != r2.p;
type T;
T e;
@@

e = 
- simple_strtol@p
+ simple_strtoul
  (...)
// &lt;/smpl&gt;

Signed-off-by: Julia Lawall &lt;julia@diku.dk&gt;

---

 drivers/bluetooth/bt3c_cs.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff -u -p a/drivers/bluetooth/bt3c_cs.c b/drivers/bluetooth/bt3c_cs.c
--- a/drivers/bluetooth/bt3c_cs.c
+++ b/drivers/bluetooth/bt3c_cs.c
@@ -502,15 +502,15 @@ static int bt3c_load_firmware(bt3c_info_
 
 		memset(b, 0, sizeof(b));
 		memcpy(b, ptr + 2, 2);
-		size = simple_strtol(b, NULL, 16);
+		size = simple_strtoul(b, NULL, 16);
 
 		memset(b, 0, sizeof(b));
 		memcpy(b, ptr + 4, 8);
-		addr = simple_strtol(b, NULL, 16);
+		addr = simple_strtoul(b, NULL, 16);
 
 		memset(b, 0, sizeof(b));
 		memcpy(b, ptr + (size * 2) + 2, 2);
-		fcs = simple_strtol(b, NULL, 16);
+		fcs = simple_strtoul(b, NULL, 16);
 
 		memset(b, 0, sizeof(b));
 		for (tmp = 0, i = 0; i &lt; size; i++) {
@@ -530,7 +530,7 @@ static int bt3c_load_firmware(bt3c_info_
 			memset(b, 0, sizeof(b));
 			for (i = 0; i &lt; (size - 4) / 2; i++) {
 				memcpy(b, ptr + (i * 4) + 12, 4);
-				tmp = simple_strtol(b, NULL, 16);
+				tmp = simple_strtoul(b, NULL, 16);
 				bt3c_put(iobase, tmp);
 			}
 		}
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081121022400</emailId><senderName>Nick Pelly</senderName><senderEmail>npelly@google.com</senderEmail><timestampReceived>2008-11-21 02:24:00-0400</timestampReceived><subject>patch: Respect HCI_UART_DEBUG config in hci_ll.c</subject><body>

Author: Nick Pelly &lt;npelly@google.com&gt;
Date:   Mon Apr 21 12:18:51 2008 -0700

    bluetooth: Respect HCI_UART_DEBUG config in hci_ll.c

    Following the pattern from hci_*.c, turn off BT_DBG messages unless
    they have been requested via HCI_UART_DEBUG

    Signed-off-by: Brian Swetland &lt;swetland@google.com&gt;

diff --git a/drivers/bluetooth/hci_ll.c b/drivers/bluetooth/hci_ll.c
index b91d45a..2d2f66e 100644
--- a/drivers/bluetooth/hci_ll.c
+++ b/drivers/bluetooth/hci_ll.c
@@ -51,6 +51,11 @@

 #include "hci_uart.h"

+#ifndef CONFIG_BT_HCIUART_DEBUG
+#undef  BT_DBG
+#define BT_DBG( A... )
+#endif
+
 /* HCILL commands */
 #define HCILL_GO_TO_SLEEP_IND  0x30
 #define HCILL_GO_TO_SLEEP_ACK  0x31

["fix_hcill_debug.txt" (text/plain)]

commit 4c70181b749225534eaaca6b57ac48be6391c2b9
Author: Nick Pelly &lt;npelly@google.com&gt;
Date:   Mon Apr 21 12:18:51 2008 -0700

    bluetooth: Respect HCI_UART_DEBUG config in hci_ll.c
    
    Following the pattern from hci_*.c, turn off BT_DBG messages unless
    they have been requested via HCI_UART_DEBUG
    
    Signed-off-by: Brian Swetland &lt;swetland@google.com&gt;

diff --git a/drivers/bluetooth/hci_ll.c b/drivers/bluetooth/hci_ll.c
index b91d45a..2d2f66e 100644
--- a/drivers/bluetooth/hci_ll.c
+++ b/drivers/bluetooth/hci_ll.c
@@ -51,6 +51,11 @@
 
 #include "hci_uart.h"
 
+#ifndef CONFIG_BT_HCIUART_DEBUG
+#undef  BT_DBG
+#define BT_DBG( A... )
+#endif
+
 /* HCILL commands */
 #define HCILL_GO_TO_SLEEP_IND	0x30
 #define HCILL_GO_TO_SLEEP_ACK	0x31

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081104162448</emailId><senderName>Tim Gardner</senderName><senderEmail>timg@tpi.com</senderEmail><timestampReceived>2008-11-04 16:24:48-0400</timestampReceived><subject>Dell Wireless 365 requires reset quirk</subject><body>

From 931ccb629d739aa563347a4e866bc26107e6b545 Mon Sep 17 00:00:00 2001
From: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Date: Tue, 4 Nov 2008 09:18:06 -0700
Subject: [PATCH] Dell Wireless 365 needs BTUSB_RESET quirk.
 OriginalAuthor: Mario Limonciello &lt;mario_limonciello@dell.com&gt;

Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Cc: stable@kernel.org
---
 drivers/bluetooth/btusb.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index af472e0..051b758 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -125,6 +125,9 @@ static struct usb_device_id blacklist_table[] = {
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
+	/* Dell Wireless 365 */
+	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
+
 	/* Dell Wireless 370 */
 	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
-- 
1.5.6.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128101459</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 10:14:59-0400</timestampReceived><subject>Sony BD Remote (the saga continues)</subject><body>

so i decided to start working my way through the code and found references to uinput in input/device.c
this gave me another keyword to use in google and lo and behold this popped up:

Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
- Add script to autoload uinput on startup, so the PS3 remote
  works out-of-the-box


sure enough i did not have this module in my kernel.
just building now in hope that this might be the issue

not being a fedora user i never thought to look there to see if there was documentation ;-(
--
simon

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128105409</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 10:54:09-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; so i decided to start working my way through the code and found 
&gt; references to uinput in input/device.c
&gt; this gave me another keyword to use in google and lo and behold this 
&gt; popped up:
&gt;
&gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt;  works out-of-the-box
&gt;
&gt;
&gt; sure enough i did not have this module in my kernel.
&gt; just building now in hope that this might be the issue
well that got me nowhere - still no events
but at least i now have a /dev/input/uinput

will have to dig further and see what bluetoothd does with it
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128120952</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 12:09:52-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; Simon Kenyon wrote:
&gt;&gt; so i decided to start working my way through the code and found 
&gt;&gt; references to uinput in input/device.c
&gt;&gt; this gave me another keyword to use in google and lo and behold this 
&gt;&gt; popped up:
&gt;&gt;
&gt;&gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt;&gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt;&gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt;&gt;  works out-of-the-box
&gt;&gt;
&gt;&gt;
&gt;&gt; sure enough i did not have this module in my kernel.
&gt;&gt; just building now in hope that this might be the issue
&gt; well that got me nowhere - still no events
&gt; but at least i now have a /dev/input/uinput
&gt;
&gt; will have to dig further and see what bluetoothd does with it

do i have to have something in one of the /etc/bluetooth/*.conf files 
specific to the BD Remote?

could somebody who has this working please post the contents of 
/etc/bluetooth/*.conf?
or do i need something to be configured in dbus?

i cannot see how any of the code in input/fakehid.c gets called. i've 
put a lot of debug statements in there; trying to understand the logic.
i don't see any devices getting registered

thanks in advance
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128131640</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 13:16:40-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; Simon Kenyon wrote:
&gt;&gt; Simon Kenyon wrote:
&gt;&gt;&gt; so i decided to start working my way through the code and found 
&gt;&gt;&gt; references to uinput in input/device.c
&gt;&gt;&gt; this gave me another keyword to use in google and lo and behold this 
&gt;&gt;&gt; popped up:
&gt;&gt;&gt;
&gt;&gt;&gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt;&gt;&gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt;&gt;&gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt;&gt;&gt;  works out-of-the-box
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; sure enough i did not have this module in my kernel.
&gt;&gt;&gt; just building now in hope that this might be the issue
&gt;&gt; well that got me nowhere - still no events
&gt;&gt; but at least i now have a /dev/input/uinput
&gt;&gt;
&gt;&gt; will have to dig further and see what bluetoothd does with it
&gt;
&gt; do i have to have something in one of the /etc/bluetooth/*.conf files 
&gt; specific to the BD Remote?
&gt;
&gt; could somebody who has this working please post the contents of 
&gt; /etc/bluetooth/*.conf?
&gt; or do i need something to be configured in dbus?
&gt;
&gt; i cannot see how any of the code in input/fakehid.c gets called. i've 
&gt; put a lot of debug statements in there; trying to understand the logic.
&gt; i don't see any devices getting registered

i left bluetooth-wizard running for 10 minutes while i did something else
maybe i pressed &lt;start&gt; and &lt;enter&gt; during that period. i cannot remember.

anyway, the BD Remote appeared in the bluetooth-wizard setup window.
when i typed forward it said it was successful. what did it do?

now i try again and the remote is in the window from the start, but when 
i select it and go forward, it now says "Pairing with BD Remote Control 
failed".
what does that mean?

still don't know what has happened to /dev/input/event&lt;x&gt; where &lt;x&gt; is 
usually 7 in my case. i only ever see it if i type hidd --search and 
&lt;start&gt; and &lt;enter&gt;
if i should not use it, why is it built and installed?

regards
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128132153</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-28 13:21:53-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; Simon Kenyon wrote:
&gt;&gt; Simon Kenyon wrote:
&gt;&gt;&gt; Simon Kenyon wrote:
&gt;&gt;&gt;&gt; so i decided to start working my way through the code and found 
&gt;&gt;&gt;&gt; references to uinput in input/device.c
&gt;&gt;&gt;&gt; this gave me another keyword to use in google and lo and behold this 
&gt;&gt;&gt;&gt; popped up:
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt;&gt;&gt;&gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt;&gt;&gt;&gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt;&gt;&gt;&gt;  works out-of-the-box
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; sure enough i did not have this module in my kernel.
&gt;&gt;&gt;&gt; just building now in hope that this might be the issue
&gt;&gt;&gt; well that got me nowhere - still no events
&gt;&gt;&gt; but at least i now have a /dev/input/uinput
&gt;&gt;&gt;
&gt;&gt;&gt; will have to dig further and see what bluetoothd does with it
&gt;&gt; do i have to have something in one of the /etc/bluetooth/*.conf files 
&gt;&gt; specific to the BD Remote?
&gt;&gt;
&gt;&gt; could somebody who has this working please post the contents of 
&gt;&gt; /etc/bluetooth/*.conf?
&gt;&gt; or do i need something to be configured in dbus?
&gt;&gt;
&gt;&gt; i cannot see how any of the code in input/fakehid.c gets called. i've 
&gt;&gt; put a lot of debug statements in there; trying to understand the logic.
&gt;&gt; i don't see any devices getting registered
&gt; 
&gt; i left bluetooth-wizard running for 10 minutes while i did something else
&gt; maybe i pressed &lt;start&gt; and &lt;enter&gt; during that period. i cannot remember.
&gt; 
&gt; anyway, the BD Remote appeared in the bluetooth-wizard setup window.
&gt; when i typed forward it said it was successful. what did it do?
&gt; 
&gt; now i try again and the remote is in the window from the start, but when 
&gt; i select it and go forward, it now says "Pairing with BD Remote Control 
&gt; failed".
&gt; what does that mean?
&gt; 
&gt; still don't know what has happened to /dev/input/event&lt;x&gt; where &lt;x&gt; is 
&gt; usually 7 in my case. i only ever see it if i type hidd --search and 
&gt; &lt;start&gt; and &lt;enter&gt;
&gt; if i should not use it, why is it built and installed?
&gt; 
&gt; regards
&gt; --
&gt; simon

Hi Simon, I share your frustrations :-p. I will do some testing with the
latest git this weekend. You may want to look at my previous postings in
the archive.

I advice you to give it a few hours rest and let me do some tesing on
Debian SID with the latested bluez-git. I don't know for sure if the
manatory xorg patch made it into the experimental packages....

Best regards,

Jelle

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128135325</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 13:53:25-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Jelle de Jong wrote:
&gt; Hi Simon, I share your frustrations :-p. I will do some testing with the
&gt; latest git this weekend. You may want to look at my previous postings in
&gt; the archive.
&gt;
&gt; I advice you to give it a few hours rest and let me do some tesing on
&gt; Debian SID with the latested bluez-git. I don't know for sure if the
&gt; manatory xorg patch made it into the experimental packages...
&gt;   
it is rather frustrating
i've had this remote for 6 months now and would like to get it working 
"properly"

what i would love to getis a description of a working configuration 
(config files in particular)
i don't know if i'm supposed to put something into one or more of the 
/etc/bluetooth config files.
or something in hal or dbus for that matter

we've both been told "it just works" but it doesn't
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128140705</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-28 14:07:05-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; Jelle de Jong wrote:
&gt;&gt; Hi Simon, I share your frustrations :-p. I will do some testing with the
&gt;&gt; latest git this weekend. You may want to look at my previous postings in
&gt;&gt; the archive.
&gt;&gt;
&gt;&gt; I advice you to give it a few hours rest and let me do some tesing on
&gt;&gt; Debian SID with the latested bluez-git. I don't know for sure if the
&gt;&gt; manatory xorg patch made it into the experimental packages...
&gt;&gt;   
&gt; it is rather frustrating
&gt; i've had this remote for 6 months now and would like to get it working 
&gt; "properly"
&gt; 
&gt; what i would love to getis a description of a working configuration 
&gt; (config files in particular)
&gt; i don't know if i'm supposed to put something into one or more of the 
&gt; /etc/bluetooth config files.
&gt; or something in hal or dbus for that matter
&gt; 
&gt; we've both been told "it just works" but it doesn't
&gt; --
&gt; simon

I know it is frustrating, and I also got this device a while and spent
way to much time getting it working "out of the box"

As I said in my first response it does not yet just works, but I am not
an developer of bluez, just an heavy user and tester. BTW you should not
have to make any changes to the bluez config files.

I will look into it, this weekend and report back.

If you really want to try out right now, use the latest bluez git of
bluez-utils and bluez-gnome and the latest xorg git and try to get an
input event.

Best regards,

Jelle

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128142206</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-28 14:22:06-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

On Fri, 2008-11-28 at 10:54 +0000, Simon Kenyon wrote:
&gt; Simon Kenyon wrote:
&gt; &gt; so i decided to start working my way through the code and found 
&gt; &gt; references to uinput in input/device.c
&gt; &gt; this gave me another keyword to use in google and lo and behold this 
&gt; &gt; popped up:
&gt; &gt;
&gt; &gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt; &gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt; &gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt; &gt;  works out-of-the-box
&gt; &gt;
&gt; &gt;
&gt; &gt; sure enough i did not have this module in my kernel.
&gt; &gt; just building now in hope that this might be the issue
&gt; well that got me nowhere - still no events
&gt; but at least i now have a /dev/input/uinput

You need to press buttons on the remote for it to connect to the
computer. It will disconnect automatically after some time of idleness.

After that you need to use a new enough X server, or LIRC to get the
events to your X applications.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128224316</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 22:43:16-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Bastien Nocera wrote:
&gt; On Fri, 2008-11-28 at 10:54 +0000, Simon Kenyon wrote:
&gt;   
&gt;&gt; Simon Kenyon wrote:
&gt;&gt;     
&gt;&gt;&gt; so i decided to start working my way through the code and found 
&gt;&gt;&gt; references to uinput in input/device.c
&gt;&gt;&gt; this gave me another keyword to use in google and lo and behold this 
&gt;&gt;&gt; popped up:
&gt;&gt;&gt;
&gt;&gt;&gt; Fri Oct 17 2008 - Bastien Nocera &lt;bnocera@redhat.com 
&gt;&gt;&gt; &lt;mailto:bnocera@redhat.com&gt;&gt; - 4.14-2
&gt;&gt;&gt; - Add script to autoload uinput on startup, so the PS3 remote
&gt;&gt;&gt;  works out-of-the-box
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; sure enough i did not have this module in my kernel.
&gt;&gt;&gt; just building now in hope that this might be the issue
&gt;&gt;&gt;       
&gt;&gt; well that got me nowhere - still no events
&gt;&gt; but at least i now have a /dev/input/uinput
&gt;&gt;     
&gt;
&gt; You need to press buttons on the remote for it to connect to the
&gt; computer. It will disconnect automatically after some time of idleness.
&gt;
&gt; After that you need to use a new enough X server, or LIRC to get the
&gt; events to your X applications.
&gt;   
what causes the /dev/input/eventX file to be created?
ie. is it bluetoothd or hidd?
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081129005941</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-11-29 00:59:41-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

On Fri, 2008-11-28 at 22:43 +0000, Simon Kenyon wrote:
&gt; Bastien Nocera wrote:
&lt;snip&gt;
&gt; &gt; You need to press buttons on the remote for it to connect to the
&gt; &gt; computer. It will disconnect automatically after some time of idleness.
&gt; &gt;
&gt; &gt; After that you need to use a new enough X server, or LIRC to get the
&gt; &gt; events to your X applications.
&gt; &gt;   
&gt; what causes the /dev/input/eventX file to be created?
&gt; ie. is it bluetoothd or hidd?

It is obviously bluetoothd (actually bluetoothd's input plugin) as I've
said a couple of days ago (and on numerous occasions on this list) that
hidd has no code to handle the PS3 BD remote's protocol. If you're using
hidd, it won't ever work, period.

If the PS3 remote isn't connected properly, it won't show up in
bluetooth-properties.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081129165500</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-29 16:55:00-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Jelle de Jong wrote:
&gt; Simon Kenyon wrote:
&gt;&gt; Jelle de Jong wrote:
&gt;&gt;&gt; Hi Simon, I share your frustrations :-p. I will do some testing with the
&gt;&gt;&gt; latest git this weekend. You may want to look at my previous postings in
&gt;&gt;&gt; the archive.
&gt;&gt;&gt;
&gt;&gt;&gt; I advice you to give it a few hours rest and let me do some tesing on
&gt;&gt;&gt; Debian SID with the latested bluez-git. I don't know for sure if the
&gt;&gt;&gt; manatory xorg patch made it into the experimental packages...
&gt;&gt;&gt;   
&gt;&gt; it is rather frustrating
&gt;&gt; i've had this remote for 6 months now and would like to get it working 
&gt;&gt; "properly"
&gt;&gt;
&gt;&gt; what i would love to getis a description of a working configuration 
&gt;&gt; (config files in particular)
&gt;&gt; i don't know if i'm supposed to put something into one or more of the 
&gt;&gt; /etc/bluetooth config files.
&gt;&gt; or something in hal or dbus for that matter
&gt;&gt;
&gt;&gt; we've both been told "it just works" but it doesn't
&gt;&gt; --
&gt;&gt; simon
&gt; 
&gt; I know it is frustrating, and I also got this device a while and spent
&gt; way to much time getting it working "out of the box"
&gt; 
&gt; As I said in my first response it does not yet just works, but I am not
&gt; an developer of bluez, just an heavy user and tester. BTW you should not
&gt; have to make any changes to the bluez config files.
&gt; 
&gt; I will look into it, this weekend and report back.
&gt; 
&gt; If you really want to try out right now, use the latest bluez git of
&gt; bluez-utils and bluez-gnome and the latest xorg git and try to get an
&gt; input event.
&gt; 
&gt; Best regards,
&gt; 
&gt; Jelle

I did some testing today on a updated debian sid installation.
Conclusion device does not work yet on debian sid.

I took the latest git of bluez-utils and bluez-gnome build them as you
can find info how in my first original topic about the remote.

I still needed to use bluetooth-appplet the connect/pair the device. But
no input event is created.

It seems the xorg patches are not yet in debian sid.

I will wait until the next debian update of libx11 and hope an input
event will be created when connecting the device.

Please see the attachment for more information and logs.

Marcel, did you apply the changes you made when on CELINUX in the
Netherlands, I can remember some of these changes made an input device
at for the remote, and the patch Bastien against libX11 should make xorg
understand the events... correct? but currently it seems both systms are
not doing working yet..

Best regards,

Jelle

# Currently the device does not work under debian sid 2008-11-28
# Definition of working:
# when succesfully paring, an input event should occur that can be used
# with xbindingkeys, evtest and lirc

# used latest git of bluez and gnome-bluez
# however it seems the xorg paches are not inluded in debian sid
# https://bugs.freedesktop.org/show_bug.cgi?id=16519
# http://patch-tracking.debian.net/package/libx11/2:1.1.5-2
# http://patch-tracking.debian.net/package/x11proto-input/1.4.4-1


["bluetoothd-remote-test-2008-11-28.txt" (text/plain)]

http://filebin.ca/xfgtug/bluez-gnome_1.9git_i386.deb
http://filebin.ca/mdxohj/bluez-utils_4.19git_i386.deb

------------------------------------------------------------------------

bluetoothd --nodaemon --debug
bluetoothd[3552]: Bluetooth daemon
bluetoothd[3552]: Enabling debug information
bluetoothd[3552]: parsing main.conf
bluetoothd[3552]: offmode=NoScan
bluetoothd[3552]: discovto=0
bluetoothd[3552]: pairto=0
bluetoothd[3552]: pageto=8192
bluetoothd[3552]: name=%h-%d
bluetoothd[3552]: class=0x000100
bluetoothd[3552]: inqmode=0
bluetoothd[3552]: Starting SDP server
bluetoothd[3552]: Loading plugins /usr/lib/bluetooth/plugins
bluetoothd[3552]: register_interface: path /org/bluez/3552/any
bluetoothd[3552]: Registered interface org.bluez.Service on path /org/bluez/3552/any
bluetoothd[3552]: Parsing /etc/bluetooth/network.conf failed: No such file or \
directory bluetoothd[3552]: Config options: InterfacePrefix=bnep%d, \
PANU_Script=(null), GN_Script=(null), NAP_Script=(null), GN_Interface=pan0, \
NAP_Interface=pan1, Security=true bluetoothd[3552]: Can't create GN bridge
bluetoothd[3552]: Parsing /etc/bluetooth/input.conf failed: No such file or directory
bluetoothd[3552]: Unix socket created: 12
bluetoothd[3552]: audio.conf: Key file does not have key 'MaxConnected'
bluetoothd[3552]: Telephony plugin initialized
bluetoothd[3552]: HFP AG features: "Ability to reject a call" "Enhanced call status" \
"Extended Error Result Codes" bluetoothd[3552]: HCI dev 0 registered
bluetoothd[3552]: child 3553 forked
bluetoothd[3552]: HCI dev 0 already up
bluetoothd[3552]: register_interface: path /org/bluez/3552/hci0
bluetoothd[3552]: Registered interface org.bluez.Service on path /org/bluez/3552/hci0
bluetoothd[3552]: network_server_probe: path /org/bluez/3552/hci0
bluetoothd[3552]: Adding record with handle 0x10000
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10000
bluetoothd[3552]: Registered interface org.bluez.NetworkPeer on path \
/org/bluez/3552/hci0 bluetoothd[3552]: network_server_probe: path \
/org/bluez/3552/hci0 bluetoothd[3552]: Adding record with handle 0x10001
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10001
bluetoothd[3552]: Registered interface org.bluez.NetworkHub on path \
/org/bluez/3552/hci0 bluetoothd[3552]: network_server_probe: path \
/org/bluez/3552/hci0 bluetoothd[3552]: Adding record with handle 0x10002
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10002
bluetoothd[3552]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/3552/hci0 bluetoothd[3552]: proxy_probe: path /org/bluez/3552/hci0
bluetoothd[3552]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/3552/hci0 bluetoothd[3552]: headset_server_probe: path \
/org/bluez/3552/hci0 bluetoothd[3552]: audio.conf: Key file does not have key \
'Master' bluetoothd[3552]: Adding record with handle 0x10003
bluetoothd[3552]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[3552]: audio.conf: Key file does not have key 'SCORouting'
bluetoothd[3552]: a2dp_server_probe: path /org/bluez/3552/hci0
bluetoothd[3552]: audio.conf: Key file does not have key 'Disable'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have key 'Master'
bluetoothd[3552]: SEP 0xb93c7030 registered: type:0 codec:0 seid:1
bluetoothd[3552]: Adding record with handle 0x10004
bluetoothd[3552]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[3552]: avrcp_server_probe: path /org/bluez/3552/hci0
bluetoothd[3552]: audio.conf: Key file does not have key 'Master'
bluetoothd[3552]: Adding record with handle 0x10005
bluetoothd[3552]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3552]: Adding record with handle 0x10006
bluetoothd[3552]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3552]: Creating device /org/bluez/3552/hci0/dev_00_1A_80_AB_0A_B1
bluetoothd[3552]: Probe drivers for /org/bluez/3552/hci0/dev_00_1A_80_AB_0A_B1
bluetoothd[3552]: adapter_get_device(00:1A:80:AB:0A:B1)
bluetoothd[3552]: Found Audio Sink
bluetoothd[3552]: Registered interface org.bluez.AudioSink on path \
/org/bluez/3552/hci0/dev_00_1A_80_AB_0A_B1 bluetoothd[3552]: Found AV Target
bluetoothd[3552]: Registered interface org.bluez.Control on path \
/org/bluez/3552/hci0/dev_00_1A_80_AB_0A_B1 bluetoothd[3552]: Found AV Target
bluetoothd[3552]: Creating device /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78
bluetoothd[3552]: Probe drivers for /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78
bluetoothd[3552]: serial_probe: path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78: \
00001108-0000-1000-8000-00805f9b34fb bluetoothd[3552]: Registered interface \
org.bluez.Serial on path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 bluetoothd[3552]: \
serial_probe: path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78: \
0000111e-0000-1000-8000-00805f9b34fb bluetoothd[3552]: headset_probe: path \
/org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 bluetoothd[3552]: Registered interface \
org.bluez.Input on path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 bluetoothd[3552]: \
adapter_get_device(00:0C:55:D1:C9:78) bluetoothd[3552]: Found Headset record
bluetoothd[3552]: Discovered Headset service on RFCOMM channel 2
bluetoothd[3552]: Registered interface org.bluez.Headset on path \
/org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 bluetoothd[3552]: audio handle_uuid: \
server not enabled for 0000111e-0000-1000-8000-00805f9b34fb (0x111e) \
bluetoothd[3552]: Found Audio Sink bluetoothd[3552]: Registered interface \
org.bluez.AudioSink on path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 \
bluetoothd[3552]: Found AV Remote bluetoothd[3552]: Registered interface \
org.bluez.Control on path /org/bluez/3552/hci0/dev_00_0C_55_D1_C9_78 \
bluetoothd[3552]: Adapter /org/bluez/3552/hci0 has been enabled bluetoothd[3552]: \
Starting security manager 0 bluetoothd[3552]: HCI dev 1 registered
bluetoothd[3552]: child 3554 forked
bluetoothd[3552]: HCI dev 1 already up
bluetoothd[3552]: register_interface: path /org/bluez/3552/hci1
bluetoothd[3552]: Registered interface org.bluez.Service on path /org/bluez/3552/hci1
bluetoothd[3552]: network_server_probe: path /org/bluez/3552/hci1
bluetoothd[3552]: Adding record with handle 0x10007
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001115-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10007
bluetoothd[3552]: Registered interface org.bluez.NetworkPeer on path \
/org/bluez/3552/hci1 bluetoothd[3552]: network_server_probe: path \
/org/bluez/3552/hci1 bluetoothd[3552]: Adding record with handle 0x10008
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001117-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10008
bluetoothd[3552]: Registered interface org.bluez.NetworkHub on path \
/org/bluez/3552/hci1 bluetoothd[3552]: network_server_probe: path \
/org/bluez/3552/hci1 bluetoothd[3552]: Adding record with handle 0x10009
bluetoothd[3552]: Record pattern UUID 0000000f-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001116-0000-1000-8000-00805f9
bluetoothd[3552]: register_server_record: got record id 0x10009
bluetoothd[3552]: Registered interface org.bluez.NetworkRouter on path \
/org/bluez/3552/hci1 bluetoothd[3552]: proxy_probe: path /org/bluez/3552/hci1
bluetoothd[3552]: Registered interface org.bluez.SerialProxyManager on path \
/org/bluez/3552/hci1 bluetoothd[3552]: headset_server_probe: path \
/org/bluez/3552/hci1 bluetoothd[3552]: audio.conf: Key file does not have key \
'Master' bluetoothd[3552]: Adding record with handle 0x1000a
bluetoothd[3552]: Record pattern UUID 00000003-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001108-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001112-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001203-0000-1000-8000-00805f9
bluetoothd[3552]: audio.conf: Key file does not have key 'SCORouting'
bluetoothd[3552]: a2dp_server_probe: path /org/bluez/3552/hci1
bluetoothd[3552]: audio.conf: Key file does not have key 'Disable'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[3552]: audio.conf: Key file does not have key 'Master'
bluetoothd[3552]: SEP 0xb93cb2e0 registered: type:0 codec:0 seid:1
bluetoothd[3552]: Adding record with handle 0x1000b
bluetoothd[3552]: Record pattern UUID 00000019-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110a-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110d-0000-1000-8000-00805f9
bluetoothd[3552]: avrcp_server_probe: path /org/bluez/3552/hci1
bluetoothd[3552]: audio.conf: Key file does not have key 'Master'
bluetoothd[3552]: Adding record with handle 0x1000c
bluetoothd[3552]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110c-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3552]: Adding record with handle 0x1000d
bluetoothd[3552]: Record pattern UUID 00000017-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00000100-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 00001002-0000-1000-8000-00805f9
bluetoothd[3552]: Record pattern UUID 0000110e-0000-1000-8000-00805f9
bluetoothd[3552]: Creating device /org/bluez/3552/hci1/dev_00_07_61_0F_4A_60
bluetoothd[3552]: Probe drivers for /org/bluez/3552/hci1/dev_00_07_61_0F_4A_60
bluetoothd[3552]: hid_device_probe: path /org/bluez/3552/hci1/dev_00_07_61_0F_4A_60
bluetoothd[3552]: Registered interface org.bluez.Input on path \
/org/bluez/3552/hci1/dev_00_07_61_0F_4A_60 bluetoothd[3552]: Creating device \
/org/bluez/3552/hci1/dev_11_11_11_11_17_95 bluetoothd[3552]: Probe drivers for \
/org/bluez/3552/hci1/dev_11_11_11_11_17_95 bluetoothd[3552]: hid_device_probe: path \
/org/bluez/3552/hci1/dev_11_11_11_11_17_95 bluetoothd[3552]: Registered interface \
org.bluez.Input on path /org/bluez/3552/hci1/dev_11_11_11_11_17_95 bluetoothd[3552]: \
Creating device /org/bluez/3552/hci1/dev_00_07_61_8A_1A_AA bluetoothd[3552]: Probe \
drivers for /org/bluez/3552/hci1/dev_00_07_61_8A_1A_AA bluetoothd[3552]: \
hid_device_probe: path /org/bluez/3552/hci1/dev_00_07_61_8A_1A_AA bluetoothd[3552]: \
Registered interface org.bluez.Input on path \
/org/bluez/3552/hci1/dev_00_07_61_8A_1A_AA bluetoothd[3552]: Creating device \
/org/bluez/3552/hci1/dev_00_07_61_8A_42_DF bluetoothd[3552]: Probe drivers for \
/org/bluez/3552/hci1/dev_00_07_61_8A_42_DF bluetoothd[3552]: hid_device_probe: path \
/org/bluez/3552/hci1/dev_00_07_61_8A_42_DF bluetoothd[3552]: Registered interface \
org.bluez.Input on path /org/bluez/3552/hci1/dev_00_07_61_8A_42_DF bluetoothd[3552]: \
Adapter /org/bluez/3552/hci1 has been enabled bluetoothd[3552]: Starting security \
manager 1 bluetoothd[3552]: child 3553 exited
bluetoothd[3552]: child 3554 exited
bluetoothd[3552]: Computer is classified as laptop
bluetoothd[3552]: Current device class is 0x0a010c
bluetoothd[3552]: Setting 0x00010c for major/minor device class
bluetoothd[3552]: Computer is classified as laptop
bluetoothd[3552]: Current device class is 0x0a010c
bluetoothd[3552]: Setting 0x00010c for major/minor device class
bluetoothd[3552]: Agent registered for hci0 at :1.18:/org/bluez/agent/hci0
bluetoothd[3552]: Agent registered for hci1 at :1.18:/org/bluez/agent/hci1
bluetoothd[3552]: Discovery session 0xb93be870 with :1.20 activated
bluetoothd[3552]: session_ref(0xb93be870): ref=1
bluetoothd[3552]: session_unref(0xb93be870): ref=0
bluetoothd[3552]: Discovery session 0xb93be870 with :1.20 deactivated
bluetoothd[3552]: Stopping discovery
bluetoothd[3552]: create_device(00:1E:3D:15:0A:4F)
bluetoothd[3552]: adapter_create_device(00:1E:3D:15:0A:4F)
bluetoothd[3552]: Creating device /org/bluez/3552/hci0/dev_00_1E_3D_15_0A_4F
bluetoothd[3552]: adapter_get_device(00:1E:3D:15:0A:4F)
bluetoothd[3552]: Probe drivers for /org/bluez/3552/hci0/dev_00_1E_3D_15_0A_4F
bluetoothd[3552]: hid_device_probe: path /org/bluez/3552/hci0/dev_00_1E_3D_15_0A_4F
bluetoothd[3552]: Registered interface org.bluez.Input on path \
/org/bluez/3552/hci0/dev_00_1E_3D_15_0A_4F

------------------------------------------------------------------------
hcitool scan
    Scanning ...
        00:1E:3D:15:0A:4F   BD Remote Control

------------------------------------------------------------------------
sudo hcitool info 00:1E:3D:15:0A:4F
    Requesting information ...
        BD Address:  00:1E:3D:15:0A:4F
        Device Name: BD Remote Control
        LMP Version: 2.0 (0x3) LMP Subversion: 0x229
        Manufacturer: Broadcom Corporation (15)
        Features: 0xbc 0x02 0x04 0x38 0x08 0x00 0x00 0x00
            &lt;encryption&gt; &lt;slot offset&gt; &lt;timing accuracy&gt; &lt;role switch&gt;
            &lt;sniff mode&gt; &lt;RSSI&gt; &lt;power control&gt; &lt;enhanced iscan&gt;
            &lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;AFH cap. slave&gt;

------------------------------------------------------------------------
sdptool browse 00:1E:3D:15:0A:4F
    Browsing 00:1E:3D:15:0A:4F ...
    Service Name: BD Remote Control
    Service Description: BD Remote Control
    Service Provider: Sony Computer Entertainment Inc
    Service RecHandle: 0x10000
    Service Class ID List:
      "Human Interface Device" (0x1124)
    Protocol Descriptor List:
      "L2CAP" (0x0100)
        PSM: 17
      "HIDP" (0x0011)
    Language Base Attr List:
      code_ISO639: 0x656e
      encoding:    0x6a
      base_offset: 0x100
    Profile Descriptor List:
      "Human Interface Device" (0x1124)
        Version: 0x0100

------------------------------------------------------------------------


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081130105257</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-30 10:52:57-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Jelle de Jong wrote:
&gt; I will wait until the next debian update of libx11 and hope an input
&gt; event will be created when connecting the device.
why would X11 be involved in creating the event device?
i might be using the remote without X
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130133151</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-30 13:31:51-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Simon Kenyon wrote:
&gt; Jelle de Jong wrote:
&gt;&gt; I will wait until the next debian update of libx11 and hope an input
&gt;&gt; event will be created when connecting the device.
&gt; why would X11 be involved in creating the event device?
&gt; i might be using the remote without X

There are a number of things not working yet. The connecting/pairing
system should make the input device, at leased that is what I think. The
X stuff is so that the input system can understand what it is saying,
this is some sort of hid driver for the device. This is also not yet
working. Then there is the thing that some of the developers like to
merge everything in gui application so that is can only be setup with
this gui or by manually creating dbus command and sending them ....

I am also not a bluez developer and I tolled people I would like to
understand how the heck somebody can implement proper support for these
devices (I got a bag full of non working bluetooth devices), nobody seem
to make the time to explain in detail how it works ... and how to get
add code to get it working.

So my strategy is just to wait until somebody cares to fix it... Not
very fast or effective but nothing else I can do. I spent far to much
time telling people it does not work.

I am sorry for all the frustrations...

Best regards,

Jelle


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081111225706</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-11-11 22:57:06-0400</timestampReceived><subject>Re: Dell Wireless 365 requires reset quirk</subject><body>

On Tue,  4 Nov 2008 09:24:48 -0700 (MST)
timg@tpi.com (Tim Gardner) wrote:

&gt; &gt;From 931ccb629d739aa563347a4e866bc26107e6b545 Mon Sep 17 00:00:00 2001
&gt; From: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; Date: Tue, 4 Nov 2008 09:18:06 -0700
&gt; Subject: [PATCH] Dell Wireless 365 needs BTUSB_RESET quirk.
&gt;  OriginalAuthor: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt; 
&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; Cc: stable@kernel.org
&gt; ---
&gt;  drivers/bluetooth/btusb.c |    3 +++
&gt;  1 files changed, 3 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
&gt; index af472e0..051b758 100644
&gt; --- a/drivers/bluetooth/btusb.c
&gt; +++ b/drivers/bluetooth/btusb.c
&gt; @@ -125,6 +125,9 @@ static struct usb_device_id blacklist_table[] = {
&gt;  	/* Dell laptop with Broadcom chip */
&gt;  	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt;  
&gt; +	/* Dell Wireless 365 */
&gt; +	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
&gt; +
&gt;  	/* Dell Wireless 370 */
&gt;  	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt;  

I shall assume that this patch was authored by Mario.  This should have
been communicated by adding his From: line right at the top of the
changelog.  Mario's signed-off-by: is absent, but that is tolerable
because we have yours.

The (absent) changelog fails to explain what effect this patch has. 
_why_ does this driver need this quirk?

As it stands, there is insufficient information here for making
2.6.28-vs-2.6.29 decisions, let alone 2.6.27.x, 2.6.26.x, etc.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081111234121</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-11-11 23:41:21-0400</timestampReceived><subject>Re: Dell Wireless 365 requires reset quirk</subject><body>

Andrew Morton wrote:
&gt; On Tue,  4 Nov 2008 09:24:48 -0700 (MST)
&gt; timg@tpi.com (Tim Gardner) wrote:
&gt;
&gt;   
&gt;
&gt; I shall assume that this patch was authored by Mario.  This should have
&gt; been communicated by adding his From: line right at the top of the
&gt; changelog.  Mario's signed-off-by: is absent, but that is tolerable
&gt; because we have yours.
&gt;
&gt; The (absent) changelog fails to explain what effect this patch has. 
&gt; _why_ does this driver need this quirk?
&gt;
&gt; As it stands, there is insufficient information here for making
&gt; 2.6.28-vs-2.6.29 decisions, let alone 2.6.27.x, 2.6.26.x, etc.
&gt;   
Hi Andrew:

This patch causes the BT365 to be reset when the driver is loaded. 
Without it, you won't be able to connect to other devices or scan for
devices.

Regards

-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081114005950</emailId><senderName>Tim Gardner</senderName><senderEmail>tim.gardner@canonical.com</senderEmail><timestampReceived>2008-11-14 00:59:50-0400</timestampReceived><subject>Re: Dell Wireless 365 requires reset quirk</subject><body>

Andrew Morton wrote:
&gt; On Tue,  4 Nov 2008 09:24:48 -0700 (MST)
&gt; timg@tpi.com (Tim Gardner) wrote:
&gt; 
&gt;&gt; &gt;From 931ccb629d739aa563347a4e866bc26107e6b545 Mon Sep 17 00:00:00 2001
&gt;&gt; From: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt;&gt; Date: Tue, 4 Nov 2008 09:18:06 -0700
&gt;&gt; Subject: [PATCH] Dell Wireless 365 needs BTUSB_RESET quirk.
&gt;&gt;  OriginalAuthor: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt;&gt;
&gt;&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt;&gt; Cc: stable@kernel.org
&gt;&gt; ---
&gt;&gt;  drivers/bluetooth/btusb.c |    3 +++
&gt;&gt;  1 files changed, 3 insertions(+), 0 deletions(-)
&gt;&gt;
&gt;&gt; diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
&gt;&gt; index af472e0..051b758 100644
&gt;&gt; --- a/drivers/bluetooth/btusb.c
&gt;&gt; +++ b/drivers/bluetooth/btusb.c
&gt;&gt; @@ -125,6 +125,9 @@ static struct usb_device_id blacklist_table[] = {
&gt;&gt;  	/* Dell laptop with Broadcom chip */
&gt;&gt;  	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt;&gt;  
&gt;&gt; +	/* Dell Wireless 365 */
&gt;&gt; +	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
&gt;&gt; +
&gt;&gt;  	/* Dell Wireless 370 */
&gt;&gt;  	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt;&gt;  
&gt; 
&gt; I shall assume that this patch was authored by Mario.  This should have
&gt; been communicated by adding his From: line right at the top of the
&gt; changelog.  Mario's signed-off-by: is absent, but that is tolerable
&gt; because we have yours.
&gt; 
&gt; The (absent) changelog fails to explain what effect this patch has. 
&gt; _why_ does this driver need this quirk?
&gt; 
&gt; As it stands, there is insufficient information here for making
&gt; 2.6.28-vs-2.6.29 decisions, let alone 2.6.27.x, 2.6.26.x, etc.
&gt; 

Is this better (aside from being an attachment) ?

rtg
-- 
Tim Gardner tim.gardner@canonical.com

["0001--bluetooth-Dell-Wireless-365-needs-BTUSB_RESET-qui.patch" (text/x-patch)]

From 8da2a85810aa0fb5abbc93d15482846af5d60669 Mon Sep 17 00:00:00 2001
From: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
Date: Tue, 4 Nov 2008 09:18:06 -0700
Subject: [PATCH] bluetooth: Dell Wireless 365 needs BTUSB_RESET quirk.

This patch causes the BT365 to be reset when the driver is loaded.
Without it, you won't be able to connect to other devices or scan for
devices.

Signed-off-by: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Cc: stable@kernel.org
---
 drivers/bluetooth/btusb.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index af472e0..051b758 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -125,6 +125,9 @@ static struct usb_device_id blacklist_table[] = {
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
+	/* Dell Wireless 365 */
+	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
+
 	/* Dell Wireless 370 */
 	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 
-- 
1.5.6.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081128091342</emailId><senderName>Matthieu CASTET</senderName><senderEmail>matthieu.castet@parrot.com</senderEmail><timestampReceived>2008-11-28 09:13:42-0400</timestampReceived><subject>Re: btusb and HCI_RAW</subject><body>

Hi Marcel,

Marcel Holtmann a écrit :
&gt; Hi Matthieu,
&gt; 
&gt;&gt; But hci_usb wasn't doing that (ie always use max alternate setting +
&gt;&gt; submit sco/alc urb), and I wasn't under the impression that it costs too
&gt;&gt; much CPU power.
&gt; 
&gt; there is not concept of max alternate setting. You just have to use the
&gt; right one and powertop showed the difference in power consumption.
&gt; 
Ok, but in normal case HCI_RAW isn't enabled ?
So the high power consumption only happen when you use this mode, which
shouldn't happen for normal users ?

&gt;&gt;&gt; So this is a little bit
&gt;&gt;&gt; pointless here and before just worked by pure luck. Why do you want this
&gt;&gt;&gt; support in the first place?
&gt;&gt;&gt;
&gt;&gt; This can be helpful to test userspace bluetooth stack or do some fuzzing.
&gt; 
&gt; I seriously couldn't care less about any userspace Bluetooth stack. Also
&gt; why is RAW not working for ACL packets.
Do you mean HCI_RAW or l2cap raw ?

For HCI_RAW case, what will call hci_connect for ACL_LINK ?
This seems need to have "hdev-&gt;conn_hash.acl_num &gt; 0" .

&gt; adapter is brought up properly and switched to RUNNING state. SCO will
&gt; not be possible without magic.
Also why in hci_sock_sendmsg there isn't check to return error if it is
impossible to send raw sco/acl ?

Regards,
Matthieu
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128154739</emailId><senderName>"Alan Carvalho de Assis"</senderName><senderEmail>acassis@gmail.com</senderEmail><timestampReceived>2008-11-28 15:47:39-0400</timestampReceived><subject>Re: [PATCH] Modification on agent.c in order to it support new API</subject><body>

Sending it again attached, gmail messed my patch!

Regards,

Alan

On Fri, Nov 28, 2008 at 3:38 PM, Alan Carvalho de Assis
&lt;acassis@gmail.com&gt; wrote:
&gt; This is my effort to adapt agent.c to new API.
&gt;
&gt; I started doing it as single agent, but jhe suggest me to separate it
&gt; on two agents, but after doing that none agent Methods are called.
&gt;
&gt; As single agent I got it:
&gt;
&gt; # agent 00:0E:ED:29:4F:2D
&gt; Pairing to 00:0E:ED:29:4F:2D
&gt; Adapter path: /org/bluez/1780/hci0
&gt; Agent_message was called!
&gt; Agent called: RequestPinCode
&gt; Device path = /org/bluez/1780/hci0/dev_00_0E_ED_29_4F_2D
&gt; Agent has been released
&gt; Agent_message was called!
&gt; Agent called: Cancel
&gt; Request canceled for device
&gt; Agent_message was called!
&gt; Agent called: Release
&gt; Agent has been released
&gt;
&gt; To test it as double agent just remove C++ style comments on main
&gt; scope, then execute:
&gt;
&gt; # agent &amp;
&gt;
&gt; # agent 00:0E:ED:29:4F:2D
&gt; Pairing to 00:0E:ED:29:4F:2D
&gt; Adapter path: /org/bluez/1780/hci0
&gt;
&gt; As you can see it doesn't call any agent methods.
&gt;
&gt; Please, some idea about this problem?
&gt;
&gt; Best Regards,
&gt;
&gt; Alan
&gt;
&gt;
&gt; Signed-off-by: Alan Carvalho &lt;acassis@gmail.com&gt;
&gt; ---
&gt;  test/agent.c |  194 ++++++++++++++++++++++++++++++++++++++++++----------------
&gt;  1 files changed, 142 insertions(+), 52 deletions(-)
&gt;
&gt; diff --git a/test/agent.c b/test/agent.c
&gt; index a8d880a..fdab641 100644
&gt; --- a/test/agent.c
&gt; +++ b/test/agent.c
&gt; @@ -35,7 +35,7 @@
&gt;
&gt;  #include &lt;dbus/dbus.h&gt;
&gt;
&gt; -static char *passkey = NULL;
&gt; +static char *devaddr = NULL, *pincode = "0000";
&gt;
&gt;  static int do_reject = 0;
&gt;
&gt; @@ -70,28 +70,19 @@ static DBusHandlerResult agent_filter(DBusConnection *conn,
&gt;        return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
&gt;  }
&gt;
&gt; -static DBusHandlerResult request_message(DBusConnection *conn,
&gt; +
&gt; +static DBusHandlerResult cancel_message(DBusConnection *conn,
&gt;                                                DBusMessage *msg, void *data)
&gt;  {
&gt;        DBusMessage *reply;
&gt;        const char *path, *address;
&gt; -       dbus_bool_t numeric;
&gt; -
&gt; -       if (!passkey)
&gt; -               return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
&gt;
&gt; -       if (!dbus_message_get_args(msg, NULL,
&gt; -                       DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
&gt; -                       DBUS_TYPE_BOOLEAN, &amp;numeric, DBUS_TYPE_INVALID)) {
&gt; -               fprintf(stderr, "Invalid arguments for passkey Request method");
&gt; +       if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_INVALID)) {
&gt; +               fprintf(stderr, "Invalid arguments for Cancel method");
&gt;                return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
&gt;        }
&gt;
&gt; -       if (do_reject) {
&gt; -               reply = dbus_message_new_error(msg,
&gt; -                                       "org.bluez.Error.Rejected", "");
&gt; -               goto send;
&gt; -       }
&gt; +       printf("Request canceled for device %s\n", address);
&gt;
&gt;        reply = dbus_message_new_method_return(msg);
&gt;        if (!reply) {
&gt; @@ -99,12 +90,6 @@ static DBusHandlerResult
&gt; request_message(DBusConnection *conn,
&gt;                return DBUS_HANDLER_RESULT_NEED_MEMORY;
&gt;        }
&gt;
&gt; -       printf("Passkey request for device %s\n", address);
&gt; -
&gt; -       dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;passkey,
&gt; -                                       DBUS_TYPE_INVALID);
&gt; -
&gt; -send:
&gt;        dbus_connection_send(conn, reply, NULL);
&gt;
&gt;        dbus_connection_flush(conn);
&gt; @@ -114,20 +99,23 @@ send:
&gt;        return DBUS_HANDLER_RESULT_HANDLED;
&gt;  }
&gt;
&gt; -static DBusHandlerResult cancel_message(DBusConnection *conn,
&gt; +static DBusHandlerResult reqpincode_message(DBusConnection *conn,
&gt;                                                DBusMessage *msg, void *data)
&gt;  {
&gt;        DBusMessage *reply;
&gt; -       const char *path, *address;
&gt; +       char *dev_path;
&gt;
&gt; -       if (!dbus_message_get_args(msg, NULL,
&gt; -                       DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
&gt; -                                                       DBUS_TYPE_INVALID)) {
&gt; -               fprintf(stderr, "Invalid arguments for passkey Confirm method");
&gt; +       if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_OBJECT_PATH,
&gt; &amp;dev_path, DBUS_TYPE_INVALID)) {
&gt; +               fprintf(stderr, "Invalid arguments for RequestPinCode method");
&gt;                return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
&gt;        }
&gt;
&gt; -       printf("Request canceled for device %s\n", address);
&gt; +       printf("Device path = %s\n",dev_path);
&gt; +
&gt; +       if (!__io_canceled)
&gt; +               fprintf(stderr, "Agent has been released\n");
&gt; +
&gt; +       //__io_terminated = 1;
&gt;
&gt;        reply = dbus_message_new_method_return(msg);
&gt;        if (!reply) {
&gt; @@ -135,6 +123,9 @@ static DBusHandlerResult
&gt; cancel_message(DBusConnection *conn,
&gt;                return DBUS_HANDLER_RESULT_NEED_MEMORY;
&gt;        }
&gt;
&gt; +       dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;pincode,
&gt; +                                       DBUS_TYPE_INVALID);
&gt; +
&gt;        dbus_connection_send(conn, reply, NULL);
&gt;
&gt;        dbus_connection_flush(conn);
&gt; @@ -177,14 +168,37 @@ static DBusHandlerResult
&gt; release_message(DBusConnection *conn,
&gt;  static DBusHandlerResult agent_message(DBusConnection *conn,
&gt;                                                DBusMessage *msg, void *data)
&gt;  {
&gt; -       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Request"))
&gt; -               return request_message(conn, msg, data);
&gt; +       printf("Agent_message was called!\n");
&gt;
&gt; -       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
&gt; -               return cancel_message(conn, msg, data);
&gt; -
&gt; -       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release"))
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release")){
&gt; +               printf("Agent called: Release\n");
&gt;                return release_message(conn, msg, data);
&gt; +       }
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPinCode")){
&gt; +               printf("Agent called: RequestPinCode\n");
&gt; +               return reqpincode_message(conn, msg, data);
&gt; +       }
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPasskey"))
&gt; +               printf("Agent called: RequestPasskey\n");
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "DisplayPasskey"))
&gt; +               printf("Agent called: DisplayPasskey\n");
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent",
&gt; "RequestConfirmation"))
&gt; +               printf("Agent called: RequestConfirmation\n");
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Authorize"))
&gt; +               printf("Agent called: Authorize\n");
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "ConfirmModeChange"))
&gt; +               printf("Agent called: ConfirmModeChange\n");
&gt; +
&gt; +       if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel")){
&gt; +               printf("Agent called: Cancel\n");
&gt; +               return cancel_message(conn, msg, data);
&gt; +       }
&gt;
&gt;        return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
&gt;  }
&gt; @@ -279,21 +293,88 @@ static int unregister_agent(DBusConnection
&gt; *conn, const char *device_path,
&gt;        return 0;
&gt;  }
&gt;
&gt; -static char *get_device(const char *device)
&gt; +static char *get_device(DBusConnection *conn)
&gt;  {
&gt; -       char *path;
&gt; +       char *path, *device_path = NULL;
&gt; +       DBusMessage *msg, *reply;
&gt; +       DBusError err;
&gt;
&gt; -       path = strdup("/org/bluez/hci0");
&gt; +       msg = dbus_message_new_method_call("org.bluez", "/",
&gt; +                                       "org.bluez.Manager", "DefaultAdapter");
&gt; +       if (!msg) {
&gt; +               fprintf(stderr, "Can't allocate new method call\n");
&gt; +               return NULL;
&gt; +       }
&gt;
&gt; -       return path;
&gt; +       dbus_error_init(&amp;err);
&gt; +
&gt; +       reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);
&gt; +
&gt; +       dbus_message_unref(msg);
&gt; +
&gt; +       if (!reply) {
&gt; +               fprintf(stderr, "Can't get Adapter path\n");
&gt; +               if (dbus_error_is_set(&amp;err)) {
&gt; +                       fprintf(stderr, "%s\n", err.message);
&gt; +                       dbus_error_free(&amp;err);
&gt; +               }
&gt; +               return NULL;
&gt; +       }
&gt; +
&gt; +       dbus_message_get_args(reply, NULL, DBUS_TYPE_OBJECT_PATH,
&gt; &amp;device_path, DBUS_TYPE_INVALID);
&gt; +
&gt; +       dbus_message_unref(reply);
&gt; +
&gt; +       dbus_connection_flush(conn);
&gt; +
&gt; +       return device_path;
&gt; +}
&gt; +
&gt; +static int pair_device(DBusConnection *conn, const char *device_path,
&gt; +                                       const char *agent_path,
&gt; +                                       const char *capabilities)
&gt; +{
&gt; +       DBusMessage *msg;
&gt; +       DBusPendingCall *pending;
&gt; +       int ret;
&gt; +
&gt; +
&gt; +       printf("Adapter path: %s\n", device_path);
&gt; +
&gt; +       msg = dbus_message_new_method_call("org.bluez", device_path,
&gt; +                                       "org.bluez.Adapter", "CreatePairedDevice");
&gt; +       if (!msg) {
&gt; +               fprintf(stderr, "Can't allocate new method call\n");
&gt; +               return -1;
&gt; +       }
&gt; +
&gt; +       dbus_message_append_args(msg, DBUS_TYPE_STRING, &amp;devaddr,
&gt; +                                       DBUS_TYPE_OBJECT_PATH, &amp;agent_path,
&gt; +                                       DBUS_TYPE_STRING, &amp;capabilities,
&gt; +                                                       DBUS_TYPE_INVALID);
&gt; +
&gt; +       ret = dbus_connection_send_with_reply(conn, msg, &amp;pending, 100000);
&gt; +
&gt; +       if (!ret) {
&gt; +               fprintf(stderr, "Can't pair to device\n");
&gt; +               return -1;
&gt; +       }
&gt; +
&gt; +       dbus_message_unref(msg);
&gt; +
&gt; +       dbus_connection_flush(conn);
&gt; +
&gt; +       dbus_pending_call_block(pending);
&gt; +
&gt; +       return 0;
&gt;  }
&gt;
&gt;  static void usage(void)
&gt;  {
&gt; -       printf("Bluetooth agent ver %s\n\n", VERSION);
&gt; +       printf("Bluetooth agent ver %s\n\n", "4.18");
&gt;
&gt;        printf("Usage:\n"
&gt; -               "\tagent [--device interface] [--path agent-path] &lt;passkey&gt;\n"
&gt; +               "\tagent &lt;device address&gt; [pincode]\n"
&gt;                "\n");
&gt;  }
&gt;
&gt; @@ -348,12 +429,10 @@ int main(int argc, char *argv[])
&gt;        argv += optind;
&gt;        optind = 0;
&gt;
&gt; -       if (argc &lt; 1) {
&gt; +       /*if (argc &lt; 1) {
&gt;                usage();
&gt;                exit(1);
&gt; -       }
&gt; -
&gt; -       passkey = strdup(argv[0]);
&gt; +       }*/
&gt;
&gt;        if (!agent_path)
&gt;                agent_path = strdup(default_path);
&gt; @@ -365,12 +444,25 @@ int main(int argc, char *argv[])
&gt;        }
&gt;
&gt;        if (!device_path)
&gt; -               device_path = get_device(device_id);
&gt; +               device_path = get_device(conn);
&gt;
&gt; -       if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
&gt; -               dbus_connection_unref(conn);
&gt; -               exit(1);
&gt; -       }
&gt; +
&gt; +       //if (argc &gt;= 1){
&gt; +               devaddr = strdup(argv[0]);
&gt; +               printf("Pairing to %s\n",devaddr);
&gt; +               if (pair_device(conn, device_path, agent_path, capabilities) &lt; 0){
&gt; +                               dbus_connection_unref(conn);
&gt; +                               printf("Pairing failed\n");
&gt; +                               exit(1);
&gt; +               }
&gt; +       //}
&gt; +       //else {
&gt; +               if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
&gt; +                       dbus_connection_unref(conn);
&gt; +                       exit(1);
&gt; +               }
&gt; +
&gt; +       //}
&gt;
&gt;        if (!dbus_connection_add_filter(conn, agent_filter, NULL, NULL))
&gt;                fprintf(stderr, "Can't add signal filter");
&gt; @@ -395,11 +487,9 @@ int main(int argc, char *argv[])
&gt;        if (!__io_terminated)
&gt;                unregister_agent(conn, device_path, agent_path);
&gt;
&gt; -       free(device_path);
&gt; +       free(devaddr);
&gt;        free(agent_path);
&gt;
&gt; -       free(passkey);
&gt; -
&gt;        dbus_connection_unref(conn);
&gt;
&gt;        return 0;
&gt; --
&gt; 1.5.6.3
&gt;

["0001-Modification-on-agent.c-in-order-to-it-support-new-A.patch" (text/x-diff)]

From 732a5fbba7cd3e803e59d18161afd6b025b3134c Mon Sep 17 00:00:00 2001
From: Alan Carvalho de Assis &lt;acassis@gmail.com&gt;
Date: Fri, 28 Nov 2008 13:20:44 +0000
Subject: [PATCH] Modification on agent.c in order to it support new API

---
 test/agent.c |  194 ++++++++++++++++++++++++++++++++++++++++++----------------
 1 files changed, 142 insertions(+), 52 deletions(-)

diff --git a/test/agent.c b/test/agent.c
index a8d880a..fdab641 100644
--- a/test/agent.c
+++ b/test/agent.c
@@ -35,7 +35,7 @@
 
 #include &lt;dbus/dbus.h&gt;
 
-static char *passkey = NULL;
+static char *devaddr = NULL, *pincode = "0000";
 
 static int do_reject = 0;
 
@@ -70,28 +70,19 @@ static DBusHandlerResult agent_filter(DBusConnection *conn,
 	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
 
-static DBusHandlerResult request_message(DBusConnection *conn,
+
+static DBusHandlerResult cancel_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
 	DBusMessage *reply;
 	const char *path, *address;
-	dbus_bool_t numeric;
-
-	if (!passkey)
-		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 
-	if (!dbus_message_get_args(msg, NULL,
-			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
-			DBUS_TYPE_BOOLEAN, &amp;numeric, DBUS_TYPE_INVALID)) {
-		fprintf(stderr, "Invalid arguments for passkey Request method");
+	if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_INVALID)) {
+		fprintf(stderr, "Invalid arguments for Cancel method");
 		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 	}
 
-	if (do_reject) {
-		reply = dbus_message_new_error(msg,
-					"org.bluez.Error.Rejected", "");
-		goto send;
-	}
+	printf("Request canceled for device %s\n", address);
 
 	reply = dbus_message_new_method_return(msg);
 	if (!reply) {
@@ -99,12 +90,6 @@ static DBusHandlerResult request_message(DBusConnection *conn,
 		return DBUS_HANDLER_RESULT_NEED_MEMORY;
 	}
 
-	printf("Passkey request for device %s\n", address);
-
-	dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;passkey,
-					DBUS_TYPE_INVALID);
-
-send:
 	dbus_connection_send(conn, reply, NULL);
 
 	dbus_connection_flush(conn);
@@ -114,20 +99,23 @@ send:
 	return DBUS_HANDLER_RESULT_HANDLED;
 }
 
-static DBusHandlerResult cancel_message(DBusConnection *conn,
+static DBusHandlerResult reqpincode_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
 	DBusMessage *reply;
-	const char *path, *address;
+	char *dev_path;
 
-	if (!dbus_message_get_args(msg, NULL,
-			DBUS_TYPE_STRING, &amp;path, DBUS_TYPE_STRING, &amp;address,
-							DBUS_TYPE_INVALID)) {
-		fprintf(stderr, "Invalid arguments for passkey Confirm method");
+	if (!dbus_message_get_args(msg, NULL, DBUS_TYPE_OBJECT_PATH, &amp;dev_path, DBUS_TYPE_INVALID)) {
+		fprintf(stderr, "Invalid arguments for RequestPinCode method");
 		return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 	}
 
-	printf("Request canceled for device %s\n", address);
+	printf("Device path = %s\n",dev_path);
+
+	if (!__io_canceled)
+		fprintf(stderr, "Agent has been released\n");
+
+	//__io_terminated = 1;
 
 	reply = dbus_message_new_method_return(msg);
 	if (!reply) {
@@ -135,6 +123,9 @@ static DBusHandlerResult cancel_message(DBusConnection *conn,
 		return DBUS_HANDLER_RESULT_NEED_MEMORY;
 	}
 
+	dbus_message_append_args(reply, DBUS_TYPE_STRING, &amp;pincode,
+					DBUS_TYPE_INVALID);
+
 	dbus_connection_send(conn, reply, NULL);
 
 	dbus_connection_flush(conn);
@@ -177,14 +168,37 @@ static DBusHandlerResult release_message(DBusConnection *conn,
 static DBusHandlerResult agent_message(DBusConnection *conn,
 						DBusMessage *msg, void *data)
 {
-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Request"))
-		return request_message(conn, msg, data);
+	printf("Agent_message was called!\n");
 
-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel"))
-		return cancel_message(conn, msg, data);
-
-	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release"))
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Release")){
+		printf("Agent called: Release\n");
 		return release_message(conn, msg, data);
+	}
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPinCode")){
+		printf("Agent called: RequestPinCode\n");
+		return reqpincode_message(conn, msg, data);
+	}
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestPasskey"))
+		printf("Agent called: RequestPasskey\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "DisplayPasskey"))
+		printf("Agent called: DisplayPasskey\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "RequestConfirmation"))
+		printf("Agent called: RequestConfirmation\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Authorize"))
+		printf("Agent called: Authorize\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "ConfirmModeChange"))
+		printf("Agent called: ConfirmModeChange\n");
+
+	if (dbus_message_is_method_call(msg, "org.bluez.Agent", "Cancel")){
+		printf("Agent called: Cancel\n");
+		return cancel_message(conn, msg, data);
+	}
 
 	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
@@ -279,21 +293,88 @@ static int unregister_agent(DBusConnection *conn, const char *device_path,
 	return 0;
 }
 
-static char *get_device(const char *device)
+static char *get_device(DBusConnection *conn)
 {
-	char *path;
+	char *path, *device_path = NULL;
+	DBusMessage *msg, *reply;
+	DBusError err;
 
-	path = strdup("/org/bluez/hci0");
+	msg = dbus_message_new_method_call("org.bluez", "/",
+					"org.bluez.Manager", "DefaultAdapter");
+	if (!msg) {
+		fprintf(stderr, "Can't allocate new method call\n");
+		return NULL;
+	}
 
-	return path;
+	dbus_error_init(&amp;err);
+
+	reply = dbus_connection_send_with_reply_and_block(conn, msg, -1, &amp;err);
+
+	dbus_message_unref(msg);
+
+	if (!reply) {
+		fprintf(stderr, "Can't get Adapter path\n");
+		if (dbus_error_is_set(&amp;err)) {
+			fprintf(stderr, "%s\n", err.message);
+			dbus_error_free(&amp;err);
+		}
+		return NULL;
+	}
+
+	dbus_message_get_args(reply, NULL, DBUS_TYPE_OBJECT_PATH, &amp;device_path, DBUS_TYPE_INVALID);
+
+	dbus_message_unref(reply);
+
+	dbus_connection_flush(conn);
+
+	return device_path;
+}
+
+static int pair_device(DBusConnection *conn, const char *device_path,
+					const char *agent_path,
+					const char *capabilities)
+{
+	DBusMessage *msg;
+	DBusPendingCall *pending;
+	int ret;
+
+
+	printf("Adapter path: %s\n", device_path);
+
+	msg = dbus_message_new_method_call("org.bluez", device_path,
+					"org.bluez.Adapter", "CreatePairedDevice");
+	if (!msg) {
+		fprintf(stderr, "Can't allocate new method call\n");
+		return -1;
+	}
+
+	dbus_message_append_args(msg, DBUS_TYPE_STRING, &amp;devaddr,
+					DBUS_TYPE_OBJECT_PATH, &amp;agent_path,
+					DBUS_TYPE_STRING, &amp;capabilities,
+							DBUS_TYPE_INVALID);
+
+	ret = dbus_connection_send_with_reply(conn, msg, &amp;pending, 100000);
+
+	if (!ret) {
+		fprintf(stderr, "Can't pair to device\n");
+		return -1;
+	}
+
+	dbus_message_unref(msg);
+
+	dbus_connection_flush(conn);
+
+	dbus_pending_call_block(pending);
+
+	return 0;
 }
 
 static void usage(void)
 {
-	printf("Bluetooth agent ver %s\n\n", VERSION);
+	printf("Bluetooth agent ver %s\n\n", "4.18");
 
 	printf("Usage:\n"
-		"\tagent [--device interface] [--path agent-path] &lt;passkey&gt;\n"
+		"\tagent &lt;device address&gt; [pincode]\n"
 		"\n");
 }
 
@@ -348,12 +429,10 @@ int main(int argc, char *argv[])
 	argv += optind;
 	optind = 0;
 
-	if (argc &lt; 1) {
+	/*if (argc &lt; 1) {
 		usage();
 		exit(1);
-	}
-
-	passkey = strdup(argv[0]);
+	}*/
 
 	if (!agent_path)
 		agent_path = strdup(default_path);
@@ -365,12 +444,25 @@ int main(int argc, char *argv[])
 	}
 
 	if (!device_path)
-		device_path = get_device(device_id);
+		device_path = get_device(conn);
 
-	if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
-		dbus_connection_unref(conn);
-		exit(1);
-	}
+
+	//if (argc &gt;= 1){
+		devaddr = strdup(argv[0]);
+		printf("Pairing to %s\n",devaddr);
+		if (pair_device(conn, device_path, agent_path, capabilities) &lt; 0){
+				dbus_connection_unref(conn);
+				printf("Pairing failed\n");
+				exit(1);
+		}
+	//}
+	//else {
+		if (register_agent(conn, device_path, agent_path, capabilities) &lt; 0) {
+			dbus_connection_unref(conn);
+			exit(1);
+		}
+
+	//}
 
 	if (!dbus_connection_add_filter(conn, agent_filter, NULL, NULL))
 		fprintf(stderr, "Can't add signal filter");
@@ -395,11 +487,9 @@ int main(int argc, char *argv[])
 	if (!__io_terminated)
 		unregister_agent(conn, device_path, agent_path);
 
-	free(device_path);
+	free(devaddr);
 	free(agent_path);
 
-	free(passkey);
-
 	dbus_connection_unref(conn);
 
 	return 0;
-- 
1.5.6.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081128171435</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-11-28 17:14:35-0400</timestampReceived><subject>Re: [PATCH] Move PIN codes to an external database</subject><body>

On Fri, Nov 28, 2008 at 04:50:46PM +0100, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; This is a patch to move the PIN quirks to an external tab-separated text
&gt; &gt; file. The parser is very simple and naive, but does the job for all the
&gt; &gt; devices I tested.
&gt; &gt; 
&gt; &gt; string_to_type() should probably be using an array instead of the
&gt; &gt; current code, and I've managed to move the current quirks to the
&gt; &gt; external file without a problem.
&gt; &gt; 
&gt; &gt; When this gets in, I'll work on moving all the quirks filed as bugs
&gt; &gt; against the wizard[1] into bluez-gnome proper.
&gt; 
&gt; should we not better store this in GConf?

Hopefully some day Tom will port his kde4 stuff to BlueZ-4, then it will be
nice if we have one global database, not one per project.
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out." 

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128181308</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-11-28 18:13:08-0400</timestampReceived><subject>Re: [RFC/PATCH] sbc: new filtering function for 8 band fixed point</subject><body>

Jaska Uimonen wrote:
&gt; Hi,
&gt;
&gt; I did the git clone this morning and made the patch on top of that.
&gt;
&gt; Johan already came to tell me that I have whitespace instead 
&gt; of tabs in the changed parts. Sorry about that, I'll fix it. 
&gt; He said it will take 1 minutes to fix that but it was 
&gt; at least 1/2 hour with emacs :)
&gt;
&gt; br,
&gt; Jaska
&gt;
&gt;   

M-x tabify ?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081128224920</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-28 22:49:20-0400</timestampReceived><subject>Sony BD Remote (different approach)</subject><body>

is there a distribution (fedora, ubuntu,...) where this remote works 
(out of the box)?
if there is then i can build a machine with that on it and study what is 
going on in an effort to understand why it won't work for me on my 
current setup (gentoo, with bluez from git, and lirc)

thanks in advance
--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081129173205</emailId><senderName>Jelle de Jong</senderName><senderEmail>jelledejong@powercraft.nl</senderEmail><timestampReceived>2008-11-29 17:32:05-0400</timestampReceived><subject>Re: [PATCH] More PIN quirks</subject><body>

Bastien Nocera wrote:
&gt; This builds on top of the move to a PIN database.
&gt; 
&gt; This fixes all but one bug filed against the wizard in the GNOME
&gt; bugzilla.
&gt; 
&gt; I hope it shows that the PIN database is workable.
&gt; 
&gt; Cheers
&gt; 

Thank you Bastien for your hard work!

I have a few questions about these kind of patches, would it not be
easer to maintainable and more usefull to add this kind of information
separate from gnome related packages, and move them to a desktop
independent configuration?

Of course there is nothing wrong with using gnome bugreports or using
gnome applications with the data. However I have seen a lot of patches
that apply to the gnome wizard application and the commandline tools or
kde tools do not use this information, but it would really like the same
functionality in the command line tools so it does work platform
independent.

I know there is not much priority on fixing a commandline tool but, it
can be smart to move device specific info into a general system that all
user frontend systems can use. This will make it a lot easer of other
developers to create new frontends that do not need to reverse engineer
the gnome apps and create duplicated hard to maintain code....

Does this make any sense? Or is there just no time or do we not care
about other users then gnome?

Best regards,

Jelle
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130084923</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 08:49:23-0400</timestampReceived><subject>Re: Bluetooth and "IRQ 19 and nobody cared" on a HP 8510w with</subject><body>

Hi Tyson,

&gt; I've been getting these "irq 19: nobody cared (try booting with "irqpoll" 
&gt; option)" messages on my HP 8510w.  Recently I googled it, which lead me to the 
&gt; following discussion from another fellow with the same problem on the LKML
&gt; 
&gt; http://lkml.org/lkml/2008/6/24/357
&gt; 
&gt; In this discussion it was mentioned that pressing the radio kill switch 
&gt; stopped this message from appearing, which implied it might be iwl4965.
&gt; 
&gt; I had already tried blacklisting the iwl4965 module (adding it to 
&gt; /etc/modprobe.d/blacklist) with no success.  But it got me thinking radio, so 
&gt; I tried blacklisting hci_usb and there were no more "irq 19: nobody cared" 
&gt; messages.  Loading hci_usb subsequently resulted in a message within 10min.
&gt; 
&gt; I tried this another three times to verify it (reboot, wait 30min with no 
&gt; messages, load hci_usb, and a message appears within 10min).  Hopefully David 
&gt; will be able to verify these results also apply to his 8510w as well.
&gt; 
&gt; I've attached the output of "lsusb -v".  Is there any other information that 
&gt; would help, or something I can do (kernel log messages are as was given by 
&gt; David in the original LKML list, but I could attach another if you wish)?

start using the btusb driver instead of hci_usb. And even while you
think this might be caused by Bluetooth, you should report it to the USB
guys since the USB host controller is responsible for that interrupt.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130085313</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 08:53:13-0400</timestampReceived><subject>Re: [PATCH 4/5] drivers/bluetooth: change simple_strtol to</subject><body>

Hi Julia,

&gt; From: Julia Lawall &lt;julia@diku.dk&gt;
&gt; 
&gt; Since size, addr, fcs, and tmp are unsigned, it would seem better to use
&gt; simple_strtoul that simple_strtol.
&gt; 
&gt; A simplified version of the semantic patch that makes this change is as
&gt; follows: (http://www.emn.fr/x-info/coccinelle/)

patch has been applied to my tree. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130090401</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 09:04:01-0400</timestampReceived><subject>Re: patch: Respect HCI_UART_DEBUG config in hci_ll.c</subject><body>

Hi Nick,

&gt; Author: Nick Pelly &lt;npelly@google.com&gt;
&gt; Date:   Mon Apr 21 12:18:51 2008 -0700
&gt; 
&gt;     bluetooth: Respect HCI_UART_DEBUG config in hci_ll.c
&gt; 
&gt;     Following the pattern from hci_*.c, turn off BT_DBG messages unless
&gt;     they have been requested via HCI_UART_DEBUG
&gt; 
&gt;     Signed-off-by: Brian Swetland &lt;swetland@google.com&gt;

you have to fix your mail client to _NOT_ send mutli-part crap. Please
follow the proper guidelines for sending kernel patches. Otherwise you
make it complicated for me to apply patches. Especially these no
brainers.

So who wrote this patch? You are Brian. If you wrote the patch like
author indicated, then Brian should do an Acked-by unless he actually
sends the patch to me. In this case you send the patch so it should look
like this:

Signed-off-by: Nick Pelly &lt;npelly@google.com&gt;
Acked-by: Brian Swetland &lt;swetland@google.com&gt;

If you wrote the patch and Brian sent it to me, then he has to do
Signed-off since he is part of the chain. It is all documented in the
kernel source code :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130103339</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 10:33:39-0400</timestampReceived><subject>Re: Dell Wireless 365 requires reset quirk</subject><body>

Hi Tim,

&gt; &gt;&gt; &gt;From 931ccb629d739aa563347a4e866bc26107e6b545 Mon Sep 17 00:00:00 2001
&gt; &gt;&gt; From: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; &gt;&gt; Date: Tue, 4 Nov 2008 09:18:06 -0700
&gt; &gt;&gt; Subject: [PATCH] Dell Wireless 365 needs BTUSB_RESET quirk.
&gt; &gt;&gt;  OriginalAuthor: Mario Limonciello &lt;mario_limonciello@dell.com&gt;
&gt; &gt;&gt;
&gt; &gt;&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; &gt;&gt; Cc: stable@kernel.org
&gt; &gt;&gt; ---
&gt; &gt;&gt;  drivers/bluetooth/btusb.c |    3 +++
&gt; &gt;&gt;  1 files changed, 3 insertions(+), 0 deletions(-)
&gt; &gt;&gt;
&gt; &gt;&gt; diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
&gt; &gt;&gt; index af472e0..051b758 100644
&gt; &gt;&gt; --- a/drivers/bluetooth/btusb.c
&gt; &gt;&gt; +++ b/drivers/bluetooth/btusb.c
&gt; &gt;&gt; @@ -125,6 +125,9 @@ static struct usb_device_id blacklist_table[] = {
&gt; &gt;&gt;  	/* Dell laptop with Broadcom chip */
&gt; &gt;&gt;  	{ USB_DEVICE(0x413c, 0x8126), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt; &gt;&gt;  
&gt; &gt;&gt; +	/* Dell Wireless 365 */
&gt; &gt;&gt; +	{ USB_DEVICE(0x413c, 0x8160), .driver_info = BTUSB_RESET },
&gt; &gt;&gt; +
&gt; &gt;&gt;  	/* Dell Wireless 370 */
&gt; &gt;&gt;  	{ USB_DEVICE(0x413c, 0x8156), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
&gt; &gt;&gt;  
&gt; &gt; 
&gt; &gt; I shall assume that this patch was authored by Mario.  This should have
&gt; &gt; been communicated by adding his From: line right at the top of the
&gt; &gt; changelog.  Mario's signed-off-by: is absent, but that is tolerable
&gt; &gt; because we have yours.
&gt; &gt; 
&gt; &gt; The (absent) changelog fails to explain what effect this patch has. 
&gt; &gt; _why_ does this driver need this quirk?
&gt; &gt; 
&gt; &gt; As it stands, there is insufficient information here for making
&gt; &gt; 2.6.28-vs-2.6.29 decisions, let alone 2.6.27.x, 2.6.26.x, etc.
&gt; &gt; 
&gt; 
&gt; Is this better (aside from being an attachment) ?

the patch will no longer be needed. I am making HCI Reset the default
and only letting the old drivers quirk a NO_RESET.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130103538</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 10:35:38-0400</timestampReceived><subject>Re: Creation of AF_BLUETOOTH socket with HCI_DEV__REG</subject><body>

Hi,

&gt; I have an application that does a hci_open_dev, and what I am trying to understand \
&gt; from the stack code is why can't [and further on how can..] my application do the \
&gt; hci_open_dev [basically the socket(AF_BLUETOOTH)], without the hcid service being \
&gt; On. 
&gt; note: I have to do hciattach because I need to use UART.

it still makes no sense. And you don't need hcid to make Bluetooth work.
However you will be fairly limited to what you can do when it you run a
system without hcid or bluetoothd for that matter.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081130104608</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-11-30 10:46:08-0400</timestampReceived><subject>Re: [PATCH] Allow SCO with Asus WL-BTD202 dongle in btusb</subject><body>

Hi Guillaume,

&gt; &gt; &gt; This an other patch that allows my dongle to be configured correctly for
&gt; &gt; &gt; the voice/sco profile.
&gt; &gt; &gt; 
&gt; &gt; &gt; I already sent one for hci_usb some time ago, so it may sound familiar,
&gt; &gt; &gt; but it probably didn't have correct style...
&gt; &gt; 
&gt; &gt; you have to prove this one. Boot a kernel without the patch and call
&gt; &gt; hciconfig hci0 up and then show me the output of hciconfig -a.
&gt; 
&gt; The file "hciconfig-...-before" was the output without the patch.
&gt; The file "hciconfig-...-after" is the output with the patch.
&gt; The last file contains some info from "/proc/bus/usb/devices".
&gt; 
&gt; Is it just proof that my dongle's firmware is out-of-date ?

I applied a modified patch to my tree since it didn't apply clean
anymore. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130170204</emailId><senderName>Simon Kenyon</senderName><senderEmail>simon@koala.ie</senderEmail><timestampReceived>2008-11-30 17:02:04-0400</timestampReceived><subject>Re: Sony BD Remote (the saga continues)</subject><body>

Jelle de Jong wrote:
&gt; There are a number of things not working yet. The connecting/pairing
&gt; system should make the input device, at leased that is what I think. The
&gt; X stuff is so that the input system can understand what it is saying,
&gt; this is some sort of hid driver for the device. This is also not yet
&gt; working. Then there is the thing that some of the developers like to
&gt; merge everything in gui application so that is can only be setup with
&gt; this gui or by manually creating dbus command and sending them ....
&gt;
&gt; I am also not a bluez developer and I tolled people I would like to
&gt; understand how the heck somebody can implement proper support for these
&gt; devices (I got a bag full of non working bluetooth devices), nobody seem
&gt; to make the time to explain in detail how it works ... and how to get
&gt; add code to get it working.
&gt;
&gt; So my strategy is just to wait until somebody cares to fix it... Not
&gt; very fast or effective but nothing else I can do. I spent far to much
&gt; time telling people it does not work.
&gt;   
then why does Bastien keep repeating that it is working?
has anybody else got it to work?

i'm not going to give up.
tomorrow i will put debug statements everywhere to see what is going on.
this has become a personnel challenge to get it working

--
simon
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081130183655</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-11-30 18:36:55-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 12125] New: bt stops working after</subject><body>


(switched to email.  Please respond via emailed reply-to-all, not via the
bugzilla web interface).

On Sun, 30 Nov 2008 08:08:42 -0800 (PST) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=12125
&gt; 
&gt;            Summary: bt stops working after suspend/resume
&gt;            Product: Drivers
&gt;            Version: 2.5
&gt;      KernelVersion: 2.6.28-rc6-wl-dirty
&gt;           Platform: All
&gt;         OS/Version: Linux
&gt;               Tree: Mainline
&gt;             Status: NEW
&gt;           Severity: normal
&gt;           Priority: P1
&gt;          Component: Bluetooth
&gt;         AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt;         ReportedBy: johannes@sipsolutions.net
&gt; 
&gt; 
&gt; Latest working kernel version: unknown
&gt; Earliest failing kernel version: unknown
&gt; Distribution: debian/unstable
&gt; Hardware Environment: powerbook
&gt; Software Environment: btusb
&gt; Problem Description: bluetooth stops working after suspend/resume
&gt; 
&gt; Steps to reproduce:
&gt; 
&gt; suspend laptop, resume:
&gt; 
&gt; # hcitool scan
&gt; Device is not available: No such device
&gt; 
&gt; # sdptool browse
&gt; Inquiring ...
&gt; Inquiry failed
&gt; 
&gt; 
&gt; I'm fairly sure this used to work (most of the time at least!) with hci-usb.
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021011224</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-21 01:12:24-0400</timestampReceived><subject>[PATCH] Add support for HID-&gt;HCI switching on Dell BT365</subject><body>

[Attachment #2 (multipart/mixed)]


Hello:

This patch adds the VID/PID for this adapter which uses the same
methodology for switching modes as the BT370 and BT410.

Regards
--=20
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["dell_bt_365.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-4.12/tools/hid2hci.c bluez-4.12.new/t=
ools/hid2hci.c
--- bluez-4.12/tools/hid2hci.c	2008-08-05 16:14:56.000000000 -0500
+++ bluez-4.12.new/tools/hid2hci.c	2008-10-20 20:10:40.000000000 -0500
@@ -260,6 +260,7 @@
 	{ HCI, 0x046d, 0xc70e, switch_logitech },	/* Logitech diNovo keyboard *=
/
 	{ HCI, 0x046d, 0xc713, switch_logitech },	/* Logitech diNovo Edge */
 	{ HCI, 0x046d, 0xc714, switch_logitech },	/* Logitech diNovo Edge */
+	{ HCI, 0x413c, 0x8162, switch_dell     },	/* Dell Wireless 365 */
 	{ HCI, 0x413c, 0x8158, switch_dell     },	/* Dell Wireless 370 */
 	{ HCI, 0x413c, 0x8154, switch_dell     },	/* Dell Wireless 410 */
 	{ -1 }

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081017145217</emailId><senderName>Alok</senderName><senderEmail>alokbarsode@gmail.com</senderEmail><timestampReceived>2008-10-17 14:52:17-0400</timestampReceived><subject>Questions regarding NetLink APIs.</subject><body>

Marcel, 

I had a few queries regarding the netlink APIs. I have been referring to
net/wireless/nl80211.c for reference.

1. Would the ioctls on raw sock(BTPROTO_HCI), be converted into netlink
commands?
eg HCIGETDEVLIST (NLBLUETOOTH_CMD_GET_DEVLIST),
HCIGETDEVINFO    (NLBLUETOOTH_CMD_GET_DEV_INFO),
HCIDEVUP         (NLBLUETOOTH_CMD_DEVUP) .. etc 


2. Would the netlink attributes consist of HCI Ioctl requests
structures ? or individual structure members?
eg:

[NLBLUETOOTH_ATTR_DEV_INFO] = {.len = sizeof(struct hci_dev_info)} 


3. Would it be a separate kernel module? 

Thanks, 
Alok.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015151527</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-15 15:15:27-0400</timestampReceived><subject>[PATCHes] Add sixpair</subject><body>

Heya,

Here are the patches to get sixpair support built into BlueZ. It uses
libusb-1.0 as well as a yet to be merged libusb-1.0 patch to allow
re-attaching a driver to a device.

Problems left to solve:
- sixaxis enabler code (as seen in enable_sixaxis() in compat/hidd.c)
seems to have disappeared from the input plugin. Is that done in the
kernel now, or was it just removed?
- After "cable pairing" the device, I need to unplug/replug the adapter,
or restart bluetoothd. Can anyone think of a better way of getting the
list of devices updated?
- Some minor niggles in the code itself (use D-Bus instead of parsing
command-line tools)
- udev rule(s) and parsing only the selected device would be necessary
if not required

Cheers

["0001-Add-sixpair-tool.patch" (0001-Add-sixpair-tool.patch)]

From c06f9fa3f7d088c173403d602209d7a18e7b00e5 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 11 Oct 2008 00:55:02 +0100
Subject: [PATCH] Add sixpair tool

Sixpair is an unfinished helper to automatically pair a
plugged in Playstation 3 Sixaxis Bluetooth joypad.
---
 input/sixpair.c |  393 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 393 insertions(+), 0 deletions(-)
 create mode 100644 input/sixpair.c

diff --git a/input/sixpair.c b/input/sixpair.c
new file mode 100644
index 0000000..818d283
--- /dev/null
+++ b/input/sixpair.c
@@ -0,0 +1,393 @@
+/* To compile
+ * gcc -g -Wall -I../src -I../lib/ -I../include -DSTORAGEDIR=\"/var/lib/bluetooth\" \
-o sixpair sixpair.c ../src/storage.c ../common/libhelper.a -I../common `pkg-config \
--libs --cflags glib-2.0 libusb` -lbluetooth + */
+
+#include &lt;unistd.h&gt;
+#include &lt;stdio.h&gt;
+#include &lt;inttypes.h&gt;
+
+#include &lt;sdp.h&gt;
+#include &lt;bluetooth/bluetooth.h&gt;
+#include &lt;bluetooth/hidp.h&gt;
+#include &lt;glib.h&gt;
+#include &lt;usb.h&gt;
+
+#include "storage.h"
+
+/* Vendor and product ID for the Sixaxis PS3 controller */
+#define VENDOR 0x054c
+#define PRODUCT 0x0268
+
+#define USB_DIR_IN 0x80
+#define USB_DIR_OUT 0
+
+gboolean option_get_master = TRUE;
+char *option_master= NULL;
+gboolean option_store_info = TRUE;
+const char *option_device = NULL;
+gboolean option_quiet = FALSE;
+
+const GOptionEntry options[] = {
+	{ "get-master", '\0', 0, G_OPTION_ARG_NONE, &amp;option_get_master, "Get currently set \
master address", NULL }, +	{ "set-master", '\0', 0, G_OPTION_ARG_STRING, \
&amp;option_master, "Set master address (\"auto\" for automatic)", NULL }, +	{ \
"store-info", '\0', 0, G_OPTION_ARG_NONE, &amp;option_store_info, "Store the HID info \
into the input database", NULL }, +	{ "device", '\0', 0, G_OPTION_ARG_STRING, \
&amp;option_device, "Only handle one device (default, all supported", NULL }, +	{ \
"quiet", 'q', 0, G_OPTION_ARG_NONE, &amp;option_quiet, "Quieten the output", NULL }, +	{ \
NULL } +};
+
+static gboolean
+show_master (usb_dev_handle *devh, int itfnum)
+{
+	unsigned char msg[8];
+	int res;
+
+	res = usb_control_msg (devh,
+			       USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
+			       0x01, 0x03f5, itfnum,
+			       (void*) msg, sizeof(msg),
+			       5000);
+
+	if (res &lt; 0) {
+		g_warning ("Getting the master Bluetooth address failed");
+		return FALSE;
+	}
+	g_print ("Current Bluetooth master: %02x:%02x:%02x:%02x:%02x:%02x\n",
+		 msg[2], msg[3], msg[4], msg[5], msg[6], msg[7]);
+
+	return TRUE;
+}
+
+static char *
+get_bdaddr (usb_dev_handle *devh, int itfnum)
+{
+	unsigned char msg[17];
+	char *address;
+	int res;
+
+	res = usb_control_msg (devh,
+			       USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
+			       0x01, 0x03f2, itfnum,
+			       (void*) msg, sizeof(msg),
+			       5000);
+
+	if (res &lt; 0) {
+		g_warning ("Getting the device Bluetooth address failed");
+		return NULL;
+	}
+
+	address = g_strdup_printf ("%02x:%02x:%02x:%02x:%02x:%02x",
+				   msg[4], msg[5], msg[6], msg[7], msg[8], msg[9]);
+
+	if (option_quiet == FALSE) {
+		g_print ("Device Bluetooth address: %s\n", address);
+	}
+
+	return address;
+}
+
+static gboolean
+set_master_bdaddr (usb_dev_handle *devh, int itfnum, char *host)
+{
+	unsigned char msg[8];
+	int mac[6];
+	int res;
+
+	if (sscanf(host, "%x:%x:%x:%x:%x:%x",
+		   &amp;mac[0],&amp;mac[1],&amp;mac[2],&amp;mac[3],&amp;mac[4],&amp;mac[5]) != 6) {
+		return FALSE;
+	}
+
+	msg[0] = 0x01;
+	msg[1] = 0x00;
+	msg[2] = mac[0];
+	msg[3] = mac[1];
+	msg[4] = mac[2];
+	msg[5] = mac[3];
+	msg[6] = mac[4];
+	msg[7] = mac[5];
+
+	res = usb_control_msg (devh,
+			       USB_DIR_OUT | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
+			       0x09, 0x03f5, itfnum,
+			       (void*) msg, sizeof(msg),
+			       5000);
+
+	if (res &lt; 0) {
+		g_warning ("Setting the master Bluetooth address failed");
+		return FALSE;
+	}
+
+	return TRUE;
+
+}
+
+static char *
+get_host_bdaddr (void)
+{
+	FILE *f;
+	int mac[6];
+
+	//FIXME use dbus to get the default adapter
+
+	f = popen("hcitool dev", "r");
+
+	if (f == NULL) {
+		//FIXME
+		return NULL;
+	}
+	if (fscanf(f, "%*s\n%*s %x:%x:%x:%x:%x:%x",
+		   &amp;mac[0],&amp;mac[1],&amp;mac[2],&amp;mac[3],&amp;mac[4],&amp;mac[5]) != 6) {
+		//FIXME
+		return NULL;
+	}
+
+	return g_strdup_printf ("%x:%x:%x:%x:%x:%x", mac[0], mac[1], mac[2], mac[3], \
mac[4], mac[5]); +}
+
+static int
+get_record_info (struct usb_interface_descriptor *alt, unsigned int *_len, unsigned \
int *_country, uint16_t *_version) +{
+	unsigned char *buf;
+	unsigned int size, len, country;
+	uint16_t version;
+	int l;
+
+	len = 0;
+	country = 0;
+	version = 0;
+
+	if (!alt-&gt;extralen)
+		return 0;
+
+	size = alt-&gt;extralen;
+	buf = alt-&gt;extra;
+	while (size &gt;= 2 * sizeof(u_int8_t)) {
+		if (buf[0] &lt; 2 || buf[1] != USB_DT_HID)
+			continue;
+
+		//FIXME that should be "21"
+		//g_message ("country: %u", buf[4]);
+		//country = buf[4];
+		//country = 0x21;
+		country = 0;
+		version = (buf[3] &lt;&lt; 8) + buf[2];
+
+		for (l = 0; l &lt; buf[5]; l++) {
+			/* we are just interested in report descriptors*/
+			if (buf[6+3*l] != USB_DT_REPORT)
+				continue;
+			len = buf[7+3*l] | (buf[8+3*l] &lt;&lt; 8);
+		}
+		size -= buf[0];
+		buf += buf[0];
+	}
+
+	if (len == 0)
+		return -1;
+	*_len = len;
+	*_country = country;
+	*_version = version;
+
+	return 0;
+}
+
+static void
+fill_req_from_usb (struct usb_device *dev, struct hidp_connadd_req *req, void *data, \
unsigned int len, unsigned int country, uint16_t version) +{
+	req-&gt;vendor = dev-&gt;descriptor.idVendor;
+	req-&gt;product = dev-&gt;descriptor.idProduct;
+	req-&gt;version = version;
+	/* req-&gt;subclass already set */
+	req-&gt;country = country;
+	/* Default value */
+	req-&gt;parser = 0x0100;
+	/* What are we expecting here? No idea, but we don't seem to need it */
+	req-&gt;flags = 0;
+
+	req-&gt;rd_size = len;
+	req-&gt;rd_data = data;
+}
+
+static void
+store_info (const char *host, const char *device, struct hidp_connadd_req *req)
+{
+	bdaddr_t dest, src;
+
+	if (str2ba (host, &amp;src) &lt; 0) {
+		//FIXME
+		return;
+	}
+	if (str2ba (device, &amp;dest) &lt; 0) {
+		//FIXME
+		return;
+	}
+
+#if 0
+	if (store_device_info (&amp;src, &amp;dest, req) &lt; 0)
+#endif
+		g_message ("store_device_info failed");
+}
+
+static int
+handle_device (struct usb_device *dev, struct usb_config_descriptor *cfg, int \
itfnum, struct usb_interface_descriptor *alt) +{
+	usb_dev_handle *devh;
+	int res, retval;
+
+	retval = -1;
+
+	devh = usb_open (dev);
+	if (devh == NULL) {
+		g_warning ("Can't open device");
+		goto bail;
+	}
+	usb_detach_kernel_driver_np (devh, itfnum);
+
+	res = usb_claim_interface (devh, itfnum);
+	if (res &lt; 0) {
+		g_warning ("Can't claim interface %d", itfnum);
+		goto bail;
+	}
+
+	if (option_get_master != FALSE) {
+		if (show_master (devh, itfnum) == FALSE)
+			goto bail;
+		retval = 0;
+	}
+
+	if (option_master != NULL) {
+		if (strcmp (option_master, "auto") == 0) {
+			g_free (option_master);
+			option_master = get_host_bdaddr ();
+			if (option_master == NULL) {
+				g_warning ("Can't get bdaddr from default device");
+				retval = -1;
+				goto bail;
+			}
+		}
+	} else {
+		option_master = get_host_bdaddr ();
+		if (option_master == NULL) {
+			g_warning ("Can't get bdaddr from default device");
+			retval = -1;
+			goto bail;
+		}
+	}
+
+	if (option_store_info != FALSE) {
+		unsigned char data[8192];
+		struct hidp_connadd_req req;
+		unsigned int len, country;
+		int n;
+		uint16_t version;
+		char *device;
+
+		device = get_bdaddr (devh, itfnum);
+		if (device == NULL) {
+			retval = -1;
+			goto bail;
+		}
+
+		if (get_record_info (alt, &amp;len, &amp;country, &amp;version) &lt; 0) {
+			g_warning ("Can't get record info");
+			retval = -1;
+			goto bail;
+		}
+
+		if ((n = usb_control_msg(devh,
+				    USB_ENDPOINT_IN | USB_TYPE_STANDARD | USB_RECIP_INTERFACE,
+				    USB_REQ_GET_DESCRIPTOR,
+				    (USB_DT_REPORT &lt;&lt; 8),
+				    itfnum, (void *) &amp;data, len, 5000)) &lt; 0) {
+			g_warning ("Can't get report descriptor (length: %d, interface: %d)", len, \
itfnum); +			retval = -1;
+			goto bail;
+		}
+
+		req.subclass = alt-&gt;bInterfaceSubClass;
+		fill_req_from_usb (dev, &amp;req, data, len, country, version);
+
+		store_info (option_master, device, &amp;req);
+
+		if (set_master_bdaddr (devh, itfnum, option_master) == FALSE) {
+			retval = -1;
+			goto bail;
+		}
+
+		//FIXME finally, set device as trusted
+	}
+
+bail:
+	if (devh != NULL)
+		usb_close (devh);
+
+	return retval;
+}
+
+int main (int argc, char **argv)
+{
+	GOptionContext *context;
+	GError *error = NULL;
+	struct usb_bus *busses, *bus;
+
+	context = g_option_context_new ("- Manage Sixaxis PS3 controllers");
+	g_option_context_add_main_entries (context, options, NULL);
+	if (g_option_context_parse (context, &amp;argc, &amp;argv, &amp;error) == FALSE) {
+		g_warning ("Couldn't parse command-line options: %s", error-&gt;message);
+		return 1;
+	}
+
+	/* Check that the passed bdaddr is correct */
+	if (option_master != NULL &amp;&amp; strcmp (option_master, "auto") != 0) {
+		//FIXME check bdaddr
+	}
+
+	/* Find device(s) */
+	usb_init ();
+	if (usb_find_busses () &lt; 0) {
+		g_warning ("usb_find_busses failed");
+		return 1;
+	}
+	if (usb_find_devices () &lt; 0) {
+		g_warning ("usb_find_devices failed");
+		return 1;
+	}
+
+	busses = usb_get_busses();
+	if (busses == NULL) {
+		g_warning ("usb_get_busses failed");
+		return 1;
+	}
+
+	for (bus = busses; bus; bus = bus-&gt;next) {
+		struct usb_device *dev;
+
+		for (dev = bus-&gt;devices; dev; dev = dev-&gt;next) {
+			struct usb_config_descriptor *cfg;
+
+			/* Here we check for the supported devices */
+			if (dev-&gt;descriptor.idVendor != VENDOR || dev-&gt;descriptor.idProduct != PRODUCT)
+				continue;
+
+			/* Look for the interface number that interests us */
+			for (cfg = dev-&gt;config; cfg &lt; dev-&gt;config + dev-&gt;descriptor.bNumConfigurations; \
++cfg) { +				int itfnum;
+
+				for (itfnum = 0; itfnum &lt; cfg-&gt;bNumInterfaces; ++itfnum) {
+					struct usb_interface *itf = &amp;cfg-&gt;interface[itfnum];
+					struct usb_interface_descriptor *alt;
+
+					for (alt = itf-&gt;altsetting; alt &lt; itf-&gt;altsetting + itf-&gt;num_altsetting; ++alt) \
{ +						if (alt-&gt;bInterfaceClass == 3) {
+							handle_device (dev, cfg, itfnum, alt);
+						}
+					}
+				}
+			}
+		}
+	}
+
+	return 0;
+}
+
-- 
1.5.5.2


["0002-Port-sixpair-to-libusb-1.0.patch" (0002-Port-sixpair-to-libusb-1.0.patch)]

From a08bf92d81cf0bd5201a5de18b313836726c2a7f Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sat, 11 Oct 2008 23:34:34 +0100
Subject: [PATCH] Port sixpair to libusb 1.0

Port sixpair to libusb-1.0, as it allows us to re-attach
the driver to the device after we're done.
---
 input/sixpair.c |  142 ++++++++++++++++++++++++++++---------------------------
 1 files changed, 72 insertions(+), 70 deletions(-)

diff --git a/input/sixpair.c b/input/sixpair.c
index 818d283..07fa679 100644
--- a/input/sixpair.c
+++ b/input/sixpair.c
@@ -1,5 +1,5 @@
 /* To compile
- * gcc -g -Wall -I../src -I../lib/ -I../include -DSTORAGEDIR=\"/var/lib/bluetooth\" \
-o sixpair sixpair.c ../src/storage.c ../common/libhelper.a -I../common `pkg-config \
--libs --cflags glib-2.0 libusb` -lbluetooth + * gcc -g -Wall -I../src -I../lib/ \
-I../include -DSTORAGEDIR=\"/var/lib/bluetooth\" -o sixpair sixpair.c \
../src/storage.c ../common/libhelper.a -I../common `pkg-config --libs --cflags \
                glib-2.0 libusb-1.0` -lbluetooth
  */
 
 #include &lt;unistd.h&gt;
@@ -10,7 +10,7 @@
 #include &lt;bluetooth/bluetooth.h&gt;
 #include &lt;bluetooth/hidp.h&gt;
 #include &lt;glib.h&gt;
-#include &lt;usb.h&gt;
+#include &lt;libusb.h&gt;
 
 #include "storage.h"
 
@@ -18,9 +18,6 @@
 #define VENDOR 0x054c
 #define PRODUCT 0x0268
 
-#define USB_DIR_IN 0x80
-#define USB_DIR_OUT 0
-
 gboolean option_get_master = TRUE;
 char *option_master= NULL;
 gboolean option_store_info = TRUE;
@@ -37,16 +34,16 @@ const GOptionEntry options[] = {
 };
 
 static gboolean
-show_master (usb_dev_handle *devh, int itfnum)
+show_master (libusb_device_handle *devh, int itfnum)
 {
 	unsigned char msg[8];
 	int res;
 
-	res = usb_control_msg (devh,
-			       USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
-			       0x01, 0x03f5, itfnum,
-			       (void*) msg, sizeof(msg),
-			       5000);
+	res = libusb_control_transfer (devh,
+				       LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | \
LIBUSB_RECIPIENT_INTERFACE, +				       0x01, 0x03f5, itfnum,
+				       (void*) msg, sizeof(msg),
+				       5000);
 
 	if (res &lt; 0) {
 		g_warning ("Getting the master Bluetooth address failed");
@@ -59,17 +56,17 @@ show_master (usb_dev_handle *devh, int itfnum)
 }
 
 static char *
-get_bdaddr (usb_dev_handle *devh, int itfnum)
+get_bdaddr (libusb_device_handle *devh, int itfnum)
 {
 	unsigned char msg[17];
 	char *address;
 	int res;
 
-	res = usb_control_msg (devh,
-			       USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
-			       0x01, 0x03f2, itfnum,
-			       (void*) msg, sizeof(msg),
-			       5000);
+	res = libusb_control_transfer (devh,
+				       LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | \
LIBUSB_RECIPIENT_INTERFACE, +				       0x01, 0x03f2, itfnum,
+				       (void*) msg, sizeof(msg),
+				       5000);
 
 	if (res &lt; 0) {
 		g_warning ("Getting the device Bluetooth address failed");
@@ -87,7 +84,7 @@ get_bdaddr (usb_dev_handle *devh, int itfnum)
 }
 
 static gboolean
-set_master_bdaddr (usb_dev_handle *devh, int itfnum, char *host)
+set_master_bdaddr (libusb_device_handle *devh, int itfnum, char *host)
 {
 	unsigned char msg[8];
 	int mac[6];
@@ -107,11 +104,11 @@ set_master_bdaddr (usb_dev_handle *devh, int itfnum, char \
*host)  msg[6] = mac[4];
 	msg[7] = mac[5];
 
-	res = usb_control_msg (devh,
-			       USB_DIR_OUT | USB_TYPE_CLASS | USB_RECIP_INTERFACE,
-			       0x09, 0x03f5, itfnum,
-			       (void*) msg, sizeof(msg),
-			       5000);
+	res = libusb_control_transfer (devh,
+				       LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | \
LIBUSB_RECIPIENT_INTERFACE, +				       0x09, 0x03f5, itfnum,
+				       (void*) msg, sizeof(msg),
+				       5000);
 
 	if (res &lt; 0) {
 		g_warning ("Setting the master Bluetooth address failed");
@@ -119,7 +116,6 @@ set_master_bdaddr (usb_dev_handle *devh, int itfnum, char *host)
 	}
 
 	return TRUE;
-
 }
 
 static char *
@@ -146,8 +142,9 @@ get_host_bdaddr (void)
 }
 
 static int
-get_record_info (struct usb_interface_descriptor *alt, unsigned int *_len, unsigned \
int *_country, uint16_t *_version) +get_record_info (const struct \
libusb_interface_descriptor *alt, unsigned int *_len, unsigned int *_country, \
uint16_t *_version)  {
+#if 0
 	unsigned char *buf;
 	unsigned int size, len, country;
 	uint16_t version;
@@ -188,13 +185,14 @@ get_record_info (struct usb_interface_descriptor *alt, unsigned \
                int *_len, unsig
 	*_len = len;
 	*_country = country;
 	*_version = version;
-
+#endif
 	return 0;
 }
 
 static void
-fill_req_from_usb (struct usb_device *dev, struct hidp_connadd_req *req, void *data, \
unsigned int len, unsigned int country, uint16_t version) +fill_req_from_usb \
(libusb_device *dev, struct hidp_connadd_req *req, void *data, unsigned int len, \
unsigned int country, uint16_t version)  {
+#if 0
 	req-&gt;vendor = dev-&gt;descriptor.idVendor;
 	req-&gt;product = dev-&gt;descriptor.idProduct;
 	req-&gt;version = version;
@@ -207,6 +205,7 @@ fill_req_from_usb (struct usb_device *dev, struct \
hidp_connadd_req *req, void *d  
 	req-&gt;rd_size = len;
 	req-&gt;rd_data = data;
+#endif
 }
 
 static void
@@ -230,21 +229,20 @@ store_info (const char *host, const char *device, struct \
hidp_connadd_req *req)  }
 
 static int
-handle_device (struct usb_device *dev, struct usb_config_descriptor *cfg, int \
itfnum, struct usb_interface_descriptor *alt) +handle_device (libusb_device *dev, \
struct libusb_config_descriptor *cfg, int itfnum, const struct \
libusb_interface_descriptor *alt)  {
-	usb_dev_handle *devh;
+	libusb_device_handle *devh;
 	int res, retval;
 
 	retval = -1;
 
-	devh = usb_open (dev);
-	if (devh == NULL) {
+	if (libusb_open (dev, &amp;devh) &lt; 0) {
 		g_warning ("Can't open device");
 		goto bail;
 	}
-	usb_detach_kernel_driver_np (devh, itfnum);
+	libusb_detach_kernel_driver (devh, itfnum);
 
-	res = usb_claim_interface (devh, itfnum);
+	res = libusb_claim_interface (devh, itfnum);
 	if (res &lt; 0) {
 		g_warning ("Can't claim interface %d", itfnum);
 		goto bail;
@@ -279,7 +277,6 @@ handle_device (struct usb_device *dev, struct \
usb_config_descriptor *cfg, int it  unsigned char data[8192];
 		struct hidp_connadd_req req;
 		unsigned int len, country;
-		int n;
 		uint16_t version;
 		char *device;
 
@@ -295,11 +292,11 @@ handle_device (struct usb_device *dev, struct \
usb_config_descriptor *cfg, int it  goto bail;
 		}
 
-		if ((n = usb_control_msg(devh,
-				    USB_ENDPOINT_IN | USB_TYPE_STANDARD | USB_RECIP_INTERFACE,
-				    USB_REQ_GET_DESCRIPTOR,
-				    (USB_DT_REPORT &lt;&lt; 8),
-				    itfnum, (void *) &amp;data, len, 5000)) &lt; 0) {
+		if (libusb_control_transfer(devh,
+						 LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | LIBUSB_RECIPIENT_INTERFACE,
+						 LIBUSB_REQUEST_GET_DESCRIPTOR,
+						 (LIBUSB_DT_REPORT &lt;&lt; 8),
+						 itfnum, (void *) &amp;data, len, 5000) &lt; 0) {
 			g_warning ("Can't get report descriptor (length: %d, interface: %d)", len, \
itfnum);  retval = -1;
 			goto bail;
@@ -319,8 +316,10 @@ handle_device (struct usb_device *dev, struct \
usb_config_descriptor *cfg, int it  }
 
 bail:
+	libusb_release_interface (devh, itfnum);
+	libusb_attach_kernel_driver(devh, itfnum);
 	if (devh != NULL)
-		usb_close (devh);
+		libusb_close (devh);
 
 	return retval;
 }
@@ -329,7 +328,8 @@ int main (int argc, char **argv)
 {
 	GOptionContext *context;
 	GError *error = NULL;
-	struct usb_bus *busses, *bus;
+	libusb_device **list;
+	ssize_t num_devices, i;
 
 	context = g_option_context_new ("- Manage Sixaxis PS3 controllers");
 	g_option_context_add_main_entries (context, options, NULL);
@@ -343,45 +343,47 @@ int main (int argc, char **argv)
 		//FIXME check bdaddr
 	}
 
+	libusb_init (NULL);
+
 	/* Find device(s) */
-	usb_init ();
-	if (usb_find_busses () &lt; 0) {
-		g_warning ("usb_find_busses failed");
-		return 1;
-	}
-	if (usb_find_devices () &lt; 0) {
-		g_warning ("usb_find_devices failed");
+	num_devices = libusb_get_device_list (NULL, &amp;list);
+	if (num_devices &lt; 0) {
+		g_warning ("libusb_get_device_list failed");
 		return 1;
 	}
 
-	busses = usb_get_busses();
-	if (busses == NULL) {
-		g_warning ("usb_get_busses failed");
-		return 1;
-	}
+	for (i = 0; i &lt; num_devices; i++) {
+		struct libusb_config_descriptor *cfg;
+		libusb_device *dev = list[i];
+		struct libusb_device_descriptor desc;
+		guint8 j;
+
+		if (libusb_get_device_descriptor (dev, &amp;desc) &lt; 0) {
+			g_warning ("libusb_get_device_descriptor failed");
+			continue;
+		}
 
-	for (bus = busses; bus; bus = bus-&gt;next) {
-		struct usb_device *dev;
+		/* Here we check for the supported devices */
+		if (desc.idVendor != VENDOR || desc.idProduct != PRODUCT)
+			continue;
 
-		for (dev = bus-&gt;devices; dev; dev = dev-&gt;next) {
-			struct usb_config_descriptor *cfg;
+		/* Look for the interface number that interests us */
+		for (j = 0; j &lt; desc.bNumConfigurations; j++) {
+			struct libusb_config_descriptor *config;
+			guint8 k;
 
-			/* Here we check for the supported devices */
-			if (dev-&gt;descriptor.idVendor != VENDOR || dev-&gt;descriptor.idProduct != PRODUCT)
-				continue;
+			libusb_get_config_descriptor (dev, j, &amp;config);
 
-			/* Look for the interface number that interests us */
-			for (cfg = dev-&gt;config; cfg &lt; dev-&gt;config + dev-&gt;descriptor.bNumConfigurations; \
                ++cfg) {
-				int itfnum;
+			for (k = 0; k &lt; config-&gt;bNumInterfaces; k++) {
+				const struct libusb_interface *itf = &amp;config-&gt;interface[k];
+				int l;
 
-				for (itfnum = 0; itfnum &lt; cfg-&gt;bNumInterfaces; ++itfnum) {
-					struct usb_interface *itf = &amp;cfg-&gt;interface[itfnum];
-					struct usb_interface_descriptor *alt;
+				for (l = 0; l &lt; itf-&gt;num_altsetting ; l++) {
+					struct libusb_interface_descriptor alt;
 
-					for (alt = itf-&gt;altsetting; alt &lt; itf-&gt;altsetting + itf-&gt;num_altsetting; ++alt) \
                {
-						if (alt-&gt;bInterfaceClass == 3) {
-							handle_device (dev, cfg, itfnum, alt);
-						}
+					alt = itf-&gt;altsetting[l];
+					if (alt.bInterfaceClass == 3) {
+						handle_device (dev, cfg, l, &amp;alt);
 					}
 				}
 			}
-- 
1.5.5.2


["0006-Fix-setting-the-master-address-on-the-sixaxis.patch" (0006-Fix-setting-the-master-address-on-the-sixaxis.patch)]

From 4a45364efa67dc7c5546f180bc7b67d64186d24c Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 12:50:40 +0100
Subject: [PATCH] Fix setting the master address on the sixaxis

Direction for the USB command was wrong, also disable
all the report code, so sixpair can run (minus saving device
records)
---
 input/sixpair.c |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/input/sixpair.c b/input/sixpair.c
index 07fa679..92aa5f7 100644
--- a/input/sixpair.c
+++ b/input/sixpair.c
@@ -105,7 +105,7 @@ set_master_bdaddr (libusb_device_handle *devh, int itfnum, char *host)
 	msg[7] = mac[5];
 
 	res = libusb_control_transfer (devh,
-				       LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | LIBUSB_RECIPIENT_INTERFACE,
+				       LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_CLASS | LIBUSB_RECIPIENT_INTERFACE,
 				       0x09, 0x03f5, itfnum,
 				       (void*) msg, sizeof(msg),
 				       5000);
@@ -285,7 +285,7 @@ handle_device (libusb_device *dev, struct libusb_config_descriptor *cfg, int itf
 			retval = -1;
 			goto bail;
 		}
-
+#if 0
 		if (get_record_info (alt, &amp;len, &amp;country, &amp;version) &lt; 0) {
 			g_warning ("Can't get record info");
 			retval = -1;
@@ -306,7 +306,7 @@ handle_device (libusb_device *dev, struct libusb_config_descriptor *cfg, int itf
 		fill_req_from_usb (dev, &amp;req, data, len, country, version);
 
 		store_info (option_master, device, &amp;req);
-
+#endif
 		if (set_master_bdaddr (devh, itfnum, option_master) == FALSE) {
 			retval = -1;
 			goto bail;
@@ -317,7 +317,11 @@ handle_device (libusb_device *dev, struct libusb_config_descriptor *cfg, int itf
 
 bail:
 	libusb_release_interface (devh, itfnum);
-	libusb_attach_kernel_driver(devh, itfnum);
+	res = libusb_attach_kernel_driver(devh, itfnum);
+	if (res &lt; 0) {
+		//FIXME sometimes the kernel tells us ENOENT, but succeeds anyway...
+		g_warning ("Reattaching the driver failed: %d", res);
+	}
 	if (devh != NULL)
 		libusb_close (devh);
 
-- 
1.5.5.2


["0007-Export-record_from_string-from-the-storage-functio.patch" (0007-Export-record_from_string-from-the-storage-functio.patch)]

From 44c1f80129e2279246fff4e33fe7b2e89dc200a6 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:20:22 +0100
Subject: [PATCH] Export record_from_string() from the storage functions

Export record_from_string() from the storage functions,
so it can be used to generate an sdp_record from a
static string in sixpair.c
---
 src/storage.c |    2 +-
 src/storage.h |    1 +
 2 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/src/storage.c b/src/storage.c
index d99fb33..ac1ec5b 100644
--- a/src/storage.c
+++ b/src/storage.c
@@ -771,7 +771,7 @@ int store_record(const gchar *src, const gchar *dst, sdp_record_t *rec)
 	return err;
 }
 
-static sdp_record_t *record_from_string(const gchar *str)
+sdp_record_t *record_from_string(const gchar *str)
 {
 	sdp_record_t *rec;
 	int size, i, len;
diff --git a/src/storage.h b/src/storage.h
index bff36a7..29f08d8 100644
--- a/src/storage.h
+++ b/src/storage.h
@@ -57,6 +57,7 @@ GSList *list_trusts(bdaddr_t *local, const char *service);
 int write_device_profiles(bdaddr_t *src, bdaddr_t *dst, const char *profiles);
 int delete_entry(bdaddr_t *src, const char *storage, const char *key);
 int store_record(const gchar *src, const gchar *dst, sdp_record_t *rec);
+sdp_record_t *record_from_string(const gchar *str);
 sdp_record_t *fetch_record(const gchar *src, const gchar *dst, const uint32_t handle);
 int delete_record(const gchar *src, const gchar *dst, const uint32_t handle);
 sdp_list_t *read_records(bdaddr_t *src, bdaddr_t *dst);
-- 
1.5.5.2


["0008-Store-every-record-information-for-the-sixaxis-contr.patch" (0008-Store-every-record-information-for-the-sixaxis-contr.patch)]

From c78d0dfeeda1208bad41686b51b0a815c372be95 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:25:13 +0100
Subject: [PATCH] Store every record information for the sixaxis controllers

Remove out-dated code to parse the HID input descriptor
Make sure that all the Bluetooth addresses used are upper-case
Add captured once SDP PNP record for the sixaxis controller
Store device id, profile, and trust information about the device
---
 input/sixpair.c |  137 +++++++-----------------------------------------------
 1 files changed, 18 insertions(+), 119 deletions(-)

diff --git a/input/sixpair.c b/input/sixpair.c
index 92aa5f7..3a2bd32 100644
--- a/input/sixpair.c
+++ b/input/sixpair.c
@@ -8,7 +8,7 @@
 
 #include &lt;sdp.h&gt;
 #include &lt;bluetooth/bluetooth.h&gt;
-#include &lt;bluetooth/hidp.h&gt;
+#include &lt;bluetooth/sdp_lib.h&gt;
 #include &lt;glib.h&gt;
 #include &lt;libusb.h&gt;
 
@@ -18,6 +18,8 @@
 #define VENDOR 0x054c
 #define PRODUCT 0x0268
 
+#define PS3_PNP_RECORD \
"3601920900000A000100000900013503191124090004350D3506190100090011350319001109000635090 \
9656E09006A0901000900093508350619112409010009000D350F350D35061901000900133503190011090 \
1002513576972656C65737320436F6E74726F6C6C65720901012513576972656C65737320436F6E74726F6 \
C6C6572090102251B536F6E7920436F6D707574657220456E7465727461696E6D656E74090200090100090 \
2010901000902020800090203082109020428010902052801090206359A35980822259405010904A101A10 \
2850175089501150026FF00810375019513150025013500450105091901291381027501950D0600FF81031 \
50026FF0005010901A10075089504350046FF0009300931093209358102C00501750895270901810275089 \
53009019102750895300901B102C0A1028502750895300901B102C0A10285EE750895300901B102C0A1028 \
5EF750895300901B102C0C0090207350835060904090901000902082800090209280109020A280109020B09010009020C093E8009020D280009020E2800"
 +
 gboolean option_get_master = TRUE;
 char *option_master= NULL;
 gboolean option_store_info = TRUE;
@@ -49,7 +51,7 @@ show_master (libusb_device_handle *devh, int itfnum)
 		g_warning ("Getting the master Bluetooth address failed");
 		return FALSE;
 	}
-	g_print ("Current Bluetooth master: %02x:%02x:%02x:%02x:%02x:%02x\n",
+	g_print ("Current Bluetooth master: %02X:%02X:%02X:%02X:%02X:%02X\n",
 		 msg[2], msg[3], msg[4], msg[5], msg[6], msg[7]);
 
 	return TRUE;
@@ -73,7 +75,7 @@ get_bdaddr (libusb_device_handle *devh, int itfnum)
 		return NULL;
 	}
 
-	address = g_strdup_printf ("%02x:%02x:%02x:%02x:%02x:%02x",
+	address = g_strdup_printf ("%02X:%02X:%02X:%02X:%02X:%02X",
 				   msg[4], msg[5], msg[6], msg[7], msg[8], msg[9]);
 
 	if (option_quiet == FALSE) {
@@ -90,7 +92,7 @@ set_master_bdaddr (libusb_device_handle *devh, int itfnum, char \
*host)  int mac[6];
 	int res;
 
-	if (sscanf(host, "%x:%x:%x:%x:%x:%x",
+	if (sscanf(host, "%X:%X:%X:%X:%X:%X",
 		   &amp;mac[0],&amp;mac[1],&amp;mac[2],&amp;mac[3],&amp;mac[4],&amp;mac[5]) != 6) {
 		return FALSE;
 	}
@@ -132,100 +134,13 @@ get_host_bdaddr (void)
 		//FIXME
 		return NULL;
 	}
-	if (fscanf(f, "%*s\n%*s %x:%x:%x:%x:%x:%x",
+	if (fscanf(f, "%*s\n%*s %X:%X:%X:%X:%X:%X",
 		   &amp;mac[0],&amp;mac[1],&amp;mac[2],&amp;mac[3],&amp;mac[4],&amp;mac[5]) != 6) {
 		//FIXME
 		return NULL;
 	}
 
-	return g_strdup_printf ("%x:%x:%x:%x:%x:%x", mac[0], mac[1], mac[2], mac[3], \
                mac[4], mac[5]);
-}
-
-static int
-get_record_info (const struct libusb_interface_descriptor *alt, unsigned int *_len, \
                unsigned int *_country, uint16_t *_version)
-{
-#if 0
-	unsigned char *buf;
-	unsigned int size, len, country;
-	uint16_t version;
-	int l;
-
-	len = 0;
-	country = 0;
-	version = 0;
-
-	if (!alt-&gt;extralen)
-		return 0;
-
-	size = alt-&gt;extralen;
-	buf = alt-&gt;extra;
-	while (size &gt;= 2 * sizeof(u_int8_t)) {
-		if (buf[0] &lt; 2 || buf[1] != USB_DT_HID)
-			continue;
-
-		//FIXME that should be "21"
-		//g_message ("country: %u", buf[4]);
-		//country = buf[4];
-		//country = 0x21;
-		country = 0;
-		version = (buf[3] &lt;&lt; 8) + buf[2];
-
-		for (l = 0; l &lt; buf[5]; l++) {
-			/* we are just interested in report descriptors*/
-			if (buf[6+3*l] != USB_DT_REPORT)
-				continue;
-			len = buf[7+3*l] | (buf[8+3*l] &lt;&lt; 8);
-		}
-		size -= buf[0];
-		buf += buf[0];
-	}
-
-	if (len == 0)
-		return -1;
-	*_len = len;
-	*_country = country;
-	*_version = version;
-#endif
-	return 0;
-}
-
-static void
-fill_req_from_usb (libusb_device *dev, struct hidp_connadd_req *req, void *data, \
                unsigned int len, unsigned int country, uint16_t version)
-{
-#if 0
-	req-&gt;vendor = dev-&gt;descriptor.idVendor;
-	req-&gt;product = dev-&gt;descriptor.idProduct;
-	req-&gt;version = version;
-	/* req-&gt;subclass already set */
-	req-&gt;country = country;
-	/* Default value */
-	req-&gt;parser = 0x0100;
-	/* What are we expecting here? No idea, but we don't seem to need it */
-	req-&gt;flags = 0;
-
-	req-&gt;rd_size = len;
-	req-&gt;rd_data = data;
-#endif
-}
-
-static void
-store_info (const char *host, const char *device, struct hidp_connadd_req *req)
-{
-	bdaddr_t dest, src;
-
-	if (str2ba (host, &amp;src) &lt; 0) {
-		//FIXME
-		return;
-	}
-	if (str2ba (device, &amp;dest) &lt; 0) {
-		//FIXME
-		return;
-	}
-
-#if 0
-	if (store_device_info (&amp;src, &amp;dest, req) &lt; 0)
-#endif
-		g_message ("store_device_info failed");
+	return g_strdup_printf ("%02X:%02X:%02X:%02X:%02X:%02X", mac[0], mac[1], mac[2], \
mac[3], mac[4], mac[5]);  }
 
 static int
@@ -274,45 +189,29 @@ handle_device (libusb_device *dev, struct \
libusb_config_descriptor *cfg, int itf  }
 
 	if (option_store_info != FALSE) {
-		unsigned char data[8192];
-		struct hidp_connadd_req req;
-		unsigned int len, country;
-		uint16_t version;
+		sdp_record_t *rec;
 		char *device;
+		bdaddr_t dst, src;
 
 		device = get_bdaddr (devh, itfnum);
 		if (device == NULL) {
 			retval = -1;
 			goto bail;
 		}
-#if 0
-		if (get_record_info (alt, &amp;len, &amp;country, &amp;version) &lt; 0) {
-			g_warning ("Can't get record info");
-			retval = -1;
-			goto bail;
-		}
 
-		if (libusb_control_transfer(devh,
-						 LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_CLASS | LIBUSB_RECIPIENT_INTERFACE,
-						 LIBUSB_REQUEST_GET_DESCRIPTOR,
-						 (LIBUSB_DT_REPORT &lt;&lt; 8),
-						 itfnum, (void *) &amp;data, len, 5000) &lt; 0) {
-			g_warning ("Can't get report descriptor (length: %d, interface: %d)", len, \
                itfnum);
-			retval = -1;
-			goto bail;
-		}
-
-		req.subclass = alt-&gt;bInterfaceSubClass;
-		fill_req_from_usb (dev, &amp;req, data, len, country, version);
+		rec = record_from_string (PS3_PNP_RECORD);
+		store_record(option_master, device, rec);
+		write_trust(option_master, device, "[all]", TRUE);
+		store_device_id(option_master, device, 0xffff, 0x054c, 0x0268, 0);
+		str2ba(option_master, &amp;src);
+		str2ba(device, &amp;dst);
+		write_device_profiles(&amp;src, &amp;dst, "");
+		sdp_record_free(rec);
 
-		store_info (option_master, device, &amp;req);
-#endif
 		if (set_master_bdaddr (devh, itfnum, option_master) == FALSE) {
 			retval = -1;
 			goto bail;
 		}
-
-		//FIXME finally, set device as trusted
 	}
 
 bail:
-- 
1.5.5.2


["0009-Save-name-for-the-sixaxis-controller.patch" (0009-Save-name-for-the-sixaxis-controller.patch)]

From 48e9d01b184c9ff5a353dd6502847fb249d278c1 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:28:42 +0100
Subject: [PATCH] Save name for the sixaxis controller

The name won't be there until we connect otherwise
---
 input/sixpair.c |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

diff --git a/input/sixpair.c b/input/sixpair.c
index 3a2bd32..5c58b9b 100644
--- a/input/sixpair.c
+++ b/input/sixpair.c
@@ -206,6 +206,7 @@ handle_device (libusb_device *dev, struct libusb_config_descriptor *cfg, int itf
 		str2ba(option_master, &amp;src);
 		str2ba(device, &amp;dst);
 		write_device_profiles(&amp;src, &amp;dst, "");
+		write_device_name(&amp;src, &amp;dst, "PLAYSTATION(R)3 Controller");
 		sdp_record_free(rec);
 
 		if (set_master_bdaddr (devh, itfnum, option_master) == FALSE) {
-- 
1.5.5.2


["0010-Detect-libusb-1.0-and-enable-it-by-default.patch" (0010-Detect-libusb-1.0-and-enable-it-by-default.patch)]

From c9b2d0599a6a1d30f96a0064a524a7f904faf1a0 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:47:28 +0100
Subject: [PATCH] Detect libusb 1.0 and enable it by default

Necessary for sixpair to compile
---
 acinclude.m4        |   15 +++++++++++++++
 bootstrap-configure |    1 +
 configure.ac        |    1 +
 3 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/acinclude.m4 b/acinclude.m4
index 45dd909..0a8fdbb 100644
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -156,6 +156,12 @@ AC_DEFUN([AC_PATH_USB], [
 			[Define to 1 if you need the usb_interrupt_read() function.]))
 ])
 
+AC_DEFUN([AC_PATH_USB1], [
+	PKG_CHECK_MODULES(USB1, libusb-1.0, usb1_found=yes, usb1_found=no)
+	AC_SUBST(USB_CFLAGS)
+	AC_SUBST(USB_LIBS)
+])
+
 AC_DEFUN([AC_PATH_NETLINK], [
 	PKG_CHECK_MODULES(NETLINK, libnl-1, netlink_found=yes, netlink_found=no)
 	AC_SUBST(NETLINK_CFLAGS)
@@ -238,6 +244,10 @@ AC_DEFUN([AC_ARG_BLUEZ], [
 		usb_enable=${enableval}
 	])
 
+	AC_ARG_ENABLE(usb1, AC_HELP_STRING([--enable-usb1], [enable libusb 1.0 support]), [
+		usb1_enable=${enableval}
+	])
+
 	AC_ARG_ENABLE(netlink, AC_HELP_STRING([--enable-netlink], [enable NETLINK support]), [
 		netlink_enable=${enableval}
 	])
@@ -321,6 +331,10 @@ AC_DEFUN([AC_ARG_BLUEZ], [
 		AC_DEFINE(HAVE_LIBUSB, 1, [Define to 1 if you have USB library.])
 	fi
 
+	if (test "${usb1_enable}" = "yes" &amp;&amp; test "${usb1_found}" = "yes"); then
+		AC_DEFINE(HAVE_LIBUSB1, 1, [Define to 1 if you have libusb-1.0.])
+	fi
+
 	AC_SUBST([BLUEZ_CFLAGS], ['-I$(top_builddir)/include'])
 	AC_SUBST([BLUEZ_LIBS], ['$(top_builddir)/lib/libbluetooth.la'])
 
@@ -333,6 +347,7 @@ AC_DEFUN([AC_ARG_BLUEZ], [
 	AM_CONDITIONAL(SNDFILE, test "${sndfile_enable}" = "yes" &amp;&amp; test "${sndfile_found}" = "yes")
 	AM_CONDITIONAL(NETLINK, test "${netlink_enable}" = "yes" &amp;&amp; test "${netlink_found}" = "yes")
 	AM_CONDITIONAL(USB, test "${usb_enable}" = "yes" &amp;&amp; test "${usb_found}" = "yes")
+	AM_CONDITIONAL(USB1, test "${usb1_enable}" = "yes" &amp;&amp; test "${usb1_found}" = "yes")
 	AM_CONDITIONAL(SBC, test "${alsa_enable}" = "yes" || test "${gstreamer_enable}" = "yes")
 	AM_CONDITIONAL(ALSA, test "${alsa_enable}" = "yes" &amp;&amp; test "${alsa_found}" = "yes")
 	AM_CONDITIONAL(GSTREAMER, test "${gstreamer_enable}" = "yes" &amp;&amp; test "${gstreamer_found}" = "yes")
diff --git a/bootstrap-configure b/bootstrap-configure
index 7b07fe1..3b22dd5 100755
--- a/bootstrap-configure
+++ b/bootstrap-configure
@@ -27,6 +27,7 @@ fi
 		--enable-dund \
 		--enable-test \
 		--enable-cups \
+		--enable-usb1 \
 		--disable-manpages \
 		--disable-configfiles \
 		--disable-initscripts \
diff --git a/configure.ac b/configure.ac
index 33b4583..f603223 100644
--- a/configure.ac
+++ b/configure.ac
@@ -32,6 +32,7 @@ AC_PATH_GMODULE
 AC_PATH_ALSA
 AC_PATH_GSTREAMER
 AC_PATH_USB
+AC_PATH_USB1
 AC_PATH_NETLINK
 AC_PATH_SNDFILE
 
-- 
1.5.5.2


["0011-Separate-storage-functions-into-a-library.patch" (0011-Separate-storage-functions-into-a-library.patch)]

From 8c2c57718e32d4da5c49c8df38f5a48a1c105375 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:48:51 +0100
Subject: [PATCH] Separate storage functions into a library

The separate storage functions will be used by sixpair
---
 src/Makefile.am |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/src/Makefile.am b/src/Makefile.am
index 2a353a4..d39d73d 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -13,15 +13,19 @@ statedir = $(localstatedir)/lib/bluetooth
 state_DATA =
 endif
 
+noinst_LIBRARIES = libbtd-storage.a
+libbtd_storage_a_SOURCES = storage.h storage.c
+
 sbin_PROGRAMS = bluetoothd
 
 bluetoothd_SOURCES = main.c security.c hcid.h sdpd.h \
 	sdpd-server.c sdpd-request.c sdpd-service.c sdpd-database.c \
-	plugin.h plugin.c storage.h storage.c agent.h agent.c \
+	plugin.h plugin.c agent.h agent.c \
 	error.h error.c manager.h manager.c adapter.h adapter.c \
 	device.h device.c dbus-common.c dbus-common.h dbus-hci.h dbus-hci.c
 
 bluetoothd_LDADD = $(top_builddir)/common/libhelper.a \
+	$(builddir)/libbtd-storage.a \
 	@GDBUS_LIBS@ @GMODULE_LIBS@ @GLIB_LIBS@ @DBUS_LIBS@ @BLUEZ_LIBS@
 
 if MAINTAINER_MODE
-- 
1.5.5.2


["0012-Build-sixpair-through-the-build-system.patch" (0012-Build-sixpair-through-the-build-system.patch)]

From 444bfee09d378ac4e5fdd8c05b8bb01b8b57f418 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:49:58 +0100
Subject: [PATCH] Build sixpair through the build system

Using the libusb 1.0 libs as well as the separate storage
library, compile sixpair without hacks
---
 input/Makefile.am |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/input/Makefile.am b/input/Makefile.am
index 1b3ab5d..59cf481 100644
--- a/input/Makefile.am
+++ b/input/Makefile.am
@@ -8,14 +8,23 @@ input_la_SOURCES = main.c manager.h manager.c \
 		server.h server.c device.h device.c \
 		fakehid.c fakehid.h
 
-LDADD = $(top_builddir)/common/libhelper.a \
+input_la_LIBADD = $(top_builddir)/common/libhelper.a \
 		@GDBUS_LIBS@ @GLIB_LIBS@ @DBUS_LIBS@ @BLUEZ_LIBS@
+
+if USB1
+bin_PROGRAMS = sixpair
+sixpair_SOURCES = sixpair.c
+sixpair_LDADD = $(top_builddir)/src/libbtd-storage.a \
+		$(top_builddir)/common/libhelper.a \
+		@USB1_LIBS@ @GLIB_LIBS@ @BLUEZ_LIBS@
+endif
+
 endif
 
 AM_LDFLAGS = -module -avoid-version -no-undefined \
 			-export-symbols-regex bluetooth_plugin_desc
 
-AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ @GDBUS_CFLAGS@
+AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ @GDBUS_CFLAGS@ @USB1_CFLAGS@
 
 INCLUDES = -I$(top_srcdir)/common -I$(top_srcdir)/src
 
-- 
1.5.5.2


["0013-Remove-compilation-instructions-from-sixpair.patch" (0013-Remove-compilation-instructions-from-sixpair.patch)]

From b2c8fe5f5b1141284dce71a0345712cf16c1f665 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 15 Oct 2008 15:50:29 +0100
Subject: [PATCH] Remove compilation instructions from sixpair

Not needed anymore
---
 input/sixpair.c |    4 ----
 1 files changed, 0 insertions(+), 4 deletions(-)

diff --git a/input/sixpair.c b/input/sixpair.c
index 5c58b9b..41d7791 100644
--- a/input/sixpair.c
+++ b/input/sixpair.c
@@ -1,7 +1,3 @@
-/* To compile
- * gcc -g -Wall -I../src -I../lib/ -I../include -DSTORAGEDIR=\"/var/lib/bluetooth\" \
-o sixpair sixpair.c ../src/storage.c ../common/libhelper.a -I../common `pkg-config \
                --libs --cflags glib-2.0 libusb-1.0` -lbluetooth
- */
-
 #include &lt;unistd.h&gt;
 #include &lt;stdio.h&gt;
 #include &lt;inttypes.h&gt;
-- 
1.5.5.2


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081015071037</emailId><senderName></senderName><senderEmail>chanyeol.park@samsung.com</senderEmail><timestampReceived>2008-10-15 07:10:37-0400</timestampReceived><subject>Could you explain how to discover remote devices without periodic</subject><body>

Dear all.
Could you explain how to discover remote devices without periodic inquiry ? 
When I send dbus command ��dbus-send --system --type=method_call  --dest="org.bluez" \
/org/bluez/hci0 org.bluez.Adapter.StartDiscovery��, Bluetooth module starts periodic \
search. 

I just want only normal search. Even though I have an experience of Bluez 3.x. it's \
not easy to use BlueZ 4.x API.  

Somebody��s little help could be very helpful. 


Thank &amp; Regards 		
                    
Chanyeol-Park
Engineer		  
            
Mobile S/W Platform Lab.             
Telecommunication R&amp;D Center            
SAMSUNG ELECTRONICS CO., LTD.            
            
Tel : +82-31-279-5941                         
Mobile : +82-10-9978-5941            
E-mail : chanyeol.park@samsung.com            
 
 
 ����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081015010623</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-15 01:06:23-0400</timestampReceived><subject>[PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

Heya,

If anyone has an Apple Wireless keyboard to test pairing against. I
believe the attached patch to be correct. Otherwise Apple keyboards
(which use the same OUI) will get a PIN of 0000.

Cheers

["bluez-apple-wireless-kbd.patch" (bluez-apple-wireless-kbd.patch)]

diff --git a/wizard/main.c b/wizard/main.c
index 0854913..0340063 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -62,9 +62,10 @@ static gboolean pincode_callback(DBusGMethodInvocation *context,
 	const char *pincode = target_pincode;
 	gchar *text;
 
-	/* Apple Wireless and Mighty Mouse */
-	if (g_str_has_prefix(target_address, "00:0A:95:") == TRUE ||
-			g_str_has_prefix(target_address, "00:14:51:") == TRUE)
+	/* Apple Wireless and Mighty Mouse, and just the mice */
+	if ((g_str_has_prefix(target_address, "00:0A:95:") == TRUE ||
+			g_str_has_prefix(target_address, "00:14:51:") == TRUE) &amp;&amp;
+	    target_type == BLUETOOTH_TYPE_MOUSE)
 		pincode = "0000";
 
 	/* Most headsets are using 0000 as pincode */

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081014170236</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-14 17:02:36-0400</timestampReceived><subject>[PATCHes] Better buttons in adapter properties</subject><body>

Before:
http://img369.imageshack.us/my.php?image=screenshotbluetoothprefoa6.png
After:
http://img233.imageshack.us/my.php?image=screenshotbluetoothprefby0.png

Fixes:
https://bugzilla.redhat.com/show_bug.cgi?id=465398 (No labels in
buttons)
http://bugzilla.gnome.org/show_bug.cgi?id=505606 (trust toggle button
appears/disappears)
And the discussion that were recently made on the list about having a
shorter dialogue for EeePCs.

["0001-Fixes-for-adapter-specific-buttons.patch" (0001-Fixes-for-adapter-specific-buttons.patch)]

From a394c15d8d1f904bbd4399aa2b7baf8db40d5b4c Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 14 Oct 2008 16:08:23 +0100
Subject: [PATCH] Fixes for adapter specific buttons

- Add labels to the adapter buttons, otherwise people
wonder what each one is for.

- Always show the buttons, just make sure they're
disabled if no devices is selected.

- Remove the difference in look for the extra buttons
---
 properties/adapter.c |   43 +++++++++++++------------------------------
 1 files changed, 13 insertions(+), 30 deletions(-)

diff --git a/properties/adapter.c b/properties/adapter.c
index 7ace35b..9de10e7 100644
--- a/properties/adapter.c
+++ b/properties/adapter.c
@@ -246,15 +246,8 @@ static void select_callback(GtkTreeSelection *selection, gpointer user_data)
 
 	update_buttons(adapter, paired, trusted, connected);
 
-	if (selected == TRUE) {
-		gtk_widget_show(adapter-&gt;button_disconnect);
-		gtk_widget_show(adapter-&gt;button_trusted);
-		gtk_widget_show(adapter-&gt;button_delete);
-	} else {
-		gtk_widget_hide(adapter-&gt;button_disconnect);
-		gtk_widget_hide(adapter-&gt;button_trusted);
-		gtk_widget_hide(adapter-&gt;button_delete);
-	}
+	gtk_widget_set_sensitive(adapter-&gt;button_trusted, selected);
+	gtk_widget_set_sensitive(adapter-&gt;button_delete, selected);
 }
 
 static void row_callback(GtkTreeModel *model, GtkTreePath  *path,
@@ -646,61 +639,51 @@ static void create_adapter(struct adapter_data *adapter)
 	gtk_box_set_homogeneous(GTK_BOX(buttonbox), FALSE);
 	gtk_box_pack_start(GTK_BOX(vbox), buttonbox, FALSE, FALSE, 0);
 
-	button = gtk_button_new();
+	button = gtk_button_new_with_label(_("Setup new device..."));
 	image = gtk_image_new_from_stock(GTK_STOCK_ADD,
 						GTK_ICON_SIZE_BUTTON);
-	gtk_container_add(GTK_CONTAINER(button), image);
-	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
+	gtk_button_set_image(GTK_BUTTON(button), image);
 	gtk_box_pack_start(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 
 	g_signal_connect(G_OBJECT(button), "clicked",
 				G_CALLBACK(wizard_callback), adapter);
 
-	button = gtk_button_new();
-	gtk_button_set_relief(GTK_BUTTON(button), GTK_RELIEF_NONE);
+	button = gtk_button_new_with_label(_("Disconnect"));
 	image = gtk_image_new_from_stock(GTK_STOCK_DISCONNECT,
 						GTK_ICON_SIZE_BUTTON);
-	gtk_container_add(GTK_CONTAINER(button), image);
-	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
-	gtk_widget_show(image);
+	gtk_button_set_image(GTK_BUTTON(button), image);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);
+	gtk_widget_set_sensitive(button, FALSE);
 
 	g_signal_connect(G_OBJECT(button), "clicked",
 				G_CALLBACK(disconnect_callback), adapter);
 
 	adapter-&gt;button_disconnect = button;
 
-	button = gtk_button_new();
-	gtk_button_set_relief(GTK_BUTTON(button), GTK_RELIEF_NONE);
+	button = gtk_button_new_with_label(_("Add to Trusted"));
 	image = gtk_image_new_from_stock(GTK_STOCK_ABOUT,
 						GTK_ICON_SIZE_BUTTON);
-	gtk_container_add(GTK_CONTAINER(button), image);
-	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
-	gtk_widget_show(image);
+	gtk_button_set_image(GTK_BUTTON(button), image);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);
+	gtk_widget_set_sensitive(button, FALSE);
 
 	g_signal_connect(G_OBJECT(button), "clicked",
 				G_CALLBACK(trusted_callback), adapter);
 
 	adapter-&gt;button_trusted = button;
 
-	button = gtk_button_new();
-	gtk_button_set_relief(GTK_BUTTON(button), GTK_RELIEF_NONE);
+	button = gtk_button_new_with_label(_("Delete"));
 	image = gtk_image_new_from_stock(GTK_STOCK_DELETE,
 						GTK_ICON_SIZE_BUTTON);
-	gtk_container_add(GTK_CONTAINER(button), image);
-	gtk_container_set_border_width(GTK_CONTAINER(button), 0);
-	gtk_widget_set_no_show_all(button, TRUE);
-	gtk_widget_show(image);
+	gtk_button_set_image(GTK_BUTTON(button), image);
 	gtk_box_pack_end(GTK_BOX(buttonbox), button, FALSE, FALSE, 0);
 	gtk_button_box_set_child_secondary(GTK_BUTTON_BOX(buttonbox),
 								button, TRUE);
+	gtk_widget_set_sensitive(button, FALSE);
 
 	g_signal_connect(G_OBJECT(button), "clicked",
 				G_CALLBACK(delete_callback), adapter);
-- 
1.5.5.2


["0002-Move-the-adapter-button-list-to-the-side.patch" (0002-Move-the-adapter-button-list-to-the-side.patch)]

From 161b2023faa95b6d777c3cbaac902365548babf3 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 14 Oct 2008 17:37:51 +0100
Subject: [PATCH] Move the adapter button list to the side

This makes the dialogue wider, rather than tall, which is
useful for computers with small displays.
---
 properties/adapter.c |   16 ++++++++++------
 1 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/properties/adapter.c b/properties/adapter.c
index 9de10e7..0174716 100644
--- a/properties/adapter.c
+++ b/properties/adapter.c
@@ -437,6 +437,7 @@ static void create_adapter(struct adapter_data *adapter)
 
 	GtkWidget *mainbox;
 	GtkWidget *vbox;
+	GtkWidget *table;
 	GtkWidget *label;
 	GtkWidget *image;
 	GtkWidget *button;
@@ -602,18 +603,20 @@ static void create_adapter(struct adapter_data *adapter)
 	g_signal_connect(G_OBJECT(entry), "focus-out-event",
 					G_CALLBACK(focus_callback), adapter);
 
-	vbox = gtk_vbox_new(FALSE, 6);
-	gtk_box_pack_start(GTK_BOX(mainbox), vbox, TRUE, TRUE, 0);
+	table = gtk_table_new(2, 2, FALSE);
+	gtk_box_pack_start(GTK_BOX(mainbox), table, TRUE, TRUE, 0);
 
 	label = create_label(_("Known devices"));
-	gtk_box_pack_start(GTK_BOX(vbox), label, FALSE, FALSE, 0);
+	gtk_table_attach(GTK_TABLE(table), label, 0, 2, 0, 1,
+			 GTK_EXPAND | GTK_FILL, GTK_EXPAND | GTK_FILL, 0, 6);
 
 	scrolled = gtk_scrolled_window_new(NULL, NULL);
 	gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolled),
 				GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
 	gtk_scrolled_window_set_shadow_type(GTK_SCROLLED_WINDOW(scrolled),
 							GTK_SHADOW_OUT);
-	gtk_container_add(GTK_CONTAINER(vbox), scrolled);
+	gtk_table_attach(GTK_TABLE(table), scrolled, 0, 1, 1, 2,
+			 GTK_EXPAND | GTK_FILL, GTK_EXPAND | GTK_FILL, 6, 6);
 
 	model = bluetooth_client_get_device_filter_model(client,
 				adapter-&gt;proxy, device_filter, NULL, NULL);
@@ -632,12 +635,13 @@ static void create_adapter(struct adapter_data *adapter)
 
 	gtk_container_add(GTK_CONTAINER(scrolled), tree);
 
-	buttonbox = gtk_hbutton_box_new();
+	buttonbox = gtk_vbutton_box_new();
 	gtk_button_box_set_layout(GTK_BUTTON_BOX(buttonbox),
 						GTK_BUTTONBOX_START);
 	gtk_box_set_spacing(GTK_BOX(buttonbox), 6);
 	gtk_box_set_homogeneous(GTK_BOX(buttonbox), FALSE);
-	gtk_box_pack_start(GTK_BOX(vbox), buttonbox, FALSE, FALSE, 0);
+	gtk_table_attach(GTK_TABLE(table), buttonbox, 1, 2, 1, 2,
+			 GTK_FILL, GTK_FILL, 6, 6);
 
 	button = gtk_button_new_with_label(_("Setup new device..."));
 	image = gtk_image_new_from_stock(GTK_STOCK_ADD,
-- 
1.5.5.2


["0003-Fix-trust-button.patch" (0003-Fix-trust-button.patch)]

From a99222b4c0b505f5a0fc2a564977bf3be71a6c86 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 14 Oct 2008 17:59:58 +0100
Subject: [PATCH] Fix trust button

The trust button toggles the trust for a device, so the label
should reflect the action to take when clicked. Changed the label
to "Trust"/"Distrust" to avoid the widgets moving about when
toggling the trust status.
---
 properties/adapter.c |    7 ++++++-
 1 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/properties/adapter.c b/properties/adapter.c
index 0174716..b744a20 100644
--- a/properties/adapter.c
+++ b/properties/adapter.c
@@ -216,6 +216,11 @@ static gboolean focus_callback(GtkWidget *editable,
 static void update_buttons(struct adapter_data *adapter, gboolean bonded,
 					gboolean trusted, gboolean connected)
 {
+	if (trusted) {
+		gtk_button_set_label(GTK_BUTTON(adapter-&gt;button_trusted), _("Distrust"));
+	} else {
+		gtk_button_set_label(GTK_BUTTON(adapter-&gt;button_trusted), _("Trust"));
+	}
 	gtk_widget_set_sensitive(adapter-&gt;button_delete, bonded);
 	gtk_widget_set_sensitive(adapter-&gt;button_disconnect, connected);
 }
@@ -666,7 +671,7 @@ static void create_adapter(struct adapter_data *adapter)
 
 	adapter-&gt;button_disconnect = button;
 
-	button = gtk_button_new_with_label(_("Add to Trusted"));
+	button = gtk_button_new_with_label(_("Trust"));
 	image = gtk_image_new_from_stock(GTK_STOCK_ABOUT,
 						GTK_ICON_SIZE_BUTTON);
 	gtk_button_set_image(GTK_BUTTON(button), image);
-- 
1.5.5.2


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081014212811</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-14 21:28:11-0400</timestampReceived><subject>[PATCH] Quirk for Apple Aluminum Bluetooth  keyboard FN key</subject><body>

This patch was present in Ubuntu Hardy, but got dropped by accident in
Intrepid and never submitted upstream.  It adds a quirk enabling the FN
key on the Apple Aluminum Bluetooth Wireless Keyboard.


Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
---
 net/bluetooth/hidp/core.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/net/bluetooth/hidp/core.c b/net/bluetooth/hidp/core.c
index 96434d7..fc6e643 100644
--- a/net/bluetooth/hidp/core.c
+++ b/net/bluetooth/hidp/core.c
@@ -684,6 +684,8 @@ static const struct {
 } hidp_blacklist[] = {
     /* Apple wireless Mighty Mouse */
     { 0x05ac, 0x030c, HID_QUIRK_MIGHTYMOUSE | HID_QUIRK_INVERT_HWHEEL },
+    /* Apple wireless Bluetooth Keyboard */
+    { 0x05ac, 0x022c, HID_QUIRK_APPLE_HAS_FN },
 
     { }    /* Terminating entry */
 };
-- 
1.5.4.3


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023201720</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-23 20:17:20-0400</timestampReceived><subject>[PATCH] first udev rules for running hid2hci</subject><body>

[Attachment #2 (multipart/mixed)]


Hi:

Attached is a patch that adds another set of udev rules that will run
hid2hci, at least for the Dell BT adapters.  Other adapters can get
added in too, but I think some more attributes will be needed for them. 
I'm doing this as a separate set of udev rules than the PCMCIA rules so
that these can be installed by default whereas the PCMCIA ones are
normally placed in a different binary package for distros.

Regards
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["hid2hci_udev.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/bluetooth.rules \
                bluez-4.12.new/scripts/bluetooth.rules
--- bluez-4.12/scripts/bluetooth.rules	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/bluetooth.rules	1969-12-31 18:00:00.000000000 -0600
@@ -1,35 +0,0 @@
-# Brain Boxes BL-620 Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Brain Boxes", \
                SYSFS{prod_id2}=="Bluetooth PC Card", ENV{HCIOPTS}="bboxes", \
                RUN+="bluetooth_serial"
-
-# Xircom CreditCard Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
                ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial"
-
-# Xircom RealPort2 Bluetooth Adapter
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
                ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial"
-
-# IBM Bluetooth PC Card II
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="IBM", SYSFS{prod_id2}=="Bluetooth \
                PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial"
-
-# TDK Bluetooth PC Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="TDK", SYSFS{prod_id2}=="Bluetooth \
                PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial"
-
-# AmbiCom BT2000C Bluetooth PC/CF Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="AmbiCom BT2000C", \
SYSFS{prod_id2}=="Bluetooth PC/CF Card", ENV{HCIOPTS}="bt2000c", \
                RUN+="bluetooth_serial"
-
-# COM One Platinium Bluetooth PC Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="COM1 SA", SYSFS{prod_id2}=="MC310 \
                CARD", ENV{HCIOPTS}="comone", RUN+="bluetooth_serial"
-
-# Sphinx PICO Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="SPHINX", \
                SYSFS{prod_id2}=="BT-CARD", ENV{HCIOPTS}="picocard", \
                RUN+="bluetooth_serial"
-
-# H-Soft blue+Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="H-Soft", \
SYSFS{prod_id2}=="Blue+CARD", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
                RUN+="bluetooth_serial"
-
-# Compaq iPAQ Bluetooth Sleeve, Belkin F8T020, any other muppet who used an OXCF950 \
                and didn't bother to program it appropriately.
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="CF CARD", \
SYSFS{prod_id2}=="GENERIC", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
                RUN+="bluetooth_serial"
-
-# Zoom Bluetooth Card and Sitecom CN-504 Card
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="PCMCIA", \
                SYSFS{prod_id2}=="Bluetooth Card", ENV{HCIOPTS}="zoom", \
                RUN+="bluetooth_serial"
-
-# CC&amp;C BT0100M
-SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Bluetooth BT0100M", \
                ENV{HCIOPTS}="bcsp 115200", RUN+="bluetooth_serial"
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/hid2hci.rules \
                bluez-4.12.new/scripts/hid2hci.rules
--- bluez-4.12/scripts/hid2hci.rules	1969-12-31 18:00:00.000000000 -0600
+++ bluez-4.12.new/scripts/hid2hci.rules	2008-10-23 15:09:14.000000000 -0500
@@ -0,0 +1,8 @@
+#UDEV Rules to match on Bluetooth USB dongles that need to be switched to HCI mode \
upon +#being plugged into the PC's USB bus.
+
+#This rule covers a variety of Dell Bluetooth adapters
+# it looks like a bit of an odd rule, because it is matching
+# on a mouse device that is self powered, but that is where
+# a HID report needs to be sent to switch modes.
+ACTION=="add", SYSFS{idVendor}=="413c", ATTRS{bInterfaceProtocol}=="02", \
                ATTRS{bmAttributes}=="e0", RUN+="/usr/sbin/hid2hci --tohci"
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.am \
                bluez-4.12.new/scripts/Makefile.am
--- bluez-4.12/scripts/Makefile.am	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.am	2008-10-23 15:11:15.000000000 -0500
@@ -2,14 +2,14 @@
 if PCMCIARULES
 rulesdir = $(sysconfdir)/udev
 
-rules_DATA = bluetooth.rules
+rules_DATA = pcmcia.rules
 
 udevdir = $(libexecdir)/udev
 
 udev_SCRIPTS = bluetooth_serial
 endif
 
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = pcmcia.rules bluetooth_serial bluetooth.init bluetooth.default \
hid2hci.rules  
 MAINTAINERCLEANFILES = Makefile.in
 
@@ -24,3 +24,9 @@
 	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
 endif
+
+install-data-pm:
+	$(INSTALL) -D -m 644 $(srcdir)/hid2hci.rules \
$(DESTDIR)$(rulesdir)/rules.d/62-bluez-hid2hci.rules +
+uninstall-pm:
+	@rm -f $(DESTDIR)$(rulesdir)/rules.d/62-bluez-hid2hci.rules
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.in \
                bluez-4.12.new/scripts/Makefile.in
--- bluez-4.12/scripts/Makefile.in	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.in	2008-10-23 15:13:03.000000000 -0500
@@ -189,10 +189,10 @@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 @PCMCIARULES_TRUE@rulesdir = $(sysconfdir)/udev
-@PCMCIARULES_TRUE@rules_DATA = bluetooth.rules
+@PCMCIARULES_TRUE@rules_DATA = pcmcia.rules
 @PCMCIARULES_TRUE@udevdir = $(libexecdir)/udev
 @PCMCIARULES_TRUE@udev_SCRIPTS = bluetooth_serial
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = pcmcia.rules bluetooth_serial bluetooth.init bluetooth.default \
hid2hci.rules  MAINTAINERCLEANFILES = Makefile.in
 all: all-am
 
@@ -354,7 +354,7 @@
 info-am:
 
 install-data-am: install-data-local install-rulesDATA \
-	install-udevSCRIPTS
+	install-udevSCRIPTS install-data-pm
 
 install-dvi: install-dvi-am
 
@@ -416,6 +416,12 @@
 @INITSCRIPTS_TRUE@uninstall-local:
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
+
+install-data-pm:
+	$(INSTALL) -D -m 644 $(srcdir)/hid2hci.rules \
$(DESTDIR)$(rulesdir)/rules.d/62-bluez-hid2hci.rules +
+uninstall-local:
+	@rm -f $(DESTDIR)$(rulesdir)/rules.d/62-bluez-hid2hci.rules
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/pcmcia.rules \
                bluez-4.12.new/scripts/pcmcia.rules
--- bluez-4.12/scripts/pcmcia.rules	1969-12-31 18:00:00.000000000 -0600
+++ bluez-4.12.new/scripts/pcmcia.rules	2008-10-23 15:09:14.000000000 -0500
@@ -0,0 +1,35 @@
+# Brain Boxes BL-620 Bluetooth Adapter
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Brain Boxes", \
SYSFS{prod_id2}=="Bluetooth PC Card", ENV{HCIOPTS}="bboxes", RUN+="bluetooth_serial" \
+ +# Xircom CreditCard Bluetooth Adapter
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial" +
+# Xircom RealPort2 Bluetooth Adapter
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Xircom", SYSFS{prod_id3}=="CBT", \
ENV{HCIOPTS}="xircom", RUN+="bluetooth_serial" +
+# IBM Bluetooth PC Card II
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="IBM", SYSFS{prod_id2}=="Bluetooth \
PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial" +
+# TDK Bluetooth PC Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="TDK", SYSFS{prod_id2}=="Bluetooth \
PC Card II", ENV{HCIOPTS}="tdk", RUN+="bluetooth_serial" +
+# AmbiCom BT2000C Bluetooth PC/CF Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="AmbiCom BT2000C", \
SYSFS{prod_id2}=="Bluetooth PC/CF Card", ENV{HCIOPTS}="bt2000c", \
RUN+="bluetooth_serial" +
+# COM One Platinium Bluetooth PC Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="COM1 SA", SYSFS{prod_id2}=="MC310 \
CARD", ENV{HCIOPTS}="comone", RUN+="bluetooth_serial" +
+# Sphinx PICO Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="SPHINX", \
SYSFS{prod_id2}=="BT-CARD", ENV{HCIOPTS}="picocard", RUN+="bluetooth_serial" +
+# H-Soft blue+Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="H-Soft", \
SYSFS{prod_id2}=="Blue+CARD", ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", \
RUN+="bluetooth_serial" +
+# Compaq iPAQ Bluetooth Sleeve, Belkin F8T020, any other muppet who used an OXCF950 \
and didn't bother to program it appropriately. +SUBSYSTEM=="tty", BUS=="pcmcia", \
SYSFS{prod_id1}=="CF CARD", SYSFS{prod_id2}=="GENERIC", \
ENV{HCIOPTS}="$sysfs{manf_id},$sysfs{card_id}", RUN+="bluetooth_serial" +
+# Zoom Bluetooth Card and Sitecom CN-504 Card
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="PCMCIA", \
SYSFS{prod_id2}=="Bluetooth Card", ENV{HCIOPTS}="zoom", RUN+="bluetooth_serial" +
+# CC&amp;C BT0100M
+SUBSYSTEM=="tty", BUS=="pcmcia", SYSFS{prod_id1}=="Bluetooth BT0100M", \
ENV{HCIOPTS}="bcsp 115200", RUN+="bluetooth_serial"


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023205938</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-23 20:59:38-0400</timestampReceived><subject>[PATCH] Add doc for the Icon property</subject><body>

As mentioned on IRC.

["0001-Add-doc-for-the-device-Icon-property.patch" (0001-Add-doc-for-the-device-Icon-property.patch)]

From d07e3ab49f75a2bb37611d3fe1f5320a34987447 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 23 Oct 2008 21:57:06 +0100
Subject: [PATCH] Add doc for the device Icon property

.
---
 doc/device-api.txt |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/doc/device-api.txt b/doc/device-api.txt
index 9e39946..b2010f6 100644
--- a/doc/device-api.txt
+++ b/doc/device-api.txt
@@ -169,3 +169,11 @@ Properties	string Address [readonly]
 		object Adapter [readonly]
 
 			The object path of the adpater the device belongs to.
+
+		string Icon [readonly]
+
+			The icon name for the remote device. The icon name
+			follows the Icon Naming specification from
+			freedesktop.org. For unknown, or unrecognised types
+			of devices, this is simply "bluetooth".
+
-- 
1.6.0.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081022205403</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-22 20:54:03-0400</timestampReceived><subject>[PATCH] Run hid2hci after resuming from suspend</subject><body>

[Attachment #2 (multipart/mixed)]


Hello,

This patch adds support for the hid2hci command to be ran upon resuming
from suspend.  At least the USB adapters I've been operating with that
need to switch modes need to do so upon resume.

Regards
--=20
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["hid2hci_pm-utils.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/hid2hci.pm-utils \
                bluez-4.12.new/scripts/hid2hci.pm-utils
--- bluez-4.12/scripts/hid2hci.pm-utils	1969-12-31 18:00:00.000000000 -0600
+++ bluez-4.12.new/scripts/hid2hci.pm-utils	2008-10-22 15:37:00.000000000 -0500
@@ -0,0 +1,24 @@
+#!/bin/sh
+# Switch all devices that were in a HID mode to HCI mode
+# after a resume
+
+. "${PM_FUNCTIONS}"
+
+[ -f /etc/default/bluetooth ] || exit $NA
+
+. /etc/default/bluetooth
+
+hid2hci()
+{
+	if [ "$HID2HCI_ENABLED" = "1" ] &amp;&amp; [ -x /usr/sbin/hid2hci ]; then
+		/usr/sbin/hid2hci --tohci
+        fi
+}
+
+case "$1" in
+	thaw|resume)
+		hid2hci
+		;;
+	*) exit $NA
+		;;
+esac
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.am \
                bluez-4.12.new/scripts/Makefile.am
--- bluez-4.12/scripts/Makefile.am	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.am	2008-10-22 15:37:00.000000000 -0500
@@ -9,7 +9,7 @@
 udev_SCRIPTS = bluetooth_serial
 endif
 
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default \
hid2hci.pm-utils  
 MAINTAINERCLEANFILES = Makefile.in
 
@@ -24,3 +24,12 @@
 	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
 endif
+
+if HID2HCI
+install-data-local:
+	$(mkinstalldirs) $(DESTDIR)/$(libexecdir)/pm-utils/sleep.d
+	$(INSTALL) -D -m 744 $(srcdir)/hid2hci.pm-utils \
$(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48hid2hci +
+uninstall-local:
+	@rm -f $(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48hid2hci
+endif
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.in \
                bluez-4.12.new/scripts/Makefile.in
--- bluez-4.12/scripts/Makefile.in	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.in	2008-10-22 15:37:20.000000000 -0500
@@ -192,7 +192,7 @@
 @PCMCIARULES_TRUE@rules_DATA = bluetooth.rules
 @PCMCIARULES_TRUE@udevdir = $(libexecdir)/udev
 @PCMCIARULES_TRUE@udev_SCRIPTS = bluetooth_serial
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default \
hid2hci.pm-utils  MAINTAINERCLEANFILES = Makefile.in
 all: all-am
 
@@ -335,6 +335,8 @@
 	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
 @INITSCRIPTS_FALSE@uninstall-local:
 @INITSCRIPTS_FALSE@install-data-local:
+@HID2HCI_FALSE@uninstall-local:
+@HID2HCI_FALSE@install-data-local:
 clean: clean-am
 
 clean-am: clean-generic clean-libtool mostlyclean-am
@@ -416,6 +418,13 @@
 @INITSCRIPTS_TRUE@uninstall-local:
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
+
+@HID2HCI_TRUE@install-data-local:
+@HID2HCI_TRUE@	$(mkinstalldirs) $(DESTDIR)/$(libexecdir)/pm-utils/sleep.d
+@HID2HCI_TRUE@	$(INSTALL) -D -m 744 $(srcdir)/hid2hci.pm-utils \
$(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48hid2hci +
+@HID2HCI_TRUE@uninstall-local:
+@HID2HCI_TRUE@	@rm -f $(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48hid2hci
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081026071629</emailId><senderName>Sergio Luis</senderName><senderEmail>sergio@larces.uece.br</senderEmail><timestampReceived>2008-10-26 07:16:29-0400</timestampReceived><subject>[patch 1/2] btsdio: free sk_buff with kfree_skb</subject><body>

free sk_buff with kfree_skb, instead of kree
 
Signed-off-by: Sergio Luis &lt;sergio@larces.uece.br&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;

drivers/bluetooth/btsdio.c         |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/bluetooth/btsdio.c b/drivers/bluetooth/btsdio.c
index 58630cc..cda6c7c 100644
--- a/drivers/bluetooth/btsdio.c
+++ b/drivers/bluetooth/btsdio.c
@@ -152,7 +152,7 @@ static int btsdio_rx_packet(struct btsdio_data *data)
 
 	err = sdio_readsb(data-&gt;func, skb-&gt;data, REG_RDAT, len - 4);
 	if (err &lt; 0) {
-		kfree(skb);
+		kfree_skb(skb);
 		return err;
 	}
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027160352</emailId><senderName>Guillaume Bedot</senderName><senderEmail>littletux@zarb.org</senderEmail><timestampReceived>2008-10-27 16:03:52-0400</timestampReceived><subject>Missing support in btusb for broadcom dongle 0a5c:2009</subject><body>

Hello,

It seems this particular dongle needs a quirk that existed in hci_usb,
but doesn't in btusb.

Is it possible to send some command to use this dongle (as hciconfig
reset can replace the reset quirk) ?

Or should the quirk be introduced in btusb too ?

Regards,

Guillaume B.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027183338</emailId><senderName>Guillaume Bedot</senderName><senderEmail>littletux@zarb.org</senderEmail><timestampReceived>2008-10-27 18:33:38-0400</timestampReceived><subject>[PATCH] Missing support in btusb for broadcom dongle 0a5c:2009</subject><body>

Le lundi 27 octobre 2008 Ã  19:04 +0100, Marcel Holtmann a Ã©crit :
&gt; Hi Guillaume,
&gt; 
&gt; &gt; It seems this particular dongle needs a quirk that existed in hci_usb,
&gt; &gt; but doesn't in btusb.
&gt; &gt; 
&gt; &gt; Is it possible to send some command to use this dongle (as hciconfig
&gt; &gt; reset can replace the reset quirk) ?
&gt; &gt; 
&gt; &gt; Or should the quirk be introduced in btusb too ?
&gt; 
&gt; you can load btusb with reset=1 and that does the same trick, but the
&gt; quirk should be added to btusb directly. Send in the lsusb output and
&gt; content of /proc/bus/usb/devices for your dongle.

Sorry I was not clear enough...

It's a different init quirk that concern only that dongle at the moment.
With this patch it should be clearer.

Regards,

Guillaume B.

["btusb-bcm92035.patch" (btusb-bcm92035.patch)]

This patch should allow the 0a5c:2009 broadcom dongle to work with btusb.

See this Mandriva bug for more information:
http://qa.mandriva.com/show_bug.cgi?id=44886

(and soon, for results of Jan tests especially)

Signed-off-by: Guillaume Bedot &lt;littletux@zarb.org&gt;
--- kernel-linus-2.6.28-0.rc1.1.1mdv.orig/drivers/bluetooth/btusb.c	2008-10-27 17:36:17.000000000 +0100
+++ kernel-linus-2.6.28-0.rc1.1.1mdv/drivers/bluetooth/btusb.c	2008-10-27 17:37:11.000000000 +0100
@@ -96,6 +96,7 @@
 	/* Broadcom BCM2035 */
 	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2009), .driver_info = BTUSB_BCM92035 },
 
 	/* Broadcom BCM2045 */
 	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081022000459</emailId><senderName>Matt Witherspoon</senderName><senderEmail>spoon@vt.edu</senderEmail><timestampReceived>2008-10-22 00:04:59-0400</timestampReceived><subject>Problems &amp; crash with Bluecore6 and SDIO driver</subject><body>

Hello all,

 I am trying to use an CSR Bluecore6 with the Bluetooth SDIO driver in 2.6.26
and
I'm not having much success. I can hciconfig hci0 up just fine. But any
commands after that have a low chance of succeeding and sometimes crashes the
kernel. Below is a log where I bring the interface up and run hciconfig hci0
features about once a second. As you can see, there is some weird stuff coming
back like a bogus Inquiry Complete.

 Has anyone used the Bluecore6 successfully with this driver? A Toshiba SDIO
Bluetooth card I have works fine, so SDIO appears to be working alright on my
kernel and device. I'm using a CSR BC6 dev kit so my hardware should be
okay. The BC6 is running build ID 4841 and I'm using the PXA270's
SDIO controller.

 Considering the Toshiba card works great, I'm wondering if some sort of quirk
needs to be in the driver to handle the Bluecore6? I was orginally concerned
that maybe its deep sleep feature was causing a problem because if I do
something like:
hciconfig hci0 up ; bccmd -t hci psread -s psrom
the PSkey dump works great for the first 5-6 keys then the BC6 seems to ignore
any addtional commands from bccmd or otherwise. (I thought maybe it was going
to sleep)
 I attempted to sdio_f0_writeb(func, 0x01, 0xf0, NULL) as the post from David
Vrabel suggests (http://lkml.org/lkml/2007/8/10/150) to disable deep sleep, but
it didn't help any.

 Does anyone have any experience with the Bluecore6 and the SDIO driver or any
suggestions? Thanks!

-Matt

[root@ace root]$hcidump -X -V &amp;
[1] 906
HCI sniffer - Bluetooth packet analyzer ver 1.30
device: hci0 snap_len: 1028 filter: 0xffffffff
[root@ace root]$hciconfig hci0 up
&lt; HCI Command: Read Local Supported Features (0x04|0x0003) plen 0
&gt; HCI Event: Command Status (0x0f) plen 4
    Unknown (0x00|0x0000) status 0x00 ncmd 1
&lt; HCI Command: Read Local Version Information (0x04|0x0001) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 12
    Read Local Supported Features (0x04|0x0003) ncmd 1
    status 0x00
    Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x59 0x83
&lt; HCI Command: Read Buffer Size (0x04|0x0005) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 12
    Read Local Version Information (0x04|0x0001) ncmd 1
    status 0x00
    HCI Version:  (0x4) HCI Revision: 0x12e9
    LMP Version:  (0x4) LMP Subversion: 0x12e9
    Manufacturer: Cambridge Silicon Radio (10)
&lt; HCI Command: Read BD ADDR (0x04|0x0009) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 11
    Read Buffer Size (0x04|0x0005) ncmd 1
    status 0x00
    ACL MTU 310:10 SCO MTU 64:8
&lt; HCI Command: Read Class of Device (0x03|0x0023) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 10
    Read BD ADDR (0x04|0x0009) ncmd 1
    status 0x00 bdaddr 00:02:5B:00:A5:A5
&lt; HCI Command: Read Local Name (0x03|0x0014) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 7
    Read Class of Device (0x03|0x0023) ncmd 1
    status 0x00 class 0x000000
&lt; HCI Command: Read Voice Setting (0x03|0x0025) plen 0
&gt; HCI Event: Command Complete (0x0e) plen 252
    Read Local Name (0x03|0x0014) ncmd 1
    status 0x00 name 'CSR - bc6'
&lt; HCI Command: Set Event Filter (0x03|0x0005) plen 1
    type 0 condition 0
    Clear all filters
&gt; HCI Event: Command Complete (0x0e) plen 6
    Read Voice Setting (0x03|0x0025) ncmd 1
    status 0x00 voice setting 0x0060
&lt; HCI Command: Write Page Timeout (0x03|0x0018) plen 2
    timeout 32768
&gt; HCI Event: Command Complete (0x0e) plen 4
    Set Event Filter (0x03|0x0005) ncmd 1
    status 0x00
&lt; HCI Command: Write Connection Accept Timeout (0x03|0x0016) plen 2
    timeout 32000
&gt; HCI Event: Command Complete (0x0e) plen 4
    Write Page Timeout (0x03|0x0018) ncmd 1
    status 0x00
&lt; HCI Command: Write Scan Enable (0x03|0x001a) plen 1
    enable 3
&gt; HCI Event: Command Complete (0x0e) plen 4
    Write Connection Accept Timeout (0x03|0x0016) ncmd 1
    status 0x00
&gt; HCI Event: Command Complete (0x0e) plen 4
    Write Scan Enable (0x03|0x001a) ncmd 1
    status 0x00
[root@ace root]$hciconfig hci0 features
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1
    page 0
Can't read extended features hci0: Connection timed out (110)
[root@ace root]$hciconfig hci0 features
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1
    page 0
&gt; HCI Event: Command Complete (0x0e) plen 14
    Read Local Extended Features (0x04|0x0004) ncmd 1
    status 0x00 page 96 max 0
    Features: 0x52 0x20 0x2d 0x20 0x62 0x63 0x36 0x00
&gt; HCI Event: Unknown (0x00) plen 0
  0000: ff ff 8f fe 9b ff 59 83  00 00 00 00 00 00        ......Y.......
hci0:   Type: SDIO
        BD Address: 00:02:5B:00:A5:A5 ACL MTU: 310:10 SCO MTU: 64:8
        Features page 0: 0x40 0xb8 0x7c 0x9f 0xbe 0x4c 0x7c 0x9f
                &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
                &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
                &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
                &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
                &lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt;
                &lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt;
                &lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt;
                &lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt;
                &lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt;
                &lt;sniff subrating&gt; &lt;no. 42&gt; &lt;AFH cap. master&gt;
                &lt;AFH class. master&gt; &lt;EDR eSCO 2 Mbps&gt; &lt;EDR eSCO 3 Mbps&gt;
                &lt;3-slot EDR eSCO&gt; &lt;extended inquiry&gt; &lt;extended features&gt;
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1
    page 1
&gt; HCI Event: Inquiry Complete (0x01) plen 0
    status 0x00
    0000: 00 00 00 00 00 00 00 00  00 00 00 00 00           .............
[root@ace root]$hciconfig hci0 features
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1
    page 0
Can't read extended features hci0: Connection timed out (110)
[root@ace root]$hciconfig hci0 features
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1
    page 0
Can't read extended features hci0: Connection timed out (110)
[root@ace root]$hciconfig hci0 features
&lt; HCI Command: Read Local Extended Features (0x04|0x0004) plen 1skb_under_panic:
 text:bf000624 len:16 put:4 head:c3f2e800 data:c3f2e7fd tail:0xc3f2e80d end:0xc3
f2e820 dev:$¦8+$¦8+

    page 0
Internal error: Oops: 817 [#1]
Modules linked in: btsdio
CPU: 0    Not tainted  (2.6.26.5 #23)
PC is at __bug+0x20/0x2c
LR is at release_console_sem+0x1bc/0x210
pc : [&lt;c0027cfc&gt;]    lr : [&lt;c003d944&gt;]    psr: 60000013
sp : c3c23ee8  ip : c3c23e18  fp : c3c23ef4
r10: 00000000  r9 : 00000000  r8 : c3c23f54
r7 : c3f2e820  r6 : c3f2e80d  r5 : c3f2e7fd  r4 : c3f2e800
r3 : 00000000  r2 : 60000013  r1 : 00000001  r0 : 00000028
Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment kernel
Control: 0000397f  Table: a3f14000  DAC: 00000017
Process events/0 (pid: 4, stack limit = 0xc3c22270)
Stack: (0xc3c23ee8 to 0xc3c24000)
3ee0:                   c3c23f2c c3c23ef8 c01d5f08 c0027ce8 c3f2e800 c3f2e7fd
3f00: c3f2e80d c3f2e820 c3ec8c00 c3ed6520 c3f2e800 c3ed6520 c3f2e7fd c3f30178
3f20: c3c23f4c c3c23f30 c01d7070 c01d5eb8 c3c23f7c c3f30168 c3f30160 c3ed6520
3f40: c3c23f7c c3c23f50 bf000624 c01d7030 00000000 00000000 c3c23f9c c3c019e0
3f60: bf0005b0 c3c22000 00000000 00000000 c3c23f9c c3c23f80 c004dce0 bf0005bc
3f80: c3c22000 c3c019e8 c3c019e0 c3c23fa4 c3c23fd4 c3c23fa0 c004e2cc c004dc00
3fa0: 00000000 00000000 c3c14340 c0051fb8 c3c23fb0 c3c23fb0 c3c22000 c3c019e0
3fc0: c004e214 c0394570 c3c23ff4 c3c23fd8 c0051af4 c004e220 00000000 00000000
3fe0: 00000000 00000000 00000000 c3c23ff8 c00407f0 c0051aa8 ffffffff ffffffff
Backtrace:
[&lt;c0027cdc&gt;] (__bug+0x0/0x2c) from [&lt;c01d5f08&gt;] (skb_under_panic+0x5c/0x68)
[&lt;c01d5eac&gt;] (skb_under_panic+0x0/0x68) from [&lt;c01d7070&gt;] (skb_push+0x4c/0x54)
 r7:c3f30178 r6:c3f2e7fd r5:c3ed6520 r4:c3f2e800
[&lt;c01d7024&gt;] (skb_push+0x0/0x54) from [&lt;bf000624&gt;] (btsdio_work+0x74/0x118 [btsd
io])
 r6:c3ed6520 r5:c3f30160 r4:c3f30168
[&lt;bf0005b0&gt;] (btsdio_work+0x0/0x118 [btsdio]) from [&lt;c004dce0&gt;] (run_workqueue+0
xec/0x19c)
 r8:00000000 r7:00000000 r6:c3c22000 r5:bf0005b0 r4:c3c019e0
[&lt;c004dbf4&gt;] (run_workqueue+0x0/0x19c) from [&lt;c004e2cc&gt;] (worker_thread+0xb8/0x1
3c)
 r7:c3c23fa4 r6:c3c019e0 r5:c3c019e8 r4:c3c22000
[&lt;c004e214&gt;] (worker_thread+0x0/0x13c) from [&lt;c0051af4&gt;] (kthread+0x58/0x94)
 r7:c0394570 r6:c004e214 r5:c3c019e0 r4:c3c22000
[&lt;c0051a9c&gt;] (kthread+0x0/0x94) from [&lt;c00407f0&gt;] (do_exit+0x0/0x6ec)
 r7:00000000 r6:00000000 r5:00000000 r4:00000000
Code: e1a01000 e59f000c eb0a14db e3a03000 (e5833000)
---[ end trace 40aa302498565605 ]---
Can't read extended features hci0: Connection timed out (110)
[root@ace root]$
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081026020103</emailId><senderName>Fiorellino</senderName><senderEmail>fiorellino@gmail.com</senderEmail><timestampReceived>2008-10-26 02:01:03-0400</timestampReceived><subject>pairing of bluez-utils 3.36-1 with keysonic 340 BT fails (no PIN requested)</subject><body>

Hi there,

I have a keysonic bluetooth keyboard.
It works perfectly under windows (I know you don't care, but at least
the keyboard is working fine!) using the embedded BT controller of my
laptop.

Now I'd like to use it under Debian lenny/sid in an embedded PC
(alix3d3) using a Trust Ultra Small Bluetooth 2 USB Adapter.

With "apt-get install" I installed bluez-utils 3.36-1.

I tried to follow this howto:
http://www.ubuntugeek.com/howto-setup-bluetooth-keyboard-and-mouse-in-ubuntu.html

Everything seemed pretty promising:

hcitool scan would find the keyboard

I added the device in /etc/bluetooth/hcid.conf as suggested and now it
looks like this:

voyage:~# cat /etc/bluetooth/hcid.conf
options {
        autoinit yes;
        security auto;
        pairing multi;
        passkey "1234";
}
device {
        name "%h-%d";
        class 0x000100;
        iscan enable; pscan enable;
        lm master;
        lp rswitch,hold,sniff,park;
        discovto 0;
}
device 00:18:00:00:78:86 {
        name "BTKB-7886";
        auth enable;
        encrypt enable;
}

I restarted bluez using /etc/init.d/bluetooth restart and tried to
connect with hidd --search...

I type the passkey and pressed enter on the keyboard. From the linux
prospective, everything seems fine.

If I show connected BT devices, the keyboard is listed, but the
pairing led keeps blinking, and the keyboard doesn't work.

I also trying compiling passkey-agent and have "passkey-agent
--default 1234" in the background, but didn't help.

You can find that other people had the issue:
http://ubuntuforums.org/showthread.php?t=911262
http://ubuntuforums.org/showthread.php?t=800863

Any idea or help is appreciated.

Thank you,

alfonso
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023215407</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-23 21:54:07-0400</timestampReceived><subject>[PATCH] Add support for pairing a few GPS devices</subject><body>

Add support for hard-coded pincodes for a few GPS devices, one being
mine, the other being mentioned by Ralph Loader in
https://bugzilla.redhat.com/show_bug.cgi?id=464446

Cheers

["0001-Add-support-for-pairing-a-few-GPS-devices.patch" (0001-Add-support-for-pairing-a-few-GPS-devices.patch)]

From 91d5a9fc32f990c92fa5091c046ccbb6ed2e72e0 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 23 Oct 2008 22:51:30 +0100
Subject: [PATCH] Add support for pairing a few GPS devices

Add support for hard-coded pincodes for a few GPS devices, one being
mine, the other being mentioned by Ralph Loader in
https://bugzilla.redhat.com/show_bug.cgi?id=464446
---
 wizard/main.c |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index 6f0b035..a20e280 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -75,6 +75,14 @@ static gboolean pincode_callback(DBusGMethodInvocation *context,
 				target_type == BLUETOOTH_TYPE_HEADPHONE)
 		pincode = "0000";
 
+	/* Most GPS devices also use 0000 as pincode */
+	if (g_str_has_prefix(target_address, "00:0D:B5") == TRUE &amp;&amp;
+				(g_str_equal(target_name,
+							"TomTom Wireless GPS MkII") == TRUE ||
+				g_str_equal(target_name,
+							"GPS-GW-005") == TRUE))
+		pincode = "0000";
+
 	text = g_strdup_printf(_("Please enter the following PIN code: %s"),
 								pincode);
 	gtk_label_set_markup(GTK_LABEL(label_passkey), text);
-- 
1.6.0.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081022112009</emailId><senderName>David Vrabel</senderName><senderEmail>david.vrabel@csr.com</senderEmail><timestampReceived>2008-10-22 11:20:09-0400</timestampReceived><subject>Re: Problems &amp; crash with Bluecore6 and SDIO driver</subject><body>

Matt Witherspoon wrote:
&gt; 
&gt;  I attempted to sdio_f0_writeb(func, 0x01, 0xf0, NULL) as the post from David
&gt; Vrabel suggests (http://lkml.org/lkml/2007/8/10/150) to disable deep sleep, but
&gt; it didn't help any.

Deep sleep control is done on a per-function basis so you need to write
0x11 to disable deep sleep on function 1 (the bluetooth function).

The oops may be fixed by: http://lkml.org/lkml/2008/10/6/47

David
-- 
David Vrabel, Senior Software Engineer, Drivers
CSR, Churchill House, Cambridge Business Park,  Tel: +44 (0)1223 692562
Cowley Road, Cambridge, CB4 0WZ                 http://www.csr.com/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027183143</emailId><senderName>Matt Witherspoon</senderName><senderEmail>spoon@vt.edu</senderEmail><timestampReceived>2008-10-27 18:31:43-0400</timestampReceived><subject>Re: Problems &amp; crash with Bluecore6 and SDIO driver</subject><body>

Quoting David Vrabel &lt;david.vrabel@csr.com&gt;:
&gt; Deep sleep control is done on a per-function basis so you need to write
&gt; 0x11 to disable deep sleep on function 1 (the bluetooth function).

Thanks for the response, David.

Applying Tomas' patch does indeed fix the crash.
I put a sdio_f0_writeb(data-&gt;func, 0x11, 0xf0, NULL); in btsdio_open(). This
register write does seem to have some effect. Without it, idle current was
0.6mA. With the write, idle current is around 2.5mA. However, the BC6 still
will not respond to commands after being idle for several seconds. Or, it will
respond but with bogus data (like a features bitfield of all 0x00s).

Then, I realized that if I run this command:
hciconfig hci0 up ; bccmd psset -s psram -r 0x0229 0
along with the register write, everything works great. I appear to have to do
both: the register write and the PSKEY setting. One or the other alone is not
sufficient.

Does this seem correct to you? I can't see how btsdio could work on a BC6
without following this process, unless I have a old bad firmware or something.

Thanks -Matt
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027060904</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-10-27 06:09:04-0400</timestampReceived><subject>Re: [patch 1/2] btsdio: free sk_buff with kfree_skb</subject><body>

From: Sergio Luis &lt;sergio@larces.uece.br&gt;
Date: Sun, 26 Oct 2008 04:16:29 -0300

&gt; free sk_buff with kfree_skb, instead of kree
&gt;  
&gt; Signed-off-by: Sergio Luis &lt;sergio@larces.uece.br&gt;

Since this is pretty obvious I'm applying this directly, I hope
Marcel doesn't mind :-)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023044401</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:44:01-0400</timestampReceived><subject>Re: [PATCH] Run hid2hci after resuming from suspend</subject><body>

Hi Mario,

&gt; This patch adds support for the hid2hci command to be ran upon resuming
&gt; from suspend.  At least the USB adapters I've been operating with that
&gt; need to switch modes need to do so upon resume.

we should not install multiple scripts. Lets only install one "bluez"
file for pm-utils. So no need for a hid2hci specific script.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023162948</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-23 16:29:48-0400</timestampReceived><subject>Re: [PATCH] Run hid2hci after resuming from suspend</subject><body>

[Attachment #2 (multipart/mixed)]


Hi Marcel:

Marcel Holtmann wrote:
&gt; Hi Mario,
&gt;
&gt; we should not install multiple scripts. Lets only install one "bluez"
&gt; file for pm-utils. So no need for a hid2hci specific script.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;   
Attached is an updated patch that will install this as "48bluez" for
pm-utils.  Of course the only thing in it right now is hid2hci, but
should that need to change, it's easy to add more.

Regards
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["hid2hci_pm-utils.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/bluetooth.pm-utils \
                bluez-4.12.new/scripts/bluetooth.pm-utils
--- bluez-4.12/scripts/bluetooth.pm-utils	1969-12-31 18:00:00.000000000 -0600
+++ bluez-4.12.new/scripts/bluetooth.pm-utils	2008-10-23 09:24:48.000000000 -0500
@@ -0,0 +1,24 @@
+#!/bin/sh
+# Switch all devices that were in a HID mode to HCI mode
+# after a resume
+
+. "${PM_FUNCTIONS}"
+
+[ -f /etc/default/bluetooth ] || exit $NA
+
+. /etc/default/bluetooth
+
+hid2hci()
+{
+	if [ "$HID2HCI_ENABLED" = "1" ] &amp;&amp; [ -x /usr/sbin/hid2hci ]; then
+		/usr/sbin/hid2hci --tohci
+        fi
+}
+
+case "$1" in
+	thaw|resume)
+		hid2hci
+		;;
+	*) exit $NA
+		;;
+esac
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.am \
                bluez-4.12.new/scripts/Makefile.am
--- bluez-4.12/scripts/Makefile.am	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.am	2008-10-23 09:37:16.000000000 -0500
@@ -9,7 +9,7 @@
 udev_SCRIPTS = bluetooth_serial
 endif
 
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default \
bluetooth.pm-utils  
 MAINTAINERCLEANFILES = Makefile.in
 
@@ -24,3 +24,10 @@
 	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
 endif
+
+install-data-pm:
+	$(mkinstalldirs) $(DESTDIR)/$(libexecdir)/pm-utils/sleep.d
+	$(INSTALL) -D -m 744 $(srcdir)/bluetooth.pm-utils \
$(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48bluez +
+uninstall-pm:
+	@rm -f $(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48bluez
diff -Nur -x '*.orig' -x '*~' bluez-4.12/scripts/Makefile.in \
                bluez-4.12.new/scripts/Makefile.in
--- bluez-4.12/scripts/Makefile.in	2008-10-07 13:28:29.000000000 -0500
+++ bluez-4.12.new/scripts/Makefile.in	2008-10-23 09:38:54.000000000 -0500
@@ -192,7 +192,7 @@
 @PCMCIARULES_TRUE@rules_DATA = bluetooth.rules
 @PCMCIARULES_TRUE@udevdir = $(libexecdir)/udev
 @PCMCIARULES_TRUE@udev_SCRIPTS = bluetooth_serial
-EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default
+EXTRA_DIST = bluetooth.rules bluetooth_serial bluetooth.init bluetooth.default \
hid2hci.pm-utils  MAINTAINERCLEANFILES = Makefile.in
 all: all-am
 
@@ -335,6 +335,8 @@
 	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
 @INITSCRIPTS_FALSE@uninstall-local:
 @INITSCRIPTS_FALSE@install-data-local:
+uninstall-pm:
+install-data-pm:
 clean: clean-am
 
 clean-am: clean-generic clean-libtool mostlyclean-am
@@ -354,7 +356,7 @@
 info-am:
 
 install-data-am: install-data-local install-rulesDATA \
-	install-udevSCRIPTS
+	install-udevSCRIPTS install-data-pm
 
 install-dvi: install-dvi-am
 
@@ -416,6 +418,13 @@
 @INITSCRIPTS_TRUE@uninstall-local:
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/init.d/bluetooth
 @INITSCRIPTS_TRUE@	@rm -f $(DESTDIR)$(sysconfdir)/default/bluetooth
+
+install-data-pm:
+	$(mkinstalldirs) $(DESTDIR)/$(libexecdir)/pm-utils/sleep.d
+	$(INSTALL) -D -m 744 $(srcdir)/bluetooth.pm-utils \
$(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48bluez +
+uninstall-pm:
+	@rm -f $(DESTDIR)$(libexecdir)/pm-utils/sleep.d/48bluez
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023205812</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 20:58:12-0400</timestampReceived><subject>Re: [PATCH] first udev rules for running hid2hci</subject><body>

Hi Mario,

&gt; Attached is a patch that adds another set of udev rules that will run
&gt; hid2hci, at least for the Dell BT adapters.  Other adapters can get
&gt; added in too, but I think some more attributes will be needed for them. 
&gt; I'm doing this as a separate set of udev rules than the PCMCIA rules so
&gt; that these can be installed by default whereas the PCMCIA ones are
&gt; normally placed in a different binary package for distros.

I like to have this all in one and that the PCMCIA ones are in a
different binary package is a distro problem. They don't have to be
since we don't have the dependency of pcmcia-cs anymore. That is ancient
2.4 stuff.

If you are doing this, then also please modify hid2hci so it can take a
parameter to select the device you run it for. Currently it would switch
all of them. Even if you trigger it for only one.

And I was actually more thinking to convert hid2hci into a bluetoothd
plugin so the core daemon has control over it. Think about it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023214058</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-23 21:40:58-0400</timestampReceived><subject>[PATCH] Fix incorrect device name in the wizard</subject><body>

When the device is selected in the list before its name is resolved,
the device name in the checks as well as the final page of the wizard
will be wrong.

Attached patch should fix that.

["0001-Fix-incorrect-device-name-in-the-wizard.patch" (0001-Fix-incorrect-device-name-in-the-wizard.patch)]

From 3ee1953501e1a64aba62405d63fde893a6a609ba Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 23 Oct 2008 22:30:11 +0100
Subject: [PATCH] Fix incorrect device name in the wizard

When the device is selected in the list before its name is resolved,
the device name in the checks as well as the final page of the wizard
will be wrong.
---
 wizard/main.c |   40 ++++++++++++++++++++++++----------------
 1 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/wizard/main.c b/wizard/main.c
index b1b944b..6f0b035 100644
--- a/wizard/main.c
+++ b/wizard/main.c
@@ -193,7 +193,28 @@ static void prepare_callback(GtkWidget *assistant,
 		bluetooth_client_stop_discovery(client);
 
 	if (page == page_setup) {
-		gchar *text, *markup;
+		GtkTreeModel *model;
+		GtkTreeIter iter;
+		gchar *text, *markup, *address, *name;
+		guint type;
+
+		/* Get the info about the device now,
+		 * we can't get here without a valid selection */
+		if (gtk_tree_selection_get_selected(search_selection, &amp;model, &amp;iter) == FALSE)
+			g_assert_not_reached();
+
+		gtk_tree_model_get(model, &amp;iter,
+				BLUETOOTH_COLUMN_ADDRESS, &amp;address,
+				BLUETOOTH_COLUMN_ALIAS, &amp;name,
+				BLUETOOTH_COLUMN_TYPE, &amp;type, -1);
+
+		g_free(target_address);
+		target_address = address;
+
+		g_free(target_name);
+		target_name = name;
+
+		target_type = type;
 
 		text = g_strdup_printf(_("Connecting to %s now ..."),
 								target_name);
@@ -353,30 +374,17 @@ static void select_callback(GtkTreeSelection *selection, gpointer user_data)
 	GtkAssistant *assistant = user_data;
 	GtkTreeModel *model;
 	GtkTreeIter iter;
-	gboolean selected;
 	gboolean paired = FALSE;
-	gchar *address, *name;
-	guint type;
+	gboolean selected;
 
 	selected = gtk_tree_selection_get_selected(selection, &amp;model, &amp;iter);
 
 	if (selected == TRUE) {
 		gtk_tree_model_get(model, &amp;iter,
-				BLUETOOTH_COLUMN_PAIRED, &amp;paired,
-				BLUETOOTH_COLUMN_ADDRESS, &amp;address,
-				BLUETOOTH_COLUMN_ALIAS, &amp;name,
-				BLUETOOTH_COLUMN_TYPE, &amp;type, -1);
+				BLUETOOTH_COLUMN_PAIRED, &amp;paired, -1);
 
 		if (paired == TRUE)
 			selected = FALSE;
-
-		g_free(target_address);
-		target_address = address;
-
-		g_free(target_name);
-		target_name = name;
-
-		target_type = type;
 	}
 
 	gtk_assistant_set_page_complete(assistant, page_search, selected);
-- 
1.6.0.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023045611</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:56:11-0400</timestampReceived><subject>Re: [PATCH] Quirk for Apple Aluminum Bluetooth  keyboard FN key</subject><body>

Hi Mario,

&gt; This patch was present in Ubuntu Hardy, but got dropped by accident in
&gt; Intrepid and never submitted upstream.  It adds a quirk enabling the FN
&gt; key on the Apple Aluminum Bluetooth Wireless Keyboard.

yeah, the Ubuntu kernel team is pretty bad in getting patches back to
upstream. However in this case please check with the upstream kernel
since the HID bus makes all quirks general to the HID subsystem.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014225748</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-14 22:57:48-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

Bastien Nocera wrote:
&gt; Before:
&gt; http://img369.imageshack.us/my.php?image=screenshotbluetoothprefoa6.png
&gt; After:
&gt; http://img233.imageshack.us/my.php?image=screenshotbluetoothprefby0.png
&gt;
&gt; Fixes:
&gt; https://bugzilla.redhat.com/show_bug.cgi?id=465398 (No labels in
&gt; buttons)
&gt; http://bugzilla.gnome.org/show_bug.cgi?id=505606 (trust toggle button
&gt; appears/disappears)
&gt; And the discussion that were recently made on the list about having a
&gt; shorter dialogue for EeePCs.
&gt;   
It's an improvement.  I've attached what it looks like (in relatively 
stock EeePC 701 environment).

It's still too tall to see the Delete button and the Close button 
without dragging the window up and down.

Of course, it's not the only thing that produces windows too tall for 
this display :)


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014230449</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-14 23:04:49-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

On Wed, 2008-10-15 at 11:57 +1300, David Sainty wrote:
&gt; Bastien Nocera wrote:
&gt; &gt; Before:
&gt; &gt; http://img369.imageshack.us/my.php?image=screenshotbluetoothprefoa6.png
&gt; &gt; After:
&gt; &gt; http://img233.imageshack.us/my.php?image=screenshotbluetoothprefby0.png
&gt; &gt;
&gt; &gt; Fixes:
&gt; &gt; https://bugzilla.redhat.com/show_bug.cgi?id=465398 (No labels in
&gt; &gt; buttons)
&gt; &gt; http://bugzilla.gnome.org/show_bug.cgi?id=505606 (trust toggle button
&gt; &gt; appears/disappears)
&gt; &gt; And the discussion that were recently made on the list about having a
&gt; &gt; shorter dialogue for EeePCs.
&gt; &gt;   
&gt; It's an improvement.  I've attached what it looks like (in relatively 
&gt; stock EeePC 701 environment).

You haven't attached anything :) I would recommend Evolution's
attachment reminder plugin :)

&gt; It's still too tall to see the Delete button and the Close button 
&gt; without dragging the window up and down.
&gt; 
&gt; Of course, it's not the only thing that produces windows too tall for 
&gt; this display :)

There might be some spacing issue still, as well as a too high default
size. What's the size of the display on the EeePC again?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081014232505</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-10-14 23:25:05-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

Bastien Nocera wrote:
&gt; You haven't attached anything :) I would recommend Evolution's
&gt; attachment reminder plugin :)
&gt;
&gt;   

Huh!  It previewed with it attached...  I think it's a Thunderbird 
feature.  Oh yeah, I attached it inline and Thunderbird stripped the 
image out when I sent the email in text :)  Amusing.  Oh look, and I've 
already deleted the image from my file system too.

Lets try again...

&gt;&gt; It's still too tall to see the Delete button and the Close button 
&gt;&gt; without dragging the window up and down.
&gt;&gt;
&gt;&gt; Of course, it's not the only thing that produces windows too tall for 
&gt;&gt; this display :)
&gt;&gt;     
&gt;
&gt; There might be some spacing issue still, as well as a too high default
&gt; size. What's the size of the display on the EeePC again?
&gt;   
800x480 full screen.  But the standard window manager decorations on the 
EeePC make anything taller than 422 pixels start to not fit.

["shot.gif" (image/gif)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081015220651</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-15 22:06:51-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

On Wed, 2008-10-15 at 12:25 +1300, David Sainty wrote:
&lt;snip&gt;
&gt; 800x480 full screen.  But the standard window manager decorations on the 
&gt; EeePC make anything taller than 422 pixels start to not fit.

I think we can easily reduce the space taken by the visibility and
friendly name sections. I'll try to get a patch ready tomorrow.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023045718</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:57:18-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

Hi Bastien,

&gt; &gt; 800x480 full screen.  But the standard window manager decorations on the 
&gt; &gt; EeePC make anything taller than 422 pixels start to not fit.
&gt; 
&gt; I think we can easily reduce the space taken by the visibility and
&gt; friendly name sections. I'll try to get a patch ready tomorrow.

any updates here that I might have missed?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015152023</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-15 15:20:23-0400</timestampReceived><subject>Re: [PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

Hi Bastien,

&gt; If anyone has an Apple Wireless keyboard to test pairing against. I
&gt; believe the attached patch to be correct. Otherwise Apple keyboards
&gt; (which use the same OUI) will get a PIN of 0000.

sounds reasonable. Patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015184053</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-15 18:40:53-0400</timestampReceived><subject>Re: [PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

Hi Bastien:

I've got one of these Aluminum BT keyboards, but it's MAC address is
quite different:

00:1B:63:FA:CD:5A Apple Wireless Keyboard

Where did you get your data from indicating that it shared the same
prefix as the mighty mouse?

Regards

Bastien Nocera wrote:
&gt; Heya,
&gt;
&gt; If anyone has an Apple Wireless keyboard to test pairing against. I
&gt; believe the attached patch to be correct. Otherwise Apple keyboards
&gt; (which use the same OUI) will get a PIN of 0000.
&gt;
&gt; Cheers
&gt;   

-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081015213219</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-15 21:32:19-0400</timestampReceived><subject>Re: [PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

On Wed, 2008-10-15 at 13:40 -0500, Mario Limonciello wrote:
&gt; Hi Bastien:
&gt; 
&gt; I've got one of these Aluminum BT keyboards, but it's MAC address is
&gt; quite different:
&gt; 
&gt; 00:1B:63:FA:CD:5A Apple Wireless Keyboard
&gt; 
&gt; Where did you get your data from indicating that it shared the same
&gt; prefix as the mighty mouse?

Some of them would. See bug report at:
https://bugzilla.redhat.com/show_bug.cgi?id=466988

Pairing keyboards still doesn't work as expected, but I should get some
hardware soon to fix that.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015214150</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-15 21:41:50-0400</timestampReceived><subject>Re: [PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

Hi Bastien:

Yeah, I'll definitely agree these keyboards are quite finicky to get
paired.  I was initially hoping your patch would help that, but then
realized it won't affect mine.  It seems that the only way I've gotten
them to improve is if I remove any other devices that were paired with
them previously from the proximity and try to find a good combination of
pressing buttons in the GUI and pressing the power button on the keyboard.

I  think the poster to that bug has the older pre-broadcom series of
this hardware, which would explain the similar ID to the mighty mouse.

Regards

Bastien Nocera wrote:
&gt; On Wed, 2008-10-15 at 13:40 -0500, Mario Limonciello wrote:
&gt;   
&gt;&gt; Hi Bastien:
&gt;&gt;
&gt;&gt; I've got one of these Aluminum BT keyboards, but it's MAC address is
&gt;&gt; quite different:
&gt;&gt;
&gt;&gt; 00:1B:63:FA:CD:5A Apple Wireless Keyboard
&gt;&gt;
&gt;&gt; Where did you get your data from indicating that it shared the same
&gt;&gt; prefix as the mighty mouse?
&gt;&gt;     
&gt;
&gt; Some of them would. See bug report at:
&gt; https://bugzilla.redhat.com/show_bug.cgi?id=466988
&gt;
&gt; Pairing keyboards still doesn't work as expected, but I should get some
&gt; hardware soon to fix that.
&gt;
&gt; Cheers
&gt;
&gt;   

-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081015152230</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-15 15:22:30-0400</timestampReceived><subject>Re: [PATCHes] Add sixpair</subject><body>

Hi Bastien,

&gt; Here are the patches to get sixpair support built into BlueZ. It uses
&gt; libusb-1.0 as well as a yet to be merged libusb-1.0 patch to allow
&gt; re-attaching a driver to a device.

with the 2.6.28 kernel we should get a better HID driver model (aka HID
bus) and then we might not need to libusb stuff anymore. We can go
directly to HID and read the descriptors and send vendor HID reports.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081015235257</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-15 23:52:57-0400</timestampReceived><subject>Re: [PATCHes] Add sixpair</subject><body>

Hi Bastien,

&gt; Here are the patches to get sixpair support built into BlueZ. It uses
&gt; libusb-1.0 as well as a yet to be merged libusb-1.0 patch to allow
&gt; re-attaching a driver to a device.

so I applied all patches except the changes for the build system. I am
not sure that this is the right way to go.

If we require libusb-1.0, then we should just change our current code
that depends on libusb-0.1 and require libusb-1.0 for all of it.

&gt; Problems left to solve:
&gt; - sixaxis enabler code (as seen in enable_sixaxis() in compat/hidd.c)
&gt; seems to have disappeared from the input plugin. Is that done in the
&gt; kernel now, or was it just removed?

The kernel is not doing it. Seems to be an oversight.

&gt; - After "cable pairing" the device, I need to unplug/replug the adapter,
&gt; or restart bluetoothd. Can anyone think of a better way of getting the
&gt; list of devices updated?

We could use inotify or SIGUSR2 or something to re-read the database.

&gt; - Some minor niggles in the code itself (use D-Bus instead of parsing
&gt; command-line tools)

Of course.

&gt; - udev rule(s) and parsing only the selected device would be necessary
&gt; if not required

If we can do this via the HID bus, then we can do it every time and it
would not affect the controller itself.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081016002838</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-16 00:28:38-0400</timestampReceived><subject>Re: [PATCHes] Add sixpair</subject><body>

On Thu, 2008-10-16 at 01:52 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; Here are the patches to get sixpair support built into BlueZ. It uses
&gt; &gt; libusb-1.0 as well as a yet to be merged libusb-1.0 patch to allow
&gt; &gt; re-attaching a driver to a device.
&gt; 
&gt; so I applied all patches except the changes for the build system. I am
&gt; not sure that this is the right way to go.
&gt; 
&gt; If we require libusb-1.0, then we should just change our current code
&gt; that depends on libusb-0.1 and require libusb-1.0 for all of it.

That'd mean porting:
- dfutool
- avctrl
- bccmd's csr_usb code
- hid2hci

The code isn't too complicated, but I wouldn't be able to test any of
the code (apart from maybe hid2hci). Is this something I can promise to
do in the future? It's not very complicated, just time consuming.

&gt; &gt; Problems left to solve:
&gt; &gt; - sixaxis enabler code (as seen in enable_sixaxis() in compat/hidd.c)
&gt; &gt; seems to have disappeared from the input plugin. Is that done in the
&gt; &gt; kernel now, or was it just removed?
&gt; 
&gt; The kernel is not doing it. Seems to be an oversight.

OK. I'll re-add the code to the input plugin.

&gt; &gt; - After "cable pairing" the device, I need to unplug/replug the adapter,
&gt; &gt; or restart bluetoothd. Can anyone think of a better way of getting the
&gt; &gt; list of devices updated?
&gt; 
&gt; We could use inotify or SIGUSR2 or something to re-read the database.

There's a problem with the current method in that there might be data
loss if we're adding data from both bluetoothd, and an external program
(both processes writing the same file at the same time).

We could solve the data loss, and update problem by having an internal,
root only, dbus method available for cable pairing of that sort. For
example, on org.bluez.Adapter:
void AddCablePairedDevice (string name,
                           string address,
                           unsigned int vendor_id,
                           unsigned int product_id,
                           string pnp_record);

The function would just need to do all the storage work sixpair
currently does, and create the device internally similarly to
create_stored_device_from_profiles().

It might also be useful to have an internal (non-dbus) API at the
manager level for hid proxy dongles (where the adapter wouldn't yet
exist when we store the to-be-created devices, not sure how to be
certain those devices will be temporary though).

&gt; &gt; - Some minor niggles in the code itself (use D-Bus instead of parsing
&gt; &gt; command-line tools)
&gt; 
&gt; Of course.
&gt; 
&gt; &gt; - udev rule(s) and parsing only the selected device would be necessary
&gt; &gt; if not required
&gt; 
&gt; If we can do this via the HID bus, then we can do it every time and it
&gt; would not affect the controller itself.

Unless I misunderstood the feature, when claiming the interface, that
would actually remove the pad as an input device.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023044642</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:46:42-0400</timestampReceived><subject>Re: [PATCH] Add support for HID-&gt;HCI switching on Dell BT365</subject><body>

Hi Mario,

&gt; This patch adds the VID/PID for this adapter which uses the same
&gt; methodology for switching modes as the BT370 and BT410.

that was my missing patch. This and the Logitech one has been applied
(and fixed up) and pushed.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023044838</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:48:38-0400</timestampReceived><subject>Re: Questions regarding NetLink APIs.</subject><body>

Hi Alok,

&gt; I had a few queries regarding the netlink APIs. I have been referring to
&gt; net/wireless/nl80211.c for reference.
&gt; 
&gt; 1. Would the ioctls on raw sock(BTPROTO_HCI), be converted into netlink
&gt; commands?
&gt; eg HCIGETDEVLIST (NLBLUETOOTH_CMD_GET_DEVLIST),
&gt; HCIGETDEVINFO    (NLBLUETOOTH_CMD_GET_DEV_INFO),
&gt; HCIDEVUP         (NLBLUETOOTH_CMD_DEVUP) .. etc 

yes.

&gt; 2. Would the netlink attributes consist of HCI Ioctl requests
&gt; structures ? or individual structure members?
&gt; eg:
&gt; 
&gt; [NLBLUETOOTH_ATTR_DEV_INFO] = {.len = sizeof(struct hci_dev_info)} 

No. We will have the parameters inside the structure as direct
attributes.

&gt; 3. Would it be a separate kernel module? 

No. It will be within bluetooth.ko.

Regards

Marcel



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023045208</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:52:08-0400</timestampReceived><subject>Re: [PATCHes] Add sixpair</subject><body>

Hi Bastien,

&gt; &gt; &gt; Here are the patches to get sixpair support built into BlueZ. It uses
&gt; &gt; &gt; libusb-1.0 as well as a yet to be merged libusb-1.0 patch to allow
&gt; &gt; &gt; re-attaching a driver to a device.
&gt; &gt; 
&gt; &gt; so I applied all patches except the changes for the build system. I am
&gt; &gt; not sure that this is the right way to go.
&gt; &gt; 
&gt; &gt; If we require libusb-1.0, then we should just change our current code
&gt; &gt; that depends on libusb-0.1 and require libusb-1.0 for all of it.
&gt; 
&gt; That'd mean porting:
&gt; - dfutool
&gt; - avctrl
&gt; - bccmd's csr_usb code
&gt; - hid2hci
&gt; 
&gt; The code isn't too complicated, but I wouldn't be able to test any of
&gt; the code (apart from maybe hid2hci). Is this something I can promise to
&gt; do in the future? It's not very complicated, just time consuming.

once I upgraded my laptop with the next generation distros, I will start
porting dfutool, avctrl and bccmd over. Would be nice if you look at the
hid2hci.

&gt; &gt; &gt; Problems left to solve:
&gt; &gt; &gt; - sixaxis enabler code (as seen in enable_sixaxis() in compat/hidd.c)
&gt; &gt; &gt; seems to have disappeared from the input plugin. Is that done in the
&gt; &gt; &gt; kernel now, or was it just removed?
&gt; &gt; 
&gt; &gt; The kernel is not doing it. Seems to be an oversight.
&gt; 
&gt; OK. I'll re-add the code to the input plugin.

Any updates here?

&gt; &gt; &gt; - After "cable pairing" the device, I need to unplug/replug the adapter,
&gt; &gt; &gt; or restart bluetoothd. Can anyone think of a better way of getting the
&gt; &gt; &gt; list of devices updated?
&gt; &gt; 
&gt; &gt; We could use inotify or SIGUSR2 or something to re-read the database.
&gt; 
&gt; There's a problem with the current method in that there might be data
&gt; loss if we're adding data from both bluetoothd, and an external program
&gt; (both processes writing the same file at the same time).
&gt; 
&gt; We could solve the data loss, and update problem by having an internal,
&gt; root only, dbus method available for cable pairing of that sort. For
&gt; example, on org.bluez.Adapter:
&gt; void AddCablePairedDevice (string name,
&gt;                            string address,
&gt;                            unsigned int vendor_id,
&gt;                            unsigned int product_id,
&gt;                            string pnp_record);
&gt; 
&gt; The function would just need to do all the storage work sixpair
&gt; currently does, and create the device internally similarly to
&gt; create_stored_device_from_profiles().
&gt; 
&gt; It might also be useful to have an internal (non-dbus) API at the
&gt; manager level for hid proxy dongles (where the adapter wouldn't yet
&gt; exist when we store the to-be-created devices, not sure how to be
&gt; certain those devices will be temporary though).

I think the D-Bus one would be good enough. Check with Claudio and lets
come up with a patch proposal.

&gt; &gt; &gt; - Some minor niggles in the code itself (use D-Bus instead of parsing
&gt; &gt; &gt; command-line tools)
&gt; &gt; 
&gt; &gt; Of course.
&gt; &gt; 
&gt; &gt; &gt; - udev rule(s) and parsing only the selected device would be necessary
&gt; &gt; &gt; if not required
&gt; &gt; 
&gt; &gt; If we can do this via the HID bus, then we can do it every time and it
&gt; &gt; would not affect the controller itself.
&gt; 
&gt; Unless I misunderstood the feature, when claiming the interface, that
&gt; would actually remove the pad as an input device.

Not with the HID bus and the HID raw support. In that case it should be
possible.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023045330</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:53:30-0400</timestampReceived><subject>Re: Could you explain how to discover remote devices without</subject><body>

Hi,

&gt; Could you explain how to discover remote devices without periodic inquiry ? 
&gt; When I send dbus command "dbus-send --system --type=method_call  --dest="org.bluez" \
&gt; /org/bluez/hci0 org.bluez.Adapter.StartDiscovery", Bluetooth module starts periodic \
&gt; search.  
&gt; I just want only normal search. Even though I have an experience of Bluez 3.x. it's \
&gt; not easy to use BlueZ 4.x API.  

there is no real difference in Periodic Inquiry and Inquiry from the
baseband point of view. Check the Bluetooth specification.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081023045458</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:54:58-0400</timestampReceived><subject>Re: [PATCH] Fix Apple Wireless keyboard pairing?</subject><body>

Hi Mario,

&gt; Yeah, I'll definitely agree these keyboards are quite finicky to get
&gt; paired.  I was initially hoping your patch would help that, but then
&gt; realized it won't affect mine.  It seems that the only way I've gotten
&gt; them to improve is if I remove any other devices that were paired with
&gt; them previously from the proximity and try to find a good combination of
&gt; pressing buttons in the GUI and pressing the power button on the keyboard.
&gt; 
&gt; I  think the poster to that bug has the older pre-broadcom series of
&gt; this hardware, which would explain the similar ID to the mighty mouse.

please do me favor and stop top-posting.

http://www.bluez.org/development/lists/

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023045747</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 04:57:47-0400</timestampReceived><subject>Re: problems with kernel 2.6.23 + bluez 3.36 + SCO</subject><body>

Hi Pierre,

&gt; We develop an application for our board based on SCO. We use the kernel
&gt; version 2.6.23 and the bluez-lib 3.36. However we have a lot of problems and
&gt; some "kernel panic". Below this message you will find some of these kernel
&gt; messages.
&gt; How can we stop it? Have you ever saw that?

switch to a 2.6.27 kernel.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023091212</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-23 09:12:12-0400</timestampReceived><subject>Re: [PATCHes] Better buttons in adapter properties</subject><body>

On Thu, 2008-10-23 at 06:57 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; &gt; 800x480 full screen.  But the standard window manager decorations on the 
&gt; &gt; &gt; EeePC make anything taller than 422 pixels start to not fit.
&gt; &gt; 
&gt; &gt; I think we can easily reduce the space taken by the visibility and
&gt; &gt; friendly name sections. I'll try to get a patch ready tomorrow.
&gt; 
&gt; any updates here that I might have missed?

Not since my rant about the discoverable preferences. The patched
version doesn't take any more space than the current layout, and fixes
discovery problems with the labels, so I would urge you to merge it.

I'll try to have a patch ready for squeezing the rest of the UI when
I've had more of a think about it.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023163403</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-23 16:34:03-0400</timestampReceived><subject>Re: [PATCH] Quirk for Apple Aluminum Bluetooth  keyboard FN key</subject><body>

[Attachment #2 (multipart/mixed)]


Hi Marcel:

Marcel Holtmann wrote:
&gt; Hi Mario,
&gt; yeah, the Ubuntu kernel team is pretty bad in getting patches back to
&gt; upstream. However in this case please check with the upstream kernel
&gt; since the HID bus makes all quirks general to the HID subsystem.
&gt;
&gt; Regards
&gt;
&gt; Marcel
Yeah, that's what I was thinking should be happening, and a little bit
shocked that it didn't work properly since I saw a variation of this
quirk in the hid source files already.  I was a little thrown off though
since there is already a quirk for the mighty mouse sitting in this
section that I was patching, so it seemed sensible to add the quirk for
the keyboard there too.  I'll try to investigate why those quirks aren't
carrying over properly.

Regards

--=20
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["signature.asc" (application/pgp-signature)]
["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023210602</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-10-23 21:06:02-0400</timestampReceived><subject>Re: [PATCH] first udev rules for running hid2hci</subject><body>

[Attachment #2 (multipart/mixed)]


Marcel Holtmann wrote:
&gt; Hi Mario,
&gt;
&gt;   
&gt;
&gt; I like to have this all in one and that the PCMCIA ones are in a
&gt; different binary package is a distro problem. They don't have to be
&gt; since we don't have the dependency of pcmcia-cs anymore. That is ancient
&gt; 2.4 stuff.
&gt;
&gt; If you are doing this, then also please modify hid2hci so it can take a
&gt; parameter to select the device you run it for. Currently it would switch
&gt; all of them. Even if you trigger it for only one.
&gt;
&gt; And I was actually more thinking to convert hid2hci into a bluetoothd
&gt; plugin so the core daemon has control over it. Think about it.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;
&gt;   
Hi Marcel:

That's about the response that I was expecting/thinking.  I'll look into
modifying hid2hci to take parameters.

Regards

-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com

["signature.asc" (application/pgp-signature)]
["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081023211254</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-23 21:12:54-0400</timestampReceived><subject>Re: [PATCH] Add doc for the Icon property</subject><body>

Hi Bastien,

&gt; As mentioned on IRC.

already fixed upstream.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081023234639</emailId><senderName>Alexander Beregalov</senderName><senderEmail>a.beregalov@gmail.com</senderEmail><timestampReceived>2008-10-23 23:46:39-0400</timestampReceived><subject>[PATCH] rfcomm/sock.c: fix warning unused variable</subject><body>

rfcomm/sock.c:795: warning: unused variable 'sk'

Signed-off-by: Alexander Beregalov &lt;a.beregalov@gmail.com&gt;
---

 net/bluetooth/rfcomm/sock.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index 8a972b6..f35e5de 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -792,7 +792,6 @@ static int rfcomm_sock_getsockopt(struct socket *sock, int level, int optname, c
 
 static int rfcomm_sock_ioctl(struct socket *sock, unsigned int cmd, unsigned long arg)
 {
-	struct sock *sk = sock-&gt;sk;
 	int err;
 
 	BT_DBG("sk %p cmd %x arg %lx", sk, cmd, arg);
@@ -801,6 +800,7 @@ static int rfcomm_sock_ioctl(struct socket *sock, unsigned int cmd, unsigned lon
 
 	if (err == -ENOIOCTLCMD) {
 #ifdef CONFIG_BT_RFCOMM_TTY
+		struct sock *sk = sock-&gt;sk;
 		lock_sock(sk);
 		err = rfcomm_dev_ioctl(sk, cmd, (void __user *) arg);
 		release_sock(sk);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081024080650</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-24 08:06:50-0400</timestampReceived><subject>Re: [PATCH] Run hid2hci after resuming from suspend</subject><body>

On Thu, 2008-10-23 at 11:29 -0500, Mario Limonciello wrote:
&gt; 
&gt; +[ -f /etc/default/bluetooth ] || exit $NA
&gt; +
&gt; +. /etc/default/bluetooth

Wrong file to source under Fedora.

&gt; +       if [ "$HID2HCI_ENABLED" = "1" ] &amp;&amp; [ -x /usr/sbin/hid2hci ];
&gt; then

$ grep "HID2HCI_ENABLE[D=]" /etc/sysconfig/bluetooth 
#HID2HCI_ENABLE=true

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081021131541</emailId><senderName>Daniel Matthes</senderName><senderEmail>matthes@ftz.htwk-leipzig.de</senderEmail><timestampReceived>2008-10-21 13:15:41-0400</timestampReceived><subject>Establish a SPP Connection between two linux computers</subject><body>

I want to connect two debian (lenny) systems with two Anycom USB-200 USB Dongles, so \
I've downloaded the bluez-1.41 driver.

I want to create a serial connection (by using SPP). 

At the beginning, I've tested the driver by connecting a linux operating system with \
a windows operating system.

I run  sdptool browse and I've found:

Service Name: Serieller Bluetooth-Anschluss
.
Protocol Descriptor List:
            "L2CAP"  (0x0100)
            "RFCOMM"  (0x0003)
                        Channel: 1
..

After this I run rfcomm bind 0 &lt;bdaddr&gt; 1 and then I could establish with minicom  a \
connection to the windows system and send data.

In the second turn. I install bluez on the second linux computer. After running \
sdptool browse, there are no entries for serial support. I've also created an entry \
with sdptool add -channel 1 SP. Afterwards I could browse the serial port entry with \
the other computer, but there was also no way to connect the computers.

So here my question:  How can I connect two linux systems with bluetooth by using the \
                serial port profile.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081023084314</emailId><senderName>Daniel Matthes</senderName><senderEmail>matthes@ftz.htwk-leipzig.de</senderEmail><timestampReceived>2008-10-23 08:43:14-0400</timestampReceived><subject>Re: Establish a SPP Connection between two linux computers</subject><body>


Hello again,

Is somebody able to solve my problem?

I'm looking for a solution to connect two linux systems by using the serial port \
profile. I have so far found no way to solve this problem, because I could not find \
the serial port service within the bluez driver.

Regards Daniel

-----Ursprüngliche Nachricht-----
Von: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] Im Auftrag von Daniel \
                Matthes
Gesendet: Dienstag, 21. Oktober 2008 15:16
An: 'linux-bluetooth@vger.kernel.org'
Betreff: Establish a SPP Connection between two linux computers

I want to connect two debian (lenny) systems with two Anycom USB-200 USB Dongles, so \
I've downloaded the bluez-1.41 driver.

I want to create a serial connection (by using SPP). 

At the beginning, I've tested the driver by connecting a linux operating system with \
a windows operating system.

I run  sdptool browse and I've found:

Service Name: Serieller Bluetooth-Anschluss
.
Protocol Descriptor List:
            "L2CAP"  (0x0100)
            "RFCOMM"  (0x0003)
                        Channel: 1
..

After this I run rfcomm bind 0 &lt;bdaddr&gt; 1 and then I could establish with minicom  a \
connection to the windows system and send data.

In the second turn. I install bluez on the second linux computer. After running \
sdptool browse, there are no entries for serial support. I've also created an entry \
with sdptool add -channel 1 SP. Afterwards I could browse the serial port entry with \
the other computer, but there was also no way to connect the computers.

So here my question:  How can I connect two linux systems with bluetooth by using the \
                serial port profile.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081024132301</emailId><senderName>Daniel Matthes</senderName><senderEmail>matthes@ftz.htwk-leipzig.de</senderEmail><timestampReceived>2008-10-24 13:23:01-0400</timestampReceived><subject>AW: Establish a SPP Connection between two linux computers</subject><body>

Hello everybody, hello Marcel,

	
I need a quick answer to my question, to solve my task. Could someone please answer \
my question quickly

Thanks in advance

Daniel
-----Ursprüngliche Nachricht-----
Von: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] Im Auftrag von Daniel \
                Matthes
Gesendet: Donnerstag, 23. Oktober 2008 10:43
An: 'linux-bluetooth@vger.kernel.org'
Betreff: Re: Establish a SPP Connection between two linux computers


Hello again,

Is somebody able to solve my problem?

I'm looking for a solution to connect two linux systems by using the serial port \
profile. I have so far found no way to solve this problem, because I could not find \
the serial port service within the bluez driver.

Regards Daniel

-----Ursprüngliche Nachricht-----
Von: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] Im Auftrag von Daniel \
                Matthes
Gesendet: Dienstag, 21. Oktober 2008 15:16
An: 'linux-bluetooth@vger.kernel.org'
Betreff: Establish a SPP Connection between two linux computers

I want to connect two debian (lenny) systems with two Anycom USB-200 USB Dongles, so \
I've downloaded the bluez-1.41 driver.

I want to create a serial connection (by using SPP). 

At the beginning, I've tested the driver by connecting a linux operating system with \
a windows operating system.

I run  sdptool browse and I've found:

Service Name: Serieller Bluetooth-Anschluss
.
Protocol Descriptor List:
            "L2CAP"  (0x0100)
            "RFCOMM"  (0x0003)
                        Channel: 1
..

After this I run rfcomm bind 0 &lt;bdaddr&gt; 1 and then I could establish with minicom  a \
connection to the windows system and send data.

In the second turn. I install bluez on the second linux computer. After running \
sdptool browse, there are no entries for serial support. I've also created an entry \
with sdptool add -channel 1 SP. Afterwards I could browse the serial port entry with \
the other computer, but there was also no way to connect the computers.

So here my question:  How can I connect two linux systems with bluetooth by using the \
                serial port profile.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081027073823</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 07:38:23-0400</timestampReceived><subject>Re: [patch 1/2] btsdio: free sk_buff with kfree_skb</subject><body>

Hi Dave,

&gt; &gt; free sk_buff with kfree_skb, instead of kree
&gt; &gt;  
&gt; &gt; Signed-off-by: Sergio Luis &lt;sergio@larces.uece.br&gt;
&gt; 
&gt; Since this is pretty obvious I'm applying this directly, I hope
&gt; Marcel doesn't mind :-)

that is fine with me. No need to run this through me.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027144647</emailId><senderName>Daniel Matthes</senderName><senderEmail>matthes@ftz.htwk-leipzig.de</senderEmail><timestampReceived>2008-10-27 14:46:47-0400</timestampReceived><subject>Cross-Compile bluez for arm</subject><body>

Hello

Anybody knows about a recent HowTO on cross-compilation of the bluez driver for a ARM-based system

Regards

Daniel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081026123930</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-26 12:39:30-0400</timestampReceived><subject>[PATCH] Sort devices by type in the treeviews</subject><body>

Sorting by RSSI means that the devices just around in the treeview
which is painfully annoying.

["0001-Sort-devices-by-type-in-the-treeviews.patch" (0001-Sort-devices-by-type-in-the-treeviews.patch)]

From dcc41434b39493d97cd3ec36d07c8a59ae4f0211 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Sun, 26 Oct 2008 12:36:33 +0000
Subject: [PATCH] Sort devices by type in the treeviews

Sorting by RSSI means that the devices just around in the treeview
which is painfully annoying.
---
 common/helper.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/common/helper.c b/common/helper.c
index e53d4bc..7335b7f 100644
--- a/common/helper.c
+++ b/common/helper.c
@@ -185,7 +185,7 @@ gchar *show_browse_dialog(void)
 	model = bluetooth_client_get_device_model(client, NULL);
 	sorted = gtk_tree_model_sort_new_with_model(model);
 	gtk_tree_sortable_set_sort_column_id(GTK_TREE_SORTABLE(sorted),
-				BLUETOOTH_COLUMN_RSSI, GTK_SORT_DESCENDING);
+				BLUETOOTH_COLUMN_TYPE, GTK_SORT_DESCENDING);
 	tree = create_tree(sorted, TRUE);
 	g_object_unref(sorted);
 	g_object_unref(model);
-- 
1.6.0.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081027194537</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:45:37-0400</timestampReceived><subject>Re: [PATCH] Sort devices by type in the treeviews</subject><body>

Hi Bastien,

&gt; Sorting by RSSI means that the devices just around in the treeview
&gt; which is painfully annoying.

we want to sort by RSSI to list devices in range first. However we
should extend the sorting to always list already known or paired devices
first. This should stop them from moving around.

If it stil jumps too much for you, then we might just improve the
sorting mechanism to be a little bit more resistance for jumping around,
but sorting by type gives us no advantage.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081026051213</emailId><senderName>"George F. Nemeyer"</senderName><senderEmail>tigerwolf@tigerden.com</senderEmail><timestampReceived>2008-10-26 05:12:13-0400</timestampReceived><subject>4.16 Bluez compile failure</subject><body>

Compile of 4.16 package fails with:

gcc -I../include -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I../gdbus
-DPLUGINDIR=\"/usr/lib/bluetooth/plugins\" -O2 -march=i586 -mtune=i686
-D_FORTIFY_SOURCE=2 -fPIC -Wl,--export-dynamic -pie -o .libs/bluetoothd
main.o security.o sdpd-server.o sdpd-request.o sdpd-service.o
sdpd-database.o plugin.o storage.o agent.o error.o manager.o adapter.o
device.o dbus-common.o dbus-hci.o  ../common/libhelper.a
../gdbus/.libs/libgdbus.a /usr/lib/libglib-2.0.so /usr/lib/libdbus-1.so
../lib/.libs/libbluetooth.so -ldl
device.o(.text+0xbb5): In function `disconnect':
: undefined reference to `g_timeout_add_seconds'
collect2: ld returned 1 exit status
make[2]: *** [bluetoothd] Error 1
make[2]: Leaving directory `/root/Desktop/bluez-4.16/src'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/root/Desktop/bluez-4.16'
make: *** [all] Error 2

Machine info:
Linux blackwolf.tigerden.net 2.6.20_IBM-600 #2 PREEMPT Thu May 8 01:08:22
EDT 2008 i686 pentium2 i386 GNU/Linux

DISTRO:  Vector Linux 5.8 Standard (based on slackware)

Machine sees an adapter:

Oct 25 23:41:33 blackwolf kernel: usb 1-1: new full speed USB device
using uhci_hcd and address 2
Oct 25 23:41:33 blackwolf kernel: usb 1-1: configuration #1 chosen from 1
choice
Oct 25 23:41:34 blackwolf kernel: Bluetooth: Core ver 2.11
Oct 25 23:41:34 blackwolf kernel: NET: Registered protocol family 31
Oct 25 23:41:34 blackwolf kernel: Bluetooth: HCI device and connection
manager initialized
Oct 25 23:41:34 blackwolf kernel: Bluetooth: HCI socket layer initialized
Oct 25 23:41:34 blackwolf kernel: Bluetooth: HCI USB driver ver 2.9
Oct 25 23:41:34 blackwolf kernel: usbcore: registered new interface driver
hci_usb


GCC:
Reading specs from /usr/lib/gcc/i486-slackware-linux/3.4.6/specs
Configured with: ../gcc-3.4.6/configure --prefix=/usr --enable-shared
--enable-threads=posix --enable-__cxa_atexit --disable-checking
--with-gnu-ld --verbose --target=i486-slackware-linux
--host=i486-slackware-linux
Thread model: posix
gcc version 3.4.6

Any help and cure would be appreciated.

=^_^=  Tigerwolf
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081028000042</emailId><senderName>Guillaume Bedot</senderName><senderEmail>littletux@zarb.org</senderEmail><timestampReceived>2008-10-28 00:00:42-0400</timestampReceived><subject>[PATCH] Allow SCO with Asus WL-BTD202 dongle in btusb</subject><body>

Hello again,

This an other patch that allows my dongle to be configured correctly for
the voice/sco profile.

I already sent one for hci_usb some time ago, so it may sound familiar,
but it probably didn't have correct style...

Regards,

Guillaume B.

PS:
The HT-820 combo headset can now quite reliably use alternatively voice
and hi-fi profiles (and the keys).
This sometimes makes pulseaudio crash though.
Anyway, thanks for your hard work.


["btusb-wl-btd202.patch" (btusb-wl-btd202.patch)]

This patch allows the 0b05:1715 Asus WL-BTD202 dongle to be used with a SCO 
headset with having to specify "options btusb force_scofix=1".

Signed-off-by: Guillaume Bedot &lt;littletux@zarb.org&gt;
--- kernel-linus-2.6.28-0.rc1.1.1mdv.orig/drivers/bluetooth/btusb.c	2008-10-27 17:38:14.000000000 +0100
+++ kernel-linus-2.6.28-0.rc1.1.1mdv/drivers/bluetooth/btusb.c	2008-10-27 17:43:34.000000000 +0100
@@ -109,6 +109,9 @@
 	/* Apple MacBook Pro with Broadcom chip */
 	{ USB_DEVICE(0x05ac, 0x820f), .driver_info = BTUSB_RESET },
 
+	/* Asus dongle with Broadcom 2045 chip */
+	{ USB_DEVICE(0x0b05, 0x1715), .driver_info = BTUSB_WRONG_SCO_MTU },
+
 	/* IBM/Lenovo ThinkPad with Broadcom chip */
 	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },
 	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = BTUSB_RESET | BTUSB_WRONG_SCO_MTU },

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081030201222</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-10-30 20:12:22-0400</timestampReceived><subject>Creation of AF_BLUETOOTH socket with HCI_DEV__REG</subject><body>

Hi,

Can there be a scenario where an application can do a hci_open_dev and use the \
Bluetooth Socket, without actually the HCID recieving the HCI_DEV_REG ?

Say a scenario where in only hciattach has been done [UART device] and HCID isn't run \
at all. Then would any other application make use of the hci_open_dev calls ?


Thanks &amp; Regards,
Pavan Savoy.


--
Hyundai to launch the i20 in India. Catch the exclusive preview on ZigWheels.com
http://www.zigwheels.com/b2cam/newsDetails.action?name=Emb11_20080731&amp;path=/INDT/News/ \
Emb11_20080731&amp;page=1&amp;pagecount=2&amp;utm_source=indmail&amp;utm_medium=footer&amp;utm_content=tracking&amp;utm_campaign=Nletter_07oct2008_ZW
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081030094611</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-10-30 09:46:11-0400</timestampReceived><subject>headset doesn't work with mplayer in fc9</subject><body>

Hi all,

I have one problem with mplayer��   mplayer -ao alsa:device=Bluetooth file.mp3

There always display the errors:

[AO_ALSA] alsa-lib: pcm.c:2144:(snd_pcm_open_noupdate) Unknown PCM bluetooth

[AO_ALSA] Playback open error: No such file or directory

Could not open/initialize audio device -&gt; no sound.

Audio: no sound

Video: no video
 

But the mplayer work fine 

Also I can use aplay:  aplay works fine with Bluetooth headset.

Perhaps I didn't set right configuration someone have the same problem or idea?

 

My OS is FC9

bluez-libs-devel-3.30-1.fc9.i386

bluez-utils-alsa-3.30-2.fc9.i386

bluez-utils-gstreamer-3.30-2.fc9.i386

bluez-libs-3.30-1.fc9.i386

bluez-utils-3.30-2.fc9.i386

bluez-utils-cups-3.30-2.fc9.i386

bluez-gnome-analyzer-0.25-1.fc9.i386

bluez-gnome-0.25-1.fc9.i386

bluez-hcidump-1.41-1.fc9.i386

 

alsa-tools-1.0.16-1.fc9.i386

alsa-lib-1.0.16-3.fc9.i386

alsa-lib-devel-1.0.16-3.fc9.i386

alsa-utils-1.0.16-2.fc9.i386

alsa-plugins-pulseaudio-1.0.16-4.fc9.i386

 
pulseaudio-module-x11-0.9.10-1.fc9.i386

alsa-plugins-pulseaudio-1.0.16-4.fc9.i386

gstreamer-plugins-pulse-0.9.5-0.5.svn20070924.fc9.i386

pulseaudio-0.9.10-1.fc9.i386

pulseaudio-module-gconf-0.9.10-1.fc9.i386

pulseaudio-esound-compat-0.9.10-1.fc9.i386

pulseaudio-core-libs-0.9.10-1.fc9.i386

pulseaudio-utils-0.9.10-1.fc9.i386

pulseaudio-libs-0.9.10-1.fc9.i386

pulseaudio-libs-glib2-0.9.10-1.fc9.i386

What I need do else?
Thanks

 


����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081030180500</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-30 18:05:00-0400</timestampReceived><subject>Re: headset doesn't work with mplayer in fc9</subject><body>

Hi Zhigang,

&gt;
&gt; I have one problem with mplayer£º    
&gt; mplayer -ao alsa:device=Bluetooth file.mp3
&gt;
&gt; There always display the errors:
&gt;
&gt; [AO_ALSA] alsa-lib: pcm.c:2144:(snd_pcm_open_noupdate) Unknown PCM  
&gt; bluetooth
&gt;
&gt; [AO_ALSA] Playback open error: No such file or directory
&gt;
&gt; Could not open/initialize audio device -&gt; no sound.
&gt;
&gt; Audio: no sound
&gt;
&gt; Video: no video
&gt;
&gt;
&gt; But the mplayer work fine
&gt;
&gt; Also I can use aplay:  aplay works fine with Bluetooth headset.
&gt;
&gt; Perhaps I didn't set right configuration someone have the same  
&gt; problem or idea?
&gt;
&gt;
&gt;
&gt; My OS is FC9
&gt;
&gt; bluez-libs-devel-3.30-1.fc9.i386
&gt;
&gt; bluez-utils-alsa-3.30-2.fc9.i386
&gt;
&gt; bluez-utils-gstreamer-3.30-2.fc9.i386
&gt;
&gt; bluez-libs-3.30-1.fc9.i386
&gt;
&gt; bluez-utils-3.30-2.fc9.i386

and the latest release is bluez-4.17. So you have too many versions  
behind what we are currently using and what all new distros are using.  
So please re-test with the latest versions please.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081030180817</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-30 18:08:17-0400</timestampReceived><subject>Re: headset doesn't work with mplayer in fc9</subject><body>

On Thu, 2008-10-30 at 19:05 +0100, Marcel Holtmann wrote:
&lt;snip&gt;
&gt; &gt; My OS is FC9
&gt; &gt;
&gt; &gt; bluez-libs-devel-3.30-1.fc9.i386
&gt; &gt;
&gt; &gt; bluez-utils-alsa-3.30-2.fc9.i386
&gt; &gt;
&gt; &gt; bluez-utils-gstreamer-3.30-2.fc9.i386
&gt; &gt;
&gt; &gt; bluez-libs-3.30-1.fc9.i386
&gt; &gt;
&gt; &gt; bluez-utils-3.30-2.fc9.i386
&gt; 
&gt; and the latest release is bluez-4.17. So you have too many versions  
&gt; behind what we are currently using and what all new distros are using.  
&gt; So please re-test with the latest versions please.

FWIW, it's 3.36 in the Fedora 9 updates.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081031080214</emailId><senderName>"Li, Zhigang"</senderName><senderEmail>zhigang.li@intel.com</senderEmail><timestampReceived>2008-10-31 08:02:14-0400</timestampReceived><subject>RE: headset doesn't work with mplayer in fc9</subject><body>

Hi, Marcel
Thanks your information. 
Do you think I have to upate alsa or pulsaludio version.
I wonder the tow part as they are on developing.

Thanks
 

-----Original Message-----
From: linux-bluetooth-owner@vger.kernel.org \
                [mailto:linux-bluetooth-owner@vger.kernel.org] On Behalf Of Marcel \
                Holtmann
Sent: 2008��10� 31�� 2:05
To: Li, Zhigang
Cc: linux-bluetooth@vger.kernel.org
Subject: Re: headset doesn't work with mplayer in fc9

Hi Zhigang,

&gt; 
&gt; I have one problem with mplayer��    
&gt; mplayer -ao alsa:device=Bluetooth file.mp3
&gt; 
&gt; There always display the errors:
&gt; 
&gt; [AO_ALSA] alsa-lib: pcm.c:2144:(snd_pcm_open_noupdate) Unknown PCM  
&gt; bluetooth
&gt; 
&gt; [AO_ALSA] Playback open error: No such file or directory
&gt; 
&gt; Could not open/initialize audio device -&gt; no sound.
&gt; 
&gt; Audio: no sound
&gt; 
&gt; Video: no video
&gt; 
&gt; 
&gt; But the mplayer work fine
&gt; 
&gt; Also I can use aplay:  aplay works fine with Bluetooth headset.
&gt; 
&gt; Perhaps I didn't set right configuration someone have the same  
&gt; problem or idea?
&gt; 
&gt; 
&gt; 
&gt; My OS is FC9
&gt; 
&gt; bluez-libs-devel-3.30-1.fc9.i386
&gt; 
&gt; bluez-utils-alsa-3.30-2.fc9.i386
&gt; 
&gt; bluez-utils-gstreamer-3.30-2.fc9.i386
&gt; 
&gt; bluez-libs-3.30-1.fc9.i386
&gt; 
&gt; bluez-utils-3.30-2.fc9.i386

and the latest release is bluez-4.17. So you have too many versions  
behind what we are currently using and what all new distros are using.  
So please re-test with the latest versions please.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
����{.n�+�������+%���������w��{.n�+����{���nz�(����^n�r���z���h�����&amp;���z��z����+��+zf���h���~����i���������z_���j:+v���)���m



</body></email><email><emailId>20081103163810</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-11-03 16:38:10-0400</timestampReceived><subject>Re: Creation of AF_BLUETOOTH socket with HCI_DEV__REG</subject><body>

Hi,

I have an application that does a hci_open_dev, and what I am trying to understand \
from the stack code is why can't [and further on how can..] my application do the \
hci_open_dev [basically the socket(AF_BLUETOOTH)], without the hcid service being On.

note: I have to do hciattach because I need to use UART.


----- Original Message -----
From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
To: pavan savoy &lt;pavan_savoy@indiatimes.com&gt;
Cc: linux-bluetooth@vger.kernel.org
Sent: Fri, 31 Oct 2008 04:52:26 +0530 (IST)
Subject: Re: Creation of AF_BLUETOOTH socket with HCI_DEV__REG

Hi Pavan,

&gt; Can there be a scenario where an application can do a hci_open_dev  
&gt; and use the Bluetooth Socket, without actually the HCID recieving  
&gt; the HCI_DEV_REG ?
&gt; 
&gt; Say a scenario where in only hciattach has been done [UART device]  
&gt; and HCID isn't run at all. Then would any other application make use  
&gt; of the hci_open_dev calls ?

I have really no idea what you are trying to achieve here. hciattach  
and hcid are not tight together at all.

Regards

Marcel




--
Hyundai to launch the i20 in India. Catch the exclusive preview on ZigWheels.com
http://www.zigwheels.com/b2cam/newsDetails.action?name=Emb11_20080731&amp;path=/INDT/News/ \
Emb11_20080731&amp;page=1&amp;pagecount=2&amp;utm_source=indmail&amp;utm_medium=footer&amp;utm_content=tracking&amp;utm_campaign=Nletter_07oct2008_ZW
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081028021004</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-28 02:10:04-0400</timestampReceived><subject>Re: [PATCH] Allow SCO with Asus WL-BTD202 dongle in btusb</subject><body>

Hi Guillaume,

&gt; This an other patch that allows my dongle to be configured correctly for
&gt; the voice/sco profile.
&gt; 
&gt; I already sent one for hci_usb some time ago, so it may sound familiar,
&gt; but it probably didn't have correct style...

you have to prove this one. Boot a kernel without the patch and call
hciconfig hci0 up and then show me the output of hciconfig -a.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027194645</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:46:45-0400</timestampReceived><subject>Re: 4.16 Bluez compile failure</subject><body>

Hi George,

&gt; Compile of 4.16 package fails with:
&gt; 
&gt; gcc -I../include -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include
&gt; -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I../gdbus
&gt; -DPLUGINDIR=\"/usr/lib/bluetooth/plugins\" -O2 -march=i586 -mtune=i686
&gt; -D_FORTIFY_SOURCE=2 -fPIC -Wl,--export-dynamic -pie -o .libs/bluetoothd
&gt; main.o security.o sdpd-server.o sdpd-request.o sdpd-service.o
&gt; sdpd-database.o plugin.o storage.o agent.o error.o manager.o adapter.o
&gt; device.o dbus-common.o dbus-hci.o  ../common/libhelper.a
&gt; ../gdbus/.libs/libgdbus.a /usr/lib/libglib-2.0.so /usr/lib/libdbus-1.so
&gt; ../lib/.libs/libbluetooth.so -ldl
&gt; device.o(.text+0xbb5): In function `disconnect':
&gt; : undefined reference to `g_timeout_add_seconds'
&gt; collect2: ld returned 1 exit status
&gt; make[2]: *** [bluetoothd] Error 1
&gt; make[2]: Leaving directory `/root/Desktop/bluez-4.16/src'
&gt; make[1]: *** [all-recursive] Error 1
&gt; make[1]: Leaving directory `/root/Desktop/bluez-4.16'
&gt; make: *** [all] Error 2
&gt; 
&gt; Machine info:
&gt; Linux blackwolf.tigerden.net 2.6.20_IBM-600 #2 PREEMPT Thu May 8 01:08:22
&gt; EDT 2008 i686 pentium2 i386 GNU/Linux
&gt; 
&gt; DISTRO:  Vector Linux 5.8 Standard (based on slackware)

you need a GLib version with g_timeout_add_seconds. So it seems that
your version of GLib is just too old. Which version are you using?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027195622</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-10-27 19:56:22-0400</timestampReceived><subject>Re: [PATCH] Sort devices by type in the treeviews</subject><body>

On Mon, 2008-10-27 at 20:45 +0100, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; Sorting by RSSI means that the devices just around in the treeview
&gt; &gt; which is painfully annoying.
&gt; 
&gt; we want to sort by RSSI to list devices in range first. However we
&gt; should extend the sorting to always list already known or paired devices
&gt; first. This should stop them from moving around.
&gt; 
&gt; If it stil jumps too much for you, then we might just improve the
&gt; sorting mechanism to be a little bit more resistance for jumping around,
&gt; but sorting by type gives us no advantage.

It certainly jumps around far too much. It flickers tens of times a
second, switching between a phone and the Mac mini just next to it...

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027180454</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 18:04:54-0400</timestampReceived><subject>Re: Missing support in btusb for broadcom dongle 0a5c:2009</subject><body>

Hi Guillaume,

&gt; It seems this particular dongle needs a quirk that existed in hci_usb,
&gt; but doesn't in btusb.
&gt; 
&gt; Is it possible to send some command to use this dongle (as hciconfig
&gt; reset can replace the reset quirk) ?
&gt; 
&gt; Or should the quirk be introduced in btusb too ?

you can load btusb with reset=1 and that does the same trick, but the
quirk should be added to btusb directly. Send in the lsusb output and
content of /proc/bus/usb/devices for your dongle.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027193523</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:35:23-0400</timestampReceived><subject>Re: [PATCH] Missing support in btusb for broadcom dongle 0a5c:2009</subject><body>

Hi Guillaume,

&gt; &gt; &gt; It seems this particular dongle needs a quirk that existed in hci_usb,
&gt; &gt; &gt; but doesn't in btusb.
&gt; &gt; &gt; 
&gt; &gt; &gt; Is it possible to send some command to use this dongle (as hciconfig
&gt; &gt; &gt; reset can replace the reset quirk) ?
&gt; &gt; &gt; 
&gt; &gt; &gt; Or should the quirk be introduced in btusb too ?
&gt; &gt; 
&gt; &gt; you can load btusb with reset=1 and that does the same trick, but the
&gt; &gt; quirk should be added to btusb directly. Send in the lsusb output and
&gt; &gt; content of /proc/bus/usb/devices for your dongle.
&gt; 
&gt; Sorry I was not clear enough...
&gt; 
&gt; It's a different init quirk that concern only that dongle at the moment.
&gt; With this patch it should be clearer.

hah. We forgot to port this one over from hci_usb :(

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027194052</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:40:52-0400</timestampReceived><subject>Re: Problems &amp; crash with Bluecore6 and SDIO driver</subject><body>

Hi Mark,

&gt; &gt; Deep sleep control is done on a per-function basis so you need to write
&gt; &gt; 0x11 to disable deep sleep on function 1 (the bluetooth function).
&gt; 
&gt; Thanks for the response, David.
&gt; 
&gt; Applying Tomas' patch does indeed fix the crash.
&gt; I put a sdio_f0_writeb(data-&gt;func, 0x11, 0xf0, NULL); in btsdio_open(). This
&gt; register write does seem to have some effect. Without it, idle current was
&gt; 0.6mA. With the write, idle current is around 2.5mA. However, the BC6 still
&gt; will not respond to commands after being idle for several seconds. Or, it will
&gt; respond but with bogus data (like a features bitfield of all 0x00s).
&gt; 
&gt; Then, I realized that if I run this command:
&gt; hciconfig hci0 up ; bccmd psset -s psram -r 0x0229 0
&gt; along with the register write, everything works great. I appear to have to do
&gt; both: the register write and the PSKEY setting. One or the other alone is not
&gt; sufficient.

the 0x0229 translates to PSKEY_DEEP_SLEEP_STATE if anybody wonders. So
for a full support of the BlueCore6 SDIO interface we would have to do a
little bit more work. I stopped looking into it since the only BlueCore6
that I have is an engineering release and I haven't checked it for a
while. Never got updated hardware. Hint hint ;)

&gt; Does this seem correct to you? I can't see how btsdio could work on a BC6
&gt; without following this process, unless I have a old bad firmware or something.

At the last BlueZ developer meeting, we discussed an init stage for all
Bluetooth drivers. The init stage then can be used to init hardware with
hardware specific details like PS settings or firmware download.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027194745</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:47:45-0400</timestampReceived><subject>Re: pairing of bluez-utils 3.36-1 with keysonic 340 BT fails (no</subject><body>

Hi Fiorellino,

&gt; I have a keysonic bluetooth keyboard.
&gt; It works perfectly under windows (I know you don't care, but at least
&gt; the keyboard is working fine!) using the embedded BT controller of my
&gt; laptop.
&gt; 
&gt; Now I'd like to use it under Debian lenny/sid in an embedded PC
&gt; (alix3d3) using a Trust Ultra Small Bluetooth 2 USB Adapter.
&gt; 
&gt; With "apt-get install" I installed bluez-utils 3.36-1.

we are already at bluez-4.17 release. So 3.36 is pretty outdated and it
has a bug within its HID support.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027195202</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:52:02-0400</timestampReceived><subject>Re: [PATCH] Add support for pairing a few GPS devices</subject><body>

Hi Bastien,

&gt; Add support for hard-coded pincodes for a few GPS devices, one being
&gt; mine, the other being mentioned by Ralph Loader in
&gt; https://bugzilla.redhat.com/show_bug.cgi?id=464446

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027195749</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 19:57:49-0400</timestampReceived><subject>Re: [PATCH] Fix incorrect device name in the wizard</subject><body>

Hi Bastien,

&gt; When the device is selected in the list before its name is resolved,
&gt; the device name in the checks as well as the final page of the wizard
&gt; will be wrong.

patch has been applied, but I am worried about increasing the reference
count of the agent and never decreasing it. Do you think that is a good
idea?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027200101</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 20:01:01-0400</timestampReceived><subject>Re: Establish a SPP Connection between two linux computers</subject><body>

Hi Daniel,

&gt; I want to connect two debian (lenny) systems with two Anycom USB-200 USB Dongles, \
&gt; so I've downloaded the bluez-1.41 driver. 
&gt; I want to create a serial connection (by using SPP). 
&gt; 
&gt; At the beginning, I've tested the driver by connecting a linux operating system \
&gt; with a windows operating system. 
&gt; I run  sdptool browse and I've found:
&gt; 
&gt; Service Name: Serieller Bluetooth-Anschluss
&gt; .
&gt; Protocol Descriptor List:
&gt; "L2CAP"  (0x0100)
&gt; "RFCOMM"  (0x0003)
&gt; Channel: 1
&gt; ..
&gt; 
&gt; After this I run rfcomm bind 0 &lt;bdaddr&gt; 1 and then I could establish with minicom  \
&gt; a connection to the windows system and send data. 
&gt; In the second turn. I install bluez on the second linux computer. After running \
&gt; sdptool browse, there are no entries for serial support. I've also created an entry \
&gt; with sdptool add -channel 1 SP. Afterwards I could browse the serial port entry \
&gt; with the other computer, but there was also no way to connect the computers.
&gt; 
&gt; So here my question:  How can I connect two linux systems with bluetooth by using \
&gt; the serial port profile.

the rfcomm listen command might get you somewhere, but also rctest would
do it. However in the end you have to write your own daemon to do the
work correctly.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20081027200332</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-27 20:03:32-0400</timestampReceived><subject>Re: [PATCH] Sort devices by type in the treeviews</subject><body>

Hi Bastien,

&gt; &gt; &gt; Sorting by RSSI means that the devices just around in the treeview
&gt; &gt; &gt; which is painfully annoying.
&gt; &gt; 
&gt; &gt; we want to sort by RSSI to list devices in range first. However we
&gt; &gt; should extend the sorting to always list already known or paired devices
&gt; &gt; first. This should stop them from moving around.
&gt; &gt; 
&gt; &gt; If it stil jumps too much for you, then we might just improve the
&gt; &gt; sorting mechanism to be a little bit more resistance for jumping around,
&gt; &gt; but sorting by type gives us no advantage.
&gt; 
&gt; It certainly jumps around far too much. It flickers tens of times a
&gt; second, switching between a phone and the Mac mini just next to it...

then we just need to be smart about it. Meaning we only switch positions
if the RSSI value is a big difference. So that close devices don't jump
that much.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027201406</emailId><senderName>"George F. Nemeyer"</senderName><senderEmail>tigerwolf@tigerden.com</senderEmail><timestampReceived>2008-10-27 20:14:06-0400</timestampReceived><subject>Re: 4.16 Bluez compile failure</subject><body>

On Mon, 27 Oct 2008, Marcel Holtmann wrote:

&gt; you need a GLib version with g_timeout_add_seconds. So it seems that
&gt; your version of GLib is just too old. Which version are you using?

glib-1.2.10-i386-2
glib2-2.12.10-i586-4vl58
glibc-2.3.6-i486-6
glibc-solibs-2.3.6-i486-6
glibc-i18n-2.3.6-noarch-6
glibc-zoneinfo-2.3.6-noarch-6

These are the latest currently available for this distribution.  It's
currently deployed across about 40 production machines.

Regards,

George Nemeyer
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081027225352</emailId><senderName>Fiorellino</senderName><senderEmail>fiorellino@gmail.com</senderEmail><timestampReceived>2008-10-27 22:53:52-0400</timestampReceived><subject>Fwd: how to pair blueZ 4.17 with my keyboard (what happened to hidd?)</subject><body>

Hi Marcel.

Thank you for your answer. I understand that 3.36 is very outdated.

I tried to download and compile 4.17. Finally after compiling,
installing 4.17 and rebooting I got the dongle up and running but I
don't know which commands to issue to try to pair with my keyboard.

dmesg | grep -i blue

Bluetooth: Core ver 2.11
Bluetooth: HCI device and connection manager initialized
Bluetooth: HCI socket layer initialized
Bluetooth: HCI USB driver ver 2.9

voyage:~# lsusb
Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 002: ID 0a12:0001 Cambridge Silicon Radio, Ltd
Bluetooth Dongle (HCI mode)
Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub

voyage:~# hciconfig
hci0:   Type: USB
       BD Address: 00:00:00:00:00:00 ACL MTU: 0:0 SCO MTU: 0:0
       DOWN
       RX bytes:0 acl:0 sco:0 events:0 errors:0
       TX bytes:0 acl:0 sco:0 commands:0 errors:0

voyage:~# hciconfig hci0 up
voyage:~# hciconfig
hci0:   Type: USB
       BD Address: 00:1B:DC:0F:74:09 ACL MTU: 310:10 SCO MTU: 64:8
       UP RUNNING
       RX bytes:2784 acl:0 sco:0 events:85 errors:0
       TX bytes:285 acl:0 sco:0 commands:37 errors:0

voyage:~# hcitool scan
Scanning ...
       00:18:00:00:78:86       BTKB-7886

voyage:~# hcitool cc 00:18:00:00:78:86
voyage:~#

#####################
Behaviour is exactly the same as with the old BlueZ. It goes back to
prompt without asking me for any PIN code, and the keyboard keeps
blinking.
#####################

I bet I don't know the correct sequence of commands to pair with this
new release of BlueZ....

Any idea?

Thank you,

alfonso

----------------------------

Just some additional info regarding my compiling, since I had to use a
little "hack" to get it done...

(please allow me to let you know that configure does not check for
yacc and flex)

#dpkg -l | grep -i blue

apt-get remove bluez-utils libbluetooth2 (I think, I'm not sure about
the 2nd one)
dpkg --purge bluez-utils libbluetooth2

apt-get install build-essential pkg-config libdbus-1-dev
libglib2.0-dev libusb-dev byacc flex (these were missing on my system)

wget http://www.kernel.org/pub/linux/bluetooth/bluez-4.17.tar.gz
tar xvzf bluez-4.17.tar.gz
./configure
make

[...]
make[3]: Entering directory `/root/bluez-4.17/rfcomm'
test -f lexer.c || /bin/sh ../ylwrap lexer.l .c lexer.c -- /bin/sh
/root/bluez-4.17/missing --run flex
make[3]: *** [lexer.c] Error 1
make[3]: Leaving directory `/root/bluez-4.17/rfcomm'
make[2]: *** [all] Error 2
make[2]: Leaving directory `/root/bluez-4.17/rfcomm'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/root/bluez-4.17'
make: *** [all] Error 2

So I run the following

########################
cd rfcomm
flex -o lexer.c lexer.l
########################

and then compilation went all right.

hcitool was complaining about libbluetooth.so.3 so I run:

ldconfig -v


On Mon, Oct 27, 2008 at 8:47 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Fiorellino,
&gt;
&gt;&gt; I have a keysonic bluetooth keyboard.
&gt;&gt; It works perfectly under windows (I know you don't care, but at least
&gt;&gt; the keyboard is working fine!) using the embedded BT controller of my
&gt;&gt; laptop.
&gt;&gt;
&gt;&gt; Now I'd like to use it under Debian lenny/sid in an embedded PC
&gt;&gt; (alix3d3) using a Trust Ultra Small Bluetooth 2 USB Adapter.
&gt;&gt;
&gt;&gt; With "apt-get install" I installed bluez-utils 3.36-1.
&gt;
&gt; we are already at bluez-4.17 release. So 3.36 is pretty outdated and it
&gt; has a bug within its HID support.
&gt;
&gt; Regards
&gt;
&gt; Marcel
&gt;
&gt;
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081028042017</emailId><senderName>Guillaume Bedot</senderName><senderEmail>littletux@zarb.org</senderEmail><timestampReceived>2008-10-28 04:20:17-0400</timestampReceived><subject>Re: [PATCH] Allow SCO with Asus WL-BTD202 dongle in btusb</subject><body>

Le mardi 28 octobre 2008 Ã  03:10 +0100, Marcel Holtmann a Ã©crit : 
&gt; Hi Guillaume,
&gt; 
&gt; &gt; This an other patch that allows my dongle to be configured correctly for
&gt; &gt; the voice/sco profile.
&gt; &gt; 
&gt; &gt; I already sent one for hci_usb some time ago, so it may sound familiar,
&gt; &gt; but it probably didn't have correct style...
&gt; 
&gt; you have to prove this one. Boot a kernel without the patch and call
&gt; hciconfig hci0 up and then show me the output of hciconfig -a.

The file "hciconfig-...-before" was the output without the patch.
The file "hciconfig-...-after" is the output with the patch.
The last file contains some info from "/proc/bus/usb/devices".

Is it just proof that my dongle's firmware is out-of-date ?

Regards,

Guillaume B.

["hciconfig-wl-btd202.before.txt" (hciconfig-wl-btd202.before.txt)]

hci0:	Type: USB
	BD Address: 00:0B:0D:4C:22:92 ACL MTU: 1017:8 SCO MTU: 64:0
	UP RUNNING 
	RX bytes:619 acl:0 sco:0 events:13 errors:0
	TX bytes:44 acl:0 sco:0 commands:13 errors:0
	Features: 0xff 0xff 0x8d 0xfe 0x9b 0xf9 0x00 0x80
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
	Link policy: 
	Link mode: SLAVE ACCEPT 
	Name: 'localhost-0'
	Class: 0x4a0104
	Service Classes: Networking, Capturing, Telephony
	Device Class: Computer, Desktop workstation
	HCI Ver: 2.0 (0x3) HCI Rev: 0x40eb LMP Ver: 2.0 (0x3) LMP Subver: 0x430e
	Manufacturer: Broadcom Corporation (15)


["hciconfig-wl-btd202.after.txt" (hciconfig-wl-btd202.after.txt)]

hci0:	Type: USB
	BD Address: 00:0B:0D:4C:22:92 ACL MTU: 1017:8 SCO MTU: 64:8
	UP RUNNING PSCAN 
	RX bytes:4055672 acl:48817 sco:72479 events:22711 errors:0
	TX bytes:79729659 acl:89869 sco:0 commands:107 errors:0
	Features: 0xff 0xff 0x8d 0xfe 0x9b 0xf9 0x00 0x80
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
	Link policy: RSWITCH HOLD SNIFF PARK 
	Link mode: SLAVE ACCEPT 
	Name: 'localhost-0'
	Class: 0x4a0104
	Service Classes: Networking, Capturing, Telephony
	Device Class: Computer, Desktop workstation
	HCI Ver: 2.0 (0x3) HCI Rev: 0x40eb LMP Ver: 2.0 (0x3) LMP Subver: 0x430e
	Manufacturer: Broadcom Corporation (15)


["wl-btd202.txt" (wl-btd202.txt)]

T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=02 Dev#=  3 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0b05 ProdID=1715 Rev= 1.00
S:  Manufacturer=Broadcom Corp
S:  Product=WL-BTD202
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081028152806</emailId><senderName>"alok barsode"</senderName><senderEmail>alokbarsode@gmail.com</senderEmail><timestampReceived>2008-10-28 15:28:06-0400</timestampReceived><subject>[Patch]Netlink: adding nlbluetooth.c for netlink support</subject><body>

Marcel,

Patch for adding nlbluetooth.c for netlink support .
let me know if anything needs modification.

Thanks,
Alok.

["0001-Adding-net-bluetooth-nlbluetooth.c-for-netlink-suppo.patch" (text/x-diff)]

From bb509e62c9209af1e2b2a86272155afa6453262e Mon Sep 17 00:00:00 2001
From: Alok Barsode &lt;alok.barsode@azingo.com&gt;
Date: Mon, 27 Oct 2008 11:30:48 +0530
Subject: [PATCH] Adding net/bluetooth/nlbluetooth.c for netlink support.

Signed-off-by: Alok Barsode &lt;alok.barsode@azingo.com&gt;
---
 include/net/bluetooth/bluetooth.h |    3 +++
 net/bluetooth/Makefile            |    2 +-
 net/bluetooth/af_bluetooth.c      |    6 ++++++
 net/bluetooth/nlbluetooth.c       |   24 ++++++++++++++++++++++++
 4 files changed, 34 insertions(+), 1 deletions(-)
 create mode 100644 net/bluetooth/nlbluetooth.c

diff --git a/include/net/bluetooth/bluetooth.h b/include/net/bluetooth/bluetooth.h
index 6f8418b..b02c7aa 100644
--- a/include/net/bluetooth/bluetooth.h
+++ b/include/net/bluetooth/bluetooth.h
@@ -178,4 +178,7 @@ extern void bt_sysfs_cleanup(void);
 
 extern struct class *bt_class;
 
+extern int nlbluetooth_init(void);
+extern void nlbluetooth_cleanup(void);
+
 #endif /* __BLUETOOTH_H */
diff --git a/net/bluetooth/Makefile b/net/bluetooth/Makefile
index d1e433f..c48f176 100644
--- a/net/bluetooth/Makefile
+++ b/net/bluetooth/Makefile
@@ -10,4 +10,4 @@ obj-$(CONFIG_BT_BNEP)	+= bnep/
 obj-$(CONFIG_BT_CMTP)	+= cmtp/
 obj-$(CONFIG_BT_HIDP)	+= hidp/
 
-bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o hci_sock.o \
hci_sysfs.o lib.o +bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o \
                hci_sock.o hci_sysfs.o lib.o nlbluetooth.o
diff --git a/net/bluetooth/af_bluetooth.c b/net/bluetooth/af_bluetooth.c
index 8907eff..b6487dc 100644
--- a/net/bluetooth/af_bluetooth.c
+++ b/net/bluetooth/af_bluetooth.c
@@ -436,6 +436,10 @@ static int __init bt_init(void)
 	if (err &lt; 0)
 		return err;
 
+	err = nlbluetooth_init();
+	if (err &lt; 0)
+		return err;
+
 	err = sock_register(&amp;bt_sock_family_ops);
 	if (err &lt; 0) {
 		bt_sysfs_cleanup();
@@ -456,6 +460,8 @@ static void __exit bt_exit(void)
 	sock_unregister(PF_BLUETOOTH);
 
 	bt_sysfs_cleanup();
+
+	nlbluetooth_cleanup();
 }
 
 subsys_initcall(bt_init);
diff --git a/net/bluetooth/nlbluetooth.c b/net/bluetooth/nlbluetooth.c
new file mode 100644
index 0000000..4606bbc
--- /dev/null
+++ b/net/bluetooth/nlbluetooth.c
@@ -0,0 +1,24 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+
+#include &lt;net/genetlink.h&gt;
+#include &lt;linux/module.h&gt;
+#include &lt;linux/kernel.h&gt;
+
+#include &lt;net/bluetooth/bluetooth.h&gt;
+#include &lt;net/bluetooth/hci_core.h&gt;
+
+/* initialisation/exit functions */
+
+int __init nlbluetooth_init(void)
+{
+	return 0;
+}
+
+void nlbluetooth_cleanup(void)
+{
+
+}
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081030132213</emailId><senderName>Alok</senderName><senderEmail>alokbarsode@gmail.com</senderEmail><timestampReceived>2008-10-30 13:22:13-0400</timestampReceived><subject>[PATCH] NetLink patches.</subject><body>

Marcel,

Attaching 2 patches for netlink support.

1. Adds net/bluetooth/netlink.c for netlink support with initialization
and exit functions.

2. Registers a generic netlink family "bluetooth".

Let me know if anything needs to be modified.

Thanks,
Alok.

["0001-Adding-net-bluetooth-netlink.c-for-netlink-support.patch" (0001-Adding-net-bluetooth-netlink.c-for-netlink-support.patch)]

From c81a88be8536f0369aa4106d2722357c36734a20 Mon Sep 17 00:00:00 2001
From: Alok Barsode &lt;alok.barsode@azingo.com&gt;
Date: Thu, 30 Oct 2008 16:50:15 +0530
Subject: [PATCH] Adding net/bluetooth/netlink.c for netlink support.

Signed-off-by: Alok Barsode &lt;alok.barsode@azingo.com&gt;
---
 include/net/bluetooth/bluetooth.h |    3 +++
 net/bluetooth/Makefile            |    2 +-
 net/bluetooth/af_bluetooth.c      |    6 ++++++
 net/bluetooth/netlink.c           |   24 ++++++++++++++++++++++++
 4 files changed, 34 insertions(+), 1 deletions(-)
 create mode 100644 net/bluetooth/netlink.c

diff --git a/include/net/bluetooth/bluetooth.h b/include/net/bluetooth/bluetooth.h
index 6f8418b..b02c7aa 100644
--- a/include/net/bluetooth/bluetooth.h
+++ b/include/net/bluetooth/bluetooth.h
@@ -178,4 +178,7 @@ extern void bt_sysfs_cleanup(void);
 
 extern struct class *bt_class;
 
+extern int nlbluetooth_init(void);
+extern void nlbluetooth_cleanup(void);
+
 #endif /* __BLUETOOTH_H */
diff --git a/net/bluetooth/Makefile b/net/bluetooth/Makefile
index d1e433f..f014d48 100644
--- a/net/bluetooth/Makefile
+++ b/net/bluetooth/Makefile
@@ -10,4 +10,4 @@ obj-$(CONFIG_BT_BNEP)	+= bnep/
 obj-$(CONFIG_BT_CMTP)	+= cmtp/
 obj-$(CONFIG_BT_HIDP)	+= hidp/
 
-bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o hci_sock.o \
hci_sysfs.o lib.o +bluetooth-objs := af_bluetooth.o hci_core.o hci_conn.o hci_event.o \
                hci_sock.o hci_sysfs.o lib.o netlink.o
diff --git a/net/bluetooth/af_bluetooth.c b/net/bluetooth/af_bluetooth.c
index 8907eff..b6487dc 100644
--- a/net/bluetooth/af_bluetooth.c
+++ b/net/bluetooth/af_bluetooth.c
@@ -436,6 +436,10 @@ static int __init bt_init(void)
 	if (err &lt; 0)
 		return err;
 
+	err = nlbluetooth_init();
+	if (err &lt; 0)
+		return err;
+
 	err = sock_register(&amp;bt_sock_family_ops);
 	if (err &lt; 0) {
 		bt_sysfs_cleanup();
@@ -456,6 +460,8 @@ static void __exit bt_exit(void)
 	sock_unregister(PF_BLUETOOTH);
 
 	bt_sysfs_cleanup();
+
+	nlbluetooth_cleanup();
 }
 
 subsys_initcall(bt_init);
diff --git a/net/bluetooth/netlink.c b/net/bluetooth/netlink.c
new file mode 100644
index 0000000..4606bbc
--- /dev/null
+++ b/net/bluetooth/netlink.c
@@ -0,0 +1,24 @@
+/*
+ * This is the netlink-based bluetooth interface.
+ *
+ * Copyright 2008 Alok Barsode &lt;alok.barsode@azingo.com&gt;
+ */
+
+#include &lt;net/genetlink.h&gt;
+#include &lt;linux/module.h&gt;
+#include &lt;linux/kernel.h&gt;
+
+#include &lt;net/bluetooth/bluetooth.h&gt;
+#include &lt;net/bluetooth/hci_core.h&gt;
+
+/* initialisation/exit functions */
+
+int __init nlbluetooth_init(void)
+{
+	return 0;
+}
+
+void nlbluetooth_cleanup(void)
+{
+
+}
-- 
1.5.4.3


["0002-Registering-general-netlink-family-bluetooth.patch" (0002-Registering-general-netlink-family-bluetooth.patch)]

From 7c32b72b7e3ba502069fe87754e424d4f7f297e9 Mon Sep 17 00:00:00 2001
From: Alok Barsode &lt;alok.barsode@azingo.com&gt;
Date: Mon, 27 Oct 2008 21:01:59 +0530
Subject: [PATCH] Registering general netlink family - bluetooth.

Signed-off-by: Alok Barsode &lt;alok.barsode@azingo.com&gt;
---
 net/bluetooth/netlink.c |   26 +++++++++++++++++++++++++-
 1 files changed, 25 insertions(+), 1 deletions(-)

diff --git a/net/bluetooth/netlink.c b/net/bluetooth/netlink.c
index 4606bbc..fafc6f2 100644
--- a/net/bluetooth/netlink.c
+++ b/net/bluetooth/netlink.c
@@ -11,14 +11,38 @@
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
+#define VERSION 1
+
+enum nlbluetooth_attr {
+	NLBLUETOOTH_ATTR_UNSPEC,
+	__NLBLUETOOTH_ATTR_MAX,
+};
+
+#define NLBLUETOOTH_ATTR_MAX ( __NLBLUETOOTH_ATTR_MAX - 1)
+
+/* family definition */
+static struct genl_family nlbluetooth_fam = {
+	.id = GENL_ID_GENERATE,
+	.hdrsize = 0,
+	.name = "bluetooth",
+	.version = VERSION,
+	.maxattr = NLBLUETOOTH_ATTR_MAX
+};
+
 /* initialisation/exit functions */
 
 int __init nlbluetooth_init(void)
 {
+	int err;
+
+	err = genl_register_family(&amp;nlbluetooth_fam);
+	if (err)
+		return err;
+
 	return 0;
 }
 
 void nlbluetooth_cleanup(void)
 {
-
+	genl_unregister_family(&amp;nlbluetooth_fam);
 }
-- 
1.5.4.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20081030232226</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-30 23:22:26-0400</timestampReceived><subject>Re: Creation of AF_BLUETOOTH socket with HCI_DEV__REG</subject><body>

Hi Pavan,

&gt; Can there be a scenario where an application can do a hci_open_dev  
&gt; and use the Bluetooth Socket, without actually the HCID recieving  
&gt; the HCI_DEV_REG ?
&gt;
&gt; Say a scenario where in only hciattach has been done [UART device]  
&gt; and HCID isn't run at all. Then would any other application make use  
&gt; of the hci_open_dev calls ?

I have really no idea what you are trying to achieve here. hciattach  
and hcid are not tight together at all.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081031082707</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-10-31 08:27:07-0400</timestampReceived><subject>Re: headset doesn't work with mplayer in fc9</subject><body>

Hi Zhigang,

&gt; Thanks your information.

please don't do any top posting on this mailing list. I know that  
Outlook sucks, but the rule here is proper inline quoting.

&gt; Do you think I have to upate alsa or pulsaludio version.
&gt; I wonder the tow part as they are on developing.

I don't know. For ALSA it should just work, but for PulseAudio it  
might be that it is too late. Except that Lennart pushed some new  
version to F9 updates.

Also the F10 coming out next month should be fairly recent :)

Don't go for Ubuntu 8.10 right now. I am fighting a lot of issues with  
properly using that distro. They broke half of my day-to-day tools.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20081031094057</emailId><senderName>Fiorellino</senderName><senderEmail>fiorellino@gmail.com</senderEmail><timestampReceived>2008-10-31 09:40:57-0400</timestampReceived><subject>any TFM to read about BlueZ 4.x setup?</subject><body>

Hi there,

http://wiki.bluez.org/wiki/HOWTO/Bonding refers to bluez-gnome
(graphical tool) and passkey-agent.c which is not any more in any
package (checked bluez-4.17.tar.gz bluez-gnome-1.8.tar.gz
bluez-firmware-1.2.tar.gz and bluez-hcidump-1.42.tar.gz).

Is there any way to do pairing using command line tools?

Can anyone please post an example of pure command line bonding / pairing?

Thank you,

alfonso
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080924000625</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 00:06:25-0400</timestampReceived><subject>First pass at HAL device class plugin</subject><body>

Probably doesn't work, and it's missing some exported functionality to
set the device class on the actual adapter (and have it written).

["0001-First-pass-at-a-HAL-plugin-to-set-the-device-class.patch" (0001-First-pass-at-a-HAL-plugin-to-set-the-device-class.patch)]

From bb925e0a397dbbec2a60f39e65ff19c3d5e58d0b Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 23 Sep 2008 17:03:06 -0700
Subject: [PATCH] First pass at a HAL plugin to set the device class

---
 plugins/hal-adapter-class.c |  126 +++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 126 insertions(+), 0 deletions(-)
 create mode 100644 plugins/hal-adapter-class.c

diff --git a/plugins/hal-adapter-class.c b/plugins/hal-adapter-class.c
new file mode 100644
index 0000000..c5dae5c
--- /dev/null
+++ b/plugins/hal-adapter-class.c
@@ -0,0 +1,126 @@
+/*
+ *
+ *  BlueZ - Bluetooth protocol stack for Linux
+ *
+ *  Copyright (C) 2004-2008  Marcel Holtmann &lt;marcel@holtmann.org&gt;
+ *
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#ifdef HAVE_CONFIG_H
+#include &lt;config.h&gt;
+#endif
+
+#include &lt;errno.h&gt;
+#include &lt;unistd.h&gt;
+
+#include &lt;bluetooth/bluetooth.h&gt;
+
+#include &lt;glib.h&gt;
+#include &lt;hal/libhal.h&gt;
+#include &lt;gdbus.h&gt;
+
+#include "plugin.h"
+#include "adapter.h"
+#include "logging.h"
+
+static guint32 get_form_factor(LibHalContext *ctx)
+{
+	char *formfactor;
+	guint32 ret;
+
+	ret = 1 &lt;&lt; 8; /* Computer major class */
+	formfactor = libhal_device_get_property_string(ctx,
+				"/org/freedesktop/Hal/devices/computer",
+						"system.formfactor", NULL);
+
+	if (formfactor == NULL)
+		return ret;
+
+	if (g_str_equal(formfactor, "laptop"))
+		ret += (1 &lt;&lt; 2) + (1 &lt;&lt; 3);
+	else if (g_str_equal(formfactor, "desktop"))
+		ret += 1 &lt;&lt; 2;
+	else if (g_str_equal(formfactor, "server"))
+		ret += 1 &lt;&lt; 3;
+	else if (g_str_equal(formfactor, "handheld"))
+		ret += 1 &lt;&lt; 4;
+
+	g_free (formfactor);
+
+	return ret;
+}
+
+static int hal_adapter_class_probe(struct btd_adapter *adapter)
+{
+	DBusConnection *conn;
+	LibHalContext *ctx = NULL;
+	guint32 class;
+
+	conn = dbus_bus_get(DBUS_BUS_SYSTEM, NULL);
+
+	ctx = libhal_ctx_new();
+	if (libhal_ctx_set_dbus_connection(ctx, conn) == FALSE) {
+		libhal_ctx_free(ctx);
+		dbus_connection_unref(conn);
+		return -EIO;
+	}
+
+	if (libhal_ctx_init(ctx, NULL) == FALSE) {
+		g_warning("Unable to init HAL context");
+		libhal_ctx_free(ctx);
+		dbus_connection_unref(conn);
+		return -EIO;
+	}
+
+	class = get_form_factor (ctx);
+	debug ("0: 0x%X", class);
+#if 0
+	adapter_set_class (adapter, class);
+	dbus_g_proxy_call(object, "SetMajorClass", NULL,
+		G_TYPE_STRING, "computer", G_TYPE_INVALID, G_TYPE_INVALID);
+	dbus_g_proxy_call(object, "SetMinorClass", NULL,
+		G_TYPE_STRING, formfactor, G_TYPE_INVALID, G_TYPE_INVALID);
+	g_free (formfactor);
+#endif
+	libhal_ctx_free(ctx);
+	dbus_connection_unref(conn);
+
+	return 0;
+}
+
+static struct btd_adapter_driver hal_adapter_class = {
+	.name	= "hal-adapter-class",
+	.probe	= hal_adapter_class_probe,
+	.remove	= NULL,
+};
+
+static int hal_adapter_class_init(void)
+{
+	debug("Setup HAL Adapter Class plugin");
+
+	return btd_register_adapter_driver(&amp;hal_adapter_class);
+}
+
+static void hal_adapter_class_exit(void)
+{
+	debug("Cleanup HAL Adapter Class plugin");
+
+	btd_unregister_adapter_driver(&amp;hal_adapter_class);
+}
+
+BLUETOOTH_PLUGIN_DEFINE("hal", hal_adapter_class_init, hal_adapter_class_exit)
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924230906</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 23:09:06-0400</timestampReceived><subject>bluetoothd crasher</subject><body>

Heya,

The current bluetoothd crashes on resume from suspend. Here's the valgrind output:

==10147== 
==10147== Invalid read of size 4
==10147==    at 0x74B739: g_atomic_int_exchange_and_add (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x769011: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x969E: stop_security_manager (security.c:1022)
==10147==    by 0x8A83: io_stack_event (main.c:567)
==10147==    by 0x7A81CC: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7711F7: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
==10147==  Address 0x487bcc8 is 0 bytes inside a block of size 64 free'd
==10147==    at 0x480590A: free (vg_replace_malloc.c:323)
==10147==    by 0x779725: g_free (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7690BC: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x770BBE: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7712C0: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
==10147== 
==10147== Invalid read of size 4
==10147==    at 0x74B73B: g_atomic_int_exchange_and_add (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x769011: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x969E: stop_security_manager (security.c:1022)
==10147==    by 0x8A83: io_stack_event (main.c:567)
==10147==    by 0x7A81CC: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7711F7: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
==10147==  Address 0x487bcc8 is 0 bytes inside a block of size 64 free'd
==10147==    at 0x480590A: free (vg_replace_malloc.c:323)
==10147==    by 0x779725: g_free (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7690BC: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x770BBE: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7712C0: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
==10147== 
==10147== Invalid write of size 4
==10147==    at 0x74B740: g_atomic_int_exchange_and_add (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x769011: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x969E: stop_security_manager (security.c:1022)
==10147==    by 0x8A83: io_stack_event (main.c:567)
==10147==    by 0x7A81CC: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7711F7: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
==10147==  Address 0x487bcc8 is 0 bytes inside a block of size 64 free'd
==10147==    at 0x480590A: free (vg_replace_malloc.c:323)
==10147==    by 0x779725: g_free (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7690BC: g_io_channel_unref (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x770BBE: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7712C0: g_main_context_dispatch (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x7748A2: (within /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x774DC1: g_main_loop_run (in /lib/libglib-2.0.so.0.1800.0)
==10147==    by 0x9238: main (main.c:761)
bluetoothd[10147]: HCI dev 0 unregistered
bluetoothd[10147]: Unregister path: /org/bluez/hci0
bluetoothd[10147]: HCI dev 0 registered
bluetoothd[10328]: Can't set link policy on hci0: Connection timed out (110)
bluetoothd[10147]: HCI dev 0 up
bluetoothd[10147]: Unable to start SCO server socket

Looks like a double-free on the event channel.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080924103306</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-09-24 10:33:06-0400</timestampReceived><subject>[RFC] DUT mode support for kernel</subject><body>

Hi,

In good old days the only action needed to enable DUT mode was "hcitool 
cmd 0x06 0x0003" or similar. However now after having full connection 
tracking also for incoming connection this doesn't work anymore.

At least R&amp;S tester does only ACL link to the device and therefore BlueZ 
disconnects it after 10 secs. Connection tracking needs to be disabled 
somehow. I prepared one proposal how to deal with it. The disable DUT 
mode command is missing because the Spec says the DUT mode is disabled 
by resetting the chip. Thus it can be done with "hciconfig hci0 reset" 
command.

With this patch against bluetooth-2.6 tree the DUT mode is enabled by 
echoing "enabled\n" to new sysfs entry. Maybe some other interface 
should be used instead?

Any comments?

-- 
Ville


["0001--BLUETOOTH-DUT-mode-support.patch" (text/x-patch)]

From 2b50cc6a4cb4715ae3a83a41c4c3d2d76c66fdd7 Mon Sep 17 00:00:00 2001
From: Ville Tervo &lt;ville.tervo@nokia.com&gt;
Date: Wed, 24 Sep 2008 13:25:43 +0300
Subject: [PATCH] [BLUETOOTH] DUT mode support

Bluetooth specification has command to enable special mode in bluetooth
chip called Device Under Test (DUT) mode. It is used to measure
for example RF performance of the Bluetooth hardware design. This patch
adds kernel support for DUT mode.

Signed-off-by: Ville Tervo &lt;ville.tervo@nokia.com&gt;

diff --git a/include/net/bluetooth/hci.h b/include/net/bluetooth/hci.h
index 3cc2949..1279788 100644
--- a/include/net/bluetooth/hci.h
+++ b/include/net/bluetooth/hci.h
@@ -72,6 +72,8 @@ enum {
 	HCI_INQUIRY,
 
 	HCI_RAW,
+
+	HCI_DUT_MODE,
 };
 
 /* HCI ioctl defines */
@@ -577,6 +579,11 @@ struct hci_rp_read_bd_addr {
 	bdaddr_t bdaddr;
 } __attribute__ ((packed));
 
+#define HCI_OP_ENABLE_DUT_MODE		0x1803
+struct hci_rp_enable_dut_mode {
+	__u8	status;
+} __attribute__ ((packed));
+
 /* ---- HCI Events ---- */
 #define HCI_EV_INQUIRY_COMPLETE		0x01
 
diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 46a43b7..019cd93 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -355,6 +355,9 @@ static inline void hci_conn_put(struct hci_conn *conn)
 				timeo = msecs_to_jiffies(10);
 		} else
 			timeo = msecs_to_jiffies(10);
+
+		if (test_bit(HCI_DUT_MODE, &amp;conn-&gt;hdev-&gt;flags) &amp;&amp; !conn-&gt;out)
+			return;
 		mod_timer(&amp;conn-&gt;disc_timer, jiffies + timeo);
 	}
 }
diff --git a/net/bluetooth/hci_event.c b/net/bluetooth/hci_event.c
index ad7a553..6d024df 100644
--- a/net/bluetooth/hci_event.c
+++ b/net/bluetooth/hci_event.c
@@ -535,6 +535,16 @@ static void hci_cc_read_bd_addr(struct hci_dev *hdev, struct \
sk_buff *skb)  hci_req_complete(hdev, rp-&gt;status);
 }
 
+static void hci_cc_enable_dut_mode(struct hci_dev *hdev, struct sk_buff *skb)
+{
+	struct hci_rp_enable_dut_mode *rp = (void *) skb-&gt;data;
+
+	if (!rp-&gt;status)
+		set_bit(HCI_DUT_MODE, &amp;hdev-&gt;flags);
+
+	hci_req_complete(hdev, rp-&gt;status);
+}
+
 static inline void hci_cs_inquiry(struct hci_dev *hdev, __u8 status)
 {
 	BT_DBG("%s status 0x%x", hdev-&gt;name, status);
@@ -1294,6 +1304,10 @@ static inline void hci_cmd_complete_evt(struct hci_dev *hdev, \
struct sk_buff *sk  hci_cc_read_bd_addr(hdev, skb);
 		break;
 
+	case HCI_OP_ENABLE_DUT_MODE:
+		hci_cc_enable_dut_mode(hdev, skb);
+		break;
+
 	default:
 		BT_DBG("%s opcode 0x%x", hdev-&gt;name, opcode);
 		break;
diff --git a/net/bluetooth/hci_sysfs.c b/net/bluetooth/hci_sysfs.c
index f4f6615..05c5b61 100644
--- a/net/bluetooth/hci_sysfs.c
+++ b/net/bluetooth/hci_sysfs.c
@@ -356,6 +356,27 @@ static ssize_t store_sniff_min_interval(struct device *dev, \
struct device_attrib  return count;
 }
 
+static ssize_t show_dut_mode(struct device *dev, struct device_attribute *attr, char \
*buf) +{
+	struct hci_dev *hdev = dev_get_drvdata(dev);
+
+	return sprintf(buf, "%s\n", test_bit(HCI_DUT_MODE, &amp;hdev-&gt;flags) ? "enabled" : \
"disabled"); +}
+
+static ssize_t store_dut_mode(struct device *dev, struct device_attribute *attr, \
const char *buf, size_t count) +{
+	struct hci_dev *hdev = dev_get_drvdata(dev);
+	int err;
+
+	if (!test_bit(HCI_DUT_MODE, &amp;hdev-&gt;flags) &amp;&amp; !strncmp(buf, "enabled\n", count)) {
+		err = hci_send_cmd(hdev, HCI_OP_ENABLE_DUT_MODE, 0, NULL);
+		if (err &lt; 0)
+			return err;
+	}
+
+	return count;
+}
+
 static DEVICE_ATTR(type, S_IRUGO, show_type, NULL);
 static DEVICE_ATTR(name, S_IRUGO, show_name, NULL);
 static DEVICE_ATTR(class, S_IRUGO, show_class, NULL);
@@ -372,6 +393,7 @@ static DEVICE_ATTR(sniff_max_interval, S_IRUGO | S_IWUSR,
 				show_sniff_max_interval, store_sniff_max_interval);
 static DEVICE_ATTR(sniff_min_interval, S_IRUGO | S_IWUSR,
 				show_sniff_min_interval, store_sniff_min_interval);
+static DEVICE_ATTR(dut_mode, S_IRUGO | S_IWUSR, show_dut_mode, store_dut_mode);
 
 static struct attribute *bt_host_attrs[] = {
 	&amp;dev_attr_type.attr,
@@ -386,6 +408,7 @@ static struct attribute *bt_host_attrs[] = {
 	&amp;dev_attr_idle_timeout.attr,
 	&amp;dev_attr_sniff_max_interval.attr,
 	&amp;dev_attr_sniff_min_interval.attr,
+	&amp;dev_attr_dut_mode.attr,
 	NULL
 };
 
-- 
1.5.6.3


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924210343</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 21:03:43-0400</timestampReceived><subject>Fix building bluez-gnome in a custom prefix</subject><body>

["0001-Fix-building-in-a-custom-prefix.patch" (0001-Fix-building-in-a-custom-prefix.patch)]

From 987348e19a9b2cab05666165d85b19d8eb06f0c3 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 24 Sep 2008 11:34:02 -0700
Subject: [PATCH] Fix building in a custom prefix

We need to pass ACLOCAL_FLAGS to aclocal, otherwise it'll be ignored
Patch from Michael Monreal &lt;michael.monreal@gmx.net&gt;
---
 bootstrap |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/bootstrap b/bootstrap
index eeb7635..5def899 100755
--- a/bootstrap
+++ b/bootstrap
@@ -1,6 +1,6 @@
 #!/bin/sh
 
-aclocal &amp;&amp; \
+aclocal $ACLOCAL_FLAGS &amp;&amp; \
     autoheader &amp;&amp; \
 	intltoolize --automake --copy --force &amp;&amp;
 	    automake --add-missing --copy &amp;&amp; \
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924213423</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 21:34:23-0400</timestampReceived><subject>[PATCH] Write "time left" in human readable terms</subject><body>

Rather than using numbers, use full words, like minutes/seconds/etc.
Trivial code copied from nautilus itself
http://bugzilla.gnome.org/show_bug.cgi?id=513714

["0001-Write-time-left-in-human-readable-terms.patch" (0001-Write-time-left-in-human-readable-terms.patch)]

From da739e86900f440a1056e6d720e5014439ea168a Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 24 Sep 2008 14:30:12 -0700
Subject: [PATCH] Write "time left" in human readable terms

Rather than using numbers, use full words, like minutes/seconds/etc.
Trivial code copied from nautilus itself
http://bugzilla.gnome.org/show_bug.cgi?id=513714
---
 sendto/main.c |   49 +++++++++++++++++++++++++++++++++++++++++--------
 1 files changed, 41 insertions(+), 8 deletions(-)

diff --git a/sendto/main.c b/sendto/main.c
index b01dafc..0972ac8 100644
--- a/sendto/main.c
+++ b/sendto/main.c
@@ -69,6 +69,46 @@ static gint64 get_system_time(void)
 			(gint64) tmp.tv_sec * G_GINT64_CONSTANT(1000000);
 }
 
+/* Copied from nautilus/libnautilus-private/nautilus-file-operations.c */
+static gchar *format_time(int seconds)
+{
+	int minutes;
+	int hours;
+	char *res;
+
+	if (seconds &lt; 0) {
+		/* Just to make sure... */
+		seconds = 0;
+	}
+
+	if (seconds &lt; 60)
+		return g_strdup_printf(ngettext ("%'d second","%'d seconds", seconds), seconds);
+
+	if (seconds &lt; 60*60) {
+		minutes = (seconds + 30) / 60;
+		return g_strdup_printf(ngettext ("%'d minute", "%'d minutes", minutes), minutes);
+	}
+
+	hours = seconds / (60*60);
+
+	if (seconds &lt; 60*60*4) {
+		char *h, *m;
+
+		minutes = (seconds - hours * 60 * 60 + 30) / 60;
+
+		h = g_strdup_printf(ngettext ("%'d hour", "%'d hours", hours), hours);
+		m = g_strdup_printf(ngettext ("%'d minute", "%'d minutes", minutes), minutes);
+		res = g_strconcat(h, ", ", m, NULL);
+		g_free(h);
+		g_free(m);
+		return res;
+	}
+
+	return g_strdup_printf(ngettext ("approximately %'d hour",
+					 "approximately %'d hours",
+					 hours), hours);
+}
+
 static void response_callback(GtkWidget *dialog,
 					gint response, gpointer user_data)
 {
@@ -265,14 +305,7 @@ static void transfer_progress(DBusGProxy *proxy,
 
 	remaining_time = (total_size - current_sent) / transfer_rate;
 
-	if (remaining_time &gt;= 3600)
-		time = g_strdup_printf(_("%d:%02d:%02d Remaining"),
-					remaining_time / 3600,
-					(remaining_time % 3600) / 60,
-					(remaining_time % 3600) % 60);
-	else
-		time = g_strdup_printf(_("%d:%02d Remaining"),
-				remaining_time / 60, remaining_time % 60);
+	time = format_time (remaining_time);
 
 	if (transfer_rate &gt;= 3000)
 		rate = g_strdup_printf(_("%d KB/s"), transfer_rate / 1000);
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924214950</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 21:49:50-0400</timestampReceived><subject>Port sendto to GIO</subject><body>

Done! Enjoy

["0001-Move-filename-conversion-to-a-separate-function.patch" (0001-Move-filename-conversion-to-a-separate-function.patch)]

From c581c3a1dbe21004b508463786c0059e231f0017 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 24 Sep 2008 14:42:50 -0700
Subject: [PATCH] Move filename conversion to a separate function

Just half the work to start using GIO
---
 configure.ac       |    5 +++++
 sendto/Makefile.am |    4 ++--
 sendto/main.c      |   26 +++++++++++++++++---------
 3 files changed, 24 insertions(+), 11 deletions(-)

diff --git a/configure.ac b/configure.ac
index 9219262..680c682 100644
--- a/configure.ac
+++ b/configure.ac
@@ -73,6 +73,11 @@ PKG_CHECK_MODULES(NOTIFY, libnotify &gt;= 0.4.3, dummy=yes,
 AC_SUBST(NOTIFY_CFLAGS)
 AC_SUBST(NOTIFY_LIBS)
 
+PKG_CHECK_MODULES(GIO, gio-2.0, dummy=yes,
+				AC_MSG_ERROR(gio, part of glib, is required))
+AC_SUBST(GIO_CFLAGS)
+AC_SUBST(GIO_LIBS)
+
 dnl PKG_CHECK_MODULES(OPENOBEX, libopenobex-glib &gt;= 1.4, dummy=yes, dummy=no)
 dnl AC_SUBST(OPENOBEX_CFLAGS)
 dnl AC_SUBST(OPENOBEX_LIBS)
diff --git a/sendto/Makefile.am b/sendto/Makefile.am
index 9d3addf..7bcc21c 100644
--- a/sendto/Makefile.am
+++ b/sendto/Makefile.am
@@ -4,9 +4,9 @@ bin_PROGRAMS = bluetooth-sendto
 bluetooth_sendto_SOURCES = main.c
 
 bluetooth_sendto_LDADD = $(top_builddir)/common/libcommon.a \
-						@GTK_LIBS@ @DBUS_LIBS@
+						@GTK_LIBS@ @DBUS_LIBS@ @GIO_LIBS@
 
-AM_CFLAGS = @DBUS_CFLAGS@ @GTK_CFLAGS@
+AM_CFLAGS = @DBUS_CFLAGS@ @GTK_CFLAGS@ @GIO_CFLAGS@
 
 INCLUDES = -I$(top_srcdir)/common -I$(top_builddir)/common
 
diff --git a/sendto/main.c b/sendto/main.c
index 0972ac8..8e8d3fc 100644
--- a/sendto/main.c
+++ b/sendto/main.c
@@ -109,6 +109,21 @@ static gchar *format_time(int seconds)
 					 hours), hours);
 }
 
+static gchar *filename_to_path(const gchar *filename)
+{
+	if (g_str_has_prefix(filename, "file://") == TRUE) {
+		return g_filename_from_uri(filename, NULL, NULL);
+	} else if (filename[0] != '/') {
+		gchar *dir = g_get_current_dir();
+		gchar *output;
+		output = g_build_filename(dir, filename, NULL);
+		g_free(dir);
+		return output;
+	}
+
+	return NULL;
+}
+
 static void response_callback(GtkWidget *dialog,
 					gint response, gpointer user_data)
 {
@@ -581,17 +596,10 @@ int main(int argc, char *argv[])
 	file_count = g_strv_length(option_files);
 
 	for (i = 0; i &lt; file_count; i++) {
-		gchar *filename = NULL;
+		gchar *filename;
 		struct stat st;
 
-		if (g_str_has_prefix(option_files[i], "file://") == TRUE) {
-			filename = g_filename_from_uri(option_files[i],
-								NULL, NULL);
-		} else if (option_files[i][0] != '/') {
-			gchar *dir = g_get_current_dir();
-			filename = g_build_filename(dir, option_files[i], NULL);
-			g_free(dir);
-		}
+		filename = filename_to_path (option_files[i]);
 
 		if (filename != NULL) {
 			g_free(option_files[i]);
-- 
1.6.0.1


["0002-Use-GIO-to-normalise-paths.patch" (0002-Use-GIO-to-normalise-paths.patch)]

From 744caed0d2bbef0d21e2fbe8bdec2ec80dbbc2f6 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Wed, 24 Sep 2008 14:48:15 -0700
Subject: [PATCH] Use GIO to normalise paths

This means that we remove crummy ways of transforming the URI,
filename, or whatever into a local path, and also get support
for remote files automatically
---
 sendto/main.c |   18 ++++++++----------
 1 files changed, 8 insertions(+), 10 deletions(-)

diff --git a/sendto/main.c b/sendto/main.c
index 8e8d3fc..d8f7e7c 100644
--- a/sendto/main.c
+++ b/sendto/main.c
@@ -29,6 +29,7 @@
 
 #include &lt;glib/gi18n.h&gt;
 #include &lt;glib/gstdio.h&gt;
+#include &lt;gio/gio.h&gt;
 #include &lt;gtk/gtk.h&gt;
 
 #include &lt;dbus/dbus-glib.h&gt;
@@ -111,17 +112,14 @@ static gchar *format_time(int seconds)
 
 static gchar *filename_to_path(const gchar *filename)
 {
-	if (g_str_has_prefix(filename, "file://") == TRUE) {
-		return g_filename_from_uri(filename, NULL, NULL);
-	} else if (filename[0] != '/') {
-		gchar *dir = g_get_current_dir();
-		gchar *output;
-		output = g_build_filename(dir, filename, NULL);
-		g_free(dir);
-		return output;
-	}
+	GFile *file;
+	gchar *ret;
 
-	return NULL;
+	file = g_file_new_for_commandline_arg (filename);
+	ret = g_file_get_path (file);
+	g_object_unref (file);
+
+	return ret;
 }
 
 static void response_callback(GtkWidget *dialog,
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924005542</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 00:55:42-0400</timestampReceived><subject>Port bluetooth-sendto to BlueZ 4.x</subject><body>

Patch attached.

["0001-Fix-getting-names-of-remote-devices.patch" (0001-Fix-getting-names-of-remote-devices.patch)]

From 71bd2202a5407af206f2476de20e379d8bbea264 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 23 Sep 2008 17:53:49 -0700
Subject: [PATCH] Fix getting names of remote devices

Look in the BlueZ device database to find the name of the
remote device, porting code from BlueZ 3.x to the 4.x APIs
---
 sendto/main.c |   80 +++++++++++++++++++++++++++++++++++++--------------------
 1 files changed, 52 insertions(+), 28 deletions(-)

diff --git a/sendto/main.c b/sendto/main.c
index daccf91..044bbbc 100644
--- a/sendto/main.c
+++ b/sendto/main.c
@@ -415,52 +415,76 @@ static void create_notify(DBusGProxy *proxy,
 							G_TYPE_INVALID);
 }
 
+static char *
+get_name (DBusGProxy *device)
+{
+	GHashTable *hash;
+
+	if (dbus_g_proxy_call(device, "GetProperties", NULL,
+			      G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE),
+			      &amp;hash, G_TYPE_INVALID) != FALSE) {
+		GValue *value;
+		char *name;
+
+		value = g_hash_table_lookup(hash, "Name");
+		name = value ? g_value_dup_string(value) : NULL;
+		g_hash_table_destroy(hash);
+		return name;
+	}
+
+	return NULL;
+}
+
 static gchar *get_device_name(const gchar *address)
 {
 	DBusGConnection *connection;
-	DBusGProxy *manager, *proxy;
-	gchar *adapter, *name;
+	DBusGProxy *manager;
+	GPtrArray *adapters;
+	gchar *name;
+	guint i;
+
+	name = NULL;
 
 	connection = dbus_g_bus_get(DBUS_BUS_SYSTEM, NULL);
 	if (connection == NULL)
-		return NULL;
+		return name;
 
 	manager = dbus_g_proxy_new_for_name(connection, "org.bluez",
-					"/org/bluez", "org.bluez.Manager");
+					    "/", "org.bluez.Manager");
 	if (manager == NULL) {
 		dbus_g_connection_unref(connection);
-		return NULL;
+		return name;
 	}
 
-	if (dbus_g_proxy_call(manager, "DefaultAdapter", NULL, G_TYPE_INVALID,
-			G_TYPE_STRING, &amp;adapter, G_TYPE_INVALID) == FALSE) {
+	if (dbus_g_proxy_call(manager, "ListAdapters", NULL,
+			      G_TYPE_INVALID, dbus_g_type_get_collection ("GPtrArray", DBUS_TYPE_G_OBJECT_PATH), &amp;adapters,
+			      G_TYPE_INVALID) == FALSE) {
 		g_object_unref(manager);
 		dbus_g_connection_unref(connection);
-		return NULL;
+		return name;
 	}
 
-	g_object_unref(manager);
-
-	proxy = dbus_g_proxy_new_for_name(connection, "org.bluez",
-						adapter, "org.bluez.Adapter");
-	if (proxy == NULL) {
-		g_free(adapter);
-		dbus_g_connection_unref(connection);
-		return NULL;
-	}
-
-	g_free(adapter);
-
-	if (dbus_g_proxy_call(proxy, "GetRemoteName", NULL,
-			G_TYPE_STRING, address, G_TYPE_INVALID,
-			G_TYPE_STRING, &amp;name, G_TYPE_INVALID) == FALSE) {
-		g_object_unref(proxy);
-		dbus_g_connection_unref(connection);
-		return NULL;
+	for (i = 0; i &lt; adapters-&gt;len &amp;&amp; name == NULL; i++)
+	{
+		DBusGProxy *adapter;
+		char *device_path;
+
+		adapter = dbus_g_proxy_new_for_name(connection, "org.bluez",
+						    g_ptr_array_index (adapters, i), "org.bluez.Adapter");
+		if (dbus_g_proxy_call(adapter, "FindDevice", NULL,
+				      G_TYPE_STRING, address, G_TYPE_INVALID,
+				      DBUS_TYPE_G_OBJECT_PATH, &amp;device_path, G_TYPE_INVALID) != FALSE) {
+			DBusGProxy *device;
+			device = dbus_g_proxy_new_for_name(connection, "org.bluez", device_path, "org.bluez.Device");
+			name = get_name(device);
+			g_object_unref(device);
+			break;
+		}
+		g_object_unref(adapter);
 	}
 
-	g_object_unref(proxy);
-
+	g_ptr_array_free(adapters, TRUE);
+	g_object_unref(manager);
 	dbus_g_connection_unref(connection);
 
 	return name;
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080918203058</emailId><senderName>David Woodhouse</senderName><senderEmail>dwmw2@infradead.org</senderEmail><timestampReceived>2008-09-18 20:30:58-0400</timestampReceived><subject>btusb reset quirk for MacBook Pro</subject><body>

Without this, my new shinybook tends to boot up either giving I/O errors
on 'hciconfig -a', or complaining about packets from non-existent ACL
connections.

Signed-off-by: David Woodhouse &lt;David.Woodhouse@intel.com&gt;

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 6a01068..c46c299 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -157,6 +157,8 @@ static struct usb_device_id blacklist_table[] = {
 	/* Frontline ComProbe Bluetooth Sniffer */
 	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = BTUSB_SNIFFER },
 
+	/* MacBook Pro 4,1 */
+	{ USB_DEVICE(0x05ac, 0x820f), .driver_info = BTUSB_RESET },
 	{ }	/* Terminating entry */
 };
 
-- 
David Woodhouse                            Open Source Technology Centre
David.Woodhouse@intel.com                              Intel Corporation

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080925075901</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-09-25 07:59:01-0400</timestampReceived><subject>[PATCH 1/1] [BLUETOOTH] Disable incoming connection tracking in DUT mode</subject><body>

Bluetooth testers establish only low level connection and they won't
connect to any service. If connection tracking is enabled the connection
will drop in 10 seconds. This patch adds support for detecting DUT mode
event and disables incoming connection tracking is status code was
succesfull.

Signed-off-by: Ville Tervo &lt;ville.tervo@nokia.com&gt;
---
 include/net/bluetooth/hci.h      |    7 +++++++
 include/net/bluetooth/hci_core.h |    3 +++
 net/bluetooth/hci_event.c        |   12 ++++++++++++
 3 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/include/net/bluetooth/hci.h b/include/net/bluetooth/hci.h
index 3cc2949..1279788 100644
--- a/include/net/bluetooth/hci.h
+++ b/include/net/bluetooth/hci.h
@@ -72,6 +72,8 @@ enum {
 	HCI_INQUIRY,
 
 	HCI_RAW,
+
+	HCI_DUT_MODE,
 };
 
 /* HCI ioctl defines */
@@ -577,6 +579,11 @@ struct hci_rp_read_bd_addr {
 	bdaddr_t bdaddr;
 } __attribute__ ((packed));
 
+#define HCI_OP_ENABLE_DUT_MODE		0x1803
+struct hci_rp_enable_dut_mode {
+	__u8	status;
+} __attribute__ ((packed));
+
 /* ---- HCI Events ---- */
 #define HCI_EV_INQUIRY_COMPLETE		0x01
 
diff --git a/include/net/bluetooth/hci_core.h b/include/net/bluetooth/hci_core.h
index 46a43b7..019cd93 100644
--- a/include/net/bluetooth/hci_core.h
+++ b/include/net/bluetooth/hci_core.h
@@ -355,6 +355,9 @@ static inline void hci_conn_put(struct hci_conn *conn)
 				timeo = msecs_to_jiffies(10);
 		} else
 			timeo = msecs_to_jiffies(10);
+
+		if (test_bit(HCI_DUT_MODE, &amp;conn-&gt;hdev-&gt;flags) &amp;&amp; !conn-&gt;out)
+			return;
 		mod_timer(&amp;conn-&gt;disc_timer, jiffies + timeo);
 	}
 }
diff --git a/net/bluetooth/hci_event.c b/net/bluetooth/hci_event.c
index ad7a553..f2227d0 100644
--- a/net/bluetooth/hci_event.c
+++ b/net/bluetooth/hci_event.c
@@ -535,6 +535,14 @@ static void hci_cc_read_bd_addr(struct hci_dev *hdev, struct sk_buff *skb)
 	hci_req_complete(hdev, rp-&gt;status);
 }
 
+static void hci_cc_enable_dut_mode(struct hci_dev *hdev, struct sk_buff *skb)
+{
+	struct hci_rp_enable_dut_mode *rp = (void *) skb-&gt;data;
+
+	if (!rp-&gt;status)
+		set_bit(HCI_DUT_MODE, &amp;hdev-&gt;flags);
+}
+
 static inline void hci_cs_inquiry(struct hci_dev *hdev, __u8 status)
 {
 	BT_DBG("%s status 0x%x", hdev-&gt;name, status);
@@ -1294,6 +1302,10 @@ static inline void hci_cmd_complete_evt(struct hci_dev *hdev, struct sk_buff *sk
 		hci_cc_read_bd_addr(hdev, skb);
 		break;
 
+	case HCI_OP_ENABLE_DUT_MODE:
+		hci_cc_enable_dut_mode(hdev, skb);
+		break;
+
 	default:
 		BT_DBG("%s opcode 0x%x", hdev-&gt;name, opcode);
 		break;
-- 
1.5.6.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080926230044</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-26 23:00:44-0400</timestampReceived><subject>Bluetoothd crashing on 4.7</subject><body>

Hi:

I recently packaged bluez 4.7 for possible inclusion in Ubuntu intrepid
[1].  Upon doing some basic testing with it, I've run into a situation
where when I try to pair with a keyboard, bluetoothd crashes.  If I run
it under valgrind, bluetoothd survives the crash, and the keyboard works
[2].  If I run it with gdb, it comes down, and I get a trace at
least[3].  If I run it without a debugger, keyboard doesn't properly work.

[1] https://bugs.edge.launchpad.net/~superm1/+archive
[2] http://paste.ubuntu.com/51091/
[3] http://paste.ubuntu.com/51090/

Regards
-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080928175829</emailId><senderName>"Tim Dempsey"</senderName><senderEmail>trdempsey@gmail.com</senderEmail><timestampReceived>2008-09-28 17:58:29-0400</timestampReceived><subject>Bluez 4.7 crash pairing Motorola S9 w/bt</subject><body>

Hello,

I was attempting to pair a set of Motorola S9 headphones using bluez 4.7
and received the following crash. Attached is the output of 'bluetoothd -nd'
under gdb, with a bt. I also included the output of
"dbus-monitor --system sender='org.bluez'". I made the following patch and
thought I'm sure it's not the right fix it allowed me to pair/play sound
though the S9.

diff -Naur bluez-4.7/src/dbus-common.c
bluez-4.7-work/src/dbus-common.c
--- bluez-4.7/src/dbus-common.c 2008-09-14 15:03:18.000000000 -0400
+++ bluez-4.7-work/src/dbus-common.c    2008-09-28 12:00:38.000000000
-0400
@@ -318,7 +318,7 @@
 {
        DBusMessage *signal;
        DBusMessageIter iter;
-       gboolean ret;
+       gboolean ret=FALSE;

        signal = dbus_message_new_signal(path, interface,
"PropertyChanged");

@@ -332,8 +332,9 @@

        dbus_message_iter_append_basic(&amp;iter, DBUS_TYPE_STRING,
&amp;name);
        dbus_message_iter_append_variant(&amp;iter, type, value);
-
-       ret = dbus_connection_send(conn, signal, NULL);
+
+       if(conn)
+         ret = dbus_connection_send(conn, signal, NULL);

        dbus_message_unref(signal);
        return ret;

Output of "bluetooth -nd"
Starting program: /usr/sbin/bluetoothd -nd
bluetoothd[18495]: Bluetooth daemon
bluetoothd[18495]: Enabling debug information
bluetoothd[18495]: parsing main.conf
bluetoothd[18495]: offmode=NoScan
bluetoothd[18495]: discovto=0
bluetoothd[18495]: pageto=8192
bluetoothd[18495]: name=%h-%d
bluetoothd[18495]: class=0x000100
bluetoothd[18495]: inqmode=0
bluetoothd[18495]: Starting SDP server
bluetoothd[18495]: Loading plugins /usr/lib/bluetooth/plugins
bluetoothd[18495]: /usr/lib/bluetooth/plugins/audio.so
bluetoothd[18495]: Unix socket created: 14
bluetoothd[18495]: Telephony plugin initialized
bluetoothd[18495]: HFP AG features: (none)
bluetoothd[18495]: /usr/lib/bluetooth/plugins/input.so
bluetoothd[18495]: input.conf: Key file does not have key 'IdleTimeout'
bluetoothd[18495]: /usr/lib/bluetooth/plugins/hal.so
bluetoothd[18495]: /usr/lib/bluetooth/plugins/service.so
bluetoothd[18495]: /usr/lib/bluetooth/plugins/serial.so
bluetoothd[18495]: /usr/lib/bluetooth/plugins/network.so
bluetoothd[18495]: Parsing /etc/bluetooth/network.conf failed: No such
file or directory
bluetoothd[18495]: Config options: InterfacePrefix=bnep%d,
PANU_Script=(null), GN_Script=(null), NAP_Script=(null),
GN_Interface=pan0, NAP_Interface=pan1, Security=true
bluetoothd[18495]: Can't create GN bridge
bluetoothd[18495]: HCI dev 0 registered
bluetoothd[18495]: child 18496 forked
bluetoothd[18495]: HCI dev 0 already up
bluetoothd[18495]: headset_server_probe: path /org/bluez/hci0
bluetoothd[18495]: audio.conf: Key file does not have key 'Master'
bluetoothd[18495]: Adding record with handle 0x10000
bluetoothd[18495]: audio.conf: Key file does not have key 'SCORouting'
bluetoothd[18495]: a2dp_server_probe: path /org/bluez/hci0
bluetoothd[18495]: audio.conf: Key file does not have key 'Disable'
bluetoothd[18495]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[18495]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[18495]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[18495]: audio.conf: Key file does not have group 'A2DP'
bluetoothd[18495]: audio.conf: Key file does not have key 'Master'
bluetoothd[18495]: SEP 0xb8b3bf10 registered: type:0 codec:0 seid:1
bluetoothd[18495]: Adding record with handle 0x10001
bluetoothd[18495]: avrcp_server_probe: path /org/bluez/hci0
bluetoothd[18495]: audio.conf: Key file does not have key 'Master'
bluetoothd[18495]: Adding record with handle 0x10002
bluetoothd[18495]: Adding record with handle 0x10003
bluetoothd[18495]: service_probe: path /org/bluez/hci0
bluetoothd[18495]: Registered interface org.bluez.Service on path
/org/bluez/hci0
bluetoothd[18495]: proxy_probe: path /org/bluez/hci0
bluetoothd[18495]: Registered interface org.bluez.SerialProxyManager
on path /org/bluez/hci0
bluetoothd[18495]: network_server_probe: path /org/bluez/hci0
bluetoothd[18495]: Adding record with handle 0x10004
bluetoothd[18495]: register_server_record: got record id 0x10004
bluetoothd[18495]: Registered interface org.bluez.NetworkPeer on path
/org/bluez/hci0
bluetoothd[18495]: network_server_probe: path /org/bluez/hci0
bluetoothd[18495]: Adding record with handle 0x10005
bluetoothd[18495]: register_server_record: got record id 0x10005
bluetoothd[18495]: Registered interface org.bluez.NetworkHub on path
/org/bluez/hci0
bluetoothd[18495]: network_server_probe: path /org/bluez/hci0
bluetoothd[18495]: Adding record with handle 0x10006
bluetoothd[18495]: register_server_record: got record id 0x10006
bluetoothd[18495]: Registered interface org.bluez.NetworkRouter on
path /org/bluez/hci0
bluetoothd[18495]: Creating device
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Adapter /org/bluez/hci0 has been enabled
bluetoothd[18495]: Starting security manager 0
bluetoothd[18495]: child 18496 exited
bluetoothd[18495]: Agent registered for hci0 at :1.118:/test/agent
bluetoothd[18495]: adapter_get_device(00:0D:FD:19:0F:67)
bluetoothd[18495]: link_key_request (sba=00:19:7D:E8:C7:0E,
dba=00:0D:FD:19:0F:67)
bluetoothd[18495]: kernel auth requirements = 0x00
bluetoothd[18495]: stored link key type = 0x00
bluetoothd[18495]: adapter_get_device(00:0D:FD:19:0F:67)
bluetoothd[18495]: pin_code_request (sba=00:19:7D:E8:C7:0E,
dba=00:0D:FD:19:0F:67)
bluetoothd[18495]: hcid_dbus_new_auth_request
bluetoothd[18495]: link_key_notify (sba=00:19:7D:E8:C7:0E,
dba=00:0D:FD:19:0F:67)
bluetoothd[18495]: adapter_get_device(00:0D:FD:19:0F:67)
bluetoothd[18495]: hcid_dbus_bonding_process_complete: status=00
bluetoothd[18495]: adapter_get_device(00:0D:FD:19:0F:67)
bluetoothd[18495]: Probe drivers for
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Found Headset record
bluetoothd[18495]: Discovered Headset service on RFCOMM channel 2
bluetoothd[18495]: Registered interface org.bluez.Headset on path
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Found Audio Sink
bluetoothd[18495]: Registered interface org.bluez.AudioSink on path
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Found AV Target
bluetoothd[18495]: Registered interface org.bluez.Control on path
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Found AV Remote
bluetoothd[18495]: headset_probe: path
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
bluetoothd[18495]: Registered interface org.bluez.Input on path
/org/bluez/hci0/dev_00_0D_FD_19_0F_67
process 18495: arguments to dbus_connection_send() were incorrect,
assertion "connection != NULL" failed in file dbus-connection.c line
3081.
This is normally a bug in some application using the D-Bus library.
  /usr/lib/libdbus-1.so.3 [0xb7e14ac1]
  /usr/lib/libdbus-1.so.3 [0xb7e13df8]
  /usr/lib/libdbus-1.so.3 [0xb7e07e98]
  /usr/lib/libdbus-1.so.3(dbus_connection_send+0x7b) [0xb7de5b67]
  /usr/sbin/bluetoothd(dbus_connection_emit_property_changed+0xb4)
[0xb7f7b39a]
  /usr/sbin/bluetoothd [0xb7f79a30]
  /usr/sbin/bluetoothd [0xb7f7a04d]
  /usr/sbin/bluetoothd [0xb7f7a406]
  /usr/sbin/bluetoothd [0xb7f7f5c7]
  /usr/lib/libbluetooth.so.3(sdp_process+0x5c8) [0xb7dc7c31]
  /usr/sbin/bluetoothd [0xb7f7f633]
  /usr/lib/libglib-2.0.so.0 [0xb7ea7271]
  /usr/lib/libglib-2.0.so.0 [0xb7e69af2]
  /usr/lib/libglib-2.0.so.0(g_main_context_dispatch+0x89) [0xb7e6afbb]
  /usr/lib/libglib-2.0.so.0 [0xb7e6b50f]
  /usr/lib/libglib-2.0.so.0(g_main_loop_run+0x3a5) [0xb7e6bce6]
  /usr/sbin/bluetoothd(main+0x531) [0xb7f65915]
  /lib/libc.so.6(__libc_start_main+0xdc) [0xb7c9cfdc]
  /usr/sbin/bluetoothd [0xb7f64001]

Program received signal SIGABRT, Aborted.
0xb7f3e424 in __kernel_vsyscall ()
(gdb) bt
#0  0xb7f3e424 in __kernel_vsyscall ()
#1  0xb7cb0101 in *__GI_raise (sig=6) at
../nptl/sysdeps/unix/sysv/linux/raise.c:64
#2  0xb7cb18e8 in *__GI_abort () at abort.c:88
#3  0xb7e13e44 in _dbus_abort () at dbus-sysdeps.c:86
#4  0xb7e07e98 in _dbus_warn_check_failed (
    format=0xb7e26940 "arguments to %s() were incorrect, assertion
\"%s\" failed in file %s line %d.\nThis is normally a bug in some
application using the D-Bus library.\n") at dbus-internals.c:283
#5  0xb7de5b67 in dbus_connection_send (connection=0x0,
message=0xb8b39350, serial=0x0) at dbus-connection.c:3081
#6  0xb7f7b39a in dbus_connection_emit_property_changed (conn=0x0,
    path=0xb8b40a60 "/org/bluez/hci0/dev_00_0D_FD_19_0F_67",
interface=0xb7f88114 "org.bluez.Device",
    name=0xb7f880ee "UUIDs", type=97, value=0xbf887a84) at
dbus-common.c:336
#7  0xb7f79a30 in services_changed (req=0xb8b39318) at device.c:869
#8  0xb7f7a04d in search_cb (recs=0x0, err=0, user_data=0xb8b39318) at
device.c:1028
#9  0xb7f7a406 in browse_cb (recs=0x0, err=0, user_data=0xb8b39318) at
device.c:1129
#10 0xb7f7f5c7 in search_completed_cb (type=7 '\a', status=0,
rsp=0xb8b39340 "", size=2, user_data=0xb8b3a680)
    at glib-helper.c:167
#11 0xb7dc7c31 in sdp_process (session=0xb8b442a8) at sdp.c:3997
#12 0xb7f7f633 in search_process_cb (chan=0xb8b413c8, cond=G_IO_IN,
user_data=0xb8b3a680) at glib-helper.c:186
#13 0xb7ea7271 in g_io_unix_dispatch (source=0xb8b436d0,
callback=0xb7f7f5f3 &lt;search_process_cb&gt;,
    user_data=0xb8b3a680) at giounix.c:162
#14 0xb7e69af2 in g_main_dispatch (context=0xb8b36320) at gmain.c:2012
#15 0xb7e6afbb in IA__g_main_context_dispatch (context=0xb8b36320) at
gmain.c:2564
#16 0xb7e6b50f in g_main_context_iterate (context=0xb8b36320, block=1,
dispatch=1, self=0xb8b37308) at gmain.c:2645
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
#17 0xb7e6bce6 in IA__g_main_loop_run (loop=0xb8b3ae90) at
gmain.c:2853
#18 0xb7f65915 in main (argc=1, argv=0xbf887fd4) at main.c:750


dbus-monitor --system sender='org.bluez'
signal sender=org.freedesktop.DBus -&gt; dest=:1.116
path=/org/freedesktop/DBus; interface=org.freedesktop.DBus;
member=NameAcquired
   string ":1.116"
signal sender=:1.117 -&gt; dest=(null destination) path=/;
interface=org.bluez.Manager; member=AdapterAdded
   object path "/org/bluez/hci0"
signal sender=:1.117 -&gt; dest=(null destination) path=/org/bluez/hci0;
interface=org.bluez.Adapter; member=PropertyChanged
   string "Mode"
   variant       string "connectable"
signal sender=:1.117 -&gt; dest=(null destination) path=/org/bluez/hci0;
interface=org.bluez.Adapter; member=PropertyChanged
   string "Powered"
   variant       boolean true
signal sender=:1.117 -&gt; dest=(null destination) path=/org/bluez/hci0;
interface=org.bluez.Adapter; member=PropertyChanged
   string "Discoverable"
   variant       boolean false
signal sender=:1.117 -&gt; dest=(null destination) path=/;
interface=org.bluez.Manager; member=DefaultAdapterChanged
   object path "/org/bluez/hci0"
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Connected"
   variant       boolean true
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Name"
   variant       string "Motorola S9"
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Connected"
   variant       boolean false
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Connected"
   variant       boolean true
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Paired"
   variant       boolean true
signal sender=:1.117 -&gt; dest=(null destination)
path=/org/bluez/hci0/dev_00_0D_FD_19_0F_67;
interface=org.bluez.Device; member=PropertyChanged
   string "Name"
   variant       string "Motorola S9"
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927194421</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-27 19:44:21-0400</timestampReceived><subject>[PATCH] Default bluez-gnome UI to a connectable state</subject><body>

Looking through the code, it appears that bluetoothd does start up connectable, but \
the UI doesn't reflect this from the first boot.  This patch should address it.

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["03_default_connectable.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/properties/adapter.c \
                bluez-gnome-1.5.new/properties/adapter.c
--- bluez-gnome-1.5/properties/adapter.c	2008-08-24 16:14:24.000000000 -0500
+++ bluez-gnome-1.5.new/properties/adapter.c	2008-09-27 03:52:57.000000000 -0500
@@ -408,9 +408,8 @@
 					_("Other devices can connect"));
 	group = gtk_radio_button_get_group(GTK_RADIO_BUTTON(button));
 	gtk_box_pack_start(GTK_BOX(vbox), button, FALSE, FALSE, 0);
-
-	if (mode &amp;&amp; g_ascii_strcasecmp(mode, "connectable") == 0)
-		gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(button), TRUE);
+	
+	gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(button), TRUE);
 
 	adapter-&gt;button_connect = button;
 


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929045329</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-09-29 04:53:29-0400</timestampReceived><subject>Minor error in BlueZ 4.8 Makefile.am can break build</subject><body>

There's a missing backslash in the plugins/Makefile.am file in the 4.8 
release (see patches).

Cheers,

Dave

["patch-aa" (text/plain)]

$NetBSD$

Fix for missing backslash in Makefile.am.

--- plugins/Makefile.in.orig	2008-09-29 16:15:13.007562391 +1300
+++ plugins/Makefile.in	2008-09-29 16:15:41.627994124 +1300
@@ -235,7 +235,9 @@
 AM_LDFLAGS = -module -avoid-version -no-undefined \
 			-export-symbols-regex bluetooth_plugin_desc
 
-AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@
+AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ \
+					@GDBUS_CFLAGS@ @NETLINK_CFLAGS@
+
 INCLUDES = -I$(top_srcdir)/common -I$(top_srcdir)/src
 MAINTAINERCLEANFILES = Makefile.in
 all: all-am
@@ -539,7 +541,6 @@
 	pdf pdf-am ps ps-am tags uninstall uninstall-am \
 	uninstall-pluginLTLIBRARIES
 
-					@GDBUS_CFLAGS@ @NETLINK_CFLAGS@
 
 all-local:
 	@$(LN_S) -f $(top_srcdir)/input/.libs/input.so

["gdbus.diff" (text/x-diff)]

--- plugins/Makefile.am.orig	2008-09-29 16:09:39.972538634 +1300
+++ plugins/Makefile.am	2008-09-29 16:09:48.862672739 +1300
@@ -34,7 +34,7 @@
 AM_LDFLAGS = -module -avoid-version -no-undefined \
 			-export-symbols-regex bluetooth_plugin_desc
 
-AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@
+AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ \
 					@GDBUS_CFLAGS@ @NETLINK_CFLAGS@
 
 INCLUDES = -I$(top_srcdir)/common -I$(top_srcdir)/src

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080928174729</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-28 17:47:29-0400</timestampReceived><subject>[PATCH] Add ability to start wizard from properties</subject><body>

Hi:

When packaged, generally the Bluetooth properties application is added to the \
Preferences menu as a configuration tool for Bluetooth.  This leaves a gap in the \
experience since there is no way to configure "New" devices by following that flow.  \
This patch adds a button to the UI that will spawn the wizard to allow users to pair.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["07_add_wizard_preferences.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/properties/main.c bluez-gnome-1.5.new/properties/main.c
--- bluez-gnome-1.5/properties/main.c	2008-08-24 11:05:50.000000000 -0500
+++ bluez-gnome-1.5.new/properties/main.c	2008-09-28 12:19:46.000000000 -0500
@@ -51,6 +51,16 @@
 	gtk_main_quit();
 }
 
+static void wizard_callback(GObject *widget, gpointer user_data)
+{
+        const char *command = "bluetooth-wizard";
+
+        if (!g_spawn_command_line_async(command, NULL))
+                g_printerr("Couldn't execute command: %s\n", command);
+
+	close_callback(widget,user_data);
+}
+
 static GtkWidget *create_window(GtkWidget *notebook)
 {
 	GtkWidget *window;
@@ -76,6 +86,11 @@
 	gtk_button_box_set_layout(GTK_BUTTON_BOX(buttonbox), GTK_BUTTONBOX_END);
 	gtk_box_pack_start(GTK_BOX(vbox), buttonbox, FALSE, FALSE, 0);
 
+	button = gtk_button_new_with_mnemonic(_("Setup _New Device"));
+	gtk_container_add(GTK_CONTAINER(buttonbox), button);
+	g_signal_connect(G_OBJECT(button), "clicked",
+					G_CALLBACK(wizard_callback), window);
+
 	button = gtk_button_new_from_stock(GTK_STOCK_CLOSE);
 	gtk_container_add(GTK_CONTAINER(buttonbox), button);
 	g_signal_connect(G_OBJECT(button), "clicked",

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080928174553</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-28 17:45:53-0400</timestampReceived><subject>[PATCH] Start wizard when left clicked</subject><body>

Hi:

Currently the applet doesn't seem to respond to any actions when left clicked unless \
it's blinking.  This is counter intuitive from the expectation that something will \
happen when left clicked.  Attached is a patch that will spawn the wizard when left \
clicked, or stop blinking if it was.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["08_start_wizard_left_click.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/applet/main.c bluez-gnome-1.5.new/applet/main.c
--- bluez-gnome-1.5/applet/main.c	2008-09-13 12:34:11.000000000 -0500
+++ bluez-gnome-1.5.new/applet/main.c	2008-09-28 12:37:53.000000000 -0500
@@ -176,7 +176,10 @@
 
 static void activate_callback(GObject *widget, gpointer user_data)
 {
-	show_agents();
+	if (query_blinking())
+		show_agents();
+	else
+		wizard_callback(widget,user_data);
 }
 
 static void popup_callback(GObject *widget, guint button,
diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/applet/notify.c bluez-gnome-1.5.new/applet/notify.c
--- bluez-gnome-1.5/applet/notify.c	2008-08-24 11:05:50.000000000 -0500
+++ bluez-gnome-1.5.new/applet/notify.c	2008-09-28 12:37:56.000000000 -0500
@@ -130,3 +130,8 @@
 {
 	gtk_status_icon_set_blinking(statusicon, FALSE);
 }
+
+gboolean query_blinking(void)
+{
+	return gtk_status_icon_get_blinking(statusicon);
+}
diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/applet/notify.h bluez-gnome-1.5.new/applet/notify.h
--- bluez-gnome-1.5/applet/notify.h	2008-08-24 11:05:50.000000000 -0500
+++ bluez-gnome-1.5.new/applet/notify.h	2008-09-28 12:37:56.000000000 -0500
@@ -34,3 +34,4 @@
 
 void enable_blinking(void);
 void disable_blinking(void);
+gboolean query_blinking(void);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929090451</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 09:04:51-0400</timestampReceived><subject>[PATCH] Use "Icon" and "Alias" properties</subject><body>

Rather than doing it ouselves.

["0001-Add-Alias-and-Icon-columns-to-the-Client.patch" (0001-Add-Alias-and-Icon-columns-to-the-Client.patch)]

From 2fdc9f88921878ca803917d25bfa2c78c9febb71 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 25 Sep 2008 20:09:19 -0700
Subject: [PATCH] Add Alias and Icon columns to the Client

This will allow us to clean up the helper code in the UI
functions as bluetoothd already does most of the work for us.
---
 common/bluetooth-client.c |   31 +++++++++++++++++++++++++++----
 common/bluetooth-client.h |    2 ++
 2 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/common/bluetooth-client.c b/common/bluetooth-client.c
index 3ecb51c..21946c5 100644
--- a/common/bluetooth-client.c
+++ b/common/bluetooth-client.c
@@ -268,6 +268,16 @@ static void device_changed(DBusGProxy *device, const char *property,
 
 		gtk_tree_store_set(priv-&gt;store, &amp;iter,
 					BLUETOOTH_COLUMN_NAME, name, -1);
+	} else if (g_str_equal(property, "Alias") == TRUE) {
+		const gchar *alias = g_value_get_string(value);
+
+		gtk_tree_store_set(priv-&gt;store, &amp;iter,
+					BLUETOOTH_COLUMN_ALIAS, alias, -1);
+	} else if (g_str_equal(property, "Icon") == TRUE) {
+		const gchar *icon = g_value_get_string(value);
+
+		gtk_tree_store_set(priv-&gt;store, &amp;iter,
+					BLUETOOTH_COLUMN_ICON, icon, -1);
 	} else if (g_str_equal(property, "Paired") == TRUE) {
 		gboolean paired = g_value_get_boolean(value);
 
@@ -293,7 +303,7 @@ static void add_device(DBusGProxy *adapter, GtkTreeIter *parent,
 	BluetoothClientPrivate *priv = BLUETOOTH_CLIENT_GET_PRIVATE(client);
 	DBusGProxy *device;
 	GValue *value;
-	const gchar *address, *name;
+	const gchar *address, *name, *icon, *alias;
 	gboolean paired, trusted, connected;
 	guint type;
 	gint rssi;
@@ -316,6 +326,9 @@ static void add_device(DBusGProxy *adapter, GtkTreeIter *parent,
 		value = g_hash_table_lookup(hash, "Name");
 		name = value ? g_value_get_string(value) : NULL;
 
+		value = g_hash_table_lookup(hash, "Alias");
+		alias = value ? g_value_get_string(value) : NULL;
+
 		value = g_hash_table_lookup(hash, "Class");
 		type = class_to_type(g_value_get_uint(value));
 
@@ -330,9 +343,14 @@ static void add_device(DBusGProxy *adapter, GtkTreeIter *parent,
 
 		value = g_hash_table_lookup(hash, "Connected");
 		connected = value ? g_value_get_boolean(value) : FALSE;
+
+		value = g_hash_table_lookup(hash, "Icon");
+		icon = value ? g_value_get_string(value) : "bluetooth";
 	} else {
 		address = NULL;
 		name = NULL;
+		alias = NULL;
+		icon = NULL;
 		type = BLUETOOTH_TYPE_ANY;
 		rssi = 0;
 		paired = FALSE;
@@ -353,7 +371,9 @@ static void add_device(DBusGProxy *adapter, GtkTreeIter *parent,
 			gtk_tree_store_set(priv-&gt;store, &amp;iter,
 					BLUETOOTH_COLUMN_ADDRESS, address,
 					BLUETOOTH_COLUMN_NAME, name,
+					BLUETOOTH_COLUMN_ALIAS, alias,
 					BLUETOOTH_COLUMN_TYPE, type,
+					BLUETOOTH_COLUMN_ICON, icon,
 					BLUETOOTH_COLUMN_RSSI, rssi, -1);
 
 			if (device != NULL) {
@@ -374,7 +394,9 @@ static void add_device(DBusGProxy *adapter, GtkTreeIter *parent,
 				BLUETOOTH_COLUMN_PROXY, device,
 				BLUETOOTH_COLUMN_ADDRESS, address,
 				BLUETOOTH_COLUMN_NAME, name,
+				BLUETOOTH_COLUMN_ALIAS, alias,
 				BLUETOOTH_COLUMN_TYPE, type,
+				BLUETOOTH_COLUMN_ICON, icon,
 				BLUETOOTH_COLUMN_RSSI, rssi,
 				BLUETOOTH_COLUMN_PAIRED, paired,
 				BLUETOOTH_COLUMN_TRUSTED, trusted,
@@ -402,6 +424,7 @@ static void device_found(DBusGProxy *adapter, const char *address,
 
 	DBG("client %p address %s", client, address);
 
+	//FIXME what is the name actually used for here?
 	if (hash != NULL) {
 		value = g_hash_table_lookup(hash, "Name");
 		name = value ? g_value_get_string(value) : NULL;
@@ -649,9 +672,9 @@ static void bluetooth_client_init(BluetoothClient *client)
 	DBG("client %p", client);
 
 	priv-&gt;store = gtk_tree_store_new(_BLUETOOTH_NUM_COLUMNS, G_TYPE_OBJECT,
-			G_TYPE_STRING, G_TYPE_STRING, G_TYPE_UINT, G_TYPE_INT,
-			G_TYPE_BOOLEAN, G_TYPE_BOOLEAN, G_TYPE_BOOLEAN,
-					G_TYPE_BOOLEAN, G_TYPE_BOOLEAN);
+			G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING,
+			G_TYPE_UINT, G_TYPE_INT, G_TYPE_BOOLEAN, G_TYPE_BOOLEAN,
+			G_TYPE_BOOLEAN, G_TYPE_BOOLEAN, G_TYPE_BOOLEAN);
 
 	priv-&gt;dbus = dbus_g_proxy_new_for_name(connection, DBUS_SERVICE_DBUS,
 				DBUS_PATH_DBUS, DBUS_INTERFACE_DBUS);
diff --git a/common/bluetooth-client.h b/common/bluetooth-client.h
index f95745c..2e1e901 100644
--- a/common/bluetooth-client.h
+++ b/common/bluetooth-client.h
@@ -89,6 +89,8 @@ enum {
 	BLUETOOTH_COLUMN_PROXY,
 	BLUETOOTH_COLUMN_ADDRESS,
 	BLUETOOTH_COLUMN_NAME,
+	BLUETOOTH_COLUMN_ALIAS,
+	BLUETOOTH_COLUMN_ICON,
 	BLUETOOTH_COLUMN_TYPE,
 	BLUETOOTH_COLUMN_RSSI,
 	BLUETOOTH_COLUMN_DEFAULT,
-- 
1.6.0.1


["0002-Remove-use-of-type_to_icon.patch" (0002-Remove-use-of-type_to_icon.patch)]

From e93f7c579707ccbb4918f2590bfdc2d774c906ba Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 25 Sep 2008 20:13:18 -0700
Subject: [PATCH] Remove use of type_to_icon()

Given to use directly in the BLUETOOTH_COLUMN_ICON now
---
 common/helper.c |   48 ++----------------------------------------------
 1 files changed, 2 insertions(+), 46 deletions(-)

diff --git a/common/helper.c b/common/helper.c
index 5191c1a..292957c 100644
--- a/common/helper.c
+++ b/common/helper.c
@@ -30,50 +30,6 @@
 
 #include &lt;bluetooth-client.h&gt;
 
-static void type_to_icon(GtkTreeViewColumn *column, GtkCellRenderer *cell,
-			GtkTreeModel *model, GtkTreeIter *iter, gpointer data)
-{
-	guint type;
-
-	gtk_tree_model_get(model, iter, BLUETOOTH_COLUMN_TYPE, &amp;type, -1);
-
-	switch (type) {
-	case BLUETOOTH_TYPE_PHONE:
-		g_object_set(cell, "icon-name", "phone", NULL);
-		break;
-	case BLUETOOTH_TYPE_MODEM:
-		g_object_set(cell, "icon-name", "modem", NULL);
-		break;
-	case BLUETOOTH_TYPE_COMPUTER:
-		g_object_set(cell, "icon-name", "computer", NULL);
-		break;
-	case BLUETOOTH_TYPE_NETWORK:
-		g_object_set(cell, "icon-name", "network-wireless", NULL);
-		break;
-	case BLUETOOTH_TYPE_HEADSET:
-		g_object_set(cell, "icon-name", "stock_headphones", NULL);
-		break;
-	case BLUETOOTH_TYPE_HEADPHONE:
-		g_object_set(cell, "icon-name", "stock_headphones", NULL);
-		break;
-	case BLUETOOTH_TYPE_KEYBOARD:
-		g_object_set(cell, "icon-name", "input-keyboard", NULL);
-		break;
-	case BLUETOOTH_TYPE_MOUSE:
-		g_object_set(cell, "icon-name", "input-mouse", NULL);
-		break;
-	case BLUETOOTH_TYPE_CAMERA:
-		g_object_set(cell, "icon-name", "camera-photo", NULL);
-		break;
-	case BLUETOOTH_TYPE_PRINTER:
-		g_object_set(cell, "icon-name", "printer", NULL);
-		break;
-	default:
-		g_object_set(cell, "icon-name", "bluetooth", NULL);
-		break;
-	}
-}
-
 static void name_to_text(GtkTreeViewColumn *column, GtkCellRenderer *cell,
 			GtkTreeModel *model, GtkTreeIter *iter, gpointer data)
 {
@@ -155,8 +111,8 @@ GtkWidget *create_tree(GtkTreeModel *model, gboolean icons)
 		renderer = gtk_cell_renderer_pixbuf_new();
 		gtk_tree_view_column_set_spacing(column, 4);
 		gtk_tree_view_column_pack_start(column, renderer, FALSE);
-		gtk_tree_view_column_set_cell_data_func(column, renderer,
-						type_to_icon, NULL, NULL);
+		gtk_tree_view_column_add_attribute(column, renderer,
+						   "icon-name", BLUETOOTH_COLUMN_ICON);
 	}
 
 	renderer = gtk_cell_renderer_text_new();
-- 
1.6.0.1


["0003-Remove-use-of-name_to_text.patch" (0003-Remove-use-of-name_to_text.patch)]

From dfc323f48817602d721afb7b9851766f803ce5e8 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Thu, 25 Sep 2008 20:15:29 -0700
Subject: [PATCH] Remove use of name_to_text()

We use BLUETOOTH_COLUMN_ALIAS now
---
 common/helper.c |   23 ++---------------------
 1 files changed, 2 insertions(+), 21 deletions(-)

diff --git a/common/helper.c b/common/helper.c
index 292957c..fe5f95e 100644
--- a/common/helper.c
+++ b/common/helper.c
@@ -30,25 +30,6 @@
 
 #include &lt;bluetooth-client.h&gt;
 
-static void name_to_text(GtkTreeViewColumn *column, GtkCellRenderer *cell,
-			GtkTreeModel *model, GtkTreeIter *iter, gpointer data)
-{
-	gchar *address, *name;
-
-	gtk_tree_model_get(model, iter, BLUETOOTH_COLUMN_ADDRESS, &amp;address,
-						BLUETOOTH_COLUMN_NAME, &amp;name, -1);
-
-	if (name == NULL) {
-		name = g_strdup(address);
-		g_strdelimit(name, ":", '-');
-	}
-
-	g_object_set(cell, "text", name ? name : address, NULL);
-
-	g_free(name);
-	g_free(address);
-}
-
 static void connected_to_icon(GtkTreeViewColumn *column, GtkCellRenderer *cell,
 			GtkTreeModel *model, GtkTreeIter *iter, gpointer data)
 {
@@ -117,8 +98,8 @@ GtkWidget *create_tree(GtkTreeModel *model, gboolean icons)
 
 	renderer = gtk_cell_renderer_text_new();
 	gtk_tree_view_column_pack_start(column, renderer, TRUE);
-	gtk_tree_view_column_set_cell_data_func(column, renderer,
-						name_to_text, NULL, NULL);
+	gtk_tree_view_column_add_attribute(column, renderer,
+					   "text", BLUETOOTH_COLUMN_ALIAS);
 
 	gtk_tree_view_insert_column_with_data_func(GTK_TREE_VIEW(tree), -1,
 				"Connected", gtk_cell_renderer_pixbuf_new(),
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929084904</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 08:49:04-0400</timestampReceived><subject>Re: [PATCH] Start wizard when left clicked</subject><body>

On Sun, 2008-09-28 at 12:45 -0500, Mario_Limonciello@Dell.com wrote:
&gt; Hi:
&gt; 
&gt; Currently the applet doesn't seem to respond to any actions when left
&gt; clicked unless it's blinking.  This is counter intuitive from the
&gt; expectation that something will happen when left clicked.  Attached is
&gt; a patch that will spawn the wizard when left clicked, or stop blinking
&gt; if it was.

I'd rather it popped up the right-click menu instead of popping up the
wizard.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929090536</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 09:05:36-0400</timestampReceived><subject>Re: [PATCH] Start wizard when left clicked</subject><body>

Hi Bastien,

&gt; &gt; Currently the applet doesn't seem to respond to any actions when left
&gt; &gt; clicked unless it's blinking.  This is counter intuitive from the
&gt; &gt; expectation that something will happen when left clicked.  Attached is
&gt; &gt; a patch that will spawn the wizard when left clicked, or stop blinking
&gt; &gt; if it was.
&gt; 
&gt; I'd rather it popped up the right-click menu instead of popping up the
&gt; wizard.

I added a simple menu to the left-click to allow starting the wizard.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929091252</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 09:12:52-0400</timestampReceived><subject>Re: [PATCH] Start wizard when left clicked</subject><body>

On Mon, 2008-09-29 at 11:05 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; &gt; Currently the applet doesn't seem to respond to any actions when left
&gt; &gt; &gt; clicked unless it's blinking.  This is counter intuitive from the
&gt; &gt; &gt; expectation that something will happen when left clicked.  Attached is
&gt; &gt; &gt; a patch that will spawn the wizard when left clicked, or stop blinking
&gt; &gt; &gt; if it was.
&gt; &gt; 
&gt; &gt; I'd rather it popped up the right-click menu instead of popping up the
&gt; &gt; wizard.
&gt; 
&gt; I added a simple menu to the left-click to allow starting the wizard.

Why a separate/different menu?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080926233619</emailId><senderName>Mario Limonciello</senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-26 23:36:19-0400</timestampReceived><subject>Re: Bluetoothd crashing on 4.7</subject><body>

So that this doesnt' get lost, I solved this myself on IRC.  The
attached patch resolves it.


/src/dbus-hci.c
=======================================

diff -Nur -x '*.orig' -x '*~' bluez-4.7/src/dbus-hci.c bluez-4.7.new/src/dbus-hci.c

--- bluez-4.7/src/dbus-hci.c	2008-09-26 00:39:55.000000000 -0500

+++ bluez-4.7.new/src/dbus-hci.c	2008-09-26 18:22:33.000000000 -0500

@@ -518,7 +518,7 @@

bonding = adapter_get_bonding_info(adapter);
- if (bacmp(&amp;bonding-&gt;bdaddr, peer))
+ if (bonding &amp;&amp; bacmp(&amp;bonding-&gt;bdaddr, peer))
bonding = NULL;
if (status == 0) {

-- 
Mario Limonciello
*Dell | Linux Engineering*
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924025751</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-24 02:57:51-0400</timestampReceived><subject>Re: Port bluetooth-sendto to BlueZ 4.x</subject><body>

Hi Bastien,

&gt; Patch attached.

it doesn't apply against upstream GIT and please also fix the coding
style.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080924181855</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 18:18:55-0400</timestampReceived><subject>Re: Port bluetooth-sendto to BlueZ 4.x</subject><body>

On Wed, 2008-09-24 at 04:57 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; Patch attached.
&gt; 
&gt; it doesn't apply against upstream GIT and please also fix the coding
&gt; style.

I blame git for allowing me to do stupid things. Fixed patch attached.

Cheers

["0001-Fix-getting-names-of-remote-devices.patch" (0001-Fix-getting-names-of-remote-devices.patch)]

diff --git a/sendto/main.c b/sendto/main.c
index afa8036..b01dafc 100644
--- a/sendto/main.c
+++ b/sendto/main.c
@@ -415,52 +415,75 @@ static void create_notify(DBusGProxy *proxy,
 							G_TYPE_INVALID);
 }
 
+static gchar *get_name(DBusGProxy *device)
+{
+	GHashTable *hash;
+
+	if (dbus_g_proxy_call(device, "GetProperties", NULL,
+			      G_TYPE_INVALID, dbus_g_type_get_map("GHashTable", G_TYPE_STRING, G_TYPE_VALUE),
+			      &amp;hash, G_TYPE_INVALID) != FALSE) {
+		GValue *value;
+		char *name;
+
+		value = g_hash_table_lookup(hash, "Name");
+		name = value ? g_value_dup_string(value) : NULL;
+		g_hash_table_destroy(hash);
+		return name;
+	}
+
+	return NULL;
+}
+
 static gchar *get_device_name(const gchar *address)
 {
 	DBusGConnection *connection;
-	DBusGProxy *manager, *proxy;
-	gchar *adapter, *name;
+	DBusGProxy *manager;
+	GPtrArray *adapters;
+	gchar *name;
+	guint i;
+
+	name = NULL;
 
 	connection = dbus_g_bus_get(DBUS_BUS_SYSTEM, NULL);
 	if (connection == NULL)
-		return NULL;
+		return name;
 
 	manager = dbus_g_proxy_new_for_name(connection, "org.bluez",
-						"/", "org.bluez.Manager");
+					    "/", "org.bluez.Manager");
 	if (manager == NULL) {
 		dbus_g_connection_unref(connection);
-		return NULL;
+		return name;
 	}
 
-	if (dbus_g_proxy_call(manager, "DefaultAdapter", NULL, G_TYPE_INVALID,
-			G_TYPE_STRING, &amp;adapter, G_TYPE_INVALID) == FALSE) {
+	if (dbus_g_proxy_call(manager, "ListAdapters", NULL,
+			      G_TYPE_INVALID, dbus_g_type_get_collection("GPtrArray", DBUS_TYPE_G_OBJECT_PATH), &amp;adapters,
+			      G_TYPE_INVALID) == FALSE) {
 		g_object_unref(manager);
 		dbus_g_connection_unref(connection);
-		return NULL;
+		return name;
 	}
 
-	g_object_unref(manager);
-
-	proxy = dbus_g_proxy_new_for_name(connection, "org.bluez",
-						adapter, "org.bluez.Adapter");
-	if (proxy == NULL) {
-		g_free(adapter);
-		dbus_g_connection_unref(connection);
-		return NULL;
-	}
-
-	g_free(adapter);
-
-	if (dbus_g_proxy_call(proxy, "GetRemoteName", NULL,
-			G_TYPE_STRING, address, G_TYPE_INVALID,
-			G_TYPE_STRING, &amp;name, G_TYPE_INVALID) == FALSE) {
-		g_object_unref(proxy);
-		dbus_g_connection_unref(connection);
-		return NULL;
+	for (i = 0; i &lt; adapters-&gt;len &amp;&amp; name == NULL; i++)
+	{
+		DBusGProxy *adapter;
+		char *device_path;
+
+		adapter = dbus_g_proxy_new_for_name(connection, "org.bluez",
+						    g_ptr_array_index(adapters, i), "org.bluez.Adapter");
+		if (dbus_g_proxy_call(adapter, "FindDevice", NULL,
+				      G_TYPE_STRING, address, G_TYPE_INVALID,
+				      DBUS_TYPE_G_OBJECT_PATH, &amp;device_path, G_TYPE_INVALID) != FALSE) {
+			DBusGProxy *device;
+			device = dbus_g_proxy_new_for_name(connection, "org.bluez", device_path, "org.bluez.Device");
+			name = get_name(device);
+			g_object_unref(device);
+			break;
+		}
+		g_object_unref(adapter);
 	}
 
-	g_object_unref(proxy);
-
+	g_ptr_array_free(adapters, TRUE);
+	g_object_unref(manager);
 	dbus_g_connection_unref(connection);
 
 	return name;

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924184237</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-24 18:42:37-0400</timestampReceived><subject>Re: [RFC] DUT mode support for kernel</subject><body>

Hi Ville,

&gt; In good old days the only action needed to enable DUT mode was "hcitool 
&gt; cmd 0x06 0x0003" or similar. However now after having full connection 
&gt; tracking also for incoming connection this doesn't work anymore.
&gt; 
&gt; At least R&amp;S tester does only ACL link to the device and therefore BlueZ 
&gt; disconnects it after 10 secs. Connection tracking needs to be disabled 
&gt; somehow. I prepared one proposal how to deal with it. The disable DUT 
&gt; mode command is missing because the Spec says the DUT mode is disabled 
&gt; by resetting the chip. Thus it can be done with "hciconfig hci0 reset" 
&gt; command.
&gt; 
&gt; With this patch against bluetooth-2.6 tree the DUT mode is enabled by 
&gt; echoing "enabled\n" to new sysfs entry. Maybe some other interface 
&gt; should be used instead?

just remove the whole sysfs crap around it. Listen to the command status
from the DUT change and then still use hcitool cmd for entering it.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080924231838</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 23:18:38-0400</timestampReceived><subject>Re: bluetoothd crasher</subject><body>

On Wed, 2008-09-24 at 16:09 -0700, Bastien Nocera wrote:
&gt; Heya,
&gt; 
&gt; The current bluetoothd crashes on resume from suspend. Here's the valgrind output:

And the crash itself:
#0  malloc_consolidate (av=&lt;value optimized out&gt;) at malloc.c:4841
#1  0x002e1b2d in _int_malloc (av=&lt;value optimized out&gt;, bytes=&lt;value optimized out&gt;) \
at malloc.c:4184 #2  0x002e368f in __libc_calloc (n=&lt;value optimized out&gt;, \
elem_size=&lt;value optimized out&gt;) at malloc.c:3901 #3  0x002d7a7d in open_memstream \
(bufloc=Could not find the frame base for "open_memstream". ) at memstream.c:86
#4  0x00350088 in __vsyslog_chk (pri=&lt;value optimized out&gt;, flag=&lt;value optimized \
out&gt;, fmt=&lt;value optimized out&gt;, ap=&lt;value optimized out&gt;) at ../misc/syslog.c:169 #5 \
0x003505d7 in __vsyslog (pri=Could not find the frame base for "__vsyslog". ) at \
../misc/syslog.c:326 #6  0xb7ff5e68 in vinfo (format=0xb7ffcf75 "HCI dev %d \
unregistered", ap=0xbffff0b4 "") at logging.c:36 #7  0xb7ff5e3a in info \
(format=0xb7ffcf75 "HCI dev %d unregistered") at logging.c:45 #8  0xb7fdc1a9 in \
device_event (chan=0xb800a3d0, si=0xbffff10b) at main.c:544 #9  0xb7fdc0ed in \
io_stack_event (chan=0xb800a3d0, cond=G_IO_IN, data=0x0) at main.c:595 #10 0x001a524d \
in ?? () from /lib/libglib-2.0.so.0 #11 0x0016e218 in g_main_context_dispatch () from \
/lib/libglib-2.0.so.0 #12 0x001718c3 in ?? () from /lib/libglib-2.0.so.0
#13 0x00171de2 in g_main_loop_run () from /lib/libglib-2.0.so.0
#14 0xb7fdc7a4 in main (argc=1, argv=0xbffff7e4) at main.c:750


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080924235535</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 23:55:35-0400</timestampReceived><subject>Re: bluetoothd crasher</subject><body>

On Wed, 2008-09-24 at 16:18 -0700, Bastien Nocera wrote:
&gt; On Wed, 2008-09-24 at 16:09 -0700, Bastien Nocera wrote:
&gt; &gt; Heya,
&gt; &gt; 
&gt; &gt; The current bluetoothd crashes on resume from suspend. Here's the valgrind output:

Patch attached, thanks to Johan for helping out.

Cheers

["bluez-bluetoothd-crasher.patch" (bluez-bluetoothd-crasher.patch)]

diff --git a/src/security.c b/src/security.c
index fd2535f..6a9a5c4 100644
--- a/src/security.c
+++ b/src/security.c
@@ -46,6 +46,7 @@
 
 #include &lt;dbus/dbus.h&gt;
 
+#include "hcid.h"
 #include "logging.h"
 #include "textfile.h"
 
@@ -789,6 +790,27 @@ static inline void conn_request(int dev, bdaddr_t *sba, void *ptr)
 	write_remote_class(sba, &amp;evt-&gt;bdaddr, class);
 }
 
+static void delete_channel(GIOChannel *chan)
+{
+	gint i, found;
+
+	/* Look for the GIOChannel in the table */
+	found = -1;
+	for (i = 0; i &lt; HCI_MAX_DEV; i++) {
+		if (io_data[i].channel == chan) {
+			found = i;
+			break;
+		}
+	}
+
+	if (found == -1) {
+		g_warning("IO channel not found in the io_data table");
+		return;
+	}
+
+	stop_security_manager(i);
+}
+
 static gboolean io_security_event(GIOChannel *chan, GIOCondition cond, gpointer data)
 {
 	unsigned char buf[HCI_MAX_EVENT_SIZE], *ptr = buf;
@@ -799,14 +821,14 @@ static gboolean io_security_event(GIOChannel *chan, GIOCondition cond, gpointer
 	GIOError err;
 
 	if (cond &amp; (G_IO_NVAL | G_IO_HUP | G_IO_ERR)) {
-		g_io_channel_unref(chan);
+		delete_channel(chan);
 		return FALSE;
 	}
 
 	if ((err = g_io_channel_read(chan, (gchar *) buf, sizeof(buf), &amp;len))) {
 		if (err == G_IO_ERROR_AGAIN)
 			return TRUE;
-		g_io_channel_unref(chan);
+		delete_channel(chan);
 		return FALSE;
 	}
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080929182952</emailId><senderName>Rabin Vincent</senderName><senderEmail>rabin@rab.in</senderEmail><timestampReceived>2008-09-29 18:29:52-0400</timestampReceived><subject>Re: BUG kmalloc-16: Object already free</subject><body>

On Sun, Sep 28, 2008 at 03:54:23PM -0700, Justin Mattock wrote:
&gt; After frying my system, I'm finally up and
&gt; running. Not sure if this was due to a git-pull
&gt; (only be a few days since the last pull), or what:
&gt; when waking from suspend I see this
&gt; (I know it says tainted in it, so this will be the only noise you'll
&gt; here from me on this);
&gt; 
&gt; [  274.327003] ============================================================================&gt; \
&gt; [  274.327528] BUG kmalloc-16: Object already free [  274.327877] \
&gt; ----------------------------------------------------------------------------- [  \
&gt; 274.327879] [  274.327890] INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0
&gt; cpu=1 pid763
&gt; [  274.327899] INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0
&gt; cpu=1 pid763
&gt; [  274.327905] INFO: Slab 0xc139a100 objectsd usedb fp=0xdcd08100
&gt; flags=0x400000c3

There's a commit in the latest git which looks like it will solve the
btusb suspend/resume issues: 5fbcd260.. ("[Bluetooth] Fix USB disconnect
handling of btusb driver").

Marcel / linux-bluetooth, I think this double free is a separate issue
with the error handling, and the following patch should fix it.

---
From: Rabin Vincent &lt;rabin@rab.in&gt;
Subject: [PATCH] btusb, bpa10x: fix double frees on error paths

Justin Mattock reported this double free in btusb:

  BUG kmalloc-16: Object already free
  -----------------------------------------------------------------------------

  INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0 cpu=1 pid=3763
  INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0 cpu=1 pid=3763

This occurs because the urb's transfer buffer is being freed separately
in the error path even though the URB_FREE_BUFFER transfer_flag is set
on the urb.

There are similar cases elsewhere in btusb and in bpa10x.  Fix all of
them by removing the additional kfree()'s.

Reported-by: Justin Mattock &lt;justinmattock@gmail.com&gt;
Signed-off-by: Rabin Vincent &lt;rabin@rab.in&gt;
---
 drivers/bluetooth/bpa10x.c |    2 --
 drivers/bluetooth/btusb.c  |    3 ---
 2 files changed, 0 insertions(+), 5 deletions(-)

diff --git a/drivers/bluetooth/bpa10x.c b/drivers/bluetooth/bpa10x.c
index 1e55a65..32f3a8e 100644
--- a/drivers/bluetooth/bpa10x.c
+++ b/drivers/bluetooth/bpa10x.c
@@ -256,7 +256,6 @@ static inline int bpa10x_submit_intr_urb(struct hci_dev *hdev)
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
 		usb_unanchor_urb(urb);
-		kfree(buf);
 	}

 	usb_free_urb(urb);
@@ -298,7 +297,6 @@ static inline int bpa10x_submit_bulk_urb(struct hci_dev *hdev)
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
 		usb_unanchor_urb(urb);
-		kfree(buf);
 	}

 	usb_free_urb(urb);
diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 29ae998..262e9be 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -271,7 +271,6 @@ static int btusb_submit_intr_urb(struct hci_dev *hdev)
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
 		usb_unanchor_urb(urb);
-		kfree(buf);
 	}

 	usb_free_urb(urb);
@@ -354,7 +353,6 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev)
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
 		usb_unanchor_urb(urb);
-		kfree(buf);
 	}

 	usb_free_urb(urb);
@@ -475,7 +473,6 @@ static int btusb_submit_isoc_urb(struct hci_dev *hdev)
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
 		usb_unanchor_urb(urb);
-		kfree(buf);
 	}

 	usb_free_urb(urb);
--
1.5.6.5

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929192205</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-09-29 19:22:05-0400</timestampReceived><subject>Re: BUG kmalloc-16: Object already free</subject><body>

On Mon, Sep 29, 2008 at 11:17 AM, Rabin Vincent &lt;rabin@rab.in&gt; wrote:
&gt; On Sun, Sep 28, 2008 at 03:54:23PM -0700, Justin Mattock wrote:
&gt; &gt; After frying my system, I'm finally up and
&gt; &gt; running. Not sure if this was due to a git-pull
&gt; &gt; (only be a few days since the last pull), or what:
&gt; &gt; when waking from suspend I see this
&gt; &gt; (I know it says tainted in it, so this will be the only noise you'll
&gt; &gt; here from me on this);
&gt; &gt; 
&gt; &gt; [  274.327003] ============================================================================&gt;&gt; \
&gt; &gt; [  274.327528] BUG kmalloc-16: Object already free [  274.327877] \
&gt; &gt; ----------------------------------------------------------------------------- [  \
&gt; &gt; 274.327879] [  274.327890] INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0
&gt; &gt; cpu=1 pid763
&gt; &gt; [  274.327899] INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0
&gt; &gt; cpu=1 pid763
&gt; &gt; [  274.327905] INFO: Slab 0xc139a100 objectsd usedb fp=0xdcd08100
&gt; &gt; flags=0x400000c3
&gt; 
&gt; There's a commit in the latest git which looks like it will solve the
&gt; btusb suspend/resume issues: 5fbcd260.. ("[Bluetooth] Fix USB disconnect
&gt; handling of btusb driver").
&gt; 
&gt; Marcel / linux-bluetooth, I think this double free is a separate issue
&gt; with the error handling, and the following patch should fix it.
&gt; 
&gt; ---
&gt; From: Rabin Vincent &lt;rabin@rab.in&gt;
&gt; Subject: [PATCH] btusb, bpa10x: fix double frees on error paths
&gt; 
&gt; Justin Mattock reported this double free in btusb:
&gt; 
&gt; BUG kmalloc-16: Object already free
&gt; -----------------------------------------------------------------------------
&gt; 
&gt; INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; 
&gt; This occurs because the urb's transfer buffer is being freed separately
&gt; in the error path even though the URB_FREE_BUFFER transfer_flag is set
&gt; on the urb.
&gt; 
&gt; There are similar cases elsewhere in btusb and in bpa10x.  Fix all of
&gt; them by removing the additional kfree()'s.
&gt; 
&gt; Reported-by: Justin Mattock &lt;justinmattock@gmail.com&gt;
&gt; Signed-off-by: Rabin Vincent &lt;rabin@rab.in&gt;
&gt; ---
&gt; drivers/bluetooth/bpa10x.c |    2 --
&gt; drivers/bluetooth/btusb.c  |    3 ---
&gt; 2 files changed, 0 insertions(+), 5 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/bpa10x.c b/drivers/bluetooth/bpa10x.c
&gt; index 1e55a65..32f3a8e 100644
&gt; --- a/drivers/bluetooth/bpa10x.c
&gt; +++ b/drivers/bluetooth/bpa10x.c
&gt; @@ -256,7 +256,6 @@ static inline int bpa10x_submit_intr_urb(struct hci_dev *hdev)
&gt; BT_ERR("%s urb %p submission failed (%d)",
&gt; hdev-&gt;name, urb, -err);
&gt; usb_unanchor_urb(urb);
&gt; -               kfree(buf);
&gt; }
&gt; 
&gt; usb_free_urb(urb);
&gt; @@ -298,7 +297,6 @@ static inline int bpa10x_submit_bulk_urb(struct hci_dev *hdev)
&gt; BT_ERR("%s urb %p submission failed (%d)",
&gt; hdev-&gt;name, urb, -err);
&gt; usb_unanchor_urb(urb);
&gt; -               kfree(buf);
&gt; }
&gt; 
&gt; usb_free_urb(urb);
&gt; diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
&gt; index 29ae998..262e9be 100644
&gt; --- a/drivers/bluetooth/btusb.c
&gt; +++ b/drivers/bluetooth/btusb.c
&gt; @@ -271,7 +271,6 @@ static int btusb_submit_intr_urb(struct hci_dev *hdev)
&gt; BT_ERR("%s urb %p submission failed (%d)",
&gt; hdev-&gt;name, urb, -err);
&gt; usb_unanchor_urb(urb);
&gt; -               kfree(buf);
&gt; }
&gt; 
&gt; usb_free_urb(urb);
&gt; @@ -354,7 +353,6 @@ static int btusb_submit_bulk_urb(struct hci_dev *hdev)
&gt; BT_ERR("%s urb %p submission failed (%d)",
&gt; hdev-&gt;name, urb, -err);
&gt; usb_unanchor_urb(urb);
&gt; -               kfree(buf);
&gt; }
&gt; 
&gt; usb_free_urb(urb);
&gt; @@ -475,7 +473,6 @@ static int btusb_submit_isoc_urb(struct hci_dev *hdev)
&gt; BT_ERR("%s urb %p submission failed (%d)",
&gt; hdev-&gt;name, urb, -err);
&gt; usb_unanchor_urb(urb);
&gt; -               kfree(buf);
&gt; }
&gt; 
&gt; usb_free_urb(urb);
&gt; --
&gt; 1.5.6.5
&gt; 
&gt; 

Cool, depending on the status of
this patch. either I'll apply this one, or just wait
until it gets commited,and then just do a git-pull.

--
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929234739</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 23:47:39-0400</timestampReceived><subject>Re: BUG kmalloc-16: Object already free</subject><body>

Hi Rabin,

&gt; &gt; After frying my system, I'm finally up and
&gt; &gt; running. Not sure if this was due to a git-pull
&gt; &gt; (only be a few days since the last pull), or what:
&gt; &gt; when waking from suspend I see this
&gt; &gt; (I know it says tainted in it, so this will be the only noise you'll
&gt; &gt; here from me on this);
&gt; &gt; 
&gt; &gt; [  274.327003] ============================================================================&gt; \
&gt; &gt; &gt; [  274.327528] BUG kmalloc-16: Object already free [  274.327877] \
&gt; &gt; &gt; -----------------------------------------------------------------------------
&gt; &gt; [  274.327879]
&gt; &gt; [  274.327890] INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0
&gt; &gt; cpu=1 pid763
&gt; &gt; [  274.327899] INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0
&gt; &gt; cpu=1 pid763
&gt; &gt; [  274.327905] INFO: Slab 0xc139a100 objectsd usedb fp=0xdcd08100
&gt; &gt; flags=0x400000c3
&gt; 
&gt; There's a commit in the latest git which looks like it will solve the
&gt; btusb suspend/resume issues: 5fbcd260.. ("[Bluetooth] Fix USB disconnect
&gt; handling of btusb driver").
&gt; 
&gt; Marcel / linux-bluetooth, I think this double free is a separate issue
&gt; with the error handling, and the following patch should fix it.
&gt; 
&gt; ---
&gt; From: Rabin Vincent &lt;rabin@rab.in&gt;
&gt; Subject: [PATCH] btusb, bpa10x: fix double frees on error paths
&gt; 
&gt; Justin Mattock reported this double free in btusb:
&gt; 
&gt; BUG kmalloc-16: Object already free
&gt; -----------------------------------------------------------------------------
&gt; 
&gt; INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; 
&gt; This occurs because the urb's transfer buffer is being freed separately
&gt; in the error path even though the URB_FREE_BUFFER transfer_flag is set
&gt; on the urb.
&gt; 
&gt; There are similar cases elsewhere in btusb and in bpa10x.  Fix all of
&gt; them by removing the additional kfree()'s.

I haven't verified it yet, but it looks like a good catch. Let me double
check this on my test machine. Weird that we never noticed this before
since I have been using the btusb driver for a very long time now.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080924001746</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-24 00:17:46-0400</timestampReceived><subject>Re: First pass at HAL device class plugin</subject><body>

On Tue, 2008-09-23 at 17:06 -0700, Bastien Nocera wrote:
&gt; Probably doesn't work, and it's missing some exported functionality to
&gt; set the device class on the actual adapter (and have it written).

And the version with the build system changes attached.

Note that we do check for -&gt;remove being NULL in adapter.c

Cheers

["0001-First-pass-at-a-HAL-plugin-to-set-the-device-class.patch" (0001-First-pass-at-a-HAL-plugin-to-set-the-device-class.patch)]

From 3ac08a79c794715100282afb0a193e96fcf309a1 Mon Sep 17 00:00:00 2001
From: Bastien Nocera &lt;hadess@hadess.net&gt;
Date: Tue, 23 Sep 2008 17:03:06 -0700
Subject: [PATCH] First pass at a HAL plugin to set the device class

---
 acinclude.m4                |   11 ++++
 bootstrap-configure         |    1 +
 configure.ac                |    1 +
 plugins/Makefile.am         |   16 +++++-
 plugins/hal-adapter-class.c |  126 +++++++++++++++++++++++++++++++++++++++++++
 5 files changed, 153 insertions(+), 2 deletions(-)
 create mode 100644 plugins/hal-adapter-class.c

diff --git a/acinclude.m4 b/acinclude.m4
index 1991e4a..6325052 100644
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -156,6 +156,12 @@ AC_DEFUN([AC_PATH_USB], [
 			[Define to 1 if you need the usb_interrupt_read() function.]))
 ])
 
+AC_DEFUN([AC_PATH_HAL], [
+	 PKG_CHECK_MODULES(HAL, hal, hal_found=yes, hal_found=no)
+	 AC_SUBST(HAL_CFLAGS)
+	 AC_SUBST(HAL_LIBS)
+])
+
 AC_DEFUN([AC_PATH_NETLINK], [
 	PKG_CHECK_MODULES(NETLINK, libnl-1, netlink_found=yes, netlink_found=no)
 	AC_SUBST(NETLINK_CFLAGS)
@@ -237,6 +243,10 @@ AC_DEFUN([AC_ARG_BLUEZ], [
 		usb_enable=${enableval}
 	])
 
+	AC_ARG_ENABLE(hal, AC_HELP_STRING([--enable-hal], [enable HAL support]), [
+		hal_enable=${enableval}
+	])
+
 	AC_ARG_ENABLE(netlink, AC_HELP_STRING([--enable-netlink], [enable NETLINK support]), [
 		netlink_enable=${enableval}
 	])
@@ -332,6 +342,7 @@ AC_DEFUN([AC_ARG_BLUEZ], [
 	AM_CONDITIONAL(SNDFILE, test "${sndfile_enable}" = "yes" &amp;&amp; test "${sndfile_found}" = "yes")
 	AM_CONDITIONAL(NETLINK, test "${netlink_enable}" = "yes" &amp;&amp; test "${netlink_found}" = "yes")
 	AM_CONDITIONAL(USB, test "${usb_enable}" = "yes" &amp;&amp; test "${usb_found}" = "yes")
+	AM_CONDITIONAL(HAL, test "${hal_enable}" = "yes" &amp;&amp; test "${hal_found}" = "yes")
 	AM_CONDITIONAL(SBC, test "${alsa_enable}" = "yes" || test "${gstreamer_enable}" = "yes")
 	AM_CONDITIONAL(ALSA, test "${alsa_enable}" = "yes" &amp;&amp; test "${alsa_found}" = "yes")
 	AM_CONDITIONAL(GSTREAMER, test "${gstreamer_enable}" = "yes" &amp;&amp; test "${gstreamer_found}" = "yes")
diff --git a/bootstrap-configure b/bootstrap-configure
index 7b07fe1..57f9553 100755
--- a/bootstrap-configure
+++ b/bootstrap-configure
@@ -27,6 +27,7 @@ fi
 		--enable-dund \
 		--enable-test \
 		--enable-cups \
+		--enable-hal \
 		--disable-manpages \
 		--disable-configfiles \
 		--disable-initscripts \
diff --git a/configure.ac b/configure.ac
index 30a256a..a7e978b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -32,6 +32,7 @@ AC_PATH_GMODULE
 AC_PATH_ALSA
 AC_PATH_GSTREAMER
 AC_PATH_USB
+AC_PATH_HAL
 AC_PATH_NETLINK
 AC_PATH_SNDFILE
 
diff --git a/plugins/Makefile.am b/plugins/Makefile.am
index 8565bb2..bb38823 100644
--- a/plugins/Makefile.am
+++ b/plugins/Makefile.am
@@ -13,7 +13,13 @@ else
 service_plugins =
 endif
 
-plugin_LTLIBRARIES = $(netlink_plugins) $(service_plugins)
+if HAL
+hal_plugins = hal-adapter-class.la
+else
+hal_plugins =
+endif
+
+plugin_LTLIBRARIES = $(netlink_plugins) $(service_plugins) $(hal_plugins)
 
 noinst_LTLIBRARIES = echo.la storage.la
 
@@ -31,10 +37,16 @@ if SERVICEPLUGIN
 service_la_SOURCES = service.c
 endif
 
+if HAL
+hal_adapter_class_la_SOURCES = hal-adapter-class.c
+
+hal_adapter_class_la_LIBADD = @HAL_LIBS@
+endif
+
 AM_LDFLAGS = -module -avoid-version -no-undefined \
 			-export-symbols-regex bluetooth_plugin_desc
 
-AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ @GDBUS_CFLAGS@ @NETLINK_CFLAGS@
+AM_CFLAGS = @BLUEZ_CFLAGS@ @DBUS_CFLAGS@ @GLIB_CFLAGS@ @GDBUS_CFLAGS@ @NETLINK_CFLAGS@ @HAL_CFLAGS@
 
 INCLUDES = -I$(top_srcdir)/common -I$(top_srcdir)/src
 
diff --git a/plugins/hal-adapter-class.c b/plugins/hal-adapter-class.c
new file mode 100644
index 0000000..c5dae5c
--- /dev/null
+++ b/plugins/hal-adapter-class.c
@@ -0,0 +1,126 @@
+/*
+ *
+ *  BlueZ - Bluetooth protocol stack for Linux
+ *
+ *  Copyright (C) 2004-2008  Marcel Holtmann &lt;marcel@holtmann.org&gt;
+ *
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#ifdef HAVE_CONFIG_H
+#include &lt;config.h&gt;
+#endif
+
+#include &lt;errno.h&gt;
+#include &lt;unistd.h&gt;
+
+#include &lt;bluetooth/bluetooth.h&gt;
+
+#include &lt;glib.h&gt;
+#include &lt;hal/libhal.h&gt;
+#include &lt;gdbus.h&gt;
+
+#include "plugin.h"
+#include "adapter.h"
+#include "logging.h"
+
+static guint32 get_form_factor(LibHalContext *ctx)
+{
+	char *formfactor;
+	guint32 ret;
+
+	ret = 1 &lt;&lt; 8; /* Computer major class */
+	formfactor = libhal_device_get_property_string(ctx,
+				"/org/freedesktop/Hal/devices/computer",
+						"system.formfactor", NULL);
+
+	if (formfactor == NULL)
+		return ret;
+
+	if (g_str_equal(formfactor, "laptop"))
+		ret += (1 &lt;&lt; 2) + (1 &lt;&lt; 3);
+	else if (g_str_equal(formfactor, "desktop"))
+		ret += 1 &lt;&lt; 2;
+	else if (g_str_equal(formfactor, "server"))
+		ret += 1 &lt;&lt; 3;
+	else if (g_str_equal(formfactor, "handheld"))
+		ret += 1 &lt;&lt; 4;
+
+	g_free (formfactor);
+
+	return ret;
+}
+
+static int hal_adapter_class_probe(struct btd_adapter *adapter)
+{
+	DBusConnection *conn;
+	LibHalContext *ctx = NULL;
+	guint32 class;
+
+	conn = dbus_bus_get(DBUS_BUS_SYSTEM, NULL);
+
+	ctx = libhal_ctx_new();
+	if (libhal_ctx_set_dbus_connection(ctx, conn) == FALSE) {
+		libhal_ctx_free(ctx);
+		dbus_connection_unref(conn);
+		return -EIO;
+	}
+
+	if (libhal_ctx_init(ctx, NULL) == FALSE) {
+		g_warning("Unable to init HAL context");
+		libhal_ctx_free(ctx);
+		dbus_connection_unref(conn);
+		return -EIO;
+	}
+
+	class = get_form_factor (ctx);
+	debug ("0: 0x%X", class);
+#if 0
+	adapter_set_class (adapter, class);
+	dbus_g_proxy_call(object, "SetMajorClass", NULL,
+		G_TYPE_STRING, "computer", G_TYPE_INVALID, G_TYPE_INVALID);
+	dbus_g_proxy_call(object, "SetMinorClass", NULL,
+		G_TYPE_STRING, formfactor, G_TYPE_INVALID, G_TYPE_INVALID);
+	g_free (formfactor);
+#endif
+	libhal_ctx_free(ctx);
+	dbus_connection_unref(conn);
+
+	return 0;
+}
+
+static struct btd_adapter_driver hal_adapter_class = {
+	.name	= "hal-adapter-class",
+	.probe	= hal_adapter_class_probe,
+	.remove	= NULL,
+};
+
+static int hal_adapter_class_init(void)
+{
+	debug("Setup HAL Adapter Class plugin");
+
+	return btd_register_adapter_driver(&amp;hal_adapter_class);
+}
+
+static void hal_adapter_class_exit(void)
+{
+	debug("Cleanup HAL Adapter Class plugin");
+
+	btd_unregister_adapter_driver(&amp;hal_adapter_class);
+}
+
+BLUETOOTH_PLUGIN_DEFINE("hal", hal_adapter_class_init, hal_adapter_class_exit)
-- 
1.6.0.1


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080924095500</emailId><senderName>"Christian O. Andersson"</senderName><senderEmail>christian.o.andersson@gmail.com</senderEmail><timestampReceived>2008-09-24 09:55:00-0400</timestampReceived><subject>hci_read_remote_name_with_clock_offset vs hci_read_remote_name</subject><body>

Hey guys,

Please bare with me as I'm just starting to learn the concepts of
hci-traffic. I hope this is the right place to ask.

I was wondering - is there any performance gain in preferring
'hci_read_remote_name_with_clock_offset' to 'hci_read_remote_name' if
you already know the clock offset (from a previous inquiry).

Looking at the source code it seems as though the latter only calls the
former with the clock offset set to 0?

/Christian

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080924230602</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-24 23:06:02-0400</timestampReceived><subject>Linux 2.6.26.4: BT dongle will not pair with A2DP speakers</subject><body>

Hi,

I am running a 2.6.26.4 kernel with Fedora 9, with the following bluez packages \
installed:

bluez-hcidump-1.41-1.fc9.i386
bluez-libs-devel-3.35-1.fc9.i386
bluez-utils-3.35-3.fc9.i386
bluez-utils-alsa-3.35-3.fc9.i386
bluez-utils-gstreamer-3.35-3.fc9.i386
bluez-gnome-0.26-1.fc9.i386
bluez-libs-3.35-1.fc9.i386

I also have a USB BT dongle, and I am unable to persuade this dongle to pair with my \
A2DP speakers. This is what bluez tells me about the speakers:

# hcitool inq
Inquiring ...
	00:14:EF:00:20:05	clock offset: 0x3800	class: 0x240404

# hcitool info 00:14:EF:00:20:05
Requesting information ...
	BD Address:  00:14:EF:00:20:05
	OUI Company: TZero Technologies, Inc. (00-14-EF)
	LMP Version: 2.0 (0x3) LMP Subversion: 0x103a
	Manufacturer: Cambridge Silicon Radio (10)
	Features: 0xff 0xff 0x8f 0x7e 0x98 0x19 0x00 0x80
		&lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt; 
		&lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt; 
		&lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt; 
		&lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt; 
		&lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt; 
		&lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt; 
		&lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt; 
		&lt;AFH cap. slave&gt; &lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; 
		&lt;5-slot EDR ACL&gt; &lt;AFH cap. master&gt; &lt;AFH class. master&gt; 
		&lt;extended features&gt; 
T
This is what I can tell about the dongle itself:

# hciconfig -a hci0
hci0:	Type: USB
	BD Address: 00:0A:3A:7D:FF:80 ACL MTU: 1017:5 SCO MTU: 64:0
	UP RUNNING PSCAN 
	RX bytes:10633 acl:102 sco:0 events:338 errors:0
	TX bytes:4703 acl:94 sco:0 commands:108 errors:0
	Features: 0xff 0xff 0x8d 0xfe 0x9b 0xf9 0x00 0x80
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
	Link policy: HOLD SNIFF PARK 
	Link mode: SLAVE ACCEPT 
	Name: 'whatever'
	Class: 0x080404
	Service Classes: Capturing
	Device Class: Audio/Video, Device conforms to the Headset profile
	HCI Ver: 2.0 (0x3) HCI Rev: 0x419d LMP Ver: 2.0 (0x3) LMP Subver: 0x430e
	Manufacturer: Broadcom Corporation (15)

What is happening is that every attempt to connect to these speakers is being dropped \
before I have a chance to authenticate with my PIN. This is the output from hcidump \
for a connection attempt:

# hcidump -V -i hci0
HCI sniffer - Bluetooth packet analyzer ver 1.41
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
    bdaddr 00:14:EF:00:20:05 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
    Packet type: DM1 DM3 DM5 DH1 DH3 DH5 
&gt; HCI Event: Command Status (0x0f) plen 4
    Create Connection (0x01|0x0005) status 0x00 ncmd 1
&gt; HCI Event: Connect Complete (0x03) plen 11
    status 0x00 handle 12 bdaddr 00:14:EF:00:20:05 type ACL encrypt 0x00
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
    handle 12
&lt; ACL data: handle 12 flags 0x02 dlen 10
    L2CAP(s): Info req: type 2
&gt; HCI Event: Command Status (0x0f) plen 4
    Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 1
&lt; HCI Command: Write Link Policy Settings (0x02|0x000d) plen 4
    handle 12 policy 0x0e
    Link policy: HOLD SNIFF PARK 
&gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
    status 0x00 handle 12
    Features: 0xff 0xff 0x8f 0x7e 0x98 0x19 0x00 0x80
&gt; HCI Event: Command Complete (0x0e) plen 6
    Write Link Policy Settings (0x02|0x000d) ncmd 1
    status 0x00 handle 12
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
    bdaddr 00:14:EF:00:20:05 mode 2 clkoffset 0x0000
&gt; HCI Event: Command Status (0x0f) plen 4
    Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
&gt; HCI Event: Max Slots Change (0x1b) plen 3
    handle 12 slots 5
&gt; ACL data: handle 12 flags 0x02 dlen 16
    L2CAP(s): Info rsp: type 2 result 0
      Extended feature mask 0x0000
&gt; HCI Event: Remote Name Req Complete (0x07) plen 255
    status 0x00 bdaddr 00:14:EF:00:20:05 name 'HouseParty Blu-Gear4'
&gt; HCI Event: Number of Completed Packets (0x13) plen 5
    handle 12 packets 1
&lt; HCI Command: Disconnect (0x01|0x0006) plen 3
    handle 12 reason 0x13
    Reason: Remote User Terminated Connection
&gt; HCI Event: Command Status (0x0f) plen 4
    Disconnect (0x01|0x0006) status 0x00 ncmd 1
&gt; HCI Event: Disconn Complete (0x05) plen 4
    status 0x00 handle 12 reason 0x16
    Reason: Connection Terminated by Local Host

It looks like these speakers don't like my dongle for some reason, but I have no idea \
why. The dongle is advertised as supporting BT v2.0 with EDR. I have also \
successfully paired these speakers with my laptop and its built-in BT support, and \
have also paired this dongle with my mobile phone and transferred files across to my \
desktop.

Can anyone see anything which might explain what is happening, please? Or maybe \
suggest a means of debugging this further?

Thanks for any assistance,
Cheers,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080925001347</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-25 00:13:47-0400</timestampReceived><subject>Re: bluetoothd crasher</subject><body>

Hi Bastien,

&gt; &gt; &gt; The current bluetoothd crashes on resume from suspend. Here's the valgrind output:
&gt; 
&gt; Patch attached, thanks to Johan for helping out.

a slight modified patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080925060343</emailId><senderName>Ville Tervo</senderName><senderEmail>ville.tervo@nokia.com</senderEmail><timestampReceived>2008-09-25 06:03:43-0400</timestampReceived><subject>Re: [RFC] DUT mode support for kernel</subject><body>

Hi Marcel,

ext Marcel Holtmann wrote:
&gt; Hi Ville,
&gt; 
&gt;&gt;
&gt;&gt; With this patch against bluetooth-2.6 tree the DUT mode is enabled by 
&gt;&gt; echoing "enabled\n" to new sysfs entry. Maybe some other interface 
&gt;&gt; should be used instead?
&gt; 
&gt; just remove the whole sysfs crap around it. Listen to the command status
&gt; from the DUT change and then still use hcitool cmd for entering it.

OK. New patch without sysfs crap will follow soon. I was just one step 
too far and was thinking about removal of raw hci sockets :)

-- 
Ville
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080925205048</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-25 20:50:48-0400</timestampReceived><subject>Re: Cannot pair A2DP speakers with Belkin Bluetooth adapter</subject><body>

&gt; For those two low-level test commands the behavior you describe is  
&gt; perfectly normal and expected. However, they certainly aren't a proper  
&gt; way to initiate pairing. Where did you get the idea that this is the  
&gt; right way to do pairing? If it was in some BlueZ documentation we  
&gt; should fix it ASAP. You might want to check the bluez wiki for some  
&gt; ways to perform pairing (hint: search for "CreateBonding"):
&gt; http://wiki.bluez.org/wiki/HOWTO/Bonding

Johan,

Sorry for the long delay in responding; I've only just found your reply.

As to my approach to pairing, I was driven to such extremes by a lack of working \
alternatives :-). Pairing the speakers with the laptop was easy - I was prompted for \
a PIN code, entered it, and all was well. However, when I tried to do the same for \
the desktop, the PIN-entry dialog box would always vanish before I could type more \
than the first digit! As a result, I resorted to lower- and lower-level techniques to \
find out what on Earth was going wrong.

I actually cracked the problem *only this morning*, having discovered hcidump last \
night! (This is a problem that's been on the back-burner for a while...) What appears \
to have been happening is that the speakers only allow devices to bond with them for \
a few minutes after the speakers are switched on. (This isn't made at all clear in \
the manual.) If you try to pair after that then the speakers ignore you and just drop \
the connection. More significantly, they don't even keep the connection alive long \
enough to respond to (i.e. reject) an outstanding attempt to send a PIN. What I \
eventually did was the following:

* Run hcidump -V in one window
* Run l2ping &lt;bdaddr&gt; in another window to open a connection and *keep* it open.
* Run hciconfig auth &lt;bdaddr&gt; in a third window.

And no, this didn't work either. But it did at least allow the speakers *refusal* to \
bond to appear in the dump output :-). Once it became clear that a) the speakers did \
possess a "pairing mode", and b) that the speakers weren't *in* "pairing mode" then \
bonding them to the adapter became easy.

As to the Linux Bluetooth documentation, it appears that BT support has evolved \
rapidly and significantly over the past year or two, and Google has a looong memory. \
Much of the advice I was digging up seemed out-of-date. Also, it all expected bonding \
to Just Work, and none of the errors I was seeing gave any indication of what the \
underlying problem actually was. For example, I think ALSA's error from aplay was \
about a GET CAPABILITIES call failing. Similarly, a Connect() call from Python just \
gave an I/O error.

Anyway - it all works NOW :-).

Thanks,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080926102404</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-09-26 10:24:04-0400</timestampReceived><subject>Can't read simple pairing mode on hci0: Input/output error</subject><body>

Hi,

I get this message immaterial of the settings I do to 

hcid.conf --&gt; security [none:auto:user] and pairing [none:once:multi], during hcid \
restart. What should be the problem ?

Also all my OBEX transfers work without the passkey authentication, but with passkey \
authentication, even if security is auto and passkey hard-coded.

Thanks in advance
Pavan


--
Will the all new Indica Vista zip ahead of the Suzuki Swift? Read the expert review \
on Zigwheels.com http://zigwheels.com/b2cam/reviewsDetails.action?name=Ro11_20080829&amp;path=/INDT/Reviews/Ro11_20080829&amp;page=1&amp;pagecount=9
                
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080927042505</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 04:25:05-0400</timestampReceived><subject>Re: Fix building bluez-gnome in a custom prefix</subject><body>

Hi Bastien,

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080925192538</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-25 19:25:38-0400</timestampReceived><subject>Bluetooth 2.1 USB adapter!</subject><body>

Hi,

I have just bought a Belkin USB adapter 0x050d:0x016a, and according to hciconfig \
this is a Bluetooth 2.1 device:

# hciconfig hci0 version revision
hci0:	Type: USB
	BD Address: 00:0A:3A:83:76:DA ACL MTU: 1021:8 SCO MTU: 64:1
	HCI Ver: 2.1 (0x4) HCI Rev: 0x5184 LMP Ver: 2.1 (0x4) LMP Subver: 0x420e
	Manufacturer: Broadcom Corporation (15)
	Firmware 132.66 / 14

Does this mean that the adapter cannot possibly work correctly in anything less than \
a 2.6.27 kernel? Because it clearly *isn't* working correctly at the moment:

# hciconfig hci0 name
Can't read local name on hci0: Input/output error (5)

# hciconfig hci0 class
Can't read class of device on hci0: Input/output error (5)

# hciconfig hci0 voice
Can't read voice setting on hci0: Input/output error (5)

# hciconfig hci0 iac
Failed to read IAC from hci0: Input/output error

etc.

According to lsusb, this device is actually a USB hub with several other devices \
attached to it:

$ /sbin/lsusb
...
Bus 004 Device 018: ID 050d:016a Belkin Components 
Bus 004 Device 017: ID 0a5c:4503 Broadcom Corp. 
Bus 004 Device 016: ID 0a5c:4502 Broadcom Corp. 
Bus 004 Device 015: ID 0a5c:4500 Broadcom Corp.
...

usb 4-1: new full speed USB device using uhci_hcd and address 15
usb 4-1: configuration #1 chosen from 1 choice
hub 4-1:1.0: USB hub found
hub 4-1:1.0: 3 ports detected
usb 4-1.1: new full speed USB device using uhci_hcd and address 16
usb 4-1.1: configuration #1 chosen from 1 choice
input: HID 0a5c:4502 as /class/input/input12
input,hidraw0: USB HID v1.11 Keyboard [HID 0a5c:4502] on usb-0000:00:1d.2-1.1
usb 4-1.2: new full speed USB device using uhci_hcd and address 17
usb 4-1.2: configuration #1 chosen from 1 choice
input: HID 0a5c:4503 as /class/input/input13
input,hidraw1: USB HID v1.11 Mouse [HID 0a5c:4503] on usb-0000:00:1d.2-1.2
usb 4-1.3: new full speed USB device using uhci_hcd and address 18
usb 4-1.3: configuration #1 chosen from 1 choice
Bluetooth: HCI USB driver ver 2.9
usbcore: registered new interface driver hci_usb

Here are the device descriptors:

T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 15 Spd=12  MxCh= 3
D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4500 Rev= 1.00
S:  Manufacturer=Broadcom
S:  Product=BCM2046B1
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr= 94mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=255ms

T:  Bus=04 Lev=02 Prnt=15 Port=00 Cnt=01 Dev#= 16 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4502 Rev= 1.00
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=10ms

T:  Bus=04 Lev=02 Prnt=15 Port=01 Cnt=02 Dev#= 17 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0a5c ProdID=4503 Rev= 1.00
C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=10ms

T:  Bus=04 Lev=02 Prnt=15 Port=02 Cnt=03 Dev#= 18 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=050d ProdID=016a Rev= 3.88
S:  Manufacturer=Broadcom Corp
S:  Product=BLUETOOTH USB +EDR ADAPTER v2.1 UHE
S:  SerialNumber=000A3A8376DA
C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:* If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  32 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  32 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
E:  Ad=83(I) Atr=01(Isoc) MxPS=  64 Ivl=1ms
E:  Ad=03(O) Atr=01(Isoc) MxPS=  64 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

Obviously I would like to get this adapter working properly, so please let me know if \
there is anything that I can do to help. (Apart from fry my e1000/e1000e network \
adapters, that is ;-).)

Cheers,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080925202215</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-25 20:22:15-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

Hi Chris,

&gt; I have just bought a Belkin USB adapter 0x050d:0x016a, and according to hciconfig \
&gt; this is a Bluetooth 2.1 device: 
&gt; # hciconfig hci0 version revision
&gt; hci0:	Type: USB
&gt; 	BD Address: 00:0A:3A:83:76:DA ACL MTU: 1021:8 SCO MTU: 64:1
&gt; 	HCI Ver: 2.1 (0x4) HCI Rev: 0x5184 LMP Ver: 2.1 (0x4) LMP Subver: 0x420e
&gt; 	Manufacturer: Broadcom Corporation (15)
&gt; 	Firmware 132.66 / 14
&gt; 
&gt; Does this mean that the adapter cannot possibly work correctly in anything less \
&gt; than a 2.6.27 kernel? Because it clearly *isn't* working correctly at the moment:

load btusb or hci_usb with reset=1 and if that helps, I can add a quirk
for this dongle.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080925210018</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-25 21:00:18-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

--- On Thu, 25/9/08, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; load btusb or hci_usb with reset=1 and if that helps, I can
&gt; add a quirk for this dongle.

Yes, that certainly did the trick :-) !! There's a bit of noise in the dmesg log from usbhid:

usb 4-1: new full speed USB device using uhci_hcd and address 28
usb 4-1: configuration #1 chosen from 1 choice
hub 4-1:1.0: USB hub found
hub 4-1:1.0: 3 ports detected
usb 4-1.1: new full speed USB device using uhci_hcd and address 29
usb 4-1.1: configuration #1 chosen from 1 choice
input: HID 0a5c:4502 as /class/input/input18
input,hidraw0: USB HID v1.11 Keyboard [HID 0a5c:4502] on usb-0000:00:1d.2-1.1
usb 4-1.2: new full speed USB device using uhci_hcd and address 30
usb 4-1.2: configuration #1 chosen from 1 choice
input: HID 0a5c:4503 as /class/input/input19
input,hidraw1: USB HID v1.11 Mouse [HID 0a5c:4503] on usb-0000:00:1d.2-1.2
usb 4-1.3: new full speed USB device using uhci_hcd and address 31
usb 4-1.3: configuration #1 chosen from 1 choice
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received
usbhid: input irq status -75 received

But it does actually (seem to) work now:

# hciconfig -a hci1
hci1:	Type: USB
	BD Address: 00:0A:3A:83:76:DA ACL MTU: 1021:8 SCO MTU: 64:1
	UP RUNNING PSCAN 
	RX bytes:2536 acl:0 sco:0 events:37 errors:0
	TX bytes:628 acl:0 sco:0 commands:37 errors:0
	Features: 0xff 0xff 0x8f 0xfe 0x9b 0xff 0x79 0x83
	Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3 
	Link policy: HOLD SNIFF PARK 
	Link mode: SLAVE ACCEPT 
	Name: 'whatever-1'
	Class: 0x080104
	Service Classes: Capturing
	Device Class: Computer, Desktop workstation
	HCI Ver: 2.1 (0x4) HCI Rev: 0x5184 LMP Ver: 2.1 (0x4) LMP Subver: 0x420e
	Manufacturer: Broadcom Corporation (15)

Thanks,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930085223</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-30 08:52:23-0400</timestampReceived><subject>Re: BIP Basic Image profile support in bluez stack</subject><body>

On Tue, 2008-09-30 at 14:16 +0530, Ram kumar wrote:
&gt; hi,
&gt;       Did bluez support BIP profile.I am using linux 2.6.25.I am not
&gt; able to find any info regarding this on the bluez website.
&gt; 
&gt; If Bluez supports BIP profile.How to enable that file through sdptool ???

obex-data-server SVN trunk supports BIP. I don't know of any front-ends
that actually use it yet though.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930085826</emailId><senderName>"Ram kumar"</senderName><senderEmail>ramkumar.research@gmail.com</senderEmail><timestampReceived>2008-09-30 08:58:26-0400</timestampReceived><subject>BIP Basic Image profile support in bluez stack</subject><body>

hi,
      Did bluez support BIP profile.I am using linux 2.6.25.I am not
able to find any info regarding this on the bluez website.

If Bluez supports BIP profile.How to enable that file through sdptool ???

Regards,
Ram
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080925212643</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-25 21:26:43-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

Hi Chris,

&gt; I have just bought a Belkin USB adapter 0x050d:0x016a, and according to hciconfig \
&gt; this is a Bluetooth 2.1 device:

can you point us to the exact model number and maybe a picture or shop
where I could order one.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080925215909</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-25 21:59:09-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

--- On Fri, 26/9/08, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; can you point us to the exact model number and maybe a picture or shop
&gt; where I could order one.

Heh, I should charge Belkin a commission ... ;-)

http://www.dabs.com/ProductView.aspx?Quicklinx=564Q

or (for a better picture)

http://www.argos.co.uk/static/Product/partNumber/6756035/Trail/searchtext%3EBLUETOOTH.htm


The model number is: F8T016

And once I'd warmed it in a hot fire for a short time, I noticed some other markings \
on it which (translated from the Elvish) read:

FCC ID:K7SF8T016
IC:3623A-F8T016

There's also a version of this adapter with 100m range, should you ever wish to share \
your bluetooth link with all of your neighbours.

And yes, it really *is* this small! I was planning on installing it permanently in \
the back of one of my machines, or risk losing it completely, but the machine then \
refused to boot. (It's an old machine with USB 1.1 ports at the back; it might be \
confused by the adapter's "hub on a chip", or possibly by the adapter's built-in \
keyboard and mouse devices.)

Now that we know how to get it working, I will be able to experiment with it further.

Cheers,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080927001105</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-27 00:11:05-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

On Thu, 2008-09-25 at 14:59 -0700, Chris Rankin wrote:
&gt; --- On Fri, 26/9/08, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; &gt; can you point us to the exact model number and maybe a picture or shop
&gt; &gt; where I could order one.
&gt; 
&gt; Heh, I should charge Belkin a commission ... ;-)
&gt; 
&gt; http://www.dabs.com/ProductView.aspx?Quicklinx=564Q
&gt; 
&gt; or (for a better picture)
&gt; 
&gt; http://www.argos.co.uk/static/Product/partNumber/6756035/Trail/searchtext%3EBLUETOOTH.htm

The one at Argos says it's a 2.0 version. I guess those aren't the same
pieces of hardware?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927105429</emailId><senderName>Chris Rankin</senderName><senderEmail>rankincj@yahoo.com</senderEmail><timestampReceived>2008-09-27 10:54:29-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

--- On Sat, 27/9/08, Bastien Nocera &lt;hadess@hadess.net&gt; wrote:
&gt; http://www.argos.co.uk/static/Product/partNumber/6756035/Trail/searchtext%3EBLUETOOTH.htm
&gt; 
&gt; The one at Argos says it's a 2.0 version. I guess those
&gt; aren't the same pieces of hardware?

Well, the picture is *identical* to the adapter I bought, and I bought this one at Argos too ;-).

Cheers,
Chris



      
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927042527</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 04:25:27-0400</timestampReceived><subject>Re: [PATCH] Write "time left" in human readable terms</subject><body>

Hi Bastien,

&gt; Rather than using numbers, use full words, like minutes/seconds/etc.

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927042552</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 04:25:52-0400</timestampReceived><subject>Re: Port sendto to GIO</subject><body>

Hi Bastien,

&gt; Done! Enjoy

both patches have been applied with a few fixups. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927043217</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 04:32:17-0400</timestampReceived><subject>Re: Port bluetooth-sendto to BlueZ 4.x</subject><body>

Hi Bastien,

&gt; &gt; it doesn't apply against upstream GIT and please also fix the coding
&gt; &gt; style.
&gt; 
&gt; I blame git for allowing me to do stupid things. Fixed patch attached.

patch has been applied. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929155931</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-29 15:59:31-0400</timestampReceived><subject>bluez-gnome: how to turn adapter off?</subject><body>

Hi,

I now got several bugreports from people searching for the button to turn
their bluetooth device off in the bluetooth-applet. I seem to remember that
there was the setting "off" (in addition to "Hidden", "Always visible",
"Temporary visible") in previous versions. So what's the rationale for
removing it (users seem to expect to find it there)? And if I remember
incorrectly: could we place such a button there?

Thanks,

	Stefan

-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080907110134</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-09-07 11:01:34-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11514] New: bluetooth headset works with</subject><body>


(switched to email.  Please respond via emailed reply-to-all, not via the
bugzilla web interface).

On Sun,  7 Sep 2008 03:33:23 -0700 (PDT) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11514
&gt; 
&gt; Summary: bluetooth headset works with 2.6.26, only hisses with
&gt; 2.6.27-rc5
&gt; Product: Drivers
&gt; Version: 2.5
&gt; KernelVersion: 2.6.27-rc5
&gt; Platform: All
&gt; OS/Version: Linux
&gt; Tree: Mainline
&gt; Status: NEW
&gt; Severity: normal
&gt; Priority: P1
&gt; Component: Bluetooth
&gt; AssignedTo: drivers_bluetooth@kernel-bugs.osdl.org
&gt; ReportedBy: kernel6org@pook.es
&gt; 
&gt; 
&gt; Latest working kernel version: 2.6.26-1-686 (Debian)
&gt; Earliest failing kernel version: 2.6.27-rc5 (vanilla)

A post-2.6.26 regression.

&gt; Distribution: Debian
&gt; Hardware Environment: Intel Core2 Duo CPU E6550
&gt; Software Environment: Debian unstable + bluez-4.4
&gt; Problem Description: my Jabra JX10 bluetooth works with 2.6.26-1-686 and
&gt; bluez-4.4. With 2.6.27-rc5 (btusb) it only hisses.
&gt; 
&gt; Steps to reproduce: install bluez-4.4 http://www.bluez.org/ and
&gt; add the following to ~/.asoundrc
&gt; pcm.JX10 {
&gt; type bluetooth
&gt; device "00:1A:45:2F:49:98" # Jabra JX10 series 2
&gt; }
&gt; as root run bluetoothd -dn
&gt; run aplay -D JX10 alarm.wav
&gt; 
&gt; with 2.6.26-1-686 I could hear the music, now I just hear a soft hiss during 40
&gt; seconds and then get an error message.
&gt; 
&gt; hcitool shows 2 connections during the 40 seconds:
&gt; &gt; ; hcitool con
&gt; Connections:
&gt; &lt; SCO 00:1A:45:2F:49:98 handle 44 state 1 lm SLAVE 
&gt; &lt; ACL 00:1A:45:2F:49:98 handle 41 state 1 lm MASTER 
&gt; 
&gt; In /var/log/kern.log
&gt; 
&gt; Sep  7 12:16:08 kooka kernel: [ 1250.901715] Bluetooth: SCO (Voice Link) ver
&gt; 0.6
&gt; Sep  7 12:16:08 kooka kernel: [ 1250.901719] Bluetooth: SCO socket layer
&gt; initialized
&gt; 
&gt; in /var/log/kern.log I sometimes see 
&gt; hci_scodata_packet: hci0 SCO packet for unknown connection handle 44
&gt; btusb_isoc_complete: hci0 corrupted SCO packet
&gt; 
&gt; &gt; ; aplay -vvv -D JX10 lib/alarm.wav 
&gt; Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
&gt; aplay: set_params:979: Unable to install hw params:
&gt; ACCESS:  RW_INTERLEAVED
&gt; FORMAT:  S16_LE
&gt; SUBFORMAT:  STD
&gt; SAMPLE_BITS: 16
&gt; FRAME_BITS: 16
&gt; CHANNELS: 1
&gt; RATE: 8000
&gt; PERIOD_TIME: 125000
&gt; PERIOD_SIZE: 1000
&gt; PERIOD_BYTES: 2000
&gt; PERIODS: 4
&gt; BUFFER_TIME: 500000
&gt; BUFFER_SIZE: 4000
&gt; BUFFER_BYTES: 8000
&gt; TICK_TIME: [0 0]
&gt; 
&gt; bluetoothd says
&gt; 
&gt; bluetoothd[4944]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98:
&gt; HEADSET_STATE_CONNECTED -&gt; HEADSET_STATE_PLAY_IN_PROGRESS
&gt; bluetoothd[4944]: Received AT+VGS=15
&gt; bluetoothd[4944]: connect(): Connection timed out (110)
&gt; bluetoothd[4944]: Audio API: sending BT_SETCONFIGURATION_RSP
&gt; bluetoothd[4944]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98:
&gt; HEADSET_STATE_PLAY_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED
&gt; 
&gt; &gt; ; /usr/local/sbin/hciconfig hci0 version
&gt; hci0:   Type: USB
&gt; BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
&gt; HCI Ver: 1.1 (0x1) HCI Rev: 0x20d LMP Ver: 1.1 (0x1) LMP Subver: 0x20d
&gt; Manufacturer: Cambridge Silicon Radio (10)
&gt; &gt; ; /usr/local/sbin/hciconfig hci0
&gt; hci0:   Type: USB
&gt; BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
&gt; UP RUNNING 
&gt; RX bytes:666323 acl:16 sco:13034 events:64 errors:0
&gt; TX bytes:910 acl:19 sco:0 commands:33 errors:0
&gt; &gt; ; /usr/local/sbin/hciconfig hci0 features
&gt; hci0:   Type: USB
&gt; BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
&gt; Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
&gt; &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt; 
&gt; &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt; 
&gt; &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt; 
&gt; &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt; 
&gt; &lt;power control&gt; &lt;transparent SCO&gt; 
&gt; &gt; ; lsusb | grep Blue
&gt; Bus 001 Device 003: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle
&gt; (HCI mode)
&gt; &gt; ; hcitool info  $JX10
&gt; Requesting information ...
&gt; BD Address:  00:1A:45:2F:49:98
&gt; Device Name: Jabra JX10 series 2
&gt; LMP Version: 2.0 (0x3) LMP Subversion: 0x106e
&gt; Manufacturer: Cambridge Silicon Radio (10)
&gt; Features: 0xbf 0xfe 0x8b 0xf8 0x1b 0x18 0x00 0x80
&gt; &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt; 
&gt; &lt;timing accuracy&gt; &lt;role switch&gt; &lt;sniff mode&gt; &lt;RSSI&gt; 
&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt; &lt;HV3 packets&gt; 
&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt; 
&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt; &lt;enhanced iscan&gt; 
&gt; &lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt; 
&gt; &lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt; 
&gt; &lt;AFH class. slave&gt; &lt;AFH cap. master&gt; &lt;AFH class. master&gt; 
&gt; &lt;extended features&gt; 
&gt; &gt; ; sdptool records  00:1A:45:2F:49:98
&gt; Service Name: Hands-Free unit
&gt; Service RecHandle: 0x10000
&gt; Service Class ID List:
&gt; "Handsfree" (0x111e)
&gt; "Generic Audio" (0x1203)
&gt; Protocol Descriptor List:
&gt; "L2CAP" (0x0100)
&gt; "RFCOMM" (0x0003)
&gt; Channel: 1
&gt; Language Base Attr List:
&gt; code_ISO639: 0x656e
&gt; encoding:    0x6a
&gt; base_offset: 0x100
&gt; Profile Descriptor List:
&gt; "Handsfree" (0x111e)
&gt; Version: 0x0105
&gt; 
&gt; Service Name: Headset
&gt; Service RecHandle: 0x10001
&gt; Service Class ID List:
&gt; "Headset" (0x1108)
&gt; "Generic Audio" (0x1203)
&gt; Protocol Descriptor List:
&gt; "L2CAP" (0x0100)
&gt; "RFCOMM" (0x0003)
&gt; Channel: 2
&gt; Language Base Attr List:
&gt; code_ISO639: 0x656e
&gt; encoding:    0x6a
&gt; base_offset: 0x100
&gt; Profile Descriptor List:
&gt; "Headset" (0x1108)
&gt; Version: 0x0100
&gt; 
&gt; &gt; ; lsmod | grep usb
&gt; usb_storage            77960  1 
&gt; snd_usb_audio          72288  0 
&gt; snd_usb_lib            15168  1 snd_usb_audio
&gt; snd_rawmidi            20512  2 snd_usb_lib,snd_seq_midi
&gt; snd_hwdep               8004  1 snd_usb_audio
&gt; usbhid                 37924  0 
&gt; hid                    35660  1 usbhid
&gt; ff_memless              6216  1 usbhid
&gt; btusb                  11864  3 
&gt; bluetooth              49184  9 sco,bnep,rfcomm,l2cap,btusb
&gt; snd_pcm                64708  2 snd_usb_audio,snd_hda_intel
&gt; snd                    47480  10
&gt; snd_usb_audio,snd_seq_oss,snd_seq,snd_rawmidi,snd_seq_device,snd_hwdep,snd_hda_intel,snd_mixer_oss,snd_pcm,snd_timer
&gt;  
&gt; &gt; ; lsmod | grep hcd
&gt; uhci_hcd               20816  0 
&gt; 
&gt; Note that I have removed ehci_hcd because it seems to cause problems with
&gt; 2.6.27-rc5. More on that later :-(
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080927134115</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-09-27 13:41:15-0400</timestampReceived><subject>Re: [Bug 11442] btusb suspend/resume bug...</subject><body>

On Tuesday, 23 of September 2008, Marcel Holtmann wrote:
&gt; Hi Rafael,
&gt; 
&gt; &gt;&gt;&gt;&gt; Marcel, others, please bring some kind of closure to this
&gt; &gt;&gt;&gt;&gt; regression list entry:
&gt; &gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt; Bug-Entry	: http://bugzilla.kernel.org/show_bug.cgi?id=11442
&gt; &gt;&gt;&gt;&gt; Subject		: btusb hibernation/suspend breakage in current -git
&gt; &gt;&gt;&gt;&gt; Submitter	: Rafael J. Wysocki &lt;rjw@sisk.pl&gt;
&gt; &gt;&gt;&gt;&gt; Date		: 2008-08-25 11:37 (19 days old)
&gt; &gt;&gt;&gt;&gt; References	: http://marc.info/?l=linux-bluetooth&amp;m=121966402012074&amp;w=4
&gt; &gt;&gt;&gt;&gt; Handled-By	: Oliver Neukum &lt;oliver@neukum.org&gt;
&gt; &gt;&gt;&gt;&gt; Patch		: http://marc.info/?l=linux-bluetooth&amp;m=121967226027323&amp;w=4
&gt; &gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt; There is a patch, it is tested, so the only course of action at
&gt; &gt;&gt;&gt;&gt; this point is to merge the fix or declare that this really isn't
&gt; &gt;&gt;&gt;&gt; a regression.
&gt; &gt;&gt;&gt;&gt;
&gt; &gt;&gt;&gt;&gt; My impression is the later, because the driver btusb is replacing
&gt; &gt;&gt;&gt;&gt; doesn't handle suspend/resume either.  Isn't that right?
&gt; &gt;&gt;&gt;
&gt; &gt;&gt;&gt; the original patch that I had was expecting changes in the USB  
&gt; &gt;&gt;&gt; subsystem
&gt; &gt;&gt;&gt; that I deemed to much at this point. However Oliver got a patch that
&gt; &gt;&gt;&gt; would make it work without the USB changes. I am still testing it.
&gt; &gt;&gt;&gt;
&gt; &gt;&gt;&gt; Let me see if I get some free minutes during the PlumbersConf to get
&gt; &gt;&gt;&gt; this fully tested.
&gt; &gt;&gt;
&gt; &gt;&gt; so I took the patch apart and actually found a few more issues. I  
&gt; &gt;&gt; am not
&gt; &gt;&gt; sure if they should be applied this late in -rc phase.
&gt; &gt;&gt;
&gt; &gt;&gt; Rafael, can you pull from my tree and test the changes:
&gt; &gt;&gt;
&gt; &gt;&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/ 
&gt; &gt;&gt; bluetooth-2.6.git
&gt; &gt;&gt;
&gt; &gt;&gt; It would be interesting if these fixes are enough.
&gt; &gt;
&gt; &gt; They appear to be enough.  I haven't had any suspend/resume failures  
&gt; &gt; with them
&gt; &gt; applied.
&gt; 
&gt; so it works _without_ applying patch-btusb-suspend.

Well, unfortunately I spoke too soon.

I'm still seeing post-hibernation crashes triggered by the bluetooth user land
trying to use the device handled by btusb.  They happen every second
hibernation, more or less, and apparently they are oopses in various code
paths not directly related to bluetooth, like ext3 (memory corruption or
what?).

With patch-btusb-suspend applied I don't see them (actually I have to use
a slightly modified version of the patch which is appended).

Interestingly enough, suspend to RAM works without any visible problems.

---
 drivers/bluetooth/btusb.c |   62 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

Index: linux-2.6/drivers/bluetooth/btusb.c
===================================================================
--- linux-2.6.orig/drivers/bluetooth/btusb.c
+++ linux-2.6/drivers/bluetooth/btusb.c
@@ -193,6 +193,7 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int suspend_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -947,10 +948,71 @@ static void btusb_disconnect(struct usb_
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("intf %p", intf);
+
+	if (data-&gt;suspend_count++)
+		return 0;
+
+	cancel_work_sync(&amp;data-&gt;work);
+
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int err;
+
+	BT_DBG("intf %p", intf);
+
+	if (--data-&gt;suspend_count)
+		return 0;
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		return 0;
+
+	if (test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags)) {
+		err = btusb_submit_intr_urb(hdev);
+		if (err &lt; 0) {
+			clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
+			return err;
+		}
+	}
+
+	if (test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+		if (btusb_submit_bulk_urb(hdev) &lt; 0)
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		else
+			btusb_submit_bulk_urb(hdev);
+	}
+
+	if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+		if (btusb_submit_isoc_urb(hdev) &lt; 0)
+			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+		else
+			btusb_submit_isoc_urb(hdev);
+	}
+
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
 };
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930055540</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 05:55:40-0400</timestampReceived><subject>Re: [Bug 11442] btusb suspend/resume bug...</subject><body>

Hi Rafael,

&gt; &gt; &gt;&gt; Rafael, can you pull from my tree and test the changes:
&gt; &gt; &gt;&gt;
&gt; &gt; &gt;&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/ 
&gt; &gt; &gt;&gt; bluetooth-2.6.git
&gt; &gt; &gt;&gt;
&gt; &gt; &gt;&gt; It would be interesting if these fixes are enough.
&gt; &gt; &gt;
&gt; &gt; &gt; They appear to be enough.  I haven't had any suspend/resume failures  
&gt; &gt; &gt; with them
&gt; &gt; &gt; applied.
&gt; &gt; 
&gt; &gt; so it works _without_ applying patch-btusb-suspend.
&gt; 
&gt; Well, unfortunately I spoke too soon.
&gt; 
&gt; I'm still seeing post-hibernation crashes triggered by the bluetooth user land
&gt; trying to use the device handled by btusb.  They happen every second
&gt; hibernation, more or less, and apparently they are oopses in various code
&gt; paths not directly related to bluetooth, like ext3 (memory corruption or
&gt; what?).

I pushed two extra patches to my bluetooth-2.6 repository:

git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/bluetooth-2.6.git

One is fixing a double-free in the error path. This error path can be
triggered during suspend/resume if the USB core just disconnects the
device. Please check if that fixes it for you.

&gt; With patch-btusb-suspend applied I don't see them (actually I have to use
&gt; a slightly modified version of the patch which is appended).
&gt; 
&gt; Interestingly enough, suspend to RAM works without any visible problems.

As Oliver said, the USB core should do the right thing when no suspend
and resume callbacks are provided. I looked through the code so many
times now and I am running out of ideas what can happen.

Lets try it one last time without the suspend patch, but the double free
fix and see if that works. Otherwise I really give up.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930214442</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-09-30 21:44:42-0400</timestampReceived><subject>Re: [Bug 11442] btusb suspend/resume bug...</subject><body>

On Tuesday, 30 of September 2008, Marcel Holtmann wrote:
&gt; Hi Rafael,
&gt; 
&gt; &gt; &gt; &gt;&gt; Rafael, can you pull from my tree and test the changes:
&gt; &gt; &gt; &gt;&gt;
&gt; &gt; &gt; &gt;&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/ 
&gt; &gt; &gt; &gt;&gt; bluetooth-2.6.git
&gt; &gt; &gt; &gt;&gt;
&gt; &gt; &gt; &gt;&gt; It would be interesting if these fixes are enough.
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; They appear to be enough.  I haven't had any suspend/resume failures  
&gt; &gt; &gt; &gt; with them
&gt; &gt; &gt; &gt; applied.
&gt; &gt; &gt; 
&gt; &gt; &gt; so it works _without_ applying patch-btusb-suspend.
&gt; &gt; 
&gt; &gt; Well, unfortunately I spoke too soon.
&gt; &gt; 
&gt; &gt; I'm still seeing post-hibernation crashes triggered by the bluetooth user land
&gt; &gt; trying to use the device handled by btusb.  They happen every second
&gt; &gt; hibernation, more or less, and apparently they are oopses in various code
&gt; &gt; paths not directly related to bluetooth, like ext3 (memory corruption or
&gt; &gt; what?).
&gt; 
&gt; I pushed two extra patches to my bluetooth-2.6 repository:
&gt; 
&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/bluetooth-2.6.git
&gt; 
&gt; One is fixing a double-free in the error path. This error path can be
&gt; triggered during suspend/resume if the USB core just disconnects the
&gt; device. Please check if that fixes it for you.
&gt; 
&gt; &gt; With patch-btusb-suspend applied I don't see them (actually I have to use
&gt; &gt; a slightly modified version of the patch which is appended).
&gt; &gt; 
&gt; &gt; Interestingly enough, suspend to RAM works without any visible problems.
&gt; 
&gt; As Oliver said, the USB core should do the right thing when no suspend
&gt; and resume callbacks are provided. I looked through the code so many
&gt; times now and I am running out of ideas what can happen.
&gt; 
&gt; Lets try it one last time without the suspend patch, but the double free
&gt; fix and see if that works. Otherwise I really give up.

This time I cannot reproduce the hibernation issue without the suspend patch,
so it appears that your double-free fix works for me.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080913163211</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-09-13 16:32:11-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11514] New: bluetooth headset works with 2.6.26,</subject><body>

On 07/09/08 13:01, Andrew Morton wrote:

&gt; A post-2.6.26 regression.

yes. I read the change log for 2.6.27-rc6 and it doesn't seem to address my
problem. Should I try it anyway?

I forgot to mention that my bluetooth dongle is a USB

ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)

# hciconfig  -a
hci0:	Type: USB
BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
UP RUNNING
RX bytes:3713306 acl:72248 sco:0 events:299153 errors:0
TX bytes:2985713 acl:109155 sco:0 commands:157763 errors:0
Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
Link policy: RSWITCH HOLD SNIFF PARK
Link mode: SLAVE ACCEPT
Name: 'kooka-0'
Class: 0x0a0000
Service Classes: Networking, Capturing
Device Class: Miscellaneous,
HCI Ver: 1.1 (0x1) HCI Rev: 0x20d LMP Ver: 1.1 (0x1) LMP Subver: 0x20d
Manufacturer: Cambridge Silicon Radio (10)


If I can help in finding a solution to this problem please let me know!

Stuart
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929160557</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 16:05:57-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

On Mon, 2008-09-29 at 17:59 +0200, Stefan Seyfried wrote:
&gt; Hi,
&gt; 
&gt; I now got several bugreports from people searching for the button to turn
&gt; their bluetooth device off in the bluetooth-applet. I seem to remember that
&gt; there was the setting "off" (in addition to "Hidden", "Always visible",
&gt; "Temporary visible") in previous versions. So what's the rationale for
&gt; removing it (users seem to expect to find it there)? And if I remember
&gt; incorrectly: could we place such a button there?

There was never an "off" switch. There was:
- Other devices can connect
- Visible and connectable for other devices
- Limited discoverable and connectable

The last 2 were folded into a single option.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929162031</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-09-29 16:20:31-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

Bastien Nocera wrote:
&gt; On Mon, 2008-09-29 at 17:59 +0200, Stefan Seyfried wrote:
&gt;&gt; Hi,
&gt;&gt;
&gt;&gt; I now got several bugreports from people searching for the button to turn
&gt;&gt; their bluetooth device off in the bluetooth-applet. I seem to remember that
&gt;&gt; there was the setting "off" (in addition to "Hidden", "Always visible",
&gt;&gt; "Temporary visible") in previous versions. So what's the rationale for
&gt;&gt; removing it (users seem to expect to find it there)? And if I remember
&gt;&gt; incorrectly: could we place such a button there?
&gt; 
&gt; There was never an "off" switch. There was:
&gt; - Other devices can connect
&gt; - Visible and connectable for other devices
&gt; - Limited discoverable and connectable
&gt; 
&gt; The last 2 were folded into a single option.

Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
option? Would a patch that implements this be welcome?
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929203956</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-29 20:39:56-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

On Mon, 2008-09-29 at 18:20 +0200, Stefan Seyfried wrote:
&lt;snip&gt;
&gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; option? Would a patch that implements this be welcome?

I'd like a patch implementing HAL killswitching. DannyK can explain to
you how that's supposed to work.

I saw this as a single toggle menu item in the right-click, allowing you
to enable/disable the main Bluetooth adapter on laptops. If there's a
killswitch present, and there's 0 or 1 adapter (and the adapter matches
the expected device) then the Bluetooth icon would shown grayed out.

This would probably also require more work like this:
      &lt;match key="@info.parent:system.product" contains="VGN-S1XP"&gt;
        &lt;merge key="killswitch.expected_usb_vendor_id"
type="int"&gt;0x44e&lt;/merge&gt;
        &lt;merge key="killswitch.expected_usb_product_id"
type="int"&gt;0x3007&lt;/merge&gt;
      &lt;/match&gt;

To make sure the killswitch controls (or tries to control) the correct
adapter.

Cheers

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929234308</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 23:43:08-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

Hi Stefan,

&gt; &gt;&gt; I now got several bugreports from people searching for the button to turn
&gt; &gt;&gt; their bluetooth device off in the bluetooth-applet. I seem to remember that
&gt; &gt;&gt; there was the setting "off" (in addition to "Hidden", "Always visible",
&gt; &gt;&gt; "Temporary visible") in previous versions. So what's the rationale for
&gt; &gt;&gt; removing it (users seem to expect to find it there)? And if I remember
&gt; &gt;&gt; incorrectly: could we place such a button there?
&gt; &gt; 
&gt; &gt; There was never an "off" switch. There was:
&gt; &gt; - Other devices can connect
&gt; &gt; - Visible and connectable for other devices
&gt; &gt; - Limited discoverable and connectable
&gt; &gt; 
&gt; &gt; The last 2 were folded into a single option.
&gt; 
&gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; option? Would a patch that implements this be welcome?

you might have been right, because some distros shipped a patch to add
an "off" selection to it. This wouldn't have done anything useful on the
desktop, but they did it without knowing what they are doing.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929234442</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 23:44:42-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

Hi Bastien,

&gt; &gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; &gt; option? Would a patch that implements this be welcome?
&gt; 
&gt; I'd like a patch implementing HAL killswitching. DannyK can explain to
&gt; you how that's supposed to work.
&gt; 
&gt; I saw this as a single toggle menu item in the right-click, allowing you
&gt; to enable/disable the main Bluetooth adapter on laptops. If there's a
&gt; killswitch present, and there's 0 or 1 adapter (and the adapter matches
&gt; the expected device) then the Bluetooth icon would shown grayed out.
&gt; 
&gt; This would probably also require more work like this:
&gt;       &lt;match key="@info.parent:system.product" contains="VGN-S1XP"&gt;
&gt;         &lt;merge key="killswitch.expected_usb_vendor_id"
&gt; type="int"&gt;0x44e&lt;/merge&gt;
&gt;         &lt;merge key="killswitch.expected_usb_product_id"
&gt; type="int"&gt;0x3007&lt;/merge&gt;
&gt;       &lt;/match&gt;

can we not just reference the UDI the killswitch belongs to. The vendor
and product things can be misleading.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930031854</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 03:18:54-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

Hi Bastien,

&gt; &gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; &gt; option? Would a patch that implements this be welcome?
&gt; 
&gt; I'd like a patch implementing HAL killswitching. DannyK can explain to
&gt; you how that's supposed to work.
&gt; 
&gt; I saw this as a single toggle menu item in the right-click, allowing you
&gt; to enable/disable the main Bluetooth adapter on laptops. If there's a
&gt; killswitch present, and there's 0 or 1 adapter (and the adapter matches
&gt; the expected device) then the Bluetooth icon would shown grayed out.

so I added killswitch support to bluetooth-properties. Works pretty good
enough for me.

I like having a grayed out icon, but for that to work, we first need to
have some who actually draws it in all resolutions for us.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930101721</emailId><senderName>Bastien Nocera</senderName><senderEmail>hadess@hadess.net</senderEmail><timestampReceived>2008-09-30 10:17:21-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

On Tue, 2008-09-30 at 05:18 +0200, Marcel Holtmann wrote:
&gt; Hi Bastien,
&gt; 
&gt; &gt; &gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; &gt; &gt; option? Would a patch that implements this be welcome?
&gt; &gt; 
&gt; &gt; I'd like a patch implementing HAL killswitching. DannyK can explain to
&gt; &gt; you how that's supposed to work.
&gt; &gt; 
&gt; &gt; I saw this as a single toggle menu item in the right-click, allowing you
&gt; &gt; to enable/disable the main Bluetooth adapter on laptops. If there's a
&gt; &gt; killswitch present, and there's 0 or 1 adapter (and the adapter matches
&gt; &gt; the expected device) then the Bluetooth icon would shown grayed out.
&gt; 
&gt; so I added killswitch support to bluetooth-properties. Works pretty good
&gt; enough for me.
&gt; 
&gt; I like having a grayed out icon, but for that to work, we first need to
&gt; have some who actually draws it in all resolutions for us.

GTK+ doesn't use separate pixbufs for those type of icons, but generates
them on the fly with gdk_pixbuf_saturate_and_pixelate().

new_pixbuf = gdk_pixbuf_copy (original);
gdk_pixbuf_saturate_and_pixelate(original, new_pixbuf, 0.8, TRUE);

And then set "new_pixbuf" as the image for the status icon. This will be
a bit convoluted in the actual code as you're using icon names, and we'd
need to 1) know whether we have a killswitch, and whether it's enabled
and 2) modify the status icon to use the pixbuf.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927043316</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 04:33:16-0400</timestampReceived><subject>Re: btusb reset quirk for MacBook Pro</subject><body>

Hi David,

&gt; Without this, my new shinybook tends to boot up either giving I/O errors
&gt; on 'hciconfig -a', or complaining about packets from non-existent ACL
&gt; connections.

a similar patch been merged into Linus tree. Thanks.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927052910</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-27 05:29:10-0400</timestampReceived><subject>Re: [PATCH 1/1] [BLUETOOTH] Disable incoming connection tracking</subject><body>

Hi Ville,

&gt; Bluetooth testers establish only low level connection and they won't
&gt; connect to any service. If connection tracking is enabled the connection
&gt; will drop in 10 seconds. This patch adds support for detecting DUT mode
&gt; event and disables incoming connection tracking is status code was
&gt; succesfull.

I think we should just put the device into RAW mode. Having another flag
for DUT is not useful and RAW mode is already handled special.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080927211256</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-09-27 21:12:56-0400</timestampReceived><subject>Re: Bluetoothd crashing on 4.7</subject><body>

Hi Mario,

On Sep 27, 2008, at 2:00, Mario Limonciello wrote:
&gt; I recently packaged bluez 4.7 for possible inclusion in Ubuntu  
&gt; intrepid
&gt; [1].  Upon doing some basic testing with it, I've run into a situation
&gt; where when I try to pair with a keyboard, bluetoothd crashes.  If I  
&gt; run
&gt; it under valgrind, bluetoothd survives the crash, and the keyboard  
&gt; works
&gt; [2].  If I run it with gdb, it comes down, and I get a trace at
&gt; least[3].  If I run it without a debugger, keyboard doesn't properly  
&gt; work.

This is probably caused by my cleanup/rewrite patches for the pairing  
logic in 4.7. Based on the gdb trace the attached patch should fix the  
issue. It's also pushed to the kernel.org git and should appear in the  
next release.

Johan

["bluetoothd-segfault.patch" (bluetoothd-segfault.patch)]

commit cccde44377fc5bb5d9db51ca6b4fcb790c7d24ba
Author: Johan Hedberg &lt;johan.hedberg@nokia.com&gt;
Date:   Sat Sep 27 14:08:42 2008 -0700

    Fix potential NULL pointer dereference

diff --git a/src/dbus-hci.c b/src/dbus-hci.c
index 795df0a..eea166e 100644
--- a/src/dbus-hci.c
+++ b/src/dbus-hci.c
@@ -518,7 +518,7 @@ void hcid_dbus_bonding_process_complete(bdaddr_t *local, bdaddr_t *peer,
 
 	bonding = adapter_get_bonding_info(adapter);
 
-	if (bacmp(&amp;bonding-&gt;bdaddr, peer))
+	if (bonding &amp;&amp; bacmp(&amp;bonding-&gt;bdaddr, peer))
 		bonding = NULL;
 
 	if (status == 0) {



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080928012710</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-09-28 01:27:10-0400</timestampReceived><subject>[PATCH] Make bluetooth-sendto functional with ODS SVN head</subject><body>

Hi:

In trying to verify that all functionality is working in the 4.x stack, I found \
bluetooth-sendto to be fairly broken.  You can't use it with a release version of ODS \
because the release version only supports 3.x.  The SVN head version changed APIs \
though for the 4.x stuff, and expects different behavior.

The attached patch makes it work with SVN head of ODS.  This should be used in \
conjunction with Bastien's patch.

Regards

Mario Limonciello 
Dell | Linux Engineering 
Mario_Limonciello@Dell.com 


["05_bluetooth_sendto_dbus-snd.patch" (text/x-patch)]

diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/common/marshal.list bluez-gnome-1.5.new/common/marshal.list
--- bluez-gnome-1.5/common/marshal.list	2008-08-24 16:14:24.000000000 -0500
+++ bluez-gnome-1.5.new/common/marshal.list	2008-09-27 20:17:37.000000000 -0500
@@ -3,3 +3,4 @@
 VOID:STRING,STRING
 VOID:STRING,STRING,UINT64
 VOID:UINT64
+VOID:STRING,STRING,STRING
diff -Nur -x '*.orig' -x '*~' bluez-gnome-1.5/sendto/main.c bluez-gnome-1.5.new/sendto/main.c
--- bluez-gnome-1.5/sendto/main.c	2008-09-27 20:17:30.000000000 -0500
+++ bluez-gnome-1.5.new/sendto/main.c	2008-09-27 20:17:35.000000000 -0500
@@ -60,6 +60,8 @@
 static gint64 first_update = 0;
 static gint64 last_update = 0;
 
+static DBusGProxy *session_proxy = NULL;
+
 static gchar *filename_to_path(const gchar *filename)
 {
 	GFile *file;
@@ -350,7 +352,16 @@
 static void error_occurred(DBusGProxy *proxy, const gchar *name,
 				const gchar *message, gpointer user_data)
 {
-	transfer_completed(proxy, user_data);
+	gtk_progress_bar_set_text(GTK_PROGRESS_BAR(progress),
+							_("Error Occurred"));
+							
+	gchar *text = g_strdup_printf("&lt;span foreground=\"red\"&gt;%s&lt;/span&gt;",
+								message);
+	gtk_label_set_markup(GTK_LABEL(label_status), text);
+	g_free(text);
+
+	gtk_dialog_set_response_sensitive(GTK_DIALOG(dialog),
+						GTK_RESPONSE_CLOSE, TRUE);
 }
 
 static void session_connected(DBusGProxy *proxy, gpointer user_data)
@@ -359,7 +370,7 @@
 
 	first_update = get_system_time();
 
-	send_file(proxy);
+	send_file(session_proxy);
 }
 
 #define OPENOBEX_CONNECTION_FAILED "org.openobex.Error.ConnectionAttemptFailed"
@@ -403,60 +414,41 @@
 	if (dbus_g_proxy_end_call(proxy, call, &amp;error,
 					DBUS_TYPE_G_OBJECT_PATH, &amp;path,
 						G_TYPE_INVALID) == FALSE) {
-		gchar *text, *message;
+		gchar *message;
 
 		message = get_error_message(error);
 
-		text = g_strdup_printf("&lt;span foreground=\"red\"&gt;%s&lt;/span&gt;",
-								message);
-		gtk_label_set_markup(GTK_LABEL(label_status), text);
-		g_free(text);
+		error_occurred(proxy,NULL,message,NULL);
 
 		g_free(message);
 
-		gtk_dialog_set_response_sensitive(GTK_DIALOG(dialog),
-						GTK_RESPONSE_CLOSE, TRUE);
 		return;
 	}
-
-	proxy = dbus_g_proxy_new_for_name(conn, "org.openobex",
+	session_proxy = dbus_g_proxy_new_for_name(conn, "org.openobex",
 						path, "org.openobex.Session");
 
-	dbus_g_proxy_add_signal(proxy, "Connected", G_TYPE_INVALID);
-
-	dbus_g_proxy_connect_signal(proxy, "Connected",
-				G_CALLBACK(session_connected), NULL, NULL);
+	dbus_g_proxy_add_signal(session_proxy, "Cancelled", G_TYPE_INVALID);
 
-	dbus_g_proxy_add_signal(proxy, "ErrorOccurred",
-				G_TYPE_STRING, G_TYPE_STRING, G_TYPE_INVALID);
-
-	dbus_g_proxy_connect_signal(proxy, "ErrorOccurred",
-				G_CALLBACK(error_occurred), NULL, NULL);
-
-	dbus_g_proxy_add_signal(proxy, "Cancelled", G_TYPE_INVALID);
-
-	dbus_g_proxy_connect_signal(proxy, "Cancelled",
+	dbus_g_proxy_connect_signal(session_proxy, "Cancelled",
 				G_CALLBACK(transfer_cancelled), NULL, NULL);
 
-	dbus_g_proxy_add_signal(proxy, "TransferStarted", G_TYPE_STRING,
+	dbus_g_proxy_add_signal(session_proxy, "TransferStarted", G_TYPE_STRING,
 				G_TYPE_STRING, G_TYPE_UINT64, G_TYPE_INVALID);
 
-	dbus_g_proxy_connect_signal(proxy, "TransferStarted",
+	dbus_g_proxy_connect_signal(session_proxy, "TransferStarted",
 				G_CALLBACK(transfer_started), NULL, NULL);
 
-	dbus_g_proxy_add_signal(proxy, "TransferProgress",
+	dbus_g_proxy_add_signal(session_proxy, "TransferProgress",
 						G_TYPE_UINT64, G_TYPE_INVALID);
 
-	dbus_g_proxy_connect_signal(proxy, "TransferProgress",
+	dbus_g_proxy_connect_signal(session_proxy, "TransferProgress",
 				G_CALLBACK(transfer_progress), NULL, NULL);
 
-	dbus_g_proxy_add_signal(proxy, "TransferCompleted", G_TYPE_INVALID);
+	dbus_g_proxy_add_signal(session_proxy, "TransferCompleted", G_TYPE_INVALID);
 
-	dbus_g_proxy_connect_signal(proxy, "TransferCompleted",
+	dbus_g_proxy_connect_signal(session_proxy, "TransferCompleted",
 				G_CALLBACK(transfer_completed), NULL, NULL);
 
-	dbus_g_proxy_call(proxy, "Connect", NULL, G_TYPE_INVALID,
-							G_TYPE_INVALID);
 }
 
 static gchar *get_name(DBusGProxy *device)
@@ -645,6 +637,14 @@
 
 	dbus_g_object_register_marshaller(marshal_VOID__UINT64,
 				G_TYPE_NONE, G_TYPE_UINT64, G_TYPE_INVALID);
+				
+	dbus_g_object_register_marshaller(marshal_VOID__STRING_STRING_STRING,
+                                       G_TYPE_NONE,
+                                       DBUS_TYPE_G_OBJECT_PATH,
+                                       G_TYPE_STRING,
+                                       G_TYPE_STRING,
+                                       G_TYPE_INVALID);
+
 
 	device_name = get_device_name(option_device);
 	if (device_name == NULL)
@@ -661,6 +661,18 @@
 	dbus_g_proxy_connect_signal(proxy, "NameOwnerChanged",
 				G_CALLBACK(name_owner_changed), NULL, NULL);
 
+	dbus_g_proxy_add_signal(proxy, "SessionConnected", DBUS_TYPE_G_OBJECT_PATH, G_TYPE_INVALID);
+
+	dbus_g_proxy_connect_signal(proxy, "SessionConnected",
+				G_CALLBACK(session_connected), NULL, NULL);
+
+	dbus_g_proxy_add_signal(proxy, "SessionConnectError",
+				DBUS_TYPE_G_OBJECT_PATH, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_INVALID);
+
+	dbus_g_proxy_connect_signal(proxy, "SessionConnectError",
+				G_CALLBACK(error_occurred), NULL, NULL);
+
+
 	dbus_g_proxy_begin_call(proxy, "CreateBluetoothSession",
 				create_notify, NULL, NULL,
 				G_TYPE_STRING, option_device,

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080928205233</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-09-28 20:52:33-0400</timestampReceived><subject>Re: Bluez 4.7 crash pairing Motorola S9 w/bt</subject><body>

Hi Tim,

On Sep 28, 2008, at 20:58, Tim Dempsey wrote:
&gt; I was attempting to pair a set of Motorola S9 headphones using bluez  
&gt; 4.7
&gt; and received the following crash. Attached is the output of  
&gt; 'bluetoothd -nd'
&gt; under gdb, with a bt. I also included the output of
&gt; "dbus-monitor --system sender='org.bluez'". I made the following  
&gt; patch and
&gt; thought I'm sure it's not the right fix it allowed me to pair/play  
&gt; sound
&gt; though the S9.

Thanks for catching this issue. It's related to the pairing code  
changes I made for 4.7. I did see the assert too once but was unable  
to reproduce it later and so didn't spend more time wondering about  
it. For some reason it also didn't cause SIGABRT to me (maybe related  
to me running valgrind?). Anyway, as you doubted, your fix isn't  
really correct since it will make the PropertyChanged signal not be  
sent when in fact we want it to be sent. The issue is that when we do  
service discovery due to a remotely initiated pairing attempt there's  
no DBusConnection pointer assosiated to the browse request and so the  
emit_property_changed function gets a NULL pointer instead of a proper  
DBusConnection*. I just pushed a fix to the git where the code that  
calls emit_property_changed will get a valid DBusConnection via  
get_dbus_connection() and use that instead of the request specific one.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929015231</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 01:52:31-0400</timestampReceived><subject>Re: [PATCH] Default bluez-gnome UI to a connectable state</subject><body>

Hi Mario,

&gt; Looking through the code, it appears that bluetoothd does start up connectable, but \
&gt; the UI doesn't reflect this from the first boot.  This patch should address it.

this patch can't be right. It can happen that the device starts up in
off mode. You need to figure out why the mode variable doesn't correctly
point to connectable.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929063302</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 06:33:02-0400</timestampReceived><subject>Re: Minor error in BlueZ 4.8 Makefile.am can break build</subject><body>

Hi David,

&gt; There's a missing backslash in the plugins/Makefile.am file in the 4.8 
&gt; release (see patches).

my mistake. Fixed and pushed out to the repository.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929084504</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 08:45:04-0400</timestampReceived><subject>Re: [PATCH] Add ability to start wizard from properties</subject><body>

Hi Mario,

&gt; When packaged, generally the Bluetooth properties application is added to the \
&gt; Preferences menu as a configuration tool for Bluetooth.  This leaves a gap in the \
&gt; experience since there is no way to configure "New" devices by following that flow. \
&gt; This patch adds a button to the UI that will spawn the wizard to allow users to \
&gt; pair.

I fixed this differently in the current GIT tree.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080929092107</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 09:21:07-0400</timestampReceived><subject>Re: [PATCH] Start wizard when left clicked</subject><body>

Hi Bastien,

&gt; &gt; &gt; &gt; Currently the applet doesn't seem to respond to any actions when left
&gt; &gt; &gt; &gt; clicked unless it's blinking.  This is counter intuitive from the
&gt; &gt; &gt; &gt; expectation that something will happen when left clicked.  Attached is
&gt; &gt; &gt; &gt; a patch that will spawn the wizard when left clicked, or stop blinking
&gt; &gt; &gt; &gt; if it was.
&gt; &gt; &gt; 
&gt; &gt; &gt; I'd rather it popped up the right-click menu instead of popping up the
&gt; &gt; &gt; wizard.
&gt; &gt; 
&gt; &gt; I added a simple menu to the left-click to allow starting the wizard.
&gt; 
&gt; Why a separate/different menu?

because I wanna use the left-click menu for the known devices and an
easy access to connect them.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929092707</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-29 09:27:07-0400</timestampReceived><subject>Re: [PATCH] Use "Icon" and "Alias" properties</subject><body>

Hi Bastien,

&gt; Rather than doing it ouselves.

I had similar patches already in my tree. Pushed them out :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080929214121</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-09-29 21:41:21-0400</timestampReceived><subject>SCO headset, bluez-4.9 &amp; linux 2.6.27-rc7 -&gt; Unable to install hw</subject><body>

Hi

I've installed bluez 4.9 and linux kernel 2.6.27-rc7 and I still cannot get any
sound out of my Jabra JX10 bluetooth headset connected via a Cambridge Silicon
Radio Bluetooth Dongle (0a12:0001). Bluetoothd says "connect: Operation
not permitted" and aplay "Unable to install hw params".

What should I try next? I think that I'm missing something stupid.

thanks for any help (or requests for more information)

Stuart

PS BTW, if use bluez 4.4 &amp; linux 2.6.26, aplay works, if I use bluez 4.7 and
linux 2.6.26, aplay fails.

Bluetoothd says

bluetoothd[24162]: Accepted new client connection on unix socket (fd=23)
bluetoothd[24162]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[24162]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[24162]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[24162]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[24162]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to \
00:1A:45:2F:49:98 channel 1 bluetoothd[24162]: State changed \
/org/bluez/hci0/dev_00_1A_45_2F_49_98: HEADSET_STATE_DISCONNECTED -&gt; \
HEADSET_STATE_CONNECT_IN_PROGRESS bluetoothd[24162]: \
adapter_get_device(00:1A:45:2F:49:98) bluetoothd[24162]: link_key_request \
(sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98) bluetoothd[24162]: kernel auth \
requirements = 0x04 bluetoothd[24162]: stored link key type = 0x00
bluetoothd[24162]: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to \
00:1A:45:2F:49:98 bluetoothd[24162]: Received AT+BRSF=27
bluetoothd[24162]: HFP HF features: "EC and/or NR function" "Call waiting and 3-way \
calling" "Voice recognition activation" "Remote volume control" bluetoothd[24162]: \
Received AT+CIND=? bluetoothd[24162]: Received AT+CIND?
bluetoothd[24162]: Received AT+CMER=3, 0, 0, 1
bluetoothd[24162]: Event reporting (CMER): mode=3, ind=1
bluetoothd[24162]: HFP Service Level Connection established
bluetoothd[24162]: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED bluetoothd[24162]: \
connect: Operation not permitted (1) bluetoothd[24162]: config failed
bluetoothd[24162]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[24162]: Unix client disconnected (fd=23)
bluetoothd[24162]: Received AT+VGS=00

aplay says:

Playing WAVE 'alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:

The second time I run aplay the error messages arrives more quickly:

bluetoothd[24162]: Accepted new client connection on unix socket (fd=23)
bluetoothd[24162]: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd[24162]: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd[24162]: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd[24162]: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd[24162]: connect: Operation not permitted (1)
bluetoothd[24162]: config failed
bluetoothd[24162]: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd[24162]: Unix client disconnected (fd=23)

hcidump -XV doesn't show anything that looks like an error to me:

HCI sniffer - Bluetooth packet analyzer ver 1.42
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
     bdaddr 00:1A:45:2F:49:98 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
     Packet type: DM1 DM3 DM5 DH1 DH3 DH5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Create Connection (0x01|0x0005) status 0x00 ncmd 1
 &gt; HCI Event: Connect Complete (0x03) plen 11
     status 0x00 handle 41 bdaddr 00:1A:45:2F:49:98 type ACL encrypt 0x00
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
     handle 41
 &gt; HCI Event: Command Status (0x0f) plen 4
     Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 0
 &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
     bdaddr 00:1A:45:2F:49:98 mode 1
 &gt; HCI Event: Max Slots Change (0x1b) plen 3
     handle 41 slots 5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Unknown (0x00|0x0000) status 0x00 ncmd 1
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
     bdaddr 00:1A:45:2F:49:98 mode 2 clkoffset 0x0000
 &gt; HCI Event: Command Status (0x0f) plen 4
     Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
 &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
     status 0x00 handle 41
     Features: 0xbf 0xfe 0x8b 0xf8 0x1b 0x18 0x00 0x80
&lt; ACL data: handle 41 flags 0x02 dlen 10
     L2CAP(s): Info req: type 2
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Info rsp: type 2 result 0
       Extended feature mask 0x0000
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(s): Connect req: psm 3 scid 0x0040
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x008c scid 0x0040 result 1 status 2
       Connection pending - Authorization pending
 &gt; HCI Event: Remote Name Req Complete (0x07) plen 255
     status 0x00 bdaddr 00:1A:45:2F:49:98 name 'Jabra JX10 series 2'
 &gt; HCI Event: Link Key Request (0x17) plen 6
     bdaddr 00:1A:45:2F:49:98
&lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
     bdaddr 00:1A:45:2F:49:98 key F63331CE2D0DBCA190DC73C930CD6117
 &gt; HCI Event: Command Complete (0x0e) plen 10
     Link Key Request Reply (0x01|0x000b) ncmd 1
     status 0x00 bdaddr 00:1A:45:2F:49:98
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x008c scid 0x0040 result 0 status 0
       Connection successful
&lt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x008c flags 0x00 clen 4
       MTU 1013
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
       Success
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(s): Config rsp: scid 0x008c flags 0x00 result 0 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x008c len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x008c len 14 [psm 3]
       RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
       dlci 2 frame_type 0 credit_flow 15 pri 7 ack_timer 0
       frame_size 1008 max_retrans 0 credits 7
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
       dlci 2 frame_type 0 credit_flow 14 pri 7 ack_timer 0
       frame_size 127 max_retrans 0 credits 0
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x008c len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 2 pf 1 ilen 0 fcs 0x59
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 2 pf 1 ilen 0 fcs 0x92
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x008c len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x008c len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x008c len 5 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 1 ilen 0 fcs 0x86 credits 33
 &gt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x0040 len 5 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 0 fcs 0x5c credits 15
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 0 ilen 11 fcs 0x40
       0000: 41 54 2b 42 52 53 46 3d  32 37 0d                 AT+BRSF=27.
&lt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x008c len 15 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 11 fcs 0x9a
       0000: 0d 0a 2b 42 52 53 46 3d  30 0d 0a                 ..+BRSF=0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x008c len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 2
       0000: 41 54 2b 43 49 4e 44 3d  3f 0d                    AT+CIND=?.
&lt; ACL data: handle 41 flags 0x02 dlen 135
     L2CAP(d): cid 0x008c len 131 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 127 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  28 22 62 61 74 74 63 68  ..+CIND:("battch
       0010: 67 22 2c 28 30 2d 35 29  29 2c 28 22 73 69 67 6e  g",(0-5)),("sign
       0020: 61 6c 22 2c 28 30 2d 35  29 29 2c 28 22 73 65 72  al",(0-5)),("ser
       0030: 76 69 63 65 22 2c 28 30  2c 31 29 29 2c 28 22 63  vice",(0,1)),("c
       0040: 61 6c 6c 22 2c 28 30 2c  31 29 29 2c 28 22 63 61  all",(0,1)),("ca
       0050: 6c 6c 73 65 74 75 70 22  2c 28 30 2d 33 29 29 2c  llsetup",(0-3)),
       0060: 28 22 63 61 6c 6c 68 65  6c 64 22 2c 28 30 2d 32  ("callheld",(0-2
       0070: 29 29 2c 28 22 72 6f 61  6d 22 2c 28 30 2c 31     )),("roam",(0,1
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x008c len 8 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 4 fcs 0x9a
       0000: 29 29 0d 0a                                       ))..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x008c len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 9 fcs 0x5c credits 3
       0000: 41 54 2b 43 49 4e 44 3f  0d                       AT+CIND?.
&lt; ACL data: handle 41 flags 0x02 dlen 31
     L2CAP(d): cid 0x008c len 27 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 23 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  35 2c 35 2c 31 2c 30 2c  ..+CIND:5,5,1,0,
       0010: 30 2c 30 2c 30 0d 0a                              0,0,0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x008c len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 28
     L2CAP(d): cid 0x0040 len 24 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 19 fcs 0x5c credits 2
       0000: 41 54 2b 43 4d 45 52 3d  33 2c 20 30 2c 20 30 2c  AT+CMER=3, 0, 0,
       0010: 20 31 0d                                           1.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x008c len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 1
       0000: 41 54 2b 56 47 53 3d 30  30 0d                    AT+VGS=00.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x008c len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080930052128</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-09-30 05:21:28-0400</timestampReceived><subject>Re: BUG kmalloc-16: Object already free</subject><body>

On Mon, Sep 29, 2008 at 4:47 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Rabin,
&gt; 
&gt; &gt; &gt; After frying my system, I'm finally up and
&gt; &gt; &gt; running. Not sure if this was due to a git-pull
&gt; &gt; &gt; (only be a few days since the last pull), or what:
&gt; &gt; &gt; when waking from suspend I see this
&gt; &gt; &gt; (I know it says tainted in it, so this will be the only noise you'll
&gt; &gt; &gt; here from me on this);
&gt; &gt; &gt; 
&gt; &gt; &gt; [  274.327003] \
&gt; &gt; &gt; ============================================================================&gt;&gt; \
&gt; &gt; &gt; &gt; [  274.327528] BUG kmalloc-16: Object already free [  274.327877] \
&gt; &gt; &gt; &gt; -----------------------------------------------------------------------------
&gt; &gt; &gt; [  274.327879]
&gt; &gt; &gt; [  274.327890] INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0
&gt; &gt; &gt; cpu=1 pid763
&gt; &gt; &gt; [  274.327899] INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0
&gt; &gt; &gt; cpu=1 pid763
&gt; &gt; &gt; [  274.327905] INFO: Slab 0xc139a100 objectsd usedb fp=0xdcd08100
&gt; &gt; &gt; flags=0x400000c3
&gt; &gt; 
&gt; &gt; There's a commit in the latest git which looks like it will solve the
&gt; &gt; btusb suspend/resume issues: 5fbcd260.. ("[Bluetooth] Fix USB disconnect
&gt; &gt; handling of btusb driver").
&gt; &gt; 
&gt; &gt; Marcel / linux-bluetooth, I think this double free is a separate issue
&gt; &gt; with the error handling, and the following patch should fix it.
&gt; &gt; 
&gt; &gt; ---
&gt; &gt; From: Rabin Vincent &lt;rabin@rab.in&gt;
&gt; &gt; Subject: [PATCH] btusb, bpa10x: fix double frees on error paths
&gt; &gt; 
&gt; &gt; Justin Mattock reported this double free in btusb:
&gt; &gt; 
&gt; &gt; BUG kmalloc-16: Object already free
&gt; &gt; -----------------------------------------------------------------------------
&gt; &gt; 
&gt; &gt; INFO: Allocated in btusb_open+0x82/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; &gt; INFO: Freed in btusb_open+0x13d/0x16f [btusb] age=0 cpu=1 pid=3763
&gt; &gt; 
&gt; &gt; This occurs because the urb's transfer buffer is being freed separately
&gt; &gt; in the error path even though the URB_FREE_BUFFER transfer_flag is set
&gt; &gt; on the urb.
&gt; &gt; 
&gt; &gt; There are similar cases elsewhere in btusb and in bpa10x.  Fix all of
&gt; &gt; them by removing the additional kfree()'s.
&gt; 
&gt; I haven't verified it yet, but it looks like a good catch. Let me double
&gt; check this on my test machine. Weird that we never noticed this before
&gt; since I have been using the btusb driver for a very long time now.
&gt; 
&gt; Regards
&gt; 
&gt; Marcel
&gt; 
&gt; 
&gt; 

This was the first time I've seen this,
I can apply the patch myself, but first
I need to figure why dbus can be such a bitch : )
Need to figure out how to write dbus rules(if this is the case)
keep getting the permissions denied crap.

--
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080930054320</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 05:43:20-0400</timestampReceived><subject>Re: Bluetooth 2.1 USB adapter!</subject><body>

Hi Chris,

&gt; &gt; http://www.argos.co.uk/static/Product/partNumber/6756035/Trail/searchtext%3EBLUETOOTH.htm
&gt; &gt; 
&gt; &gt; The one at Argos says it's a 2.0 version. I guess those
&gt; &gt; aren't the same pieces of hardware?
&gt; 
&gt; Well, the picture is *identical* to the adapter I bought, and I bought this one at Argos too ;-).

even the Targus one still says Bluetooth 2.0, but it is real 2.1
hardware. I bought two more before I left Portland :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930094036</emailId><senderName>"Ram kumar"</senderName><senderEmail>ramkumar.research@gmail.com</senderEmail><timestampReceived>2008-09-30 09:40:36-0400</timestampReceived><subject>Re: BIP Basic Image profile support in bluez stack</subject><body>

hi,

&gt; obex-data-server SVN trunk supports BIP. I don't know of any front-ends
&gt; that actually use it yet though.

Thanks for the quick reply.It seems that obex data server is different
package from bluez.

i am not able to understand the relation between obex-data-server and
bluez stack.

Does the bluez stack by default compiles with obex data server ????

I have downloaded the obex data server from
http://tadas.dailyda.com/blog/2008/07/21/obex-data-server-034/

But the readme file is empty.So i am unable to relate obex and bluez.

Can you please brief me about how to integrate the package to the
bluez stack ????.

Also can you please provide the svn link where i can download the
obex-data-server with BIP???


Regards,
Ram
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930102921</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 10:29:21-0400</timestampReceived><subject>Re: bluez-gnome: how to turn adapter off?</subject><body>

Hi Bastien,

&gt; &gt; &gt; &gt; Ok, so I remembered wrong ;-) How about adding a "disable this adapter"
&gt; &gt; &gt; &gt; option? Would a patch that implements this be welcome?
&gt; &gt; &gt; 
&gt; &gt; &gt; I'd like a patch implementing HAL killswitching. DannyK can explain to
&gt; &gt; &gt; you how that's supposed to work.
&gt; &gt; &gt; 
&gt; &gt; &gt; I saw this as a single toggle menu item in the right-click, allowing you
&gt; &gt; &gt; to enable/disable the main Bluetooth adapter on laptops. If there's a
&gt; &gt; &gt; killswitch present, and there's 0 or 1 adapter (and the adapter matches
&gt; &gt; &gt; the expected device) then the Bluetooth icon would shown grayed out.
&gt; &gt; 
&gt; &gt; so I added killswitch support to bluetooth-properties. Works pretty good
&gt; &gt; enough for me.
&gt; &gt; 
&gt; &gt; I like having a grayed out icon, but for that to work, we first need to
&gt; &gt; have some who actually draws it in all resolutions for us.
&gt; 
&gt; GTK+ doesn't use separate pixbufs for those type of icons, but generates
&gt; them on the fly with gdk_pixbuf_saturate_and_pixelate().
&gt; 
&gt; new_pixbuf = gdk_pixbuf_copy (original);
&gt; gdk_pixbuf_saturate_and_pixelate(original, new_pixbuf, 0.8, TRUE);
&gt; 
&gt; And then set "new_pixbuf" as the image for the status icon. This will be
&gt; a bit convoluted in the actual code as you're using icon names, and we'd
&gt; need to 1) know whether we have a killswitch, and whether it's enabled
&gt; and 2) modify the status icon to use the pixbuf.

as long as we have to poll the killswitch from HAL, this is never going
to get merged into bluez-gnome. I want async notifications.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930215651</emailId><senderName>Stuart Pook</senderName><senderEmail>kernel6org@pook.es</senderEmail><timestampReceived>2008-09-30 21:56:51-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 11514] New: bluetooth headset works with 2.6.26,</subject><body>

On 07/09/08 13:01, Andrew Morton wrote:
&gt; &gt; Latest working kernel version: 2.6.26-1-686 (Debian)
&gt; &gt; Earliest failing kernel version: 2.6.27-rc5 (vanilla)
&gt; A post-2.6.26 regression.

I just installed bluez-4.9 and linux 2.6.27-rc8 hoping that my
Jabra JX10 bluetooth headset would start working. Still no luck.
Bluetoothd says "connect: Operation not permitted (1)" and
aplay "BT_SETCONFIGURATION failed".

I also downloaded the 2.6.26-mh6 patches from
http://www.bluez.org/more-usb-driver-fixes-and-quirks/ and recompiled
another kernel. The kernel crashed twice (I only booted it twice)
rather quickly. I did get time to run aplay once and it gave the same
errors as shown here. The hcidump is almost exactly the same.

The Jabra JX10 "features Bluetooth 2.0 and e-SCO for improved
audio quality and MultiPoint capability for connecting to 2 devices
at once" and I am using an old Bluetooth 1.2 Linksys USBBT100
USB dongle. Could that be what is causing the problem?

I ran strace on bluetoothd and it appears that it is
"bind(25, {sa_family=AF_BLUETOOTH, \
sa_data="0\377\341A\f\0\310\261\v\270H\225d\271"...}, 8)" that is returning -1 with \
errno set to EADDRINUSE

Bluetoothd says:

bluetoothd: Accepted new client connection on unix socket (fd=23)
bluetoothd: Audio API: received BT_GETCAPABILITIES_REQ
bluetoothd: Audio API: sending BT_GETCAPABILITIES_RSP
bluetoothd: Audio API: received BT_SETCONFIGURATION_REQ
bluetoothd: config sco - device = 00:1A:45:2F:49:98 access_mode = 2
bluetoothd: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connecting to 00:1A:45:2F:49:98 \
                channel 1
bluetoothd: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                HEADSET_STATE_DISCONNECTED -&gt; HEADSET_STATE_CONNECT_IN_PROGRESS
bluetoothd: adapter_get_device(00:1A:45:2F:49:98)
bluetoothd: link_key_request (sba=00:0C:41:E1:FF:30, dba=00:1A:45:2F:49:98)
bluetoothd: kernel auth requirements = 0x04
bluetoothd: stored link key type = 0x00
bluetoothd: /org/bluez/hci0/dev_00_1A_45_2F_49_98: Connected to 00:1A:45:2F:49:98
bluetoothd: Received AT+BRSF=27
bluetoothd: HFP HF features: "EC and/or NR function" "Call waiting and 3-way calling" \
                "Voice recognition activation" "Remote volume control"
bluetoothd: Received AT+CIND=?
bluetoothd: Received AT+CIND?
bluetoothd: Received AT+CMER=3, 0, 0, 1
bluetoothd: Event reporting (CMER): mode=3, ind=1
bluetoothd: HFP Service Level Connection established
bluetoothd: State changed /org/bluez/hci0/dev_00_1A_45_2F_49_98: \
                HEADSET_STATE_CONNECT_IN_PROGRESS -&gt; HEADSET_STATE_CONNECTED
bluetoothd: connect: Operation not permitted (1)
bluetoothd: config failed
bluetoothd: Audio API: sending BT_SETCONFIGURATION_RSP
bluetoothd: Unix client disconnected (fd=23)
bluetoothd: Received AT+VGS=00

% aplay -D JX10 lib/alarm.wav
Playing WAVE 'lib/alarm.wav' : Signed 16 bit Little Endian, Rate 8000 Hz, Mono
ALSA lib pcm_bluetooth.c:464:(bluetooth_hsp_hw_params) BT_SETCONFIGURATION failed : \
                Input/output error(5)
aplay: set_params:979: Unable to install hw params:
ACCESS:  RW_INTERLEAVED
FORMAT:  S16_LE
SUBFORMAT:  STD
SAMPLE_BITS: 16
FRAME_BITS: 16
CHANNELS: 1
RATE: 8000
PERIOD_TIME: 125000
PERIOD_SIZE: 1000
PERIOD_BYTES: 2000
PERIODS: 4
BUFFER_TIME: 500000
BUFFER_SIZE: 4000
BUFFER_BYTES: 8000
TICK_TIME: [0 0]

# hciconfig hci0 revision
hci0:    Type: USB
     BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
     HCI 16.4
     Chip version: BlueCore02-External
     Max key size: 56 bit
     SCO mapping:  HCI
# hciconfig hci0 version
hci0:    Type: USB
     BD Address: 00:0C:41:E1:FF:30 ACL MTU: 192:8 SCO MTU: 64:8
     HCI Ver: 1.1 (0x1) HCI Rev: 0x20d LMP Ver: 1.1 (0x1) LMP Subver: 0x20d
     Manufacturer: Cambridge Silicon Radio (10)

HCI sniffer - Bluetooth packet analyzer ver 1.42
device: hci0 snap_len: 1028 filter: 0xffffffff
&lt; HCI Command: Create Connection (0x01|0x0005) plen 13
     bdaddr 00:1A:45:2F:49:98 ptype 0xcc18 rswitch 0x01 clkoffset 0x0000
     Packet type: DM1 DM3 DM5 DH1 DH3 DH5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Create Connection (0x01|0x0005) status 0x00 ncmd 1
 &gt; HCI Event: Connect Complete (0x03) plen 11
     status 0x00 handle 41 bdaddr 00:1A:45:2F:49:98 type ACL encrypt 0x00
&lt; HCI Command: Read Remote Supported Features (0x01|0x001b) plen 2
     handle 41
 &gt; HCI Event: Command Status (0x0f) plen 4
     Read Remote Supported Features (0x01|0x001b) status 0x00 ncmd 0
 &gt; HCI Event: Page Scan Repetition Mode Change (0x20) plen 7
     bdaddr 00:1A:45:2F:49:98 mode 1
 &gt; HCI Event: Max Slots Change (0x1b) plen 3
     handle 41 slots 5
 &gt; HCI Event: Command Status (0x0f) plen 4
     Unknown (0x00|0x0000) status 0x00 ncmd 1
&lt; HCI Command: Remote Name Request (0x01|0x0019) plen 10
     bdaddr 00:1A:45:2F:49:98 mode 2 clkoffset 0x0000
 &gt; HCI Event: Command Status (0x0f) plen 4
     Remote Name Request (0x01|0x0019) status 0x00 ncmd 1
 &gt; HCI Event: Read Remote Supported Features (0x0b) plen 11
     status 0x00 handle 41
     Features: 0xbf 0xfe 0x8b 0xf8 0x1b 0x18 0x00 0x80
&lt; ACL data: handle 41 flags 0x02 dlen 10
     L2CAP(s): Info req: type 2
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Info rsp: type 2 result 0
       Extended feature mask 0x0000
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(s): Connect req: psm 3 scid 0x0040
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0040 result 1 status 2
       Connection pending - Authorization pending
 &gt; HCI Event: Remote Name Req Complete (0x07) plen 255
     status 0x00 bdaddr 00:1A:45:2F:49:98 name 'Jabra JX10 series 2'
 &gt; HCI Event: Link Key Request (0x17) plen 6
     bdaddr 00:1A:45:2F:49:98
&lt; HCI Command: Link Key Request Reply (0x01|0x000b) plen 22
     bdaddr 00:1A:45:2F:49:98 key F63331CE2D0DBCA190DC73C930CD6117
 &gt; HCI Event: Command Complete (0x0e) plen 10
     Link Key Request Reply (0x01|0x000b) ncmd 1
     status 0x00 bdaddr 00:1A:45:2F:49:98
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Connect rsp: dcid 0x0058 scid 0x0040 result 0 status 0
       Connection successful
&lt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x0058 flags 0x00 clen 4
       MTU 1013
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(s): Config rsp: scid 0x0040 flags 0x00 result 0 clen 0
       Success
 &gt; ACL data: handle 41 flags 0x02 dlen 16
     L2CAP(s): Config req: dcid 0x0040 flags 0x00 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(s): Config rsp: scid 0x0058 flags 0x00 result 0 clen 4
       MTU 1013
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0058 len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 0 pf 1 ilen 0 fcs 0x1c
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 0 pf 1 ilen 0 fcs 0xd7
&lt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0058 len 14 [psm 3]
       RFCOMM(s): PN CMD: cr 1 dlci 0 pf 0 ilen 10 fcs 0x70 mcc_len 8
       dlci 2 frame_type 0 credit_flow 15 pri 7 ack_timer 0
       frame_size 1008 max_retrans 0 credits 7
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(s): PN RSP: cr 0 dlci 0 pf 0 ilen 10 fcs 0xaa mcc_len 8
       dlci 2 frame_type 0 credit_flow 14 pri 7 ack_timer 0
       frame_size 127 max_retrans 0 credits 0
&lt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0058 len 4 [psm 3]
       RFCOMM(s): SABM: cr 1 dlci 2 pf 1 ilen 0 fcs 0x59
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 8
     L2CAP(d): cid 0x0040 len 4 [psm 3]
       RFCOMM(s): UA: cr 1 dlci 2 pf 1 ilen 0 fcs 0x92
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC CMD: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 1 dlci 0 pf 0 ilen 4 fcs 0x70 mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 0 b1 0 b2 0 b3 0 len 0
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0040 len 8 [psm 3]
       RFCOMM(s): MSC RSP: cr 0 dlci 0 pf 0 ilen 4 fcs 0xaa mcc_len 2
       dlci 2 fc 0 rtc 1 rtr 1 ic 0 dv 1 b1 0 b2 0 b3 0 len 0
&lt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x0058 len 5 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 1 ilen 0 fcs 0x86 credits 33
 &gt; ACL data: handle 41 flags 0x02 dlen 9
     L2CAP(d): cid 0x0040 len 5 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 0 fcs 0x5c credits 15
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 0 ilen 11 fcs 0x40
       0000: 41 54 2b 42 52 53 46 3d  32 37 0d                 AT+BRSF=27.
&lt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0058 len 15 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 11 fcs 0x9a
       0000: 0d 0a 2b 42 52 53 46 3d  30 0d 0a                 ..+BRSF=0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 2
       0000: 41 54 2b 43 49 4e 44 3d  3f 0d                    AT+CIND=?.
&lt; ACL data: handle 41 flags 0x02 dlen 135
     L2CAP(d): cid 0x0058 len 131 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 127 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  28 22 62 61 74 74 63 68  ..+CIND:("battch
       0010: 67 22 2c 28 30 2d 35 29  29 2c 28 22 73 69 67 6e  g",(0-5)),("sign
       0020: 61 6c 22 2c 28 30 2d 35  29 29 2c 28 22 73 65 72  al",(0-5)),("ser
       0030: 76 69 63 65 22 2c 28 30  2c 31 29 29 2c 28 22 63  vice",(0,1)),("c
       0040: 61 6c 6c 22 2c 28 30 2c  31 29 29 2c 28 22 63 61  all",(0,1)),("ca
       0050: 6c 6c 73 65 74 75 70 22  2c 28 30 2d 33 29 29 2c  llsetup",(0-3)),
       0060: 28 22 63 61 6c 6c 68 65  6c 64 22 2c 28 30 2d 32  ("callheld",(0-2
       0070: 29 29 2c 28 22 72 6f 61  6d 22 2c 28 30 2c 31     )),("roam",(0,1
&lt; ACL data: handle 41 flags 0x02 dlen 12
     L2CAP(d): cid 0x0058 len 8 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 4 fcs 0x9a
       0000: 29 29 0d 0a                                       ))..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 18
     L2CAP(d): cid 0x0040 len 14 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 9 fcs 0x5c credits 3
       0000: 41 54 2b 43 49 4e 44 3f  0d                       AT+CIND?.
&lt; ACL data: handle 41 flags 0x02 dlen 31
     L2CAP(d): cid 0x0058 len 27 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 23 fcs 0x9a
       0000: 0d 0a 2b 43 49 4e 44 3a  35 2c 35 2c 31 2c 30 2c  ..+CIND:5,5,1,0,
       0010: 30 2c 30 2c 30 0d 0a                              0,0,0..
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 28
     L2CAP(d): cid 0x0040 len 24 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 19 fcs 0x5c credits 2
       0000: 41 54 2b 43 4d 45 52 3d  33 2c 20 30 2c 20 30 2c  AT+CMER=3, 0, 0,
       0010: 20 31 0d                                           1.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
 &gt; ACL data: handle 41 flags 0x02 dlen 19
     L2CAP(d): cid 0x0040 len 15 [psm 3]
       RFCOMM(d): UIH: cr 0 dlci 2 pf 1 ilen 10 fcs 0x5c credits 1
       0000: 41 54 2b 56 47 53 3d 30  30 0d                    AT+VGS=00.
&lt; ACL data: handle 41 flags 0x02 dlen 14
     L2CAP(d): cid 0x0058 len 10 [psm 3]
       RFCOMM(d): UIH: cr 1 dlci 2 pf 0 ilen 6 fcs 0x9a
       0000: 0d 0a 4f 4b 0d 0a                                 ..OK..
 &gt; HCI Event: Number of Completed Packets (0x13) plen 5
     handle 41 packets 1
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080930220349</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-09-30 22:03:49-0400</timestampReceived><subject>Re: [Bug 11442] btusb suspend/resume bug...</subject><body>

Hi Rafael,

&gt; &gt; &gt; &gt; &gt;&gt; Rafael, can you pull from my tree and test the changes:
&gt; &gt; &gt; &gt; &gt;&gt;
&gt; &gt; &gt; &gt; &gt;&gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/ 
&gt; &gt; &gt; &gt; &gt;&gt; bluetooth-2.6.git
&gt; &gt; &gt; &gt; &gt;&gt;
&gt; &gt; &gt; &gt; &gt;&gt; It would be interesting if these fixes are enough.
&gt; &gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; &gt; They appear to be enough.  I haven't had any suspend/resume failures  
&gt; &gt; &gt; &gt; &gt; with them
&gt; &gt; &gt; &gt; &gt; applied.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; so it works _without_ applying patch-btusb-suspend.
&gt; &gt; &gt; 
&gt; &gt; &gt; Well, unfortunately I spoke too soon.
&gt; &gt; &gt; 
&gt; &gt; &gt; I'm still seeing post-hibernation crashes triggered by the bluetooth user land
&gt; &gt; &gt; trying to use the device handled by btusb.  They happen every second
&gt; &gt; &gt; hibernation, more or less, and apparently they are oopses in various code
&gt; &gt; &gt; paths not directly related to bluetooth, like ext3 (memory corruption or
&gt; &gt; &gt; what?).
&gt; &gt; 
&gt; &gt; I pushed two extra patches to my bluetooth-2.6 repository:
&gt; &gt; 
&gt; &gt; git://git.kernel.org/pub/scm/linux/kernel/git/holtmann/bluetooth-2.6.git
&gt; &gt; 
&gt; &gt; One is fixing a double-free in the error path. This error path can be
&gt; &gt; triggered during suspend/resume if the USB core just disconnects the
&gt; &gt; device. Please check if that fixes it for you.
&gt; &gt; 
&gt; &gt; &gt; With patch-btusb-suspend applied I don't see them (actually I have to use
&gt; &gt; &gt; a slightly modified version of the patch which is appended).
&gt; &gt; &gt; 
&gt; &gt; &gt; Interestingly enough, suspend to RAM works without any visible problems.
&gt; &gt; 
&gt; &gt; As Oliver said, the USB core should do the right thing when no suspend
&gt; &gt; and resume callbacks are provided. I looked through the code so many
&gt; &gt; times now and I am running out of ideas what can happen.
&gt; &gt; 
&gt; &gt; Lets try it one last time without the suspend patch, but the double free
&gt; &gt; fix and see if that works. Otherwise I really give up.
&gt; 
&gt; This time I cannot reproduce the hibernation issue without the suspend patch,
&gt; so it appears that your double-free fix works for me.

great. So I push these for 2.6.27 and then for 2.6.28, we can add full
suspend and auto-suspend and remote-wakeup support. Thanks for testing.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930221445</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-09-30 22:14:45-0400</timestampReceived><subject>Re: [PATCH] Make bluetooth-properties fit on smaller displays</subject><body>

xdpyinfo says the DPI is 100x101... heh...

  dimensions:    800x480 pixels (203x121 millimeters)
  resolution:    100x101 dots per inch

In reality it's around 133dpi (153mm x 92mm).


Mario_Limonciello@Dell.com wrote:
&gt; Hi Folks:
&gt;
&gt; I would think the DPI of the environment is playing into this.  David, what DPI is on your EEE?
&gt;
&gt; Regards
&gt;
&gt; Mario Limonciello 
&gt; Dell | Linux Engineering 
&gt; Mario_Limonciello@Dell.com 
&gt;
&gt;
&gt;
&gt; -----Original Message-----
&gt; From: David Sainty [mailto:david.sainty@dtsp.co.nz]
&gt; Sent: Tue 9/30/2008 3:56 AM
&gt; To: Marcel Holtmann
&gt; Cc: Bastien Nocera; Limonciello, Mario; linux-bluetooth@vger.kernel.org
&gt; Subject: Re: [PATCH] Make bluetooth-properties fit on smaller displays
&gt;  
&gt; Marcel Holtmann wrote:
&gt;   
&gt;&gt; Hi David,
&gt;&gt;
&gt;&gt;   
&gt;&gt;     
&gt;&gt;&gt;&gt;&gt; A lot of these MID devices don't have screens bigger than 1024x600
&gt;&gt;&gt;&gt;&gt; (some 800x600 depending on their aspect ratio).  This change really
&gt;&gt;&gt;&gt;&gt; just reorganizes the GUI so that both laptops and MID devices can use
&gt;&gt;&gt;&gt;&gt; the same layout.  I'm attaching an updated patch relative to 1.6.
&gt;&gt;&gt;&gt;&gt;     
&gt;&gt;&gt;&gt;&gt;         
&gt;&gt;&gt;&gt;&gt;           
&gt;&gt;&gt;&gt; Both versions would fit on both those screens. What's wrong with leaving
&gt;&gt;&gt;&gt; it as is? In the worst case, I'd move the contextual buttons to the side
&gt;&gt;&gt;&gt; of the treeview, instead of underneath, and add labels to those buttons.
&gt;&gt;&gt;&gt;   
&gt;&gt;&gt;&gt;       
&gt;&gt;&gt;&gt;         
&gt;&gt;&gt; The preferences dialog on an Eee PC (701) screen is a real pain, it is 
&gt;&gt;&gt; too big vertically.  800x480 screen, plus a window manager bar at the 
&gt;&gt;&gt; bottom, plus some chunky window decorations up the top.  For a window to 
&gt;&gt;&gt; fit conveniently on a standard Eee PC screen it needs to be 422 pixels 
&gt;&gt;&gt; vertically it looks like (the standard decorations are VERY chunky :)
&gt;&gt;&gt;     
&gt;&gt;&gt;       
&gt;&gt; the dialog ix 420x420 and thus it should fit.
&gt;&gt;   
&gt;&gt;     
&gt; Interesting - that's not what I'm seeing.  I've just tried xwininfo on 
&gt; bluez-gnome-1.7 on both an Eee PC and a full sized PC (possibly with 
&gt; slightly different support library versions).
&gt;
&gt; Full sized PC geometry for the preferences window is 420x521.  EeePC 
&gt; geometry for the same is 420x523.
&gt;   I'm not sure where the 2 pixel difference comes from (I don't think 
&gt; the geometry here is including the window manager decorations).  But 
&gt; neither are close to 420x420.  You weren't thinking 420x520 perchance?
&gt;
&gt;   


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080930232618</emailId><senderName>David Sainty</senderName><senderEmail>david.sainty@dtsp.co.nz</senderEmail><timestampReceived>2008-09-30 23:26:18-0400</timestampReceived><subject>Re: bluez-4.9 + 2.6.27-rc8 + SCO headset -&gt; bluetoothd: connect:</subject><body>

Stuart Pook wrote:
&gt; Er, what headsets do work? Please let me know. The Jabra JX10 "features
&gt; Bluetooth 2.0 and e-SCO for improved audio quality and MultiPoint
&gt; capability for connecting to 2 devices at once". Could that be
&gt; what is causing the problem?
I use a Sony DR-BT20NX stereo headset, with both my kneetop and my phone 
attached (they don't play at once, but the phone can interrupt the audio 
playback).  It works great! (*)

(* with the minor flaw that if I walk away out of range of my kneetop, 
even when paused, the audio connection is irretrievably broken and I 
need to restart the player)


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080802053345</emailId><senderName></senderName><senderEmail>tom.leiming</senderEmail><timestampReceived>2008-08-02 05:33:45-0400</timestampReceived><subject>[PATCH] hci_usb:replace mb with smp_mb</subject><body>

From: Ming Lei &lt;tom.leiming@gmail.com&gt;

smp_mb is enough for ordering memory operations among processors,and
mb is more expensive than smp_mb for UP machine, so replace it with
smp_mb().

Signed-off-by: Ming Lei &lt;tom.leiming@gmail.com&gt;
---
 drivers/bluetooth/hci_usb.h |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/bluetooth/hci_usb.h b/drivers/bluetooth/hci_usb.h
index 1790cc8..8e65991 100644
--- a/drivers/bluetooth/hci_usb.h
+++ b/drivers/bluetooth/hci_usb.h
@@ -70,8 +70,8 @@ static inline void _urb_queue_head(struct _urb_queue *q, struct _urb *_urb)
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
-	_urb-&gt;queue = q; mb(); list_add(&amp;_urb-&gt;list, &amp;q-&gt;head);
+	/* _urb_unlink needs to know which spinlock to use, thus smp_mb(). */
+	_urb-&gt;queue = q; smp_mb(); list_add(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
@@ -79,8 +79,8 @@ static inline void _urb_queue_tail(struct _urb_queue *q, struct _urb *_urb)
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
-	_urb-&gt;queue = q; mb(); list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head);
+	/* _urb_unlink needs to know which spinlock to use, thus smp_mb(). */
+	_urb-&gt;queue = q; smp_mb(); list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
@@ -89,7 +89,7 @@ static inline void _urb_unlink(struct _urb *_urb)
 	struct _urb_queue *q;
 	unsigned long flags;
 
-	mb();
+	smp_mb();
 	q = _urb-&gt;queue;
 	/* If q is NULL, it will die at easy-to-debug NULL pointer dereference.
 	   No need to BUG(). */
-- 
1.5.6.rc2.45.gdc92c

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804084711</emailId><senderName>Johan Hedberg</senderName><senderEmail>johan.hedberg@gmail.com</senderEmail><timestampReceived>2008-08-04 08:47:11-0400</timestampReceived><subject>Re: Cannot pair A2DP speakers with Belkin Bluetooth adapter</subject><body>

Hi,

On Aug 4, 2008, at 2:39, Chris Rankin wrote:
&gt; and I cannot pair it with a set of bluetooth A2DP speakers. These  
&gt; same speakers work fine with my laptop, which has an internal  
&gt; bluetooth device 0x0a5c:0x2110. But whenever I try to pair the  
&gt; Belkin device using the commands
&gt;
&gt; $ hcitool cc &lt;bdaddr&gt;
&gt; $ hcitool auth &lt;bdaddr&gt;
&gt;
&gt; then the connection drops after only a few seconds and the pairing  
&gt; fails.

For those two low-level test commands the behavior you describe is  
perfectly normal and expected. However, they certainly aren't a proper  
way to initiate pairing. Where did you get the idea that this is the  
right way to do pairing? If it was in some BlueZ documentation we  
should fix it ASAP. You might want to check the bluez wiki for some  
ways to perform pairing (hint: search for "CreateBonding"):
http://wiki.bluez.org/wiki/HOWTO/Bonding

&gt; Can anyone suggest anything to try in order to keep the BT  
&gt; connection up, please? I have already tried adding the flags  
&gt; HCI_RESET | HCI_WRONG_SCO_MTU without any effect.

This is not specific in any way to your adapter. You would have gotten  
the same behavior with any other adapter as well.

Johan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804085548</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-04 08:55:48-0400</timestampReceived><subject>[patch]adding quirks to btusb</subject><body>

This ports hci_usb's quirk handling to btusb.

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver

---

--- linux-2.6.22/drivers/bluetooth/btusb.c	2008-08-01 10:53:38.000000000 +0200
+++ linux-2.6.26/drivers/bluetooth/btusb.c	2008-08-04 10:37:07.000000000 +0200
@@ -41,21 +41,108 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.1"
+#define VERSION "0.2"
+
+#define HCI_IGNORE		0x01
+#define HCI_RESET		0x02
+#define HCI_DIGIANSWER		0x04
+#define HCI_CSR			0x08
+#define HCI_SNIFFER		0x10
+#define HCI_BCM92035		0x20
+#define HCI_BROKEN_ISOC		0x40
+#define HCI_WRONG_SCO_MTU	0x80
 
 static struct usb_device_id btusb_table[] = {
 	/* Generic Bluetooth USB device */
 	{ USB_DEVICE_INFO(0xe0, 0x01, 0x01) },
 
+	/* AVM BlueFRITZ! USB v2.0 */
+	{ USB_DEVICE(0x057c, 0x3800) },
+
+	/* Bluetooth Ultraport Module from IBM */
+	{ USB_DEVICE(0x04bf, 0x030a) },
+
+	/* ALPS Modules with non-standard id */
+	{ USB_DEVICE(0x044e, 0x3001) },
+	{ USB_DEVICE(0x044e, 0x3002) },
+
+	/* Ericsson with non-standard id */
+	{ USB_DEVICE(0x0bdb, 0x1002) },
+
+	/* Canyon CN-BTU1 with HID interfaces */
+	{ USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },
+
 	{ }	/* Terminating entry */
 };
 
 MODULE_DEVICE_TABLE(usb, btusb_table);
 
 static struct usb_device_id blacklist_table[] = {
+	/* CSR BlueCore devices */
+	{ USB_DEVICE(0x0a12, 0x0001), .driver_info = HCI_CSR },
+
+	/* Broadcom BCM2033 without firmware */
+	{ USB_DEVICE(0x0a5c, 0x2033), .driver_info = HCI_IGNORE },
+
+	/* Broadcom BCM2035 */
+	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Broadcom BCM2045 */
+	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2101), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* IBM/Lenovo ThinkPad with Broadcom chip */
+	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Targus ACB10US */
+	{ USB_DEVICE(0x0a5c, 0x2100), .driver_info = HCI_RESET },
+
+	/* ANYCOM Bluetooth USB-200 and USB-250 */
+	{ USB_DEVICE(0x0a5c, 0x2111), .driver_info = HCI_RESET },
+
+	/* HP laptop with Broadcom chip */
+	{ USB_DEVICE(0x03f0, 0x171d), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Dell laptop with Broadcom chip */
+	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
+	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
+
+	/* Kensington Bluetooth USB adapter */
+	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
+	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* ISSC Bluetooth Adapter v3.1 */
+	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
+
+	/* RTX Telecom based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
+	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
+
+	/* CONWISE Technology based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
+
+	/* Belkin F8T012 and F8T013 devices */
+	{ USB_DEVICE(0x050d, 0x0012), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x050d, 0x0013), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Digianswer devices */
+	{ USB_DEVICE(0x08fd, 0x0001), .driver_info = HCI_DIGIANSWER },
+	{ USB_DEVICE(0x08fd, 0x0002), .driver_info = HCI_IGNORE },
+
+	/* CSR BlueCore Bluetooth Sniffer */
+	{ USB_DEVICE(0x0a12, 0x0002), .driver_info = HCI_SNIFFER },
+
+	/* Frontline ComProbe Bluetooth Sniffer */
+	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = HCI_SNIFFER },
 	{ }	/* Terminating entry */
 };
 
+static struct usb_driver btusb_driver;
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 
@@ -78,6 +165,16 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *bulk_rx_ep;
 };
 
+static int ignore_dga;
+static int ignore_csr;
+static int ignore_sniffer;
+static int disable_scofix;
+#ifdef CONFIG_BT_HCIUSB_SCO
+static int force_scofix;
+#endif
+static int reset;
+static int override_ignore;
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -433,6 +530,7 @@ static int btusb_probe(struct usb_interf
 
 	BT_DBG("intf %p id %p", intf, id);
 
+	/* interface numbers are hardcoded in the spec */
 	if (intf-&gt;cur_altsetting-&gt;desc.bInterfaceNumber != 0)
 		return -ENODEV;
 
@@ -443,6 +541,15 @@ static int btusb_probe(struct usb_interf
 			id = match;
 	}
 
+	if (id-&gt;driver_info == HCI_IGNORE &amp;&amp; !override_ignore)
+		return -ENODEV;
+	if (ignore_sniffer &amp;&amp; id-&gt;driver_info &amp; HCI_SNIFFER)
+		return -ENODEV;
+	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
+		return -ENODEV;
+	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
+		return -ENODEV;
+
 	data = kzalloc(sizeof(*data), GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
@@ -503,7 +610,15 @@ static int btusb_probe(struct usb_interf
 
 	hdev-&gt;owner = THIS_MODULE;
 
-	set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+	if (reset || id-&gt;driver_info &amp; HCI_RESET)
+		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+	if (force_scofix || id-&gt;driver_info &amp; HCI_WRONG_SCO_MTU) {
+		if (!disable_scofix)
+			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
+	}
+#endif
 
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
@@ -558,6 +673,29 @@ static void __exit btusb_exit(void)
 module_init(btusb_init);
 module_exit(btusb_exit);
 
+module_param(reset, bool, 0644);
+MODULE_PARM_DESC(reset, "Skip HCI reset command on initialization");
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+module_param(force_scofix, bool, 0644);
+MODULE_PARM_DESC(force_scofix, "Force fixup of wrong SCO buffers size");
+#endif
+
+module_param(disable_scofix, bool, 0644);
+MODULE_PARM_DESC(disable_scofix, "Disable fixup of wrong SCO buffer size");
+
+module_param(ignore_csr, bool, 0644);
+MODULE_PARM_DESC(ignore_csr, "Ignore devices with id 0a12:0001");
+
+module_param(ignore_sniffer, bool, 0644);
+MODULE_PARM_DESC(ignore_sniffer, "Ignore devices with id 0a12:0002");
+
+module_param(ignore_dga, bool, 0644);
+MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
+
+module_param(override_ignore, bool, 0644);
+MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
+
 MODULE_AUTHOR("Marcel Holtmann &lt;marcel@holtmann.org&gt;");
 MODULE_DESCRIPTION("Generic Bluetooth USB driver ver " VERSION);
 MODULE_VERSION(VERSION);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080806092538</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-06 09:25:38-0400</timestampReceived><subject>Re: [patch]removal of unnecessary ignore module parameter</subject><body>

Hi Oliver,

&gt; This removes the ignore parameter, which is useless. There are  
&gt; alternate
&gt; methodes of kicking a driver off a usb device.

looks good.

&gt; Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080806092631</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-06 09:26:31-0400</timestampReceived><subject>Re: [patch]quirk implementation for btusb</subject><body>

Hi Oliver,

&gt; This implements hci_usb's quirk handling to the btusb driver.

looks good.

&gt; Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818093459</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-08-18 09:34:59-0400</timestampReceived><subject>Re: Understanding UART bluetooth ..</subject><body>

Hi,

Thanks got it clarified. It was basically on the notify mechanism of the bluetooth, \
and user-space kernel-space interaction.

On hciattach, the HCIUARTSETPROTO ioctl causes "hci_uart_register_dev" to be called \
[in the line discipline driver], which causes "hci_register_dev" to be called which \
calls the "hci_notify", which notifies the in-kernel HCI socket layer, which then \
passes the same to the socket on the user-space.

I hope my understanding is correct.


Thanks.


----- Original Message -----
From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
To: pavan savoy &lt;pavan_savoy@indiatimes.com&gt;
Cc: linux-bluetooth@vger.kernel.org
Sent: Mon, 18 Aug 2008 10:44:00 +0530 (IST)
Subject: Re: Understanding UART bluetooth ..

Hi,

&gt; I had a question on hciattach / hcid &amp; related to hci-core.c, If I know I have a \
&gt; bluetooth device on ttyS0.. and I do a  #hciattach ttyS0 &lt;with_relevant_parameters&gt;
&gt; 
&gt; will the whole system know [using dbus &amp; hcid, that a new device  has been added, \
&gt; if so who exactly does this ? ] 
&gt; I mean I could only find hci_open_dev, but no other dbus or hcid functions to \
&gt; notify... 
&gt; does hci_notify does the same ? which is being called on hci_open_dev?

what is your actual question here? I don't have the slightest idea.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080806082803</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-06 08:28:03-0400</timestampReceived><subject>[patch]removal of unnecessary ignore module parameter</subject><body>

This removes the ignore parameter, which is useless. There are alternate
methodes of kicking a driver off a usb device.

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver

---

--- linux-2.6.27-rc2/drivers/bluetooth/hci_usb.c.alt	2008-08-06 10:08:49.000000000 +0200
+++ linux-2.6.27-rc2/drivers/bluetooth/hci_usb.c	2008-08-06 10:25:06.000000000 +0200
@@ -62,7 +62,6 @@
 #define URB_ZERO_PACKET 0
 #endif
 
-static int ignore;
 static int ignore_dga;
 static int ignore_csr;
 static int ignore_sniffer;
@@ -801,7 +800,7 @@ static int hci_usb_probe(struct usb_inte
 			id = match;
 	}
 
-	if (ignore || id-&gt;driver_info &amp; HCI_IGNORE)
+	if (id-&gt;driver_info &amp; HCI_IGNORE)
 		return -ENODEV;
 
 	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
@@ -1108,9 +1107,6 @@ static void __exit hci_usb_exit(void)
 module_init(hci_usb_init);
 module_exit(hci_usb_exit);
 
-module_param(ignore, bool, 0644);
-MODULE_PARM_DESC(ignore, "Ignore devices from the matching table");
-
 module_param(ignore_dga, bool, 0644);
 MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080806084737</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-06 08:47:37-0400</timestampReceived><subject>[patch]quirk implementation for btusb</subject><body>

This implements hci_usb's quirk handling to the btusb driver.

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

Done at last I hope.

	Regards
		Oliver

---

--- linux-2.6.26-vanilla/drivers/bluetooth/btusb.c	2008-08-01 10:53:38.000000000 +0200
+++ linux-2.6.26/drivers/bluetooth/btusb.c	2008-08-06 10:33:53.000000000 +0200
@@ -41,21 +41,108 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.1"
+#define VERSION "0.2"
+
+#define HCI_IGNORE		0x01
+#define HCI_RESET		0x02
+#define HCI_DIGIANSWER		0x04
+#define HCI_CSR			0x08
+#define HCI_SNIFFER		0x10
+#define HCI_BCM92035		0x20
+#define HCI_BROKEN_ISOC		0x40
+#define HCI_WRONG_SCO_MTU	0x80
 
 static struct usb_device_id btusb_table[] = {
 	/* Generic Bluetooth USB device */
 	{ USB_DEVICE_INFO(0xe0, 0x01, 0x01) },
 
+	/* AVM BlueFRITZ! USB v2.0 */
+	{ USB_DEVICE(0x057c, 0x3800) },
+
+	/* Bluetooth Ultraport Module from IBM */
+	{ USB_DEVICE(0x04bf, 0x030a) },
+
+	/* ALPS Modules with non-standard id */
+	{ USB_DEVICE(0x044e, 0x3001) },
+	{ USB_DEVICE(0x044e, 0x3002) },
+
+	/* Ericsson with non-standard id */
+	{ USB_DEVICE(0x0bdb, 0x1002) },
+
+	/* Canyon CN-BTU1 with HID interfaces */
+	{ USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },
+
 	{ }	/* Terminating entry */
 };
 
 MODULE_DEVICE_TABLE(usb, btusb_table);
 
 static struct usb_device_id blacklist_table[] = {
+	/* CSR BlueCore devices */
+	{ USB_DEVICE(0x0a12, 0x0001), .driver_info = HCI_CSR },
+
+	/* Broadcom BCM2033 without firmware */
+	{ USB_DEVICE(0x0a5c, 0x2033), .driver_info = HCI_IGNORE },
+
+	/* Broadcom BCM2035 */
+	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Broadcom BCM2045 */
+	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2101), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* IBM/Lenovo ThinkPad with Broadcom chip */
+	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Targus ACB10US */
+	{ USB_DEVICE(0x0a5c, 0x2100), .driver_info = HCI_RESET },
+
+	/* ANYCOM Bluetooth USB-200 and USB-250 */
+	{ USB_DEVICE(0x0a5c, 0x2111), .driver_info = HCI_RESET },
+
+	/* HP laptop with Broadcom chip */
+	{ USB_DEVICE(0x03f0, 0x171d), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Dell laptop with Broadcom chip */
+	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
+	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
+
+	/* Kensington Bluetooth USB adapter */
+	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
+	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* ISSC Bluetooth Adapter v3.1 */
+	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
+
+	/* RTX Telecom based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
+	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
+
+	/* CONWISE Technology based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
+
+	/* Belkin F8T012 and F8T013 devices */
+	{ USB_DEVICE(0x050d, 0x0012), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x050d, 0x0013), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Digianswer devices */
+	{ USB_DEVICE(0x08fd, 0x0001), .driver_info = HCI_DIGIANSWER },
+	{ USB_DEVICE(0x08fd, 0x0002), .driver_info = HCI_IGNORE },
+
+	/* CSR BlueCore Bluetooth Sniffer */
+	{ USB_DEVICE(0x0a12, 0x0002), .driver_info = HCI_SNIFFER },
+
+	/* Frontline ComProbe Bluetooth Sniffer */
+	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = HCI_SNIFFER },
 	{ }	/* Terminating entry */
 };
 
+static struct usb_driver btusb_driver;
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 
@@ -78,6 +165,15 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *bulk_rx_ep;
 };
 
+static int ignore_dga;
+static int ignore_csr;
+static int ignore_sniffer;
+static int disable_scofix;
+#ifdef CONFIG_BT_HCIUSB_SCO
+static int force_scofix;
+#endif
+static int reset;
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -433,6 +529,7 @@ static int btusb_probe(struct usb_interf
 
 	BT_DBG("intf %p id %p", intf, id);
 
+	/* interface numbers are hardcoded in the spec */
 	if (intf-&gt;cur_altsetting-&gt;desc.bInterfaceNumber != 0)
 		return -ENODEV;
 
@@ -443,6 +540,15 @@ static int btusb_probe(struct usb_interf
 			id = match;
 	}
 
+	if (id-&gt;driver_info == HCI_IGNORE)
+		return -ENODEV;
+	if (ignore_sniffer &amp;&amp; id-&gt;driver_info &amp; HCI_SNIFFER)
+		return -ENODEV;
+	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
+		return -ENODEV;
+	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
+		return -ENODEV;
+
 	data = kzalloc(sizeof(*data), GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
@@ -503,7 +609,15 @@ static int btusb_probe(struct usb_interf
 
 	hdev-&gt;owner = THIS_MODULE;
 
-	set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+	if (reset || id-&gt;driver_info &amp; HCI_RESET)
+		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+	if (force_scofix || id-&gt;driver_info &amp; HCI_WRONG_SCO_MTU) {
+		if (!disable_scofix)
+			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
+	}
+#endif
 
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
@@ -558,6 +672,26 @@ static void __exit btusb_exit(void)
 module_init(btusb_init);
 module_exit(btusb_exit);
 
+module_param(reset, bool, 0644);
+MODULE_PARM_DESC(reset, "Skip HCI reset command on initialization");
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+module_param(force_scofix, bool, 0644);
+MODULE_PARM_DESC(force_scofix, "Force fixup of wrong SCO buffers size");
+#endif
+
+module_param(disable_scofix, bool, 0644);
+MODULE_PARM_DESC(disable_scofix, "Disable fixup of wrong SCO buffer size");
+
+module_param(ignore_csr, bool, 0644);
+MODULE_PARM_DESC(ignore_csr, "Ignore devices with id 0a12:0001");
+
+module_param(ignore_sniffer, bool, 0644);
+MODULE_PARM_DESC(ignore_sniffer, "Ignore devices with id 0a12:0002");
+
+module_param(ignore_dga, bool, 0644);
+MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
+
 MODULE_AUTHOR("Marcel Holtmann &lt;marcel@holtmann.org&gt;");
 MODULE_DESCRIPTION("Generic Bluetooth USB driver ver " VERSION);
 MODULE_VERSION(VERSION);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818202701</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-08-18 20:27:01-0400</timestampReceived><subject>Re: [PATCH 04/39] pcmcia: use pcmcia_loop_config in bluetooth drivers</subject><body>

Hi Marcel,

On Mon, Aug 18, 2008 at 09:57:11PM +0200, Marcel Holtmann wrote:
&gt; &gt; CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; &gt; CC: linux-bluetooth@vger.kernel.org
&gt; &gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
&gt; 
&gt; I know that the Bluetooth PCMCIA drivers are not the best examples for
&gt; coding style, but please double check your whitespaces/tabs. We don't
&gt; wanna make it worse.

actually, I'm pondering making a CodingStyle cleanup of the whole PCMCIA
subsystem for drivers/pcmcia/ is so unbelievable un-CodingStyle... but:

&gt; 
&gt; &gt; -	return get_tuple(handle, tuple, parse);
&gt; &gt; +        unsigned long try = (unsigned long) priv_data;
&gt; &gt; +
&gt; &gt; +       if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
&gt; &gt; +               p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;

something went badly wrong here, will fix it up (probably in a follow-up
patch).

Thanks,
	Dominik
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819125707</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 12:57:07-0400</timestampReceived><subject>Re: question on btusb_open()</subject><body>

Am Dienstag 19 August 2008 14:36:14 schrieben Sie:
&gt; Hi Oliver,
&gt; 
&gt; &gt; if this function is reentered there's a race with the error path. Can
&gt; &gt; it be reentered?
&gt; 
&gt; no. The Bluetooth core will protect against it. The open callback will
&gt; be triggered by "hciconfig hci0 up" or hcid/bluetoothd.

Good. I can see no further obvious bugs in btusb. I am going on to do
power management for it.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819153408</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 15:34:08-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Am Dienstag 19 August 2008 17:27:23 schrieb Marcel Holtmann:
&gt; &gt; &gt; I am not sure about hci_dev_hold. We ensure that a reference count to
&gt; &gt; &gt; the module is hold when the HCI device is brought up.
&gt; &gt; 
&gt; &gt; But won't the module be marked as going away and make try_module_get()
&gt; &gt; fail?
&gt; 
&gt; when calling "hciconfig hci0 up" then it is impossible to unload the
&gt; btusb module since we keep a module reference.

There's no guarantee the hci is up when disconnect() is called.

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818051400</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 05:14:00-0400</timestampReceived><subject>Re: Understanding UART bluetooth ..</subject><body>

Hi,

&gt; I had a question on hciattach / hcid &amp; related to hci-core.c, If I know I have a \
&gt; bluetooth device on ttyS0.. and I do a  #hciattach ttyS0 &lt;with_relevant_parameters&gt;
&gt; 
&gt; will the whole system know [using dbus &amp; hcid, that a new device  has been added, \
&gt; if so who exactly does this ? ] 
&gt; I mean I could only find hci_open_dev, but no other dbus or hcid functions to \
&gt; notify... 
&gt; does hci_notify does the same ? which is being called on hci_open_dev?

what is your actual question here? I don't have the slightest idea.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080820135053</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-20 13:50:53-0400</timestampReceived><subject>RE: [rfc]btusb with SCO support</subject><body>

On Wed, 20 Aug 2008, Dave Higton wrote:

&gt; &gt; Since these are isoc URBs anyway, shouldn't you simply drop them until
&gt; &gt; the new altsetting is ready?  That's a lot easier than trying to keep
&gt; &gt; track of them and deferring them (which doesn't make much sense for
&gt; &gt; Isochronous data).
&gt; 
&gt; If they were scheduled before an altsetting change, they must be plain
&gt; wrong for the new altsetting - and indeed the new altsetting could be
&gt; 0, in which case they wouldn't be sent anyway.  So it seems to me that
&gt; they should be dropped.

That's not a good description of the situation.  The URBs were
scheduled _after_ an altsetting change was requested but _before_ the
change took place.  Therefore the URBs are designed for the new
altsetting and so are wrong for the altsetting in effect at the time of
submission.  (Indeed, the old altsetting might be 0, in which case
submission would fail anyway.)  So they should be dropped.

&gt; The only difference it makes, from the POV of the outside world, is an
&gt; ever so slight change in the time the stream is switched off.

No.  Since the submission or transmission of those URBs would have 
failed anyway (if they were submitted before the altsetting change 
occurred), they wouldn't get delivered in either case.  The length of 
time the stream is off is the time required to switch altsettings -- 
and that simply is unavoidable.

The other possibility suggested was to delay submitting the URBs until
after the new altsetting was in place.  That is a bad idea because it
means delaying the delivery of isoc data, which makes no sense -- the
whole idea of an isochronous stream is that the information should be
delivered as quickly as possible and it doesn't much matter if some of
it gets lost.

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820160454</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 16:04:54-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 17:55:23 schrieb Alan Stern:
&gt; On Wed, 20 Aug 2008, Marcel Holtmann wrote:
&gt; 

&gt; &gt; is there any way to make it default if we know it works all the time?
&gt; 
&gt; No, probably not.  But in general we don't know that.  And we do know
&gt; that a fair number of devices really are broken in this way -- lots of
&gt; printers or scanners have this problem.  Too many for us to want to
&gt; keep a blacklist in the kernel, as Oliver mentioned.
&gt; 
&gt; The idea is that some desktop management program, like hal, should be 
&gt; able to recognize which devices can autosuspend safely and then enable 
&gt; them.  That way the whole problem is pushed out to userspace.  :-)

You could write a udev rule.

	Regards
		Oliver


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820162809</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 16:28:09-0400</timestampReceived><subject>[rfc]full autosuspend for btusb</subject><body>

Hi,

in the great tradition of totally untested patches here's a version that
should do ultraaggressive runtime powersave. In all likelihood it doesn't
work. I'll test it, but only tomorrow.

	Regards
		Oliver

----

--- linux-2.6.27-rc3/drivers/usb/core/urb.c.alt3	2008-08-20 17:04:50.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-20 17:21:24.000000000 +0200
@@ -633,3 +633,47 @@ int usb_wait_anchor_empty_timeout(struct
 				  msecs_to_jiffies(timeout));
 }
 EXPORT_SYMBOL_GPL(usb_wait_anchor_empty_timeout);
+
+struct urb *usb_get_from_anchor(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	if (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.next, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		usb_unanchor_urb(victim);
+	} else {
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		victim = NULL;
+	}
+
+	return victim;
+}
+
+EXPORT_SYMBOL_GPL(usb_get_from_anchor);
+
+void usb_scuttle_anchored_urbs(struct usb_anchor *anchor)
+{
+	struct urb *victim;
+	unsigned long flags;
+
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	while (!list_empty(&amp;anchor-&gt;urb_list)) {
+		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
+				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+		/* this will unanchor the URB */
+		usb_unanchor_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
+	}
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
+}
+
+EXPORT_SYMBOL_GPL(usb_scuttle_anchored_urbs);
+
--- linux-2.6.27-rc3/include/linux/usb.h.alt	2008-08-20 17:05:19.000000000 +0200
+++ linux-2.6.27-rc3/include/linux/usb.h	2008-08-20 17:09:57.000000000 +0200
@@ -1460,6 +1460,8 @@ extern void usb_anchor_urb(struct urb *u
 extern void usb_unanchor_urb(struct urb *urb);
 extern int usb_wait_anchor_empty_timeout(struct usb_anchor *anchor,
 					 unsigned int timeout);
+extern struct urb *usb_get_from_anchor(struct usb_anchor *anchor);
+extern void usb_scuttle_anchored_urbs(struct usb_anchor *anchor);
 
 /**
  * usb_urb_dir_in - check if an URB describes an IN transfer
--- linux-2.6.27-rc3/drivers/bluetooth/btusb.c.alt2	2008-08-20 09:46:20.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-20 17:46:14.000000000 +0200
@@ -41,7 +41,7 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.3"
+#define VERSION "0.4"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -165,6 +165,7 @@ static struct usb_device_id blacklist_ta
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 #define BTUSB_ISOC_RUNNING	2
+#define BTUSB_SUSPENDING	3
 
 struct btusb_data {
 	struct hci_dev       *hdev;
@@ -177,11 +178,15 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
 	struct usb_anchor isoc_anchor;
+	struct usb_anchor deferred;
+	int tx_in_flight;
+	spinlock_t txlock;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
@@ -190,8 +195,23 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int did_iso_resume:1;
 };
 
+static int inc_tx(struct btusb_data *data)
+{
+	unsigned long flags;
+	int rv;
+
+	spin_lock_irqsave(&amp;data-&gt;txlock, flags);
+	rv = test_bit(BTUSB_SUSPENDING, &amp;data-&gt;flags);
+	if (!rv)
+		data-&gt;tx_in_flight++;
+	spin_unlock_irqrestore(&amp;data-&gt;txlock, flags);
+
+	return rv;
+}
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -218,6 +238,7 @@ static void btusb_intr_complete(struct u
 	if (!test_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -228,7 +249,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -241,13 +262,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -263,7 +284,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -302,6 +323,7 @@ static void btusb_bulk_complete(struct u
 	if (!test_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags))
 		return;
 
+	usb_mark_last_busy(data-&gt;udev);
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -312,7 +334,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -325,18 +347,19 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -346,7 +369,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -484,6 +507,33 @@ static void btusb_tx_complete(struct urb
 {
 	struct sk_buff *skb = urb-&gt;context;
 	struct hci_dev *hdev = (struct hci_dev *) skb-&gt;dev;
+	struct btusb_data *data = hdev-&gt;driver_data;
+
+	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
+					urb, urb-&gt;status, urb-&gt;actual_length);
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		goto done;
+
+	if (!urb-&gt;status)
+		hdev-&gt;stat.byte_tx += urb-&gt;transfer_buffer_length;
+	else
+		hdev-&gt;stat.err_tx++;
+
+done:
+	spin_lock(&amp;data-&gt;txlock);
+	data-&gt;tx_in_flight--;
+	spin_unlock(&amp;data-&gt;txlock);
+
+	kfree(urb-&gt;setup_packet);
+
+	kfree_skb(skb);
+}
+
+static void btusb_isoc_tx_complete(struct urb *urb)
+{
+	struct sk_buff *skb = urb-&gt;context;
+	struct hci_dev *hdev = (struct hci_dev *) skb-&gt;dev;
 
 	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
 					urb, urb-&gt;status, urb-&gt;actual_length);
@@ -509,13 +559,19 @@ static int btusb_open(struct hci_dev *hd
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (err &lt; 0)
+		return err;
+	data-&gt;acl-&gt;needs_remote_wakeup = 1;
+	usb_autopm_put_interface(data-&gt;acl);
+
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_ATOMIC);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -524,9 +580,17 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
@@ -536,14 +600,14 @@ static int btusb_close(struct hci_dev *h
 	flush_work(&amp;data-&gt;work);
 
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
+	btusb_stop_traffic(data);
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err) {
+		data-&gt;acl-&gt;needs_remote_wakeup = 0;
+		usb_autopm_put_interface(data-&gt;acl);
+	}
 	return 0;
 }
 
@@ -629,7 +693,7 @@ static int btusb_send_frame(struct sk_bu
 		urb-&gt;dev      = data-&gt;udev;
 		urb-&gt;pipe     = pipe;
 		urb-&gt;context  = skb;
-		urb-&gt;complete = btusb_tx_complete;
+		urb-&gt;complete = btusb_isoc_tx_complete;
 		urb-&gt;interval = data-&gt;isoc_tx_ep-&gt;bInterval;
 
 		urb-&gt;transfer_flags  = URB_ISO_ASAP;
@@ -640,12 +704,19 @@ static int btusb_send_frame(struct sk_bu
 				le16_to_cpu(data-&gt;isoc_tx_ep-&gt;wMaxPacketSize));
 
 		hdev-&gt;stat.sco_tx++;
-		break;
+		goto skip_waking;
 
 	default:
 		return -EILSEQ;
 	}
 
+	err = inc_tx(data);
+	if (err) {
+		usb_anchor_urb(urb, &amp;data-&gt;deferred);
+		schedule_work(&amp;data-&gt;waker);
+		goto out;
+	}
+skip_waking:
 	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
@@ -657,6 +728,7 @@ static int btusb_send_frame(struct sk_bu
 
 	usb_free_urb(urb);
 
+out:
 	return err;
 }
 
@@ -677,10 +749,10 @@ static void btusb_notify(struct hci_dev
 
 	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
 		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
 				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 			else
-				btusb_submit_bulk_urb(hdev);
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
 		}
 	} else {
 		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
@@ -737,8 +809,19 @@ static void btusb_work(struct work_struc
 {
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
+	int err;
 
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (!data-&gt;did_iso_resume) {
+			err = usb_autopm_get_interface(data-&gt;isoc);
+			if (!err) {
+				data-&gt;did_iso_resume = 1;
+			} else {
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+				return;
+			}
+		}
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
@@ -758,9 +841,23 @@ static void btusb_work(struct work_struc
 		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
 		__set_isoc_interface(hdev, 0);
+		if (data-&gt;did_iso_resume) {
+			data-&gt;did_iso_resume = 0;
+			usb_autopm_put_interface(data-&gt;isoc);
+		}
 	}
 }
 
+static void btusb_waker(struct work_struct *work)
+{
+	struct btusb_data *data = container_of(work, struct btusb_data, work);
+	int err;
+
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (!err)
+		usb_autopm_put_interface(data-&gt;acl);
+}
+
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
@@ -828,11 +925,14 @@ static int btusb_probe(struct usb_interf
 	spin_lock_init(&amp;data-&gt;lock);
 
 	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	INIT_WORK(&amp;data-&gt;waker, btusb_waker);
+	spin_lock_init(&amp;data-&gt;txlock);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
 	init_usb_anchor(&amp;data-&gt;isoc_anchor);
+	init_usb_anchor(&amp;data-&gt;deferred);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -944,11 +1044,94 @@ static void btusb_disconnect(struct usb_
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+
+	spin_lock_irq(&amp;data-&gt;txlock);
+	if (!(interface_to_usbdev(intf)-&gt;auto_pm &amp;&amp; data-&gt;tx_in_flight)) {
+		set_bit(BTUSB_SUSPENDING, &amp;hdev-&gt;flags);
+	} else {
+		spin_unlock_irq(&amp;data-&gt;txlock);
+		return -EBUSY;
+	}
+	spin_unlock_irq(&amp;data-&gt;txlock);
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static void play_deferred(struct btusb_data *data)
+{
+	struct urb *urb;
+	int err;
+
+	while ((urb = usb_get_from_anchor(&amp;data-&gt;deferred))) {
+		err = usb_submit_urb(urb, GFP_ATOMIC);
+		if (err &lt; 0)
+			break;
+	}
+	usb_scuttle_anchored_urbs(&amp;data-&gt;deferred);
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+
+	spin_lock_irq(&amp;data-&gt;txlock);
+	play_deferred(data);
+	set_bit(BTUSB_SUSPENDING, &amp;hdev-&gt;flags);
+	spin_unlock_irq(&amp;data-&gt;txlock);
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818185255</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-08-18 18:52:55-0400</timestampReceived><subject>[PATCH 04/39] pcmcia: use pcmcia_loop_config in bluetooth drivers</subject><body>

Use the config loop helper in bluetooth pcmcia drivers.

CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
CC: linux-bluetooth@vger.kernel.org
Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
---
 drivers/bluetooth/bt3c_cs.c   |  117 ++++++++++++++++-------------------------
 drivers/bluetooth/btuart_cs.c |  118 ++++++++++++++++-------------------------
 drivers/bluetooth/dtl1_cs.c   |   62 +++++-----------------
 3 files changed, 103 insertions(+), 194 deletions(-)

diff --git a/drivers/bluetooth/bt3c_cs.c b/drivers/bluetooth/bt3c_cs.c
index 593b7c5..97b4e22 100644
--- a/drivers/bluetooth/bt3c_cs.c
+++ b/drivers/bluetooth/bt3c_cs.c
@@ -678,93 +678,66 @@ static void bt3c_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config(struct pcmcia_device *p_dev,
+			     cistpl_cftable_entry_t *cf,
+			     void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+        unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config_notpicky(struct pcmcia_device *p_dev,
+				      cistpl_cftable_entry_t *cf,
+				      void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int bt3c_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	bt3c_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if(!pcmcia_loop_config(link, bt3c_check_config, (void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if(!pcmcia_loop_config(link, bt3c_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/btuart_cs.c b/drivers/bluetooth/btuart_cs.c
index 68d1d25..6fca5b9 100644
--- a/drivers/bluetooth/btuart_cs.c
+++ b/drivers/bluetooth/btuart_cs.c
@@ -607,94 +607,66 @@ static void btuart_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config(struct pcmcia_device *p_dev,
+			       cistpl_cftable_entry_t *cf,
+			       void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+        unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config_notpicky(struct pcmcia_device *p_dev,
+					cistpl_cftable_entry_t *cf,
+					void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int btuart_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	btuart_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *) buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if(!pcmcia_loop_config(link, btuart_check_config, (void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0)
-		    &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if(!pcmcia_loop_config(link, btuart_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/dtl1_cs.c b/drivers/bluetooth/dtl1_cs.c
index dae45cd..e30a633 100644
--- a/drivers/bluetooth/dtl1_cs.c
+++ b/drivers/bluetooth/dtl1_cs.c
@@ -590,66 +590,30 @@ static void dtl1_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int dtl1_confcheck(struct pcmcia_device *p_dev,
+			  cistpl_cftable_entry_t *cf,
+			  void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
-}
-
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	if ((cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
+		p_dev-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
 static int dtl1_config(struct pcmcia_device *link)
 {
 	dtl1_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
 	int i;
 
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-
 	/* Look for a generic full-sized window */
 	link-&gt;io.NumPorts1 = 8;
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-			link-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
-			link-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-			i = pcmcia_request_io(link, &amp;link-&gt;io);
-			if (i == CS_SUCCESS)
-				break;
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
-
-	if (i != CS_SUCCESS) {
-		cs_error(link, RequestIO, i);
+	if (!pcmcia_loop_config(link, dtl1_confcheck, NULL))
 		goto failed;
-	}
 
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
-- 
1.5.4.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819122550</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 12:25:50-0400</timestampReceived><subject>question on btusb_open()</subject><body>

Hi,

if this function is reentered there's a race with the error path. Can
it be reentered?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819122352</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 12:23:52-0400</timestampReceived><subject>[patch]race condition in btusb disconnect() handling</subject><body>

btusb has some races in disconnect()

- it doesn't deal with only the iso interface disconnected
- it releases the data interface before unregistering the iso interface
- it isn't carefull to kill all URBs in case of soft disconnect

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver
---

--- linux-2.6.27-rc3/drivers/bluetooth/btusb.c.marcel	2008-08-19 10:21:51.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-19 14:04:49.000000000 +0200
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -523,6 +524,14 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -535,13 +544,9 @@ static int btusb_close(struct hci_dev *h
 	flush_work(&amp;data-&gt;work);
 
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
 
 	return 0;
 }
@@ -822,6 +827,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -890,7 +896,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -922,13 +928,21 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
+	usb_set_intfdata(data-&gt;acl, NULL);
 	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
-
-	usb_set_intfdata(intf, NULL);
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
 	hci_free_dev(hdev);
 }
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819124301</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 12:43:01-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Hi Oliver,

&gt; btusb has some races in disconnect()
&gt; 
&gt; - it doesn't deal with only the iso interface disconnected

It see the point here, but then we have to release the main interface
cleanly or just disable SCO. I would prefer to just disable SCO.

&gt; - it releases the data interface before unregistering the iso interface

How does this happen? It doesn't do it that way.

&gt; - it isn't carefull to kill all URBs in case of soft disconnect

The hci_unregister_dev will be calling the close() callback. Check
hci_core.c and hci_dev_do_close().

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820194100</emailId><senderName>"Rafael J. Wysocki"</senderName><senderEmail>rjw@sisk.pl</senderEmail><timestampReceived>2008-08-20 19:41:00-0400</timestampReceived><subject>Re: 2.6.17-rc3: hci-usb related warnings and error on resume</subject><body>

On Wednesday, 20 of August 2008, Frans Pop wrote:
&gt; I recently got a new laptop (HP 2510p) and have been playing with 
&gt; suspend/resume. Initially the dmesg after resume was fairly clean, but 
&gt; that was with the bluetooth device disabled (I initially disabled it in 
&gt; Windows).
&gt; 
&gt; After enabling it I get repeated warnings on resume starting with:
&gt; &lt;snip&gt;
&gt; usb 1-1: reset full speed USB device using uhci_hcd and address 3
&gt; hci_usb 1-1:1.0: no reset_resume for driver hci_usb?
&gt; hci_usb 1-1:1.1: no reset_resume for driver hci_usb?
&gt; usb_endpoint usbdev1.3_ep83: parent 1-1:1.1 is sleeping, will not add
&gt; ------------[ cut here ]------------
&gt; WARNING: at drivers/base/power/main.c:82 device_pm_add+0x77/0xd3()
&gt; &lt;/snip&gt;

Yeah.

http://bugzilla.kernel.org/show_bug.cgi?id=11263#c11

The patch is in the Greg's tree, AFAICS.

Thanks,
Rafael
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820202859</emailId><senderName>Frans Pop</senderName><senderEmail>elendil@planet.nl</senderEmail><timestampReceived>2008-08-20 20:28:59-0400</timestampReceived><subject>Re: 2.6.17-rc3: hci-usb related warnings and error on resume</subject><body>

On Wednesday 20 August 2008, Rafael wrote:
&gt; On Wednesday, 20 of August 2008, Frans Pop wrote:
&gt; &gt; I recently got a new laptop (HP 2510p) and have been playing with
&gt; &gt; suspend/resume. Initially the dmesg after resume was fairly clean,
&gt; &gt; but that was with the bluetooth device disabled (I initially disabled
&gt; &gt; it in Windows).
&gt; &gt;
&gt; &gt; After enabling it I get repeated warnings on resume starting with:
&gt; &gt; &lt;snip&gt;
&gt; &gt; usb 1-1: reset full speed USB device using uhci_hcd and address 3
&gt; &gt; hci_usb 1-1:1.0: no reset_resume for driver hci_usb?
&gt; &gt; hci_usb 1-1:1.1: no reset_resume for driver hci_usb?
&gt; &gt; usb_endpoint usbdev1.3_ep83: parent 1-1:1.1 is sleeping, will not add
&gt; &gt; ------------[ cut here ]------------
&gt; &gt; WARNING: at drivers/base/power/main.c:82 device_pm_add+0x77/0xd3()
&gt; &gt; &lt;/snip&gt;
&gt;
&gt; Yeah.
&gt;
&gt; http://bugzilla.kernel.org/show_bug.cgi?id=11263#c11
&gt;
&gt; The patch is in the Greg's tree, AFAICS.

Thanks! I'll keep an eye on that and check if the IRQ problem is solved 
too after that patch gets in. If not, I'll try to narrow that one down a 
bit further.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820130521</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 13:05:21-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 15:00:50 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; 
&gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; CONFIG_USB_DEBUG
&gt; 
&gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; missing some configuration option?

Probably CONFIG_USB_SUSPEND

	HTH
		Oliver


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820130554</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 13:05:54-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; 
&gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; 
&gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; missing some configuration option?
&gt; 
&gt; Probably CONFIG_USB_SUSPEND

that one is on of course. Do you think it makes a difference that it is
PowerPC system I am testing this with?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820131129</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 13:11:29-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 15:05:54 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; 
&gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; missing some configuration option?
&gt; &gt; 
&gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; 
&gt; that one is on of course. Do you think it makes a difference that it is
&gt; PowerPC system I am testing this with?

If it does make a difference, that's a bug. Runtime PM should work
anyway.

	Regards
		Oliver


	
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820131304</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 13:13:04-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; 
&gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; 
&gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; PowerPC system I am testing this with?
&gt; 
&gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; anyway.

I really don't see any calls to suspend() and I am missing the
power/level option. This is the latest 2.6.27-rc3-git tree from Linus.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820132313</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 13:23:13-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 15:13:04 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; 
&gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; 
&gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; anyway.
&gt; 
&gt; I really don't see any calls to suspend() and I am missing the
&gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.

Odd. Send /proc/config.gz please.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820132442</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 13:24:42-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; &gt; 
&gt; &gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; &gt; anyway.
&gt; &gt; 
&gt; &gt; I really don't see any calls to suspend() and I am missing the
&gt; &gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.
&gt; 
&gt; Odd. Send /proc/config.gz please.

there you go. It is a nice Quad G5 machine.

Regards

Marcel


["config.gz" (config.gz)]

���Hconfig�\[s�8�~�_�����[�;�d[q��������[It�XY[����@R� \
����L��h��_7������r&lt;|�=��n��|�=��n������o��������������'���Z����?'�vO����������������/�w�~�;�
 ( /_&amp;�����������������E�e]�t~q��O@�yR&gt;�v�����������#Wl����&lt;���G��?O��rVS������� \
p�&lt;��NWu\V��$U|�����7�r�*���r{��,�e�)�n/���U���	�E�+�/����&lt;���@^_������S����#��_����X���j�c�r&amp;8�iV��*#����x \
bl%%i�hL�bk�+9d&amp;DD\|p8	Y�Z2U�u��]��I�[��(�+%��UYB�4�0��nUQl;��d)�|=��! \
�F������D��\%�c3�&amp;���yZ,guu&gt;��a��g��2Q����/���XJ�C���Q��U{�a:�ku����l����n�R�\�NTZd%q����9���N����E�UVR \
���x2�����\D�CU�������������//��C��BnsG-�"��z�n�j����T��+��%C�H���\o��vo/r���|����#*j-�f�shE��A�"�K0��� \
G	�hM�Ku�����������������r�5���H�����X�4��A+{�q���N �\��?'� \
��"�a�Y��5���-\���$]3!a����9��e�~���R,qh��1)g@����&gt;T���c!#0�����X����\��Q�1���
 ���=%��7_�? Z�9�Q��Lx�������EUJW�%�n���or&lt;u���p	�:L��mcs�������
&amp;�J�+6�6��%�%��� ����Y6��Em��7�-X�dh1��X�"�+y�c�������� \
"�x�k����S����+�����y[���f��E����p=�����L)����wt)��%��,�B��� �z��� \
e�4���I���^���� ��rgW�90���/x^D��+��������	��`��K�I������Hg��dJ��dZ-p;N�N(�iv���U�h�8���CYe����1�\O�
 +	&amp;8?��`
m�a�2R���q�[P�	�%E��1���D)wu��u�0q������-�iJS�~�{�]�:+��b������E \
�v�`�yTu�M�w0����vB�,3}��:L^DU���%��~1-H4`U9J�-fU�q6m� ]�E��� �tFh \
s���?�W�}�Bn�[H��ONS�%@�-�X5����A-������7O�'� \
��ph�D^��"F�T�n���'&lt;,��V���H@��H�fX�o�&gt;��@R��`��V]��p{�|x����:AU���}�ZB���$V�����;�����/���[I�X \
�x�-���~�?`����"�r��Da1- ����D���{ ������]�]C�(p�e�~5�|���������*`�: \
��5������D�MF�olI�g�����;�(�m \
�����y�������AT��A,�'m(�{�X�������'�����"&lt;����.��.`�3F�0�F��$E�h�jp����EAh \
��Wg&lt;����~��lQ���a����]}uc#7$'���?/����&amp;�O����)z�X�u���������-{~��GG�������RyQ',�����,LE�hN�
 6O��'��V����'z�����j�A�_�I���w�!��J������E
x��-�����2���~�
e5��K
���g�,����(��e[ �l��t�*�A�,����W��0#��~��J���v��� M��AdRGUV�l]=lgRyT \
�2�7��$K�7nX�-�����)��pj���,�J�i!'�	8Ps���S8�������_��x.��l(�w���������I�h?���e:�����TlI�nn���e�U]*�~�m�)N��0uG�0b
 �k����{t�����@�KuKm��6���*;�g��A��d���[����w#2s�gr7[��W�hf@5��v�V,��,��N}��!n�����a����i����
 ����`�'����5���IE$�Io�[��xy��v��� \
�Rx}���)�#T&lt;�&gt;qP="�"�%	�2kC�%�_��*��do��*�S�$t���yh)%"r�~I3��H�&gt;��F\��5� \
&gt;��,^P�����.�M����n��'����_v�uX��.��S���f�q�~5;{?��v�z���&lt;d-��"���M���c�����wg�������k7'���d�(9	�r���������������������:��E�s�&amp;x���e0�k�(�� \
&gt; ����X��p�D�{	szF����w&amp;��u������M�����6y�D��u \
&gt; �Z#��E�����u������9'�H!Oc.�\D�x�*�9 \
&gt; �b���k�8M`��Q��l�fT��*�����$���7(1�`�z������aE�po��l��#����ns}���) \
&gt; ��\��~s��i��m�E��/{��F��\���/]�_���[�����q�VA�^}��TG��^����CS��l��"�%V��m��2P_5��+�2���w�\\�Y \
&gt; �v(���%W�]�5(6�UmKmf7��J�  �e����4C�O� E�@�b�Q����1O��!:����I;
6��v:�|�?wO�S�u�&lt;��(s
2'Ez�&lt;_y��g�Z��o��\W�W�Gw����9���
8VW�&lt;���hR�T�mk�{c���:f������&lt;������������d \
�u�3��vk�w���X�X�Hk1�L����a��e��� \
�|�Kp$��n���!��4{�_O��I�����V��y���*#�C��Xo����q���������Dq��H�����|��_4�� \
!�+�/S�l~��?�����1�m��lu������b�������3�(�J�\�=Q^���k�&gt;,\/v��7�����$����I@&amp;d���: \
(T9�T��� �e�d�&lt;ZzV�NI^_���w�| �6M�r(���I^�KR����y���o�������
/�&lt;&gt;r���q�|�����u�r��,�� \
b.��\M�r�\+V`]8�n�sFI�Q$-��"��!�Z)���E�|U�Pg��`V���u�f����Hl���ew&lt;�_'���� \
w����n@�BUr�k�D	��VD(�V'��Z���e�e��C����o�(��lH��!G*��qN��bM��������{I\���	�� \
����a��^N�K}��A��%���s��S��2N����#��JM���h^�����/�����w����)m�ZP�.n�R3�$�5��7?��o�	�.e2�:������
 �.��vN�%k�'	*���7�9�3)�F�j���W&lt;M��!K,+5 \
6��������"{h�����������*��^��&amp;��7o�?��~=&lt;�|9U���Gi��*�ms�m�`��e��7������0���c����zo��NG����`kHu���	$�b�e���`�Q�f
 �hqs�qZ �����$B��b_Ka�b������ \
���`�VED��9~9��T�wnZlt�����V(����#��9(��;��X��U�����$#c� \
�'�}z=�c&lt;�%�����{��KC�"���Fk|����f*�E���W���_���- \
E����9�����d�����q�{��{&lt;�����~������q���4��{��v���09&lt;N@�������D� \
�$q��e�-T�v@��'��r����uj�����Y��L� ���)R�h�����,�z�#%���u� \
�/�WR��)�r	���}��B�N����/�����(��N��g���@Is�9:g]�����2�����T:�L���;�,zw��� \
E��q%x��W������k�"��"I����Q��2NE��%���Y�P����O����t|y����\^����d7����`��"w��`�6�� \
_oV�&gt;B���`C��jF�g���)}�^�3%�����Xs���b��^�������~��c���4MV��aAxd_���V_���.�Zz���Jv���Kc3�fl��_?v������kr������F����O'm7�(�K��-��r��R#����� \
�.��V���pK�w��&lt;O�����/0����|�}:���n9��&lt;�?v����n��FL`��+���5f|�eD�b�}�b$%yM����m \
���X)��������p���m���k���!Id������2�|MMZlRHs/�\��%IX0J�e�����������kxU��' \
��I�����&lt;�]�C�e�&lt;����M��bd�0/�y��k�s]~�2������%���,n.Fd������u^���2�c#�9�SC���]tn�Y���*��Y��
 ��t|�t��l���d����-Z��7��������F���73�����C���Z4c��dD����� \
0lu� ����F���+`@�����P;HHJ��!�dF\���c�[# o �v������}�?��-��. \
�Vc�����\��j����,��anx�(��% \
�������+�{scg��dz��b��x����:x�����O�������'���������x{���_��G]���ux�|{&lt;�1��� \
����}�M���	L��O������I������Y[�\��~��L�!���k�&lt;W����X�:��;�{i�P��=G�XVeE%�Bae�0��^d�f�mF���^w�4� \
3 G�����O����i 8a&amp;���3���G������,T����_�S}���� b�Gt�����P����Er�l.�8&gt;�|��e \
3Pt;�������h��A��7*������ �
�e&amp;i��n�(H��;H�L+�(I[�Y��7�,��C�'��,�g�m#��$&amp;�,�}S��@�����s&lt;���m^[����2
p.��r�&gt;����m�������U)��[b����	�����@�����m����!eyCF�T����pBg�������*��b&gt;�Gy[8��&amp;��W�9���i \
�%W�r�\mqlx�2-(��(�,�s��)��5}H�y��FT��{��G�&gt;W��f��^�����rsO����A��,��ZE�m�.���Y�H/S��S��q \
�LF��5���wVZ[~3�Mz~(v����?��\�#���j�&gt;�B��6����P��4�p-�&gt;�(� \
7�{��l$����./��Tg��K�{�=���T�e&lt;!����&lt;%	�e�����&lt;�J \
��/��N	���|���0�!�s'iyz�&gt;�q��H��0��"��&lt;��)	?&lt;��gi���S�_;5����9�`i��5r����N�)Qx��/cW��8����b^f7b;��I�F=����"(Y���Vw9�G������x$��C�[����D"$�5��!9��
  �r�Z��!���}B�2��u��!�B��j&gt;�_�.���d�&amp;q������r�@��sE,�����l�/6����n[�9mk�M�����~�cA�fK��\&lt;���s�9h����F \
� &gt;���� �IY��5�H�D#��������������	�z?�yO���j��{C��3"T���Od�2���=HZ�giY���-�D���:�|2~V�n���b'����&amp;�~����[�,�+��&gt;�)^�������K���$�h������b��sZ����� \
�k��2 �A�R��cH����ii�X����h� -t�C8|!���2��D��~�S�jK&gt;�P�(B/qh��� \
8�P���������������n�.o�R*)WQc��*�x&amp;� / \
0��_���rs�u�v�m����lOxR��}�z����F��Cx�e�0�{�4����X��$&amp;&gt;LB��%��$�TW�2�f��v������a���������(��8,�#%/� \
�OV����V���;��c��@�O�W�i�B�;+�SMA����`���W�u�0�����f���������\anBF�D(��Q��b�ll�K6k^���F:3��1������E����O{8l�9��� \
�zFF�\�sAN�K ~%�� ;��Z9�:]sO���&gt;���n,�g���l�g��a��d�-�YCz��F�Zg���i�#3��)�����������E�NO�D���J��==-*4R_���\ \
��$l0��IP��f�����D@�l��U��uV�Ql��(W���n�����'�������J5����%���[��q7!��L�u����.NIx��	`�a~�
 2�)�Xl����f� �z���pgY]_�.��	�
Z�$��-)�UX������~f�cJ��K;���.;������E�u����~T�T5}�b��
z|$��}�����3���\|�1��%#;L�} \
BK��aQ�&amp;���z���?	��|y{o�vq9]UwV������:-��I��$���:5�u�}�p8��7\$����W��FE�@\�V[�[��&amp;4Mj�vm� \
#�z��iy1�b�������W����J��y�x{�&lt;���&lt;�of���=~�.O^��/��/5���Q�����%�]����'e8�\�{�3l�����q�d\����^��a���,p?��IFg���O�6�����p���	��gt�HT��eA�-������6i];h�?�� \
{�4mQ��?��]�bwy��q }�Rn ��ks�����&lt;/��) �B��#J�=�]����I�=�����^����L \
�kw��R��^\�{��-�n!��N@&lt;Bb���'�?�U'��]��� DY
��.�&gt;�kGG�d���F �������&gt;"�����v)8+�����|���I��If�����%�z \
Y�Y:�����uu���"�3L���R�fb����,&amp;����T�)7��g0�c����|�6��Lt _�'���h��W+;��c�yD(�� \
�b��8{���+���`�W^�w  N��L�W�*b3&gt;���x��S�t�*9��~ �-`����;kg|u��&amp;6�� q7 \
�U�,��M������f1�O"��&amp;_a \
h��[l��d�����YU��'�K]�kBU�����`�;�;������u���l?��3&gt;o�e"c \
���L�Z�7���Q�B��S;��\�Q��i����p����O� e����f�����w{��_��j"|a�"�u�� \
�M��*|?��P��F; v�����^5 \
����A����UA���5�������,�f��IF��"Q$�����13�o���q�-�U��r�p�����;��g�x?fU�i����&lt;�5��$�P���i�I������lg
 �RZ6��"����Cl��� 1�W$';���4J$�4�N�P�����4����X����{���
���t�����~��/�q\j85���fD��	�b��M�WM+�I�9�z��n�@�����1LS�1L[#KOba��]Z�)���h� \
���.]���?�@���q8���r���t����#&amp;�O��gF��HO�����%��J�~�G���)z�}������_���wtk^P�-Z�9�����=���� \
�^�KN���$B�:����8}m��� \
z���WI}.��kw���8t�K����������X�P�����d?n�2��*a�}f�`�]]��B�hj��� \
&lt;�����]Nqi����r*g;�����"���^R���rE&lt;�`�yQ��X�S�����e���Q�/�`Yms�2D����+��UCd�n��&lt;�o�A��\@�7mS���,;R���������w+3�c���_@����v���T��a�dt�N%3��
 ]d���s�A�Z��bz����*�R��1���k7;���������$`�
)3$���1L}�['��y���`
$
���"�d���qk$VD7)K�y�=G=��j2��%�������z���+ �X�$��e \
mhI'�I�0�qe�Cz9�y�8�m���VUx���_#8�K�f�* \
TM&amp;�����+BB�t���#K^���!����=pC&amp;�b2�(����i?������+] ��&gt;����3�	��@� \
;�PNP��b9'�&amp;k����Qd�_NbV�l�Ka��a��\eO&lt;4��d�=MO���{������&gt;[! �:����	�� \
�F����=�5��0��zxh�#g� \
�;��49J(]��&amp;����!������'��d����q�u.�#3J��=�����r�#uHX(�^@7���(-? ���P�P� \
yO�O��%a���$$6��-]�����E�r��=��'r2#&lt;�&lt;�����nW�'N��g�^���|N��&amp;����d����A��O�T��F� \
#�1	U�&lt;�2�b�;�m�Yzs��LX3�p�.M��ER�2���NG�Akv�\s7��8�i�I�Xqfw�^3�v�25�kY}���.{n��A��Z�i&amp;h�n$�h��k���z��k�{� \
� {*�QnY �?Um��2�^�������X�h����4�%N9�'9�MX����N
�����2�4�1��x�������3�h����L��]��=��2FO�&lt;4#�brVRMQO@�P�r��)���������&lt;�-v���Aj�ee�?zUY��)�%��]&lt;�[2��MY \
���g}��n����Z�Y[� ���������L`�!&lt;�HW�.v���-Cd�o \
�.��Z�h�&lt;�(\�^���Q��2���r�b�S���6��o�����r��2	i	��r�D��A������w&amp;�TfJ1/�����X�?3� \
���r�����F���F��t�1�}|{��y�=_.�������d=���������Ok�-�����b�j��]1���'�N����1��E	\���wpIF�`ex�f-5��=��
 ����n_4~����2^�hD��W!��`����
��K�(�]�y�CF[��@��q��~�Z���sg�$�A)�vUb�Ai�0�C�5TEe�+ApS:���,�l�6_����t�d.!����Wv����������t��8i��r \
;�:	�	��:&amp;�x������_V�9q]�q��l!M�.m�6�,f���1�b�����4L�W"���kw5�nD���������9� \
R��E���a��������M��N�a�%� \
�N��	��������}f�=_Lv��W�	_�3����d�cy�����&amp;��p���������Gc'{Hg�l����'�QL�|��|��T�(�`p;3���)t�����~��'���w"�dd_�]���&gt;\���Q^eS�kV� \
��2$����.�kb�QLk��YY���B�B`5�R�������+aMfI�qJ��X�A�o&amp;L \
��FFB��Y�`c��G�������+z�6�RL�yo*j��s���� \
[^Mf�%�.u��h��)���X�T�3B&gt;N�!]���#�&lt;{��l����R���r��9=y����#P��jTY#��_��/:�����$�!���#K��� \
9^�|L�^?�E3����&amp;F��8#�c�'m�� ���^�'�8��(��H��RK�QR��E7�lO�'a2p�P�P�f�� _J \
�\��H�����A0��6�����������,�n�:��}U��Qwd�"��p],J/����&amp;X�iE�wG�:�1'T�8�7�#|$���g(J�R�\���t@fq/�@XrQK�-�� \
                �Q��ni�������A2� E�T
-#�z�����,���:�0w� ��}�54F�lc�)��_L��E����7�s��R� �}%� V�m��)Io�
"���p��`�d����� ���������T�G����E��������A�!���dC�Hi^�M���*Y��k�����]����W�a��&lt;�����^ \
wB]�=atd�#7�8�|n7BAZ��D������R�k5&lt;�s;S�E�*��3�c&amp;��~��2�D�^zw@[������y \
?�"�&gt;�|�� �r�l�FpH��.;�!�g:�]$�]��Po��� \
��X�	s"�(3&gt;��cV��&lt;�4�U�%�p�i��\��5gd��/&lt;�S7�� �l�^_�|�b���� \
}V�����4n���L|�X�%-�EFv������xj������gA���u����&lt;C���������uW�?-�)���R���v�}�2��V�. \
V��L:��wt"�~��p����$��O�����#&amp;KM�r�-��#����7dGf��9����Z����k��BA��7�^H�����WM, \
1��4�I$���]"�?��4�{z^��b,[�5���;C�����8%Jbr#J�Xg�����4�+?~�\k�7G1&amp;�����M���O;���D4�`	��)L�
 n�4�������[�N�f���#f��f�8z��Y��S�]O4}dI���r� \
��H��������t���85|V$S�FS����vG�-F���������:���+ \
�kueZn�L6���"�p	���~���&gt;Q[�������|���7���a�&gt;�Dd���� \
��9m	�^N�����ur�;3���B������l��g� (� 1L���+�)�����@�A� 'J��n==E=�
�^D
����C��1 tsw+��JK���B���\��]����~�^_~�?&lt;�����"D����\"�J��%���_�&gt;/5Y$9k� \
gU:W��0�����j17M��=I�ts@J�b��[�|��?2)��g?35��y�u�	����$L�I=-T&amp;���2J|�x��pyEoi?o���B�i��x�Q����N&lt;j�A]}V��5=9 \
I��=:����U��TZ��\|7�R�F ������n�vf\?B��Q%��0��qmQ�b�������*� \
���LZ���6�D���4	�N,&gt;�_�4��'G�/$}�:G��+I�3��A{��x�1�ix)b�*}ex�+����x(��,�����������,��Z��t�������,,H��j&amp;���ej \
��� &amp;��� M���B��.3��"�n���������8&gt;5@d_���&lt;q�-:CX \
'�"^&amp;::�%���'+n0H���z#_w�U�&amp;w�&lt;�/|���l@AH)&gt;������B&gt;�`:x�������y�8�Q�q�!(��W�rR3�~�'@��� \
�v�����1(�mS��Q3U��F�&lt;��h��%�l��'Rs�0��;���������~i�T��+:�s��VI�l�T�?�Mg��� \
:��|O��@$N�HzC  J���`�#�:
�3��[M��q�7���1e�s��vN�wQY���vp`�Z�}�dR���w����Q�=d���d����������:��A�_�!%�U���R�M���1�HM��L&gt;�r��j��46IX�"��AGq#�S=�F�������G&gt;��`�[��g�����
  0r�) �0:e])���'�8�B� 4��Y��Xq����.a�)^�e ����J�#�����f�{ \
��������u�������MMF�������~	��^|�y���&amp;����x \
R���w�3w�	��Az������.�X���x�)Ve�����������r?���sP������3���r� I���un;  \
@~�}A1���t-�j���pG��f5��cJ��j�Q���C[z*%8I�%(� ����? �_�����:�w��@.�- \
4�Y`Rp`�l���C�p��U�����r�pk+����t�h��3 \
B:#X�U�bR7)�7����'��9��1���E�Dx�D1`�0�7�m�fn��ve���/��6&lt;#��J�:��@��Zg��`]B \
R48%��y��+���e�2���&lt;=�&amp;�+��$���&gt;���wGL���������Ic#G�&amp;B\��!&lt;��M3A|��mk��������



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080820133410</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 13:34:10-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 15:24:42 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; &gt; &gt; anyway.
&gt; &gt; &gt; 
&gt; &gt; &gt; I really don't see any calls to suspend() and I am missing the
&gt; &gt; &gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.
&gt; &gt; 
&gt; &gt; Odd. Send /proc/config.gz please.
&gt; 
&gt; there you go. It is a nice Quad G5 machine.

That should work. Did you perhaps forget to remake your initrd?

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820133935</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 13:39:35-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; &gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; &gt; &gt; &gt; anyway.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; I really don't see any calls to suspend() and I am missing the
&gt; &gt; &gt; &gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.
&gt; &gt; &gt; 
&gt; &gt; &gt; Odd. Send /proc/config.gz please.
&gt; &gt; 
&gt; &gt; there you go. It is a nice Quad G5 machine.
&gt; 
&gt; That should work. Did you perhaps forget to remake your initrd?

no initrd on this system.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820140056</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 14:00:56-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 15:39:35 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; &gt; &gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; &gt; &gt; &gt; &gt; anyway.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; I really don't see any calls to suspend() and I am missing the
&gt; &gt; &gt; &gt; &gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Odd. Send /proc/config.gz please.
&gt; &gt; &gt; 
&gt; &gt; &gt; there you go. It is a nice Quad G5 machine.
&gt; &gt; 
&gt; &gt; That should work. Did you perhaps forget to remake your initrd?
&gt; 
&gt; no initrd on this system.

It should work. Are you perhaps looking at the interface level as opposed
to the device level?

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820152514</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 15:25:14-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; And you'll see power events in syslog only if you compile with
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; CONFIG_USB_DEBUG
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; missing some configuration option?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; Probably CONFIG_USB_SUSPEND
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; that one is on of course. Do you think it makes a difference that it is
&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; PowerPC system I am testing this with?
&gt; &gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; &gt; If it does make a difference, that's a bug. Runtime PM should work
&gt; &gt; &gt; &gt; &gt; &gt; &gt; anyway.
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; I really don't see any calls to suspend() and I am missing the
&gt; &gt; &gt; &gt; &gt; &gt; power/level option. This is the latest 2.6.27-rc3-git tree from Linus.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Odd. Send /proc/config.gz please.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; there you go. It is a nice Quad G5 machine.
&gt; &gt; &gt; 
&gt; &gt; &gt; That should work. Did you perhaps forget to remake your initrd?
&gt; &gt; 
&gt; &gt; no initrd on this system.
&gt; 
&gt; It should work. Are you perhaps looking at the interface level as opposed
&gt; to the device level?

finally I found the device and setting it to auto makes it actually
suspend. Why is this not default? The driver has to enable it anyway.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820153312</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 15:33:12-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 17:25:14 schrieb Marcel Holtmann:

Hi,

&gt; finally I found the device and setting it to auto makes it actually
&gt; suspend. Why is this not default? The driver has to enable it anyway.

for too many class drivers some devices survive suspension and others crash.
We don't want the lists of such devices in kernel space.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820153520</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-20 15:35:20-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

On Wed, 20 Aug 2008, Marcel Holtmann wrote:

&gt; finally I found the device and setting it to auto makes it actually
&gt; suspend. Why is this not default? The driver has to enable it anyway.

If there's no driver then it would take effect right away.  This causes 
problems for devices during startup -- the period of time from device 
discovery to driver binding is long enough (because there's so much 
other activity during bootup) that the device can autosuspend before 
the driver is there to prevent it.

For well-behaved devices this wouldn't matter.  But unfortunately there 
are lots of devices which break when they suspend.  That's why 
level = auto is not the default.

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820154148</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 15:41:48-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Alan,

&gt; &gt; finally I found the device and setting it to auto makes it actually
&gt; &gt; suspend. Why is this not default? The driver has to enable it anyway.
&gt; 
&gt; If there's no driver then it would take effect right away.  This causes 
&gt; problems for devices during startup -- the period of time from device 
&gt; discovery to driver binding is long enough (because there's so much 
&gt; other activity during bootup) that the device can autosuspend before 
&gt; the driver is there to prevent it.
&gt; 
&gt; For well-behaved devices this wouldn't matter.  But unfortunately there 
&gt; are lots of devices which break when they suspend.  That's why 
&gt; level = auto is not the default.

is there any way to make it default if we know it works all the time?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820094252</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 09:42:52-0400</timestampReceived><subject>[rfc/rft]power management for btusb</subject><body>

Hi,

this implements very simple power management for btusb.
Comments?

	Regards
		Oliver

---

--- linux-2.6.27-rc3/drivers/bluetooth/btusb.c.alt2	2008-08-20 09:46:20.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-20 10:59:08.000000000 +0200
@@ -228,7 +228,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -241,13 +241,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -263,7 +263,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -312,7 +312,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -325,13 +325,13 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -346,7 +346,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -509,21 +509,32 @@ static int btusb_open(struct hci_dev *hd
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	err = usb_autopm_get_interface(data-&gt;acl);
+	if (err &lt; 0)
+		return err;
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_ATOMIC);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+		usb_autopm_put_interface(data-&gt;acl);
 	}
 
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -536,13 +547,10 @@ static int btusb_close(struct hci_dev *h
 	flush_work(&amp;data-&gt;work);
 
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
+	usb_autopm_put_interface(data-&gt;acl);
 
 	return 0;
 }
@@ -677,10 +685,10 @@ static void btusb_notify(struct hci_dev
 
 	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
 		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
 				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 			else
-				btusb_submit_bulk_urb(hdev);
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
 		}
 	} else {
 		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
@@ -944,11 +952,67 @@ static void btusb_disconnect(struct usb_
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	if (!data-&gt;isoc)
+		return 0;
+
+	if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+	}
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
+	.supports_autosuspend = 1,
 };
 
 static int __init btusb_init(void)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820101804</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 10:18:04-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; this implements very simple power management for btusb.
&gt; Comments?

looks a little but too much.

What are the semantics for usb_autopm_{get,put}_interface? Can we expect
to always get a suspend() and resume() callback?

So in open(), do we have to actually start the interrupt URB or can we
just wait for resume() to be happening?

I don't wanna misuse the *_RUNNING bits. They are only there to make
sure that we non re-submit the URBs.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820120519</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 12:05:19-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 12:18:04 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; this implements very simple power management for btusb.
&gt; &gt; Comments?
&gt; 
&gt; looks a little but too much.

How so?

&gt; What are the semantics for usb_autopm_{get,put}_interface? Can we expect
&gt; to always get a suspend() and resume() callback?

usb_autopm_get_interface() guarantees that after it returns successsfully
the interface (and teh device with it) remains unautosuspended until you
call usb_autopm_put_interface. The calls stack with a counter.

You'll get a resume() callback only if the device was actually suspended.

&gt; So in open(), do we have to actually start the interrupt URB or can we
&gt; just wait for resume() to be happening?

We have to start the URB.

&gt; I don't wanna misuse the *_RUNNING bits. They are only there to make
&gt; sure that we non re-submit the URBs.

Do you suggest making a copy of these bits at suspend() time?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820123443</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 12:34:43-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; What are the semantics for usb_autopm_{get,put}_interface? Can we expect
&gt; &gt; to always get a suspend() and resume() callback?
&gt; 
&gt; usb_autopm_get_interface() guarantees that after it returns successsfully
&gt; the interface (and teh device with it) remains unautosuspended until you
&gt; call usb_autopm_put_interface. The calls stack with a counter.
&gt; 
&gt; You'll get a resume() callback only if the device was actually suspended.

so a device didn't start out suspended? Too bad, otherwise you could cut
the logic in the driver a lot.

I tried to run this on my Quad G5, but I never see suspend() or resume()
called. Do I have to do something to make autosuspend work?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820124207</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-20 12:42:07-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Am Mittwoch 20 August 2008 14:34:43 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; What are the semantics for usb_autopm_{get,put}_interface? Can we expect
&gt; &gt; &gt; to always get a suspend() and resume() callback?
&gt; &gt; 
&gt; &gt; usb_autopm_get_interface() guarantees that after it returns successsfully
&gt; &gt; the interface (and teh device with it) remains unautosuspended until you
&gt; &gt; call usb_autopm_put_interface. The calls stack with a counter.
&gt; &gt; 
&gt; &gt; You'll get a resume() callback only if the device was actually suspended.
&gt; 
&gt; so a device didn't start out suspended? Too bad, otherwise you could cut
&gt; the logic in the driver a lot.

Devices can have multiple interfaces. Therefore this guarantee is impossible.
 
&gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; called. Do I have to do something to make autosuspend work?

echo "auto" &gt; $(directry in sysfs for device)/power/level
And you'll see power events in syslog only if you compile with
CONFIG_USB_DEBUG

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820130050</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-20 13:00:50-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

Hi Oliver,

&gt; &gt; I tried to run this on my Quad G5, but I never see suspend() or resume()
&gt; &gt; called. Do I have to do something to make autosuspend work?
&gt; 
&gt; echo "auto" &gt; $(directry in sysfs for device)/power/level
&gt; And you'll see power events in syslog only if you compile with
&gt; CONFIG_USB_DEBUG

I only seem to see power/wakeup entries. I don't have power/level. Am I
missing some configuration option?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820130358</emailId><senderName>Felipe Balbi</senderName><senderEmail>felipe.balbi@nokia.com</senderEmail><timestampReceived>2008-08-20 13:03:58-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

On Wed, Aug 20, 2008 at 03:00:50PM +0200, ext Marcel Holtmann wrote:
&gt; I only seem to see power/wakeup entries. I don't have power/level. Am I
&gt; missing some configuration option?

CONFIG_USB_SUSPEND

-- 
balbi
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080805111521</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-05 11:15:21-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 04 August 2008 22:24:08 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt;&gt;&gt; Then why do you implement this option for hci_usb?
&gt; &gt; &gt; &gt;&gt;&gt; And why can the other IGNORE options be overridden?
&gt; &gt; &gt; &gt;&gt;
&gt; &gt; &gt; &gt;&gt; if I wanna use the generic Bluetooth descriptor for matching, I  
&gt; &gt; &gt; &gt;&gt; need a
&gt; &gt; &gt; &gt;&gt; way to mark broken devices as to be ignored. Otherwise I would have a
&gt; &gt; &gt; &gt;&gt; really long list of matching vendor and product ids.
&gt; &gt; &gt; &gt;
&gt; &gt; &gt; &gt; True, but if btusb is to replace hci_usb, the module options should  
&gt; &gt; &gt; &gt; match.
&gt; &gt; &gt; &gt; So will you remove that option in hci_usb?
&gt; &gt; &gt; 
&gt; &gt; &gt; the override_ignore is your invention. So what do you mean?
&gt; &gt; 
&gt; &gt; Hm, I may be smoking strange kernels, but I copied this as far as I can tell
&gt; &gt; from 2.6.25 hci_usb and merely renamed it because "ignore" seemed too
&gt; &gt; generic to me. Could you check we are talking about the same parameter?
&gt; 
&gt; the generic ignore parameter can be removed. There is no other way to
&gt; deal with Bluetooth in Linux and we can use other ways to unattach a
&gt; driver from a device.

Exactly. Therefore I wonder whether this in vanilla hci_usb is not a mistake:

	if (ignore || id-&gt;driver_info &amp; HCI_IGNORE)
		return -ENODEV;

	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
		return -ENODEV;

	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
		return -ENODEV;

And should be (ignore &amp;&amp; id-&gt;driver_info &amp; HCI_IGNORE) or
negatively formulated (!ignore &amp;&amp; id-&gt;driver_info &amp; HCI_IGNORE)
so that the blacklist is used by default.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080808211430</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-08 21:14:30-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; is actually used, but the timeouts seem to be too long to do the obvious.

the module parameter and blacklist/quirks stuff has been merged upstream
with Linus now. Feel free to update your SCO support patch and then lets
get this merged.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080812205345</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-12 20:53:45-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Freitag 08 August 2008 23:14:30 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; 
&gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; get this merged.

Still testing. I am new to bluetooth so getting a sound testing environment
up takes a bit of time. I am getting iso urbs to complete now.

	Regards
		Oliver
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080812213658</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-12 21:36:58-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; 
&gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; get this merged.
&gt; 
&gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; up takes a bit of time. I am getting iso urbs to complete now.

I think using scotest would be fine in the beginning. It will of course
not send proper audio, but you see data going forth and back.

Also post patches around and I can see if I can test them here on my
side.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080813151639</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-13 15:16:39-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Dienstag 12 August 2008 23:36:58 schrieb Marcel Holtmann:
&gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; 
&gt; I think using scotest would be fine in the beginning. It will of course
&gt; not send proper audio, but you see data going forth and back.

Compiling scotest is the problem:

make[3]: Entering directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd   -I/usr/include/dbus-1.0 \
-I/usr/lib64/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   \
-I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   -I../gdbus \
-DPLUGINDIR=\""/usr/local/lib/bluetooth/plugins"\" -Wall -O2 -D_FORTIFY_SOURCE=2 \
                -fPIE -MT security.o -MD -MP -MF .deps/security.Tpo -c -o security.o \
                security.c
security.c: In function ‘link_key_request':
security.c:279: error: storage size of ‘req' isn't known
security.c:291: error: ‘HCIGETAUTHINFO' undeclared (first use in this function)
security.c:291: error: (Each undeclared identifier is reported only once
security.c:291: error: for each function it appears in.)
security.c:279: warning: unused variable ‘req'
make[3]: *** [security.o] Fehler 1
make[3]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
make[2]: *** [all] Fehler 2
make[2]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
make[1]: *** [all-recursive] Fehler 1
make[1]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36'
make: *** [all] Fehler 2

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080813182301</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-13 18:23:01-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; &gt; 
&gt; &gt; I think using scotest would be fine in the beginning. It will of course
&gt; &gt; not send proper audio, but you see data going forth and back.
&gt; 
&gt; Compiling scotest is the problem:
&gt; 
&gt; make[3]: Entering directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
&gt; gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd   -I/usr/include/dbus-1.0 \
&gt; -I/usr/lib64/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include \
&gt; -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   -I../gdbus \
&gt; -DPLUGINDIR=\""/usr/local/lib/bluetooth/plugins"\" -Wall -O2 -D_FORTIFY_SOURCE=2 \
&gt;                 -fPIE -MT security.o -MD -MP -MF .deps/security.Tpo -c -o \
&gt;                 security.o security.c
&gt; security.c: In function ‘link_key_request':
&gt; security.c:279: error: storage size of ‘req' isn't known
&gt; security.c:291: error: ‘HCIGETAUTHINFO' undeclared (first use in this function)
&gt; security.c:291: error: (Each undeclared identifier is reported only once
&gt; security.c:291: error: for each function it appears in.)
&gt; security.c:279: warning: unused variable ‘req'
&gt; make[3]: *** [security.o] Fehler 1
&gt; make[3]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
&gt; make[2]: *** [all] Fehler 2
&gt; make[2]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36/hcid'
&gt; make[1]: *** [all-recursive] Fehler 1
&gt; make[1]: Leaving directory `/home/oliver/Documents/bluez-utils-3.36'
&gt; make: *** [all] Fehler 2

check your ChangeLog file. It says you need a matching or newer
bluez-libs to get it compiled.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080818101349</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 10:13:49-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; 
&gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; get this merged.
&gt; 
&gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; up takes a bit of time. I am getting iso urbs to complete now.

I hacked up a version that does work fine for me and has been tested on
my Quad G5. The attached applies on top of 2.6.27-rc3.

The alternate settings are still fixed to selecting #2, however the
change to always select the appropriate one would be simple. We only
need to calculate the right value. The killing and re-submitting URB
code is already present.

Regards

Marcel


["patch-btusb-sco-support" (patch-btusb-sco-support)]

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 95ae9ba..47ddbd8 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -41,7 +41,7 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.2"
+#define VERSION "0.3"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -160,12 +160,16 @@ static struct usb_device_id blacklist_table[] = {
 	{ }	/* Terminating entry */
 };
 
+#define BTUSB_MAX_ISOC_FRAMES	10
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
+#define BTUSB_ISOC_RUNNING	2
 
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *isoc;
 
 	spinlock_t lock;
 
@@ -176,10 +180,15 @@ struct btusb_data {
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
+	struct usb_anchor isoc_anchor;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
 	struct usb_endpoint_descriptor *bulk_rx_ep;
+	struct usb_endpoint_descriptor *isoc_tx_ep;
+	struct usb_endpoint_descriptor *isoc_rx_ep;
+
+	int isoc_altsetting;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -195,6 +204,8 @@ static void btusb_intr_complete(struct urb *urb)
 		return;
 
 	if (urb-&gt;status == 0) {
+		hdev-&gt;stat.byte_rx += urb-&gt;actual_length;
+
 		if (hci_recv_fragment(hdev, HCI_EVENT_PKT,
 						urb-&gt;transfer_buffer,
 						urb-&gt;actual_length) &lt; 0) {
@@ -216,7 +227,7 @@ static void btusb_intr_complete(struct urb *urb)
 	}
 }
 
-static inline int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -226,6 +237,9 @@ static inline int btusb_submit_intr_urb(struct hci_dev *hdev)
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	if (!data-&gt;intr_ep)
+		return -ENODEV;
+
 	urb = usb_alloc_urb(0, GFP_ATOMIC);
 	if (!urb)
 		return -ENOMEM;
@@ -274,6 +288,8 @@ static void btusb_bulk_complete(struct urb *urb)
 		return;
 
 	if (urb-&gt;status == 0) {
+		hdev-&gt;stat.byte_rx += urb-&gt;actual_length;
+
 		if (hci_recv_fragment(hdev, HCI_ACLDATA_PKT,
 						urb-&gt;transfer_buffer,
 						urb-&gt;actual_length) &lt; 0) {
@@ -295,7 +311,7 @@ static void btusb_bulk_complete(struct urb *urb)
 	}
 }
 
-static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -305,6 +321,9 @@ static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	if (!data-&gt;bulk_rx_ep)
+		return -ENODEV;
+
 	urb = usb_alloc_urb(0, GFP_KERNEL);
 	if (!urb)
 		return -ENOMEM;
@@ -339,6 +358,127 @@ static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
 	return err;
 }
 
+static void btusb_isoc_complete(struct urb *urb)
+{
+	struct hci_dev *hdev = urb-&gt;context;
+	struct btusb_data *data = hdev-&gt;driver_data;
+	int i, err;
+
+	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
+					urb, urb-&gt;status, urb-&gt;actual_length);
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		return;
+
+	if (urb-&gt;status == 0) {
+		for (i = 0; i &lt; urb-&gt;number_of_packets; i++) {
+			unsigned int offset = urb-&gt;iso_frame_desc[i].offset;
+			unsigned int length = urb-&gt;iso_frame_desc[i].actual_length;
+
+			if (urb-&gt;iso_frame_desc[i].status)
+				continue;
+
+			hdev-&gt;stat.byte_rx += length;
+
+			if (hci_recv_fragment(hdev, HCI_SCODATA_PKT,
+						urb-&gt;transfer_buffer + offset,
+								length) &lt; 0) {
+				BT_ERR("%s corrupted SCO packet", hdev-&gt;name);
+				hdev-&gt;stat.err_rx++;
+			}
+		}
+	}
+
+	if (!test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags))
+		return;
+
+	usb_anchor_urb(urb, &amp;data-&gt;isoc_anchor);
+
+	err = usb_submit_urb(urb, GFP_ATOMIC);
+	if (err &lt; 0) {
+		BT_ERR("%s urb %p failed to resubmit (%d)",
+						hdev-&gt;name, urb, -err);
+		usb_unanchor_urb(urb);
+	}
+}
+
+static void inline __fill_isoc_descriptor(struct urb *urb, int len, int mtu)
+{
+	int i, offset = 0;
+
+	BT_DBG("len %d mtu %d", len, mtu);
+
+	for (i = 0; i &lt; BTUSB_MAX_ISOC_FRAMES &amp;&amp; len &gt;= mtu;
+					i++, offset += mtu, len -= mtu) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = mtu;
+	}
+
+	if (len &amp;&amp; i &lt; BTUSB_MAX_ISOC_FRAMES) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = len;
+		i++;
+	}
+
+	urb-&gt;number_of_packets = i;
+}
+
+static int btusb_submit_isoc_urb(struct hci_dev *hdev)
+{
+	struct btusb_data *data = hdev-&gt;driver_data;
+	struct urb *urb;
+	unsigned char *buf;
+	unsigned int pipe;
+	int err, size;
+
+	BT_DBG("%s", hdev-&gt;name);
+
+	if (!data-&gt;isoc_rx_ep)
+		return -ENODEV;
+
+	urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, GFP_KERNEL);
+	if (!urb)
+		return -ENOMEM;
+
+	size = le16_to_cpu(data-&gt;isoc_rx_ep-&gt;wMaxPacketSize) *
+						BTUSB_MAX_ISOC_FRAMES;
+
+	buf = kmalloc(size, GFP_KERNEL);
+	if (!buf) {
+		usb_free_urb(urb);
+		return -ENOMEM;
+	}
+
+	pipe = usb_rcvisocpipe(data-&gt;udev, data-&gt;isoc_rx_ep-&gt;bEndpointAddress);
+
+	urb-&gt;dev      = data-&gt;udev;
+	urb-&gt;pipe     = pipe;
+	urb-&gt;context  = hdev;
+	urb-&gt;complete = btusb_isoc_complete;
+	urb-&gt;interval = data-&gt;isoc_rx_ep-&gt;bInterval;
+
+	urb-&gt;transfer_flags  = URB_FREE_BUFFER | URB_ISO_ASAP;
+	urb-&gt;transfer_buffer = buf;
+	urb-&gt;transfer_buffer_length = size;
+
+	__fill_isoc_descriptor(urb, size,
+			le16_to_cpu(data-&gt;isoc_rx_ep-&gt;wMaxPacketSize));
+
+	usb_anchor_urb(urb, &amp;data-&gt;isoc_anchor);
+
+	err = usb_submit_urb(urb, GFP_KERNEL);
+	if (err &lt; 0) {
+		BT_ERR("%s urb %p submission failed (%d)",
+						hdev-&gt;name, urb, -err);
+		usb_unanchor_urb(urb);
+		kfree(buf);
+	}
+
+	usb_free_urb(urb);
+
+	return err;
+}
+
 static void btusb_tx_complete(struct urb *urb)
 {
 	struct sk_buff *skb = urb-&gt;context;
@@ -392,6 +532,9 @@ static int btusb_close(struct hci_dev *hdev)
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
 
@@ -453,7 +596,10 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_ACLDATA_PKT:
-		urb = usb_alloc_urb(0, GFP_ATOMIC);
+		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
+			return -ENODEV;
+
+		urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
 
@@ -467,9 +613,31 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_SCODATA_PKT:
+		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
+			return -ENODEV;
+
+		urb = usb_alloc_urb(10, GFP_ATOMIC);
+		if (!urb)
+			return -ENOMEM;
+
+		pipe = usb_sndisocpipe(data-&gt;udev,
+					data-&gt;isoc_tx_ep-&gt;bEndpointAddress);
+
+		urb-&gt;dev      = data-&gt;udev;
+		urb-&gt;pipe     = pipe;
+		urb-&gt;context  = skb;
+		urb-&gt;complete = btusb_tx_complete;
+		urb-&gt;interval = data-&gt;isoc_tx_ep-&gt;bInterval;
+
+		urb-&gt;transfer_flags  = URB_ISO_ASAP;
+		urb-&gt;transfer_buffer = skb-&gt;data;
+		urb-&gt;transfer_buffer_length = skb-&gt;len;
+
+		__fill_isoc_descriptor(urb, skb-&gt;len,
+				le16_to_cpu(data-&gt;isoc_tx_ep-&gt;wMaxPacketSize));
+
 		hdev-&gt;stat.sco_tx++;
-		kfree_skb(skb);
-		return 0;
+		break;
 
 	default:
 		return -EILSEQ;
@@ -508,22 +676,86 @@ static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
 		schedule_work(&amp;data-&gt;work);
 }
 
+static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
+{
+	struct btusb_data *data = hdev-&gt;driver_data;
+	struct usb_interface *intf = data-&gt;isoc;
+	struct usb_endpoint_descriptor *ep_desc;
+	int i, err;
+
+	if (!data-&gt;isoc)
+		return -ENODEV;
+
+	err = usb_set_interface(data-&gt;udev, 1, altsetting);
+	if (err &lt; 0) {
+		BT_ERR("%s setting interface failed (%d)", hdev-&gt;name, -err);
+		return err;
+	}
+
+	data-&gt;isoc_altsetting = altsetting;
+
+	data-&gt;isoc_tx_ep = NULL;
+	data-&gt;isoc_rx_ep = NULL;
+
+	for (i = 0; i &lt; intf-&gt;cur_altsetting-&gt;desc.bNumEndpoints; i++) {
+		ep_desc = &amp;intf-&gt;cur_altsetting-&gt;endpoint[i].desc;
+
+		if (!data-&gt;isoc_tx_ep &amp;&amp; usb_endpoint_is_isoc_out(ep_desc)) {
+			data-&gt;isoc_tx_ep = ep_desc;
+			continue;
+		}
+
+		if (!data-&gt;isoc_rx_ep &amp;&amp; usb_endpoint_is_isoc_in(ep_desc)) {
+			data-&gt;isoc_rx_ep = ep_desc;
+			continue;
+		}
+	}
+
+	if (!data-&gt;isoc_tx_ep || !data-&gt;isoc_rx_ep) {
+		BT_ERR("%s invalid SCO descriptors", hdev-&gt;name);
+		return -ENODEV;
+	}
+
+	return 0;
+}
+
 static void btusb_work(struct work_struct *work)
 {
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num == 0) {
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev);
+		}
+	} else {
 		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-		return;
 	}
 
-	if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-		if (btusb_submit_bulk_urb(hdev) &lt; 0)
-			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		else
-			btusb_submit_bulk_urb(hdev);
+	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (data-&gt;isoc_altsetting != 2) {
+			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+
+			if (__set_isoc_interface(hdev, 2) &lt; 0)
+				return;
+		}
+
+		if (!test_and_set_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_isoc_urb(hdev) &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	} else {
+		clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+
+		__set_isoc_interface(hdev, 0);
 	}
 }
 
@@ -597,6 +829,7 @@ static int btusb_probe(struct usb_interface *intf,
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
+	init_usb_anchor(&amp;data-&gt;isoc_anchor);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -620,6 +853,9 @@ static int btusb_probe(struct usb_interface *intf,
 
 	hdev-&gt;owner = THIS_MODULE;
 
+	/* interface numbers are hardcoded in the spec */
+	data-&gt;isoc = usb_ifnum_to_if(data-&gt;udev, 1);
+
 	if (reset || id-&gt;driver_info &amp; BTUSB_RESET)
 		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
 
@@ -628,11 +864,16 @@ static int btusb_probe(struct usb_interface *intf,
 			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
 	}
 
+	if (id-&gt;driver_info &amp; BTUSB_BROKEN_ISOC)
+		data-&gt;isoc = NULL;
+
 	if (id-&gt;driver_info &amp; BTUSB_SNIFFER) {
-		struct usb_device *udev = interface_to_usbdev(intf);
+		struct usb_device *udev = data-&gt;udev;
 
 		if (le16_to_cpu(udev-&gt;descriptor.bcdDevice) &gt; 0x997)
 			set_bit(HCI_QUIRK_RAW_DEVICE, &amp;hdev-&gt;quirks);
+
+		data-&gt;isoc = NULL;
 	}
 
 	if (id-&gt;driver_info &amp; BTUSB_BCM92035) {
@@ -646,6 +887,16 @@ static int btusb_probe(struct usb_interface *intf,
 		}
 	}
 
+	if (data-&gt;isoc) {
+		err = usb_driver_claim_interface(&amp;btusb_driver,
+							data-&gt;isoc, NULL);
+		if (err &lt; 0) {
+			hci_free_dev(hdev);
+			kfree(data);
+			return err;
+		}
+	}
+
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
 		hci_free_dev(hdev);
@@ -670,6 +921,9 @@ static void btusb_disconnect(struct usb_interface *intf)
 
 	hdev = data-&gt;hdev;
 
+	if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
 	usb_set_intfdata(intf, NULL);
 
 	hci_unregister_dev(hdev);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080818125727</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 12:57:27-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 12:13:49 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; &gt; 
&gt; &gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; &gt; get this merged.
&gt; &gt; 
&gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; 
&gt; I hacked up a version that does work fine for me and has been tested on
&gt; my Quad G5. The attached applies on top of 2.6.27-rc3.
&gt; 
&gt; The alternate settings are still fixed to selecting #2, however the
&gt; change to always select the appropriate one would be simple. We only
&gt; need to calculate the right value. The killing and re-submitting URB
&gt; code is already present.

This approach has a principal race condition. You have no idea when
the work queue will be run. Thus you can lose the first SCO packages.

Secondly, what happens when this next event comes so quickly that
the work is still scheduled or running? it seems to me that the work handler
can read stale conn_hash values.

Thirdly, close() needs to be able to deal with the work still scheduled.
You need to flush workqueues there.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818133819</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 13:38:19-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; &gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; &gt; &gt; get this merged.
&gt; &gt; &gt; 
&gt; &gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; &gt; 
&gt; &gt; I hacked up a version that does work fine for me and has been tested on
&gt; &gt; my Quad G5. The attached applies on top of 2.6.27-rc3.
&gt; &gt; 
&gt; &gt; The alternate settings are still fixed to selecting #2, however the
&gt; &gt; change to always select the appropriate one would be simple. We only
&gt; &gt; need to calculate the right value. The killing and re-submitting URB
&gt; &gt; code is already present.
&gt; 
&gt; This approach has a principal race condition. You have no idea when
&gt; the work queue will be run. Thus you can lose the first SCO packages.

I am open for suggestions, but I don't see any other way to get support
for this. We can't keep the isoc URBs running all the time, because that
consumes power.

On the other hand, this is audio and I don't really care if we loose a
packet or not.

&gt; Secondly, what happens when this next event comes so quickly that
&gt; the work is still scheduled or running? it seems to me that the work handler
&gt; can read stale conn_hash values.

I don't see that happening since Bluetooth connection setup is
serialized and we only have to make sure that bulk and isoc URBs are
running when the connection is up.

&gt; Thirdly, close() needs to be able to deal with the work still scheduled.
&gt; You need to flush workqueues there.

Good point. I am going to fix that.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080801103236</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-01 10:32:36-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Donnerstag 31 Juli 2008 16:03:13 schrieb Marcel Holtmann:
&gt; Also the HCI_RESET thing needs to be turn-around. We always do  
&gt; HCI_RESET except for some chips where it will break (old CSR ones for  
&gt; example).

OK, I am making a separate patch. I've looked at 2.6.26-mh. It seems
to do the reset only for quirky devices. Is the reversal just planned or am
I looking at the wrong trees?

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080801115716</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-01 11:57:16-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Donnerstag 31 Juli 2008 16:03:13 schrieb Marcel Holtmann:
&gt; Both table updates should be a separate patch and we can even submit  
&gt; that for 2.6.27 inclusion. I was just to lazy to do that, but I have  
&gt; it on my todo list, but the Simple Pairing support had higher priority.

This patch implements the quirks from hci_usb in btusb, too.

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver

---

--- linux-2.6.22/drivers/bluetooth/btusb.c	2008-08-01 10:53:38.000000000 +0200
+++ linux-2.6.26/drivers/bluetooth/btusb.c	2008-08-01 13:47:54.000000000 +0200
@@ -41,21 +41,108 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.1"
+#define VERSION "0.3"
+
+#define HCI_IGNORE		0x01
+#define HCI_RESET		0x02
+#define HCI_DIGIANSWER		0x04
+#define HCI_CSR			0x08
+#define HCI_SNIFFER		0x10
+#define HCI_BCM92035		0x20
+#define HCI_BROKEN_ISOC		0x40
+#define HCI_WRONG_SCO_MTU	0x80
 
 static struct usb_device_id btusb_table[] = {
 	/* Generic Bluetooth USB device */
 	{ USB_DEVICE_INFO(0xe0, 0x01, 0x01) },
 
+	/* AVM BlueFRITZ! USB v2.0 */
+	{ USB_DEVICE(0x057c, 0x3800) },
+
+	/* Bluetooth Ultraport Module from IBM */
+	{ USB_DEVICE(0x04bf, 0x030a) },
+
+	/* ALPS Modules with non-standard id */
+	{ USB_DEVICE(0x044e, 0x3001) },
+	{ USB_DEVICE(0x044e, 0x3002) },
+
+	/* Ericsson with non-standard id */
+	{ USB_DEVICE(0x0bdb, 0x1002) },
+
+	/* Canyon CN-BTU1 with HID interfaces */
+	{ USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },
+
 	{ }	/* Terminating entry */
 };
 
 MODULE_DEVICE_TABLE(usb, btusb_table);
 
 static struct usb_device_id blacklist_table[] = {
+	/* CSR BlueCore devices */
+	{ USB_DEVICE(0x0a12, 0x0001), .driver_info = HCI_CSR },
+
+	/* Broadcom BCM2033 without firmware */
+	{ USB_DEVICE(0x0a5c, 0x2033), .driver_info = HCI_IGNORE },
+
+	/* Broadcom BCM2035 */
+	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Broadcom BCM2045 */
+	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2101), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* IBM/Lenovo ThinkPad with Broadcom chip */
+	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Targus ACB10US */
+	{ USB_DEVICE(0x0a5c, 0x2100), .driver_info = HCI_RESET },
+
+	/* ANYCOM Bluetooth USB-200 and USB-250 */
+	{ USB_DEVICE(0x0a5c, 0x2111), .driver_info = HCI_RESET },
+
+	/* HP laptop with Broadcom chip */
+	{ USB_DEVICE(0x03f0, 0x171d), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Dell laptop with Broadcom chip */
+	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
+	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
+
+	/* Kensington Bluetooth USB adapter */
+	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
+	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* ISSC Bluetooth Adapter v3.1 */
+	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
+
+	/* RTX Telecom based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
+	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
+
+	/* CONWISE Technology based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
+
+	/* Belkin F8T012 and F8T013 devices */
+	{ USB_DEVICE(0x050d, 0x0012), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x050d, 0x0013), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Digianswer devices */
+	{ USB_DEVICE(0x08fd, 0x0001), .driver_info = HCI_DIGIANSWER },
+	{ USB_DEVICE(0x08fd, 0x0002), .driver_info = HCI_IGNORE },
+
+	/* CSR BlueCore Bluetooth Sniffer */
+	{ USB_DEVICE(0x0a12, 0x0002), .driver_info = HCI_SNIFFER },
+
+	/* Frontline ComProbe Bluetooth Sniffer */
+	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = HCI_SNIFFER },
 	{ }	/* Terminating entry */
 };
 
+static struct usb_driver btusb_driver;
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 
@@ -78,6 +165,16 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *bulk_rx_ep;
 };
 
+static int ignore_dga;
+static int ignore_csr;
+static int ignore_sniffer;
+static int disable_scofix;
+#ifdef CONFIG_BT_HCIUSB_SCO
+static int force_scofix;
+#endif
+static int reset;
+static int override_ignore;
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -433,6 +530,7 @@ static int btusb_probe(struct usb_interf
 
 	BT_DBG("intf %p id %p", intf, id);
 
+	/* interface numbers are hardcoded in the spec */
 	if (intf-&gt;cur_altsetting-&gt;desc.bInterfaceNumber != 0)
 		return -ENODEV;
 
@@ -443,6 +541,15 @@ static int btusb_probe(struct usb_interf
 			id = match;
 	}
 
+	if (id-&gt;driver_info == HCI_IGNORE &amp;&amp; !override_ignore)
+		return -ENODEV;
+	if (ignore_sniffer &amp;&amp; id-&gt;driver_info &amp; HCI_SNIFFER)
+		return -ENODEV;
+	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
+		return -ENODEV;
+	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
+		return -ENODEV;
+
 	data = kzalloc(sizeof(*data), GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
@@ -503,7 +610,15 @@ static int btusb_probe(struct usb_interf
 
 	hdev-&gt;owner = THIS_MODULE;
 
-	set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+	if (reset || id-&gt;driver_info &amp; HCI_RESET)
+		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+	if (force_scofix || id-&gt;driver_info &amp; HCI_WRONG_SCO_MTU) {
+		if (!disable_scofix)
+			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
+	}
+#endif
 
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
@@ -558,6 +673,29 @@ static void __exit btusb_exit(void)
 module_init(btusb_init);
 module_exit(btusb_exit);
 
+module_param(reset, bool, 0644);
+MODULE_PARM_DESC(reset, "Skip HCI reset command on initialization");
+
+#ifdef CONFIG_BT_HCIUSB_SCO
+module_param(force_scofix, bool, 0644);
+MODULE_PARM_DESC(force_scofix, "Force fixup of wrong SCO buffers size");
+#endif
+
+module_param(disable_scofix, bool, 0644);
+MODULE_PARM_DESC(disable_scofix, "Disable fixup of wrong SCO buffer size");
+
+module_param(ignore_csr, bool, 0644);
+MODULE_PARM_DESC(ignore_csr, "Ignore devices with id 0a12:0001");
+
+module_param(ignore_sniffer, bool, 0644);
+MODULE_PARM_DESC(ignore_sniffer, "Ignore devices with id 0a12:0002");
+
+module_param(ignore_dga, bool, 0644);
+MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
+
+module_param(override_ignore, bool, 0644);
+MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
+
 MODULE_AUTHOR("Marcel Holtmann &lt;marcel@holtmann.org&gt;");
 MODULE_DESCRIPTION("Generic Bluetooth USB driver ver " VERSION);
 MODULE_VERSION(VERSION);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080801174226</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-01 17:42:26-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; yeah, I was afraid of that switching the alternate settings is not as  
&gt; &gt; easy as the spec. might think. Personally I think it is a broken  
&gt; &gt; specification anyway. So the best assumption is that we have one SCO  
&gt; &gt; connection and that is either 8-bit or 16-bit. So we do the switching  
&gt; &gt; when we get the notify() callback for a changed voice setting.
&gt; 
&gt; That's problematic because in the notify() callback you cannot sleep,
&gt; can you? In addition, a device is legally allowed to take a lot of time
&gt; to switch altsettings.

that was not my point. My point was to switch between first or second
alternate setting when you get the notify() callback for a changed voice
setting. Check with the "hciconfig hci0 voice 0x0040" command.

We have to do it in a work queue and that is fine, but then when we get
a connection add notify(), then we only have to start the SCO URBs. This
leaves the only broken case where we have to switch the alternate
setting, because the second SCO channel got established.

Question is if selecting the 2nd alternate setting and not submitting
the URBs for it is a good idea or if that will still consume bandwidth
and power. And thus it would be better to use the first alternate
setting that is meant for the case with no SCO connections.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080801174338</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-01 17:43:38-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; Also the HCI_RESET thing needs to be turn-around. We always do  
&gt; &gt; HCI_RESET except for some chips where it will break (old CSR ones for  
&gt; &gt; example).
&gt; 
&gt; OK, I am making a separate patch. I've looked at 2.6.26-mh. It seems
&gt; to do the reset only for quirky devices. Is the reversal just planned or am
&gt; I looking at the wrong trees?

the reversal is just planned, but we should do it soon since we need the
reset quirk for almost every Broadcom chip.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080801174518</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-01 17:45:18-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; Both table updates should be a separate patch and we can even submit  
&gt; &gt; that for 2.6.27 inclusion. I was just to lazy to do that, but I have  
&gt; &gt; it on my todo list, but the Simple Pairing support had higher priority.
&gt; 
&gt; This patch implements the quirks from hci_usb in btusb, too.
&gt; 
&gt; --- linux-2.6.22/drivers/bluetooth/btusb.c	2008-08-01 10:53:38.000000000 +0200
&gt; +++ linux-2.6.26/drivers/bluetooth/btusb.c	2008-08-01 13:47:54.000000000 +0200
&gt; @@ -41,21 +41,108 @@
&gt;  #define BT_DBG(D...)
&gt;  #endif
&gt;  
&gt; -#define VERSION "0.1"
&gt; +#define VERSION "0.3"

the version number increase to 0.3 is bogus, it should be 0.2.

&gt; +module_param(override_ignore, bool, 0644);
&gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");

Why do we need this one? What is it good for?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080802234750</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-02 23:47:50-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

On Fri, 1 Aug 2008, Marcel Holtmann wrote:

&gt; Question is if selecting the 2nd alternate setting and not submitting
&gt; the URBs for it is a good idea or if that will still consume bandwidth
&gt; and power. And thus it would be better to use the first alternate
&gt; setting that is meant for the case with no SCO connections.

Installing the second altsetting and not submitting URBs will not
consume bandwidth.  It may consume a little power, but probably not
much more than just using the first altsetting.

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804083304</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-04 08:33:04-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Freitag 01 August 2008 19:45:18 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; Both table updates should be a separate patch and we can even submit  
&gt; &gt; &gt; that for 2.6.27 inclusion. I was just to lazy to do that, but I have  
&gt; &gt; &gt; it on my todo list, but the Simple Pairing support had higher priority.
&gt; &gt; 
&gt; &gt; This patch implements the quirks from hci_usb in btusb, too.
&gt; &gt; 
&gt; &gt; --- linux-2.6.22/drivers/bluetooth/btusb.c	2008-08-01 10:53:38.000000000 +0200
&gt; &gt; +++ linux-2.6.26/drivers/bluetooth/btusb.c	2008-08-01 13:47:54.000000000 +0200
&gt; &gt; @@ -41,21 +41,108 @@
&gt; &gt;  #define BT_DBG(D...)
&gt; &gt;  #endif
&gt; &gt;  
&gt; &gt; -#define VERSION "0.1"
&gt; &gt; +#define VERSION "0.3"
&gt; 
&gt; the version number increase to 0.3 is bogus, it should be 0.2.

Roger.

&gt; &gt; +module_param(override_ignore, bool, 0644);
&gt; &gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
&gt; 
&gt; Why do we need this one? What is it good for?

To override HCI_IGNORE. IF we provide overrides for blacklist entries,
it should be done systematically.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804160511</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-04 16:05:11-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt;&gt;&gt;
&gt;&gt;&gt; +module_param(override_ignore, bool, 0644);
&gt;&gt;&gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
&gt;&gt;
&gt;&gt; Why do we need this one? What is it good for?
&gt;
&gt; To override HCI_IGNORE. IF we provide overrides for blacklist entries,
&gt; it should be done systematically.

no we should not do that. The HCI_IGNORE is for devices that pretend  
to be Bluetooth H:2 compatible, but they are not. In these cases we do  
have other drivers that do this right. See bcm203x and bpa10x drivers.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804162327</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-04 16:23:27-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 04 August 2008 18:05:11 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt;&gt;&gt;
&gt; &gt;&gt;&gt; +module_param(override_ignore, bool, 0644);
&gt; &gt;&gt;&gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
&gt; &gt;&gt;
&gt; &gt;&gt; Why do we need this one? What is it good for?
&gt; &gt;
&gt; &gt; To override HCI_IGNORE. IF we provide overrides for blacklist entries,
&gt; &gt; it should be done systematically.
&gt; 
&gt; no we should not do that. The HCI_IGNORE is for devices that pretend  
&gt; to be Bluetooth H:2 compatible, but they are not. In these cases we do  
&gt; have other drivers that do this right. See bcm203x and bpa10x drivers.

Then why do you implement this option for hci_usb?
And why can the other IGNORE options be overridden?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804163336</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-04 16:33:36-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt;&gt;&gt;&gt;&gt; +module_param(override_ignore, bool, 0644);
&gt;&gt;&gt;&gt;&gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Why do we need this one? What is it good for?
&gt;&gt;&gt;
&gt;&gt;&gt; To override HCI_IGNORE. IF we provide overrides for blacklist  
&gt;&gt;&gt; entries,
&gt;&gt;&gt; it should be done systematically.
&gt;&gt;
&gt;&gt; no we should not do that. The HCI_IGNORE is for devices that pretend
&gt;&gt; to be Bluetooth H:2 compatible, but they are not. In these cases we  
&gt;&gt; do
&gt;&gt; have other drivers that do this right. See bcm203x and bpa10x  
&gt;&gt; drivers.
&gt;
&gt; Then why do you implement this option for hci_usb?
&gt; And why can the other IGNORE options be overridden?

if I wanna use the generic Bluetooth descriptor for matching, I need a  
way to mark broken devices as to be ignored. Otherwise I would have a  
really long list of matching vendor and product ids.

The other ones are special cases where it in some situations make  
sense to either ignore the device or allow it. The ignore_csr is for  
the CSR ROM chips that need loading of persistent settings first. The  
Digianswer is for an old development hardware  that had some issues.  
And the sniffer is normally driven by userspace apps. However it might  
work with the hci_usb driver, but it will not give you a normal  
working Bluetooth device.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804170136</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-04 17:01:36-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 04 August 2008 18:33:36 schrieben Sie:
&gt; &gt; Then why do you implement this option for hci_usb?
&gt; &gt; And why can the other IGNORE options be overridden?
&gt; 
&gt; if I wanna use the generic Bluetooth descriptor for matching, I need a  
&gt; way to mark broken devices as to be ignored. Otherwise I would have a  
&gt; really long list of matching vendor and product ids.

True, but if btusb is to replace hci_usb, the module options should match.
So will you remove that option in hci_usb?

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804172517</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-04 17:25:17-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt;&gt;&gt; Then why do you implement this option for hci_usb?
&gt;&gt;&gt; And why can the other IGNORE options be overridden?
&gt;&gt;
&gt;&gt; if I wanna use the generic Bluetooth descriptor for matching, I  
&gt;&gt; need a
&gt;&gt; way to mark broken devices as to be ignored. Otherwise I would have a
&gt;&gt; really long list of matching vendor and product ids.
&gt;
&gt; True, but if btusb is to replace hci_usb, the module options should  
&gt; match.
&gt; So will you remove that option in hci_usb?

the override_ignore is your invention. So what do you mean?

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804183247</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-04 18:32:47-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 04 August 2008 19:25:17 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt;&gt;&gt; Then why do you implement this option for hci_usb?
&gt; &gt;&gt;&gt; And why can the other IGNORE options be overridden?
&gt; &gt;&gt;
&gt; &gt;&gt; if I wanna use the generic Bluetooth descriptor for matching, I  
&gt; &gt;&gt; need a
&gt; &gt;&gt; way to mark broken devices as to be ignored. Otherwise I would have a
&gt; &gt;&gt; really long list of matching vendor and product ids.
&gt; &gt;
&gt; &gt; True, but if btusb is to replace hci_usb, the module options should  
&gt; &gt; match.
&gt; &gt; So will you remove that option in hci_usb?
&gt; 
&gt; the override_ignore is your invention. So what do you mean?

Hm, I may be smoking strange kernels, but I copied this as far as I can tell
from 2.6.25 hci_usb and merely renamed it because "ignore" seemed too
generic to me. Could you check we are talking about the same parameter?

	Gruß
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080804202408</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-04 20:24:08-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt;&gt;&gt; Then why do you implement this option for hci_usb?
&gt; &gt; &gt;&gt;&gt; And why can the other IGNORE options be overridden?
&gt; &gt; &gt;&gt;
&gt; &gt; &gt;&gt; if I wanna use the generic Bluetooth descriptor for matching, I  
&gt; &gt; &gt;&gt; need a
&gt; &gt; &gt;&gt; way to mark broken devices as to be ignored. Otherwise I would have a
&gt; &gt; &gt;&gt; really long list of matching vendor and product ids.
&gt; &gt; &gt;
&gt; &gt; &gt; True, but if btusb is to replace hci_usb, the module options should  
&gt; &gt; &gt; match.
&gt; &gt; &gt; So will you remove that option in hci_usb?
&gt; &gt; 
&gt; &gt; the override_ignore is your invention. So what do you mean?
&gt; 
&gt; Hm, I may be smoking strange kernels, but I copied this as far as I can tell
&gt; from 2.6.25 hci_usb and merely renamed it because "ignore" seemed too
&gt; generic to me. Could you check we are talking about the same parameter?

the generic ignore parameter can be removed. There is no other way to
deal with Bluetooth in Linux and we can use other ways to unattach a
driver from a device.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818135251</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 13:52:51-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 15:38:19 schrieben Sie:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; &gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; &gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; &gt; &gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; &gt; &gt; &gt; get this merged.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; &gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; &gt; &gt; 
&gt; &gt; &gt; I hacked up a version that does work fine for me and has been tested on
&gt; &gt; &gt; my Quad G5. The attached applies on top of 2.6.27-rc3.
&gt; &gt; &gt; 
&gt; &gt; &gt; The alternate settings are still fixed to selecting #2, however the
&gt; &gt; &gt; change to always select the appropriate one would be simple. We only
&gt; &gt; &gt; need to calculate the right value. The killing and re-submitting URB
&gt; &gt; &gt; code is already present.
&gt; &gt; 
&gt; &gt; This approach has a principal race condition. You have no idea when
&gt; &gt; the work queue will be run. Thus you can lose the first SCO packages.
&gt; 
&gt; I am open for suggestions, but I don't see any other way to get support
&gt; for this. We can't keep the isoc URBs running all the time, because that
&gt; consumes power.

How much? Or rather why not change the altsetting to the maximum
on open and defer submitting the URBs to notify() ?

&gt; On the other hand, this is audio and I don't really care if we loose a
&gt; packet or not.

It isn't limited to sound. The URBs for acl reception can also be delayed
arbitrarily long.

&gt; &gt; Secondly, what happens when this next event comes so quickly that
&gt; &gt; the work is still scheduled or running? it seems to me that the work handler
&gt; &gt; can read stale conn_hash values.
&gt; 
&gt; I don't see that happening since Bluetooth connection setup is
&gt; serialized and we only have to make sure that bulk and isoc URBs are
&gt; running when the connection is up.

CPU A					CPU B
HCI_NOTIFY_CONN_ADD
schedule_work(&amp;data-&gt;work);
						hdev-&gt;conn_hash.acl_num &gt; 0
HCI_NOTIFY_CONN_DEL
schedule_work(&amp;data-&gt;work);

will the work handler run again?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818141020</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 14:10:20-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; &gt; here's my current version of btusb with SCO support. This is preliminary.
&gt; &gt; &gt; &gt; &gt; &gt; &gt; I am still looking at a way to delay using the higher altsettings until SCO
&gt; &gt; &gt; &gt; &gt; &gt; &gt; is actually used, but the timeouts seem to be too long to do the obvious.
&gt; &gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; &gt; the module parameter and blacklist/quirks stuff has been merged upstream
&gt; &gt; &gt; &gt; &gt; &gt; with Linus now. Feel free to update your SCO support patch and then lets
&gt; &gt; &gt; &gt; &gt; &gt; get this merged.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; Still testing. I am new to bluetooth so getting a sound testing environment
&gt; &gt; &gt; &gt; &gt; up takes a bit of time. I am getting iso urbs to complete now.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; I hacked up a version that does work fine for me and has been tested on
&gt; &gt; &gt; &gt; my Quad G5. The attached applies on top of 2.6.27-rc3.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; The alternate settings are still fixed to selecting #2, however the
&gt; &gt; &gt; &gt; change to always select the appropriate one would be simple. We only
&gt; &gt; &gt; &gt; need to calculate the right value. The killing and re-submitting URB
&gt; &gt; &gt; &gt; code is already present.
&gt; &gt; &gt; 
&gt; &gt; &gt; This approach has a principal race condition. You have no idea when
&gt; &gt; &gt; the work queue will be run. Thus you can lose the first SCO packages.
&gt; &gt; 
&gt; &gt; I am open for suggestions, but I don't see any other way to get support
&gt; &gt; for this. We can't keep the isoc URBs running all the time, because that
&gt; &gt; consumes power.
&gt; 
&gt; How much? Or rather why not change the altsetting to the maximum
&gt; on open and defer submitting the URBs to notify() ?

run powertop and you will see why we can't do that. Also there is no max
altsetting. It doesn't work like this. You have to pick the right one.

The Bluetooth USB spec. is messed up when it comes to SCO.

&gt; &gt; On the other hand, this is audio and I don't really care if we loose a
&gt; &gt; packet or not.
&gt; 
&gt; It isn't limited to sound. The URBs for acl reception can also be delayed
&gt; arbitrarily long.

We can move that into the notify() callback, but the killing the URBs
becomes a problem.

On the other hand, ACL shouldn't be any problem since there is a HCI
connection setup in between and the ACL part of Bluetooth is reliable
and we have flow control on it.

Also these are bulk URBs. I am under the assumption that the Bluetooth
controller will queue packets up until we submit the first URB.

&gt; &gt; &gt; Secondly, what happens when this next event comes so quickly that
&gt; &gt; &gt; the work is still scheduled or running? it seems to me that the work handler
&gt; &gt; &gt; can read stale conn_hash values.
&gt; &gt; 
&gt; &gt; I don't see that happening since Bluetooth connection setup is
&gt; &gt; serialized and we only have to make sure that bulk and isoc URBs are
&gt; &gt; running when the connection is up.
&gt; 
&gt; CPU A					CPU B
&gt; HCI_NOTIFY_CONN_ADD
&gt; schedule_work(&amp;data-&gt;work);
&gt; 						hdev-&gt;conn_hash.acl_num &gt; 0
&gt; HCI_NOTIFY_CONN_DEL
&gt; schedule_work(&amp;data-&gt;work);
&gt; 
&gt; will the work handler run again?

As I said, the ACL and SCO connection setup is serialized. While in
theory this can happen, I don't see it in practice.

What would be your proposal to handle this in a cleaner way?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080731125223</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-07-31 12:52:23-0400</timestampReceived><subject>[rfc]btusb with SCO support</subject><body>

Hi,

here's my current version of btusb with SCO support. This is preliminary.
I am still looking at a way to delay using the higher altsettings until SCO
is actually used, but the timeouts seem to be too long to do the obvious.

Furthermore, could somebody point me at the description of a test setup
for bluetooth?

	Regards
		Oliver

---

--- linux-2.6/drivers/bluetooth/btusb.c	2008-07-31 10:26:38.000000000 +0200
+++ linux-btusb/drivers/bluetooth/btusb.c	2008-07-31 13:57:17.000000000 +0200
@@ -32,6 +32,8 @@
 
 #include &lt;linux/usb.h&gt;
 
+#include "hci_usb.h"
+
 #include &lt;net/bluetooth/bluetooth.h&gt;
 #include &lt;net/bluetooth/hci_core.h&gt;
 
@@ -41,21 +43,127 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.1"
+#define VERSION "0.3"
 
 static struct usb_device_id btusb_table[] = {
 	/* Generic Bluetooth USB device */
 	{ USB_DEVICE_INFO(0xe0, 0x01, 0x01) },
 
+	/* AVM BlueFRITZ! USB v2.0 */
+	{ USB_DEVICE(0x057c, 0x3800) },
+
+	/* Bluetooth Ultraport Module from IBM */
+	{ USB_DEVICE(0x04bf, 0x030a) },
+
+	/* ALPS Modules with non-standard id */
+	{ USB_DEVICE(0x044e, 0x3001) },
+	{ USB_DEVICE(0x044e, 0x3002) },
+
+	/* Ericsson with non-standard id */
+	{ USB_DEVICE(0x0bdb, 0x1002) },
+
+	/* Canyon CN-BTU1 with HID interfaces */
+	{ USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },
+
 	{ }	/* Terminating entry */
 };
 
 MODULE_DEVICE_TABLE(usb, btusb_table);
 
 static struct usb_device_id blacklist_table[] = {
+	/* CSR BlueCore devices */
+	{ USB_DEVICE(0x0a12, 0x0001), .driver_info = HCI_CSR },
+
+	/* Broadcom BCM2033 without firmware */
+	{ USB_DEVICE(0x0a5c, 0x2033), .driver_info = HCI_IGNORE },
+
+	/* Broadcom BCM2035 */
+	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Broadcom BCM2045 */
+	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2101), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* IBM/Lenovo ThinkPad with Broadcom chip */
+	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Targus ACB10US */
+	{ USB_DEVICE(0x0a5c, 0x2100), .driver_info = HCI_RESET },
+
+	/* ANYCOM Bluetooth USB-200 and USB-250 */
+	{ USB_DEVICE(0x0a5c, 0x2111), .driver_info = HCI_RESET },
+
+	/* HP laptop with Broadcom chip */
+	{ USB_DEVICE(0x03f0, 0x171d), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Dell laptop with Broadcom chip */
+	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
+	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
+
+	/* Kensington Bluetooth USB adapter */
+	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
+	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* ISSC Bluetooth Adapter v3.1 */
+	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
+
+	/* RTX Telecom based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
+	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
+
+	/* CONWISE Technology based adapters with buggy SCO support */
+	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
+
+	/* Belkin F8T012 and F8T013 devices */
+	{ USB_DEVICE(0x050d, 0x0012), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	{ USB_DEVICE(0x050d, 0x0013), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Digianswer devices */
+	{ USB_DEVICE(0x08fd, 0x0001), .driver_info = HCI_DIGIANSWER },
+	{ USB_DEVICE(0x08fd, 0x0002), .driver_info = HCI_IGNORE },
+
+	/* CSR BlueCore Bluetooth Sniffer */
+	{ USB_DEVICE(0x0a12, 0x0002), .driver_info = HCI_SNIFFER },
+
+	/* Frontline ComProbe Bluetooth Sniffer */
+	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = HCI_SNIFFER },
 	{ }	/* Terminating entry */
 };
 
+static struct usb_driver btusb_driver;
+
+static int reset = 0;
+module_param(reset, bool, 0644);
+MODULE_PARM_DESC(reset, "Send HCI reset command on initialization");
+
+static int force_scofix;
+module_param(force_scofix, bool, 0644);
+MODULE_PARM_DESC(force_scofix, "Force fixup of wrong SCO buffers size");
+
+static int disable_scofix;
+module_param(disable_scofix, bool, 0644);
+MODULE_PARM_DESC(disable_scofix, "Disable fixup of wrong SCO buffer size");
+
+static int ignore_csr;
+module_param(ignore_csr, bool, 0644);
+MODULE_PARM_DESC(ignore_csr, "Ignore devices with id 0a12:0001");
+
+static int ignore_sniffer;
+module_param(ignore_sniffer, bool, 0644);
+MODULE_PARM_DESC(ignore_sniffer, "Ignore devices with id 0a12:0002");
+
+static int ignore_dga;
+module_param(ignore_dga, bool, 0644);
+MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
+
+static int override_ignore;
+module_param(override_ignore, bool, 0644);
+MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
 
@@ -67,17 +175,22 @@ struct btusb_data {
 
 	unsigned long flags;
 
-	struct work_struct work;
-
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
+	struct usb_anchor sco_anchor;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
 	struct usb_endpoint_descriptor *bulk_rx_ep;
+	struct usb_host_endpoint *isoc_out_ep;
+	struct usb_host_endpoint *isoc_in_ep;
+
+	struct usb_interface *iso;
 };
 
+static void btusb_start_sco(struct btusb_data *data);
+
 static void btusb_intr_complete(struct urb *urb)
 {
 	struct hci_dev *hdev = urb-&gt;context;
@@ -257,26 +370,81 @@ done:
 	kfree_skb(skb);
 }
 
+static void btusb_sco_tx_complete(struct urb *urb)
+{
+	struct sk_buff *skb = (struct sk_buff *)urb-&gt;context;
+
+	kfree_skb(skb);
+}
+
+static void btusb_sco_rx_complete(struct urb *urb)
+{
+	struct btusb_data *data = urb-&gt;context;
+	int status = urb-&gt;status;
+	int i;
+
+	if (!test_bit(HCI_RUNNING, &amp;data-&gt;flags))
+		goto out;
+	if (status &lt; 0)
+		goto out;
+
+	for (i=0; i &lt; urb-&gt;number_of_packets; i++) {
+		BT_DBG("desc %d status %d offset %d len %d", i,
+				urb-&gt;iso_frame_desc[i].status,
+				urb-&gt;iso_frame_desc[i].offset,
+				urb-&gt;iso_frame_desc[i].actual_length);
+	
+		if (!urb-&gt;iso_frame_desc[i].status) {
+			data-&gt;hdev-&gt;stat.byte_rx += urb-&gt;iso_frame_desc[i].actual_length;
+			hci_recv_fragment(data-&gt;hdev, HCI_SCODATA_PKT,
+				urb-&gt;transfer_buffer + urb-&gt;iso_frame_desc[i].offset,
+				urb-&gt;iso_frame_desc[i].actual_length);
+		}
+	}
+
+	usb_anchor_urb(urb, &amp;data-&gt;sco_anchor);
+	i = usb_submit_urb(urb, GFP_ATOMIC);
+	if (i &lt; 0) {
+		usb_unanchor_urb(urb);
+out:
+		kfree(urb-&gt;transfer_buffer);
+	}
+}
+
 static int btusb_open(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
+	static DEFINE_MUTEX(open_mut);
 	int err;
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	mutex_lock(&amp;open_mut);
 	if (test_and_set_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
-		return 0;
+		goto out;
 
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
-		return 0;
+		goto out;;
 
+	err = usb_set_interface(data-&gt;udev, 1, 2);
+	if (err &lt; 0)
+		goto err_out;
 	err = btusb_submit_intr_urb(hdev);
-	if (err &lt; 0) {
-		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
-		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
-	}
+	if (err &lt; 0)
+		goto err_out_setting;
 
-	return err;
+	btusb_start_sco(data);
+out:
+	mutex_unlock(&amp;open_mut);
+	return 0;
+
+err_out_setting:
+	usb_set_interface(data-&gt;udev, 1, 0);
+err_out:
+	clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
+	clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+	mutex_unlock(&amp;open_mut);
+	return -EIO;
 }
 
 static int btusb_close(struct hci_dev *hdev)
@@ -294,6 +462,9 @@ static int btusb_close(struct hci_dev *h
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
 	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
 
+	usb_kill_anchored_urbs(&amp;data-&gt;sco_anchor);
+	usb_set_interface(data-&gt;udev, 1, 0);
+
 	return 0;
 }
 
@@ -304,15 +475,36 @@ static int btusb_flush(struct hci_dev *h
 	BT_DBG("%s", hdev-&gt;name);
 
 	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
-
+	usb_kill_anchored_urbs(&amp;data-&gt;sco_anchor);
 	return 0;
 }
 
+static void btusb_fill_isoc_desc(struct urb *urb, int len, int mtu)
+{
+	int offset = 0, i;
+
+	BT_DBG("len %d mtu %d", len, mtu);
+
+	for (i=0; i &lt; HCI_MAX_ISOC_FRAMES &amp;&amp; len &gt;= mtu; i++, offset += mtu, len -= mtu) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = mtu;
+		BT_DBG("desc %d offset %d len %d", i, offset, mtu);
+	}
+	if (len &amp;&amp; i &lt; HCI_MAX_ISOC_FRAMES) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = len;
+		BT_DBG("desc %d offset %d len %d", i, offset, len);
+		i++;
+	}
+	urb-&gt;number_of_packets = i;
+}
+
 static int btusb_send_frame(struct sk_buff *skb)
 {
 	struct hci_dev *hdev = (struct hci_dev *) skb-&gt;dev;
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct usb_ctrlrequest *dr;
+	struct usb_anchor *queue = &amp;data-&gt;tx_anchor;
 	struct urb *urb;
 	unsigned int pipe;
 	int err;
@@ -363,15 +555,32 @@ static int btusb_send_frame(struct sk_bu
 		break;
 
 	case HCI_SCODATA_PKT:
+		if (!data-&gt;iso)
+			return -ENODEV;
+		queue = &amp;data-&gt;sco_anchor;
+		urb = usb_alloc_urb(HCI_MAX_ISOC_FRAMES, GFP_ATOMIC);
+		if (!urb)
+			return -ENOMEM;
+
+		urb-&gt;context  = skb;
+		urb-&gt;dev      = data-&gt;udev;
+		urb-&gt;pipe     = usb_sndisocpipe(data-&gt;udev, data-&gt;isoc_out_ep-&gt;desc.bEndpointAddress);
+		urb-&gt;complete = btusb_sco_tx_complete;
+		urb-&gt;transfer_flags = URB_ISO_ASAP;
+
+		urb-&gt;interval = data-&gt;isoc_out_ep-&gt;desc.bInterval;
+
+		urb-&gt;transfer_buffer = skb-&gt;data;
+		urb-&gt;transfer_buffer_length = skb-&gt;len;
 		hdev-&gt;stat.sco_tx++;
-		kfree_skb(skb);
-		return 0;
+		btusb_fill_isoc_desc(urb, skb-&gt;len, le16_to_cpu(data-&gt;isoc_out_ep-&gt;desc.wMaxPacketSize));
+		break;
 
 	default:
 		return -EILSEQ;
 	}
 
-	usb_anchor_urb(urb, &amp;data-&gt;tx_anchor);
+	usb_anchor_urb(urb, queue);
 
 	err = usb_submit_urb(urb, GFP_ATOMIC);
 	if (err &lt; 0) {
@@ -396,43 +605,65 @@ static void btusb_destruct(struct hci_de
 
 static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
 {
-	struct btusb_data *data = hdev-&gt;driver_data;
-
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
-
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
 }
 
-static void btusb_work(struct work_struct *work)
+static void btusb_start_sco(struct btusb_data *data)
 {
-	struct btusb_data *data = container_of(work, struct btusb_data, work);
-	struct hci_dev *hdev = data-&gt;hdev;
+	struct urb *urb;
+	int mtu, size, err;
+	u8 *buf;
+
+	mtu  = le16_to_cpu(data-&gt;isoc_in_ep-&gt;desc.wMaxPacketSize);
+	size = mtu * HCI_MAX_ISOC_FRAMES;
 
-	if (hdev-&gt;conn_hash.acl_num == 0) {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	urb = usb_alloc_urb(HCI_MAX_ISOC_FRAMES, GFP_KERNEL);
+	if (!urb)
 		return;
-	}
 
-	if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-		if (btusb_submit_bulk_urb(hdev) &lt; 0)
-			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		else
-			btusb_submit_bulk_urb(hdev);
+	buf = kmalloc(size, GFP_KERNEL);
+	if (!buf) {
+		usb_free_urb(urb);
+		return;
 	}
+
+	urb-&gt;context  = data;
+	urb-&gt;dev      = data-&gt;udev;
+	urb-&gt;pipe     = usb_rcvisocpipe(data-&gt;udev, data-&gt;isoc_in_ep-&gt;desc.bEndpointAddress);
+	urb-&gt;complete = btusb_sco_rx_complete;
+
+	urb-&gt;interval = data-&gt;isoc_in_ep-&gt;desc.bInterval;
+
+	urb-&gt;transfer_buffer_length = size;
+	urb-&gt;transfer_buffer = buf;
+	urb-&gt;transfer_flags  = URB_ISO_ASAP;
+
+	btusb_fill_isoc_desc(urb, size, mtu);
+
+	usb_anchor_urb(urb, &amp;data-&gt;sco_anchor);
+
+	err = usb_submit_urb(urb, GFP_KERNEL);
+	if (err &lt; 0)
+		usb_unanchor_urb(urb);
+	usb_free_urb(urb);
 }
 
 static int btusb_probe(struct usb_interface *intf,
 				const struct usb_device_id *id)
 {
 	struct usb_endpoint_descriptor *ep_desc;
+	struct usb_interface *iso_intf;
 	struct btusb_data *data;
 	struct hci_dev *hdev;
-	int i, err;
+	int i, a, err;
+	struct usb_host_endpoint *isoc_out_ep = NULL;
+	struct usb_host_endpoint *isoc_in_ep = NULL;
+	struct usb_host_endpoint  *ep;
+	struct usb_host_interface *uif;
 
 	BT_DBG("intf %p id %p", intf, id);
 
+	/* interface numbers are hardcoded in the spec */
 	if (intf-&gt;cur_altsetting-&gt;desc.bInterfaceNumber != 0)
 		return -ENODEV;
 
@@ -443,6 +674,15 @@ static int btusb_probe(struct usb_interf
 			id = match;
 	}
 
+	if (id-&gt;driver_info == HCI_IGNORE &amp;&amp; !override_ignore)
+		return -ENODEV;
+	if (ignore_sniffer &amp;&amp; id-&gt;driver_info &amp; HCI_SNIFFER)
+		return -ENODEV;
+	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
+		return -ENODEV;
+	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
+		return -ENODEV;
+
 	data = kzalloc(sizeof(*data), GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
@@ -473,13 +713,44 @@ static int btusb_probe(struct usb_interf
 
 	data-&gt;udev = interface_to_usbdev(intf);
 
-	spin_lock_init(&amp;data-&gt;lock);
+	/* for sound */
+	iso_intf = usb_ifnum_to_if(data-&gt;udev, 1);
+	if (iso_intf &amp;&amp; !(id-&gt;driver_info &amp; (HCI_BROKEN_ISOC | HCI_SNIFFER))) {
+		err = usb_driver_claim_interface(&amp;btusb_driver,
+						iso_intf,
+						data);
+
+		if (!err)
+			data-&gt;iso = iso_intf;
+
+		for (a = 0; a &lt; iso_intf-&gt;num_altsetting; a++) {
+			uif = &amp;iso_intf-&gt;altsetting[a];
+			for (i = 0; i &lt; uif-&gt;desc.bNumEndpoints; i++) {
+				ep = &amp;uif-&gt;endpoint[i];
+
+				switch (ep-&gt;desc.bmAttributes &amp; USB_ENDPOINT_XFERTYPE_MASK) {
+				case USB_ENDPOINT_XFER_ISOC:
+					if (uif-&gt;desc.bAlternateSetting != 2)
+						break;
+
+					if (ep-&gt;desc.bEndpointAddress &amp; USB_DIR_IN)
+						isoc_in_ep  = ep;
+					else
+						isoc_out_ep = ep;
+					break;
+				}
+			}
+		}
+		data-&gt;isoc_in_ep = isoc_in_ep;
+		data-&gt;isoc_out_ep = isoc_out_ep;
+	}
 
-	INIT_WORK(&amp;data-&gt;work, btusb_work);
+	spin_lock_init(&amp;data-&gt;lock);
 
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
+	init_usb_anchor(&amp;data-&gt;sco_anchor);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -503,10 +774,18 @@ static int btusb_probe(struct usb_interf
 
 	hdev-&gt;owner = THIS_MODULE;
 
-	set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+	if (reset || id-&gt;driver_info &amp; HCI_RESET)
+		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
+
+	if (force_scofix || id-&gt;driver_info &amp; HCI_WRONG_SCO_MTU) {
+		if (!disable_scofix)
+			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
+	}
 
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
+		if (iso_intf)
+			usb_driver_release_interface(&amp;btusb_driver, iso_intf);
 		hci_free_dev(hdev);
 		kfree(data);
 		return err;
@@ -524,12 +803,16 @@ static void btusb_disconnect(struct usb_
 
 	BT_DBG("intf %p", intf);
 
+	/* ignore second interface */
 	if (!data)
 		return;
 
 	hdev = data-&gt;hdev;
 
-	usb_set_intfdata(intf, NULL);
+	if (intf == data-&gt;iso)
+		usb_set_intfdata(intf, NULL);
+	else if (data-&gt;iso)
+		usb_set_intfdata(data-&gt;iso, NULL);
 
 	hci_unregister_dev(hdev);
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080731140313</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-31 14:03:13-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; here's my current version of btusb with SCO support. This is  
&gt; preliminary.
&gt; I am still looking at a way to delay using the higher altsettings  
&gt; until SCO
&gt; is actually used, but the timeouts seem to be too long to do the  
&gt; obvious.

yeah, I was afraid of that switching the alternate settings is not as  
easy as the spec. might think. Personally I think it is a broken  
specification anyway. So the best assumption is that we have one SCO  
connection and that is either 8-bit or 16-bit. So we do the switching  
when we get the notify() callback for a changed voice setting.

&gt; Furthermore, could somebody point me at the description of a test  
&gt; setup
&gt; for bluetooth?

So scotest works for basic testing and for the rest get a Bluetooth  
headset and then use the audio setup from wiki.bluez.org.

&gt; --- linux-2.6/drivers/bluetooth/btusb.c	2008-07-31  
&gt; 10:26:38.000000000 +0200
&gt; +++ linux-btusb/drivers/bluetooth/btusb.c	2008-07-31  
&gt; 13:57:17.000000000 +0200
&gt; @@ -32,6 +32,8 @@
&gt;
&gt; #include &lt;linux/usb.h&gt;
&gt;
&gt; +#include "hci_usb.h"

Can we please not do that and just include the parts from hci_usb.h  
that we need directly here.

&gt; static struct usb_device_id btusb_table[] = {
&gt; 	/* Generic Bluetooth USB device */
&gt; 	{ USB_DEVICE_INFO(0xe0, 0x01, 0x01) },
&gt;
&gt; +	/* AVM BlueFRITZ! USB v2.0 */
&gt; +	{ USB_DEVICE(0x057c, 0x3800) },
&gt; +
&gt; +	/* Bluetooth Ultraport Module from IBM */
&gt; +	{ USB_DEVICE(0x04bf, 0x030a) },
&gt; +
&gt; +	/* ALPS Modules with non-standard id */
&gt; +	{ USB_DEVICE(0x044e, 0x3001) },
&gt; +	{ USB_DEVICE(0x044e, 0x3002) },
&gt; +
&gt; +	/* Ericsson with non-standard id */
&gt; +	{ USB_DEVICE(0x0bdb, 0x1002) },
&gt; +
&gt; +	/* Canyon CN-BTU1 with HID interfaces */
&gt; +	{ USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },
&gt; +
&gt; 	{ }	/* Terminating entry */
&gt; };
&gt;
&gt; MODULE_DEVICE_TABLE(usb, btusb_table);
&gt;
&gt; static struct usb_device_id blacklist_table[] = {
&gt; +	/* CSR BlueCore devices */
&gt; +	{ USB_DEVICE(0x0a12, 0x0001), .driver_info = HCI_CSR },
&gt; +
&gt; +	/* Broadcom BCM2033 without firmware */
&gt; +	{ USB_DEVICE(0x0a5c, 0x2033), .driver_info = HCI_IGNORE },
&gt; +
&gt; +	/* Broadcom BCM2035 */
&gt; +	{ USB_DEVICE(0x0a5c, 0x2035), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +	{ USB_DEVICE(0x0a5c, 0x200a), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* Broadcom BCM2045 */
&gt; +	{ USB_DEVICE(0x0a5c, 0x2039), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +	{ USB_DEVICE(0x0a5c, 0x2101), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* IBM/Lenovo ThinkPad with Broadcom chip */
&gt; +	{ USB_DEVICE(0x0a5c, 0x201e), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +	{ USB_DEVICE(0x0a5c, 0x2110), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* Targus ACB10US */
&gt; +	{ USB_DEVICE(0x0a5c, 0x2100), .driver_info = HCI_RESET },
&gt; +
&gt; +	/* ANYCOM Bluetooth USB-200 and USB-250 */
&gt; +	{ USB_DEVICE(0x0a5c, 0x2111), .driver_info = HCI_RESET },
&gt; +
&gt; +	/* HP laptop with Broadcom chip */
&gt; +	{ USB_DEVICE(0x03f0, 0x171d), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* Dell laptop with Broadcom chip */
&gt; +	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
&gt; +	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
&gt; +
&gt; +	/* Kensington Bluetooth USB adapter */
&gt; +	{ USB_DEVICE(0x047d, 0x105d), .driver_info = HCI_RESET },
&gt; +	{ USB_DEVICE(0x047d, 0x105e), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* ISSC Bluetooth Adapter v3.1 */
&gt; +	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
&gt; +
&gt; +	/* RTX Telecom based adapters with buggy SCO support */
&gt; +	{ USB_DEVICE(0x0400, 0x0807), .driver_info = HCI_BROKEN_ISOC },
&gt; +	{ USB_DEVICE(0x0400, 0x080a), .driver_info = HCI_BROKEN_ISOC },
&gt; +
&gt; +	/* CONWISE Technology based adapters with buggy SCO support */
&gt; +	{ USB_DEVICE(0x0e5e, 0x6622), .driver_info = HCI_BROKEN_ISOC },
&gt; +
&gt; +	/* Belkin F8T012 and F8T013 devices */
&gt; +	{ USB_DEVICE(0x050d, 0x0012), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +	{ USB_DEVICE(0x050d, 0x0013), .driver_info = HCI_RESET |  
&gt; HCI_WRONG_SCO_MTU },
&gt; +
&gt; +	/* Digianswer devices */
&gt; +	{ USB_DEVICE(0x08fd, 0x0001), .driver_info = HCI_DIGIANSWER },
&gt; +	{ USB_DEVICE(0x08fd, 0x0002), .driver_info = HCI_IGNORE },
&gt; +
&gt; +	/* CSR BlueCore Bluetooth Sniffer */
&gt; +	{ USB_DEVICE(0x0a12, 0x0002), .driver_info = HCI_SNIFFER },
&gt; +
&gt; +	/* Frontline ComProbe Bluetooth Sniffer */
&gt; +	{ USB_DEVICE(0x16d3, 0x0002), .driver_info = HCI_SNIFFER },
&gt; 	{ }	/* Terminating entry */
&gt; };

Both table updates should be a separate patch and we can even submit  
that for 2.6.27 inclusion. I was just to lazy to do that, but I have  
it on my todo list, but the Simple Pairing support had higher priority.

Also the HCI_RESET thing needs to be turn-around. We always do  
HCI_RESET except for some chips where it will break (old CSR ones for  
example).

&gt; +static struct usb_driver btusb_driver;
&gt; +
&gt; +static int reset = 0;
&gt; +module_param(reset, bool, 0644);
&gt; +MODULE_PARM_DESC(reset, "Send HCI reset command on initialization");
&gt; +
&gt; +static int force_scofix;
&gt; +module_param(force_scofix, bool, 0644);
&gt; +MODULE_PARM_DESC(force_scofix, "Force fixup of wrong SCO buffers  
&gt; size");
&gt; +
&gt; +static int disable_scofix;
&gt; +module_param(disable_scofix, bool, 0644);
&gt; +MODULE_PARM_DESC(disable_scofix, "Disable fixup of wrong SCO buffer  
&gt; size");
&gt; +
&gt; +static int ignore_csr;
&gt; +module_param(ignore_csr, bool, 0644);
&gt; +MODULE_PARM_DESC(ignore_csr, "Ignore devices with id 0a12:0001");
&gt; +
&gt; +static int ignore_sniffer;
&gt; +module_param(ignore_sniffer, bool, 0644);
&gt; +MODULE_PARM_DESC(ignore_sniffer, "Ignore devices with id 0a12:0002");
&gt; +
&gt; +static int ignore_dga;
&gt; +module_param(ignore_dga, bool, 0644);
&gt; +MODULE_PARM_DESC(ignore_dga, "Ignore devices with id 08fd:0001");
&gt; +
&gt; +static int override_ignore;
&gt; +module_param(override_ignore, bool, 0644);
&gt; +MODULE_PARM_DESC(override_ignore, "Drive blacklisted devices");

This is my personal taste. I want the variable at the top, but the  
module_param() and the description at the bottom with the other  
defines for the module.

&gt; -	struct work_struct work;
&gt; -
&gt; 	struct usb_anchor tx_anchor;
&gt; 	struct usb_anchor intr_anchor;
&gt; 	struct usb_anchor bulk_anchor;
&gt; +	struct usb_anchor sco_anchor;
&gt;
&gt; 	struct usb_endpoint_descriptor *intr_ep;
&gt; 	struct usb_endpoint_descriptor *bulk_tx_ep;
&gt; 	struct usb_endpoint_descriptor *bulk_rx_ep;
&gt; +	struct usb_host_endpoint *isoc_out_ep;
&gt; +	struct usb_host_endpoint *isoc_in_ep;
&gt; +
&gt; +	struct usb_interface *iso;
&gt; };

Call the later one either *isoc or *sco. Actually *sco_intf might make  
a lot sense since you have the sco_anchor.

&gt; +static void btusb_sco_rx_complete(struct urb *urb)
&gt; +{
&gt; +	struct btusb_data *data = urb-&gt;context;
&gt; +	int status = urb-&gt;status;
&gt; +	int i;
&gt; +
&gt; +	if (!test_bit(HCI_RUNNING, &amp;data-&gt;flags))
&gt; +		goto out;
&gt; +	if (status &lt; 0)
&gt; +		goto out;
&gt; +
&gt; +	for (i=0; i &lt; urb-&gt;number_of_packets; i++) {
&gt; +		BT_DBG("desc %d status %d offset %d len %d", i,
&gt; +				urb-&gt;iso_frame_desc[i].status,
&gt; +				urb-&gt;iso_frame_desc[i].offset,
&gt; +				urb-&gt;iso_frame_desc[i].actual_length);

Small coding style nitpick in the for loop. And yes I know, that is  
wrong in hci_usb.c driver, too :)

&gt; 		if (!urb-&gt;iso_frame_desc[i].status) {
&gt; +			data-&gt;hdev-&gt;stat.byte_rx += urb-&gt;iso_frame_desc[i].actual_length;
&gt; +			hci_recv_fragment(data-&gt;hdev, HCI_SCODATA_PKT,
&gt; +				urb-&gt;transfer_buffer + urb-&gt;iso_frame_desc[i].offset,
&gt; +				urb-&gt;iso_frame_desc[i].actual_length);
&gt; +		}
&gt; +	}
&gt; +
&gt; +	usb_anchor_urb(urb, &amp;data-&gt;sco_anchor);
&gt; +	i = usb_submit_urb(urb, GFP_ATOMIC);
&gt; +	if (i &lt; 0) {
&gt; +		usb_unanchor_urb(urb);
&gt; +out:
&gt; +		kfree(urb-&gt;transfer_buffer);
&gt; +	}
&gt; +}

This label is ugly. Please just simple to the kfree in the error case  
directly in the test at the top of the function. Also please not re- 
use the i from the loop iterator and lets just check directly here  
without storing the result. Since we don't do anything usefull with it  
anyway, it gives us no benefit and would make the code a little bit  
easier to read.

&gt; static int btusb_open(struct hci_dev *hdev)
&gt; {
&gt; 	struct btusb_data *data = hdev-&gt;driver_data;
&gt; +	static DEFINE_MUTEX(open_mut);

I dislike static mutex definition inside functions. Just move this to  
a global mutex.

&gt; +static void btusb_fill_isoc_desc(struct urb *urb, int len, int mtu)
&gt; +{
&gt; +	int offset = 0, i;
&gt; +
&gt; +	BT_DBG("len %d mtu %d", len, mtu);
&gt; +
&gt; +	for (i=0; i &lt; HCI_MAX_ISOC_FRAMES &amp;&amp; len &gt;= mtu; i++, offset +=  
&gt; mtu, len -= mtu) {
&gt; +		urb-&gt;iso_frame_desc[i].offset = offset;
&gt; +		urb-&gt;iso_frame_desc[i].length = mtu;
&gt; +		BT_DBG("desc %d offset %d len %d", i, offset, mtu);
&gt; +	}

Same coding style comment as above. We also might wanna break this  
complex for-loop up in easier code.

&gt; +	if (id-&gt;driver_info == HCI_IGNORE &amp;&amp; !override_ignore)
&gt; +		return -ENODEV;
&gt; +	if (ignore_sniffer &amp;&amp; id-&gt;driver_info &amp; HCI_SNIFFER)
&gt; +		return -ENODEV;
&gt; +	if (ignore_csr &amp;&amp; id-&gt;driver_info &amp; HCI_CSR)
&gt; +		return -ENODEV;
&gt; +	if (ignore_dga &amp;&amp; id-&gt;driver_info &amp; HCI_DIGIANSWER)
&gt; +		return -ENODEV;

This as to be a separate patch with the blacklist stuff.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818142725</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 14:27:25-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 16:10:20 schrieb Marcel Holtmann:

&gt; run powertop and you will see why we can't do that. Also there is no max
&gt; altsetting. It doesn't work like this. You have to pick the right one.
&gt; 
&gt; The Bluetooth USB spec. is messed up when it comes to SCO.

Very well, it can't be helped then.

&gt; &gt; &gt; On the other hand, this is audio and I don't really care if we loose a
&gt; &gt; &gt; packet or not.
&gt; &gt; 
&gt; &gt; It isn't limited to sound. The URBs for acl reception can also be delayed
&gt; &gt; arbitrarily long.
&gt; 
&gt; We can move that into the notify() callback, but the killing the URBs
&gt; becomes a problem.

/**
 * usb_unlink_anchored_urbs - asynchronously cancel transfer requests en masse
 * @anchor: anchor the requests are bound to
 *
 * this allows all outstanding URBs to be unlinked starting
 * from the back of the queue. This function is asynchronous.
 * The unlinking is just tiggered. It may happen after this
 * function has returned.
 */
void usb_unlink_anchored_urbs(struct usb_anchor *anchor)

&gt; On the other hand, ACL shouldn't be any problem since there is a HCI
&gt; connection setup in between and the ACL part of Bluetooth is reliable
&gt; and we have flow control on it.
&gt; 
&gt; Also these are bulk URBs. I am under the assumption that the Bluetooth
&gt; controller will queue packets up until we submit the first URB.
&gt; 
&gt; &gt; &gt; &gt; Secondly, what happens when this next event comes so quickly that
&gt; &gt; &gt; &gt; the work is still scheduled or running? it seems to me that the work handler
&gt; &gt; &gt; &gt; can read stale conn_hash values.
&gt; &gt; &gt; 
&gt; &gt; &gt; I don't see that happening since Bluetooth connection setup is
&gt; &gt; &gt; serialized and we only have to make sure that bulk and isoc URBs are
&gt; &gt; &gt; running when the connection is up.
&gt; &gt; 
&gt; &gt; CPU A					CPU B
&gt; &gt; HCI_NOTIFY_CONN_ADD
&gt; &gt; schedule_work(&amp;data-&gt;work);
&gt; &gt; 						hdev-&gt;conn_hash.acl_num &gt; 0
&gt; &gt; HCI_NOTIFY_CONN_DEL
&gt; &gt; schedule_work(&amp;data-&gt;work);
&gt; &gt; 
&gt; &gt; will the work handler run again?
&gt; 
&gt; As I said, the ACL and SCO connection setup is serialized. While in
&gt; theory this can happen, I don't see it in practice.
&gt; 
&gt; What would be your proposal to handle this in a cleaner way?

Difficult. I was hoping to avoid scheduling work. I have to rethink.

	Regards
		Oliver



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818143622</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 14:36:22-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; On the other hand, this is audio and I don't really care if we loose a
&gt; &gt; &gt; &gt; packet or not.
&gt; &gt; &gt; 
&gt; &gt; &gt; It isn't limited to sound. The URBs for acl reception can also be delayed
&gt; &gt; &gt; arbitrarily long.
&gt; &gt; 
&gt; &gt; We can move that into the notify() callback, but the killing the URBs
&gt; &gt; becomes a problem.
&gt; 
&gt; /**
&gt;  * usb_unlink_anchored_urbs - asynchronously cancel transfer requests en masse
&gt;  * @anchor: anchor the requests are bound to
&gt;  *
&gt;  * this allows all outstanding URBs to be unlinked starting
&gt;  * from the back of the queue. This function is asynchronous.
&gt;  * The unlinking is just tiggered. It may happen after this
&gt;  * function has returned.
&gt;  */
&gt; void usb_unlink_anchored_urbs(struct usb_anchor *anchor)

then we can move the ACL handling into the notify() callback.

For the SCO ones, I don't see any chance since we have to do the
altsetting first.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818143851</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 14:38:51-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 16:36:22 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; &gt; On the other hand, this is audio and I don't really care if we loose a
&gt; &gt; &gt; &gt; &gt; packet or not.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; It isn't limited to sound. The URBs for acl reception can also be delayed
&gt; &gt; &gt; &gt; arbitrarily long.
&gt; &gt; &gt; 
&gt; &gt; &gt; We can move that into the notify() callback, but the killing the URBs
&gt; &gt; &gt; becomes a problem.
&gt; &gt; 
&gt; &gt; /**
&gt; &gt;  * usb_unlink_anchored_urbs - asynchronously cancel transfer requests en masse
&gt; &gt;  * @anchor: anchor the requests are bound to
&gt; &gt;  *
&gt; &gt;  * this allows all outstanding URBs to be unlinked starting
&gt; &gt;  * from the back of the queue. This function is asynchronous.
&gt; &gt;  * The unlinking is just tiggered. It may happen after this
&gt; &gt;  * function has returned.
&gt; &gt;  */
&gt; &gt; void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
&gt; 
&gt; then we can move the ACL handling into the notify() callback.
&gt; 
&gt; For the SCO ones, I don't see any chance since we have to do the
&gt; altsetting first.

You are right.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818151240</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 15:12:40-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; &gt; On the other hand, this is audio and I don't really care if we loose a
&gt; &gt; &gt; &gt; &gt; &gt; packet or not.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; It isn't limited to sound. The URBs for acl reception can also be delayed
&gt; &gt; &gt; &gt; &gt; arbitrarily long.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; We can move that into the notify() callback, but the killing the URBs
&gt; &gt; &gt; &gt; becomes a problem.
&gt; &gt; &gt; 
&gt; &gt; &gt; /**
&gt; &gt; &gt;  * usb_unlink_anchored_urbs - asynchronously cancel transfer requests en masse
&gt; &gt; &gt;  * @anchor: anchor the requests are bound to
&gt; &gt; &gt;  *
&gt; &gt; &gt;  * this allows all outstanding URBs to be unlinked starting
&gt; &gt; &gt;  * from the back of the queue. This function is asynchronous.
&gt; &gt; &gt;  * The unlinking is just tiggered. It may happen after this
&gt; &gt; &gt;  * function has returned.
&gt; &gt; &gt;  */
&gt; &gt; &gt; void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
&gt; &gt; 
&gt; &gt; then we can move the ACL handling into the notify() callback.
&gt; &gt; 
&gt; &gt; For the SCO ones, I don't see any chance since we have to do the
&gt; &gt; altsetting first.
&gt; 
&gt; You are right.

actually we can't move the URB killing for ACL into notify() since that
gives me a kernel panic (fatal exception in interrupt).

Your patch for the IRQ disabling doesn't make a difference.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820155523</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-20 15:55:23-0400</timestampReceived><subject>Re: [rfc/rft]power management for btusb</subject><body>

On Wed, 20 Aug 2008, Marcel Holtmann wrote:

&gt; Hi Alan,
&gt; 
&gt; &gt; &gt; finally I found the device and setting it to auto makes it actually
&gt; &gt; &gt; suspend. Why is this not default? The driver has to enable it anyway.
&gt; &gt; 
&gt; &gt; If there's no driver then it would take effect right away.  This causes 
&gt; &gt; problems for devices during startup -- the period of time from device 
&gt; &gt; discovery to driver binding is long enough (because there's so much 
&gt; &gt; other activity during bootup) that the device can autosuspend before 
&gt; &gt; the driver is there to prevent it.
&gt; &gt; 
&gt; &gt; For well-behaved devices this wouldn't matter.  But unfortunately there 
&gt; &gt; are lots of devices which break when they suspend.  That's why 
&gt; &gt; level = auto is not the default.
&gt; 
&gt; is there any way to make it default if we know it works all the time?

No, probably not.  But in general we don't know that.  And we do know
that a fair number of devices really are broken in this way -- lots of
printers or scanners have this problem.  Too many for us to want to
keep a blacklist in the kernel, as Oliver mentioned.

The idea is that some desktop management program, like hal, should be 
able to recognize which devices can autosuspend safely and then enable 
them.  That way the whole problem is pushed out to userspace.  :-)

There is one exception: The kernel enables autosuspend automatically 
for hubs.

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818160348</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 16:03:48-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 17:12:40 schrieb Marcel Holtmann:

&gt; actually we can't move the URB killing for ACL into notify() since that
&gt; gives me a kernel panic (fatal exception in interrupt).
&gt; 
&gt; Your patch for the IRQ disabling doesn't make a difference.

Please send me the version that triggers it.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818170753</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 17:07:53-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; actually we can't move the URB killing for ACL into notify() since that
&gt; &gt; gives me a kernel panic (fatal exception in interrupt).
&gt; &gt; 
&gt; &gt; Your patch for the IRQ disabling doesn't make a difference.
&gt; 
&gt; Please send me the version that triggers it.

the attached version makes it oops. Just create a connection with rfcomm
or sdptool and you will see it when disconnecting.

Regards

Marcel


["patch" (patch)]

diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
index 95ae9ba..5aa5d0e 100644
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@ -2,7 +2,7 @@
  *
  *  Generic Bluetooth USB driver
  *
- *  Copyright (C) 2005-2007  Marcel Holtmann &lt;marcel@holtmann.org&gt;
+ *  Copyright (C) 2005-2008  Marcel Holtmann &lt;marcel@holtmann.org&gt;
  *
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -41,7 +41,7 @@
 #define BT_DBG(D...)
 #endif
 
-#define VERSION "0.2"
+#define VERSION "0.3"
 
 static int ignore_dga;
 static int ignore_csr;
@@ -160,12 +160,16 @@ static struct usb_device_id blacklist_table[] = {
 	{ }	/* Terminating entry */
 };
 
+#define BTUSB_MAX_ISOC_FRAMES	10
+
 #define BTUSB_INTR_RUNNING	0
 #define BTUSB_BULK_RUNNING	1
+#define BTUSB_ISOC_RUNNING	2
 
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *isoc;
 
 	spinlock_t lock;
 
@@ -176,10 +180,15 @@ struct btusb_data {
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
 	struct usb_anchor bulk_anchor;
+	struct usb_anchor isoc_anchor;
 
 	struct usb_endpoint_descriptor *intr_ep;
 	struct usb_endpoint_descriptor *bulk_tx_ep;
 	struct usb_endpoint_descriptor *bulk_rx_ep;
+	struct usb_endpoint_descriptor *isoc_tx_ep;
+	struct usb_endpoint_descriptor *isoc_rx_ep;
+
+	int isoc_altsetting;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -195,6 +204,8 @@ static void btusb_intr_complete(struct urb *urb)
 		return;
 
 	if (urb-&gt;status == 0) {
+		hdev-&gt;stat.byte_rx += urb-&gt;actual_length;
+
 		if (hci_recv_fragment(hdev, HCI_EVENT_PKT,
 						urb-&gt;transfer_buffer,
 						urb-&gt;actual_length) &lt; 0) {
@@ -216,7 +227,7 @@ static void btusb_intr_complete(struct urb *urb)
 	}
 }
 
-static inline int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -226,6 +237,9 @@ static inline int btusb_submit_intr_urb(struct hci_dev *hdev)
 
 	BT_DBG("%s", hdev-&gt;name);
 
+	if (!data-&gt;intr_ep)
+		return -ENODEV;
+
 	urb = usb_alloc_urb(0, GFP_ATOMIC);
 	if (!urb)
 		return -ENOMEM;
@@ -274,6 +288,8 @@ static void btusb_bulk_complete(struct urb *urb)
 		return;
 
 	if (urb-&gt;status == 0) {
+		hdev-&gt;stat.byte_rx += urb-&gt;actual_length;
+
 		if (hci_recv_fragment(hdev, HCI_ACLDATA_PKT,
 						urb-&gt;transfer_buffer,
 						urb-&gt;actual_length) &lt; 0) {
@@ -295,7 +311,7 @@ static void btusb_bulk_complete(struct urb *urb)
 	}
 }
 
-static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -305,13 +321,16 @@ static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
 
 	BT_DBG("%s", hdev-&gt;name);
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	if (!data-&gt;bulk_rx_ep)
+		return -ENODEV;
+
+	urb = usb_alloc_urb(0, GFP_ATOMIC);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, GFP_ATOMIC);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -326,6 +345,127 @@ static inline int btusb_submit_bulk_urb(struct hci_dev *hdev)
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
+	err = usb_submit_urb(urb, GFP_ATOMIC);
+	if (err &lt; 0) {
+		BT_ERR("%s urb %p submission failed (%d)",
+						hdev-&gt;name, urb, -err);
+		usb_unanchor_urb(urb);
+		kfree(buf);
+	}
+
+	usb_free_urb(urb);
+
+	return err;
+}
+
+static void btusb_isoc_complete(struct urb *urb)
+{
+	struct hci_dev *hdev = urb-&gt;context;
+	struct btusb_data *data = hdev-&gt;driver_data;
+	int i, err;
+
+	BT_DBG("%s urb %p status %d count %d", hdev-&gt;name,
+					urb, urb-&gt;status, urb-&gt;actual_length);
+
+	if (!test_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
+		return;
+
+	if (urb-&gt;status == 0) {
+		for (i = 0; i &lt; urb-&gt;number_of_packets; i++) {
+			unsigned int offset = urb-&gt;iso_frame_desc[i].offset;
+			unsigned int length = urb-&gt;iso_frame_desc[i].actual_length;
+
+			if (urb-&gt;iso_frame_desc[i].status)
+				continue;
+
+			hdev-&gt;stat.byte_rx += length;
+
+			if (hci_recv_fragment(hdev, HCI_SCODATA_PKT,
+						urb-&gt;transfer_buffer + offset,
+								length) &lt; 0) {
+				BT_ERR("%s corrupted SCO packet", hdev-&gt;name);
+				hdev-&gt;stat.err_rx++;
+			}
+		}
+	}
+
+	if (!test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags))
+		return;
+
+	usb_anchor_urb(urb, &amp;data-&gt;isoc_anchor);
+
+	err = usb_submit_urb(urb, GFP_ATOMIC);
+	if (err &lt; 0) {
+		BT_ERR("%s urb %p failed to resubmit (%d)",
+						hdev-&gt;name, urb, -err);
+		usb_unanchor_urb(urb);
+	}
+}
+
+static void inline __fill_isoc_descriptor(struct urb *urb, int len, int mtu)
+{
+	int i, offset = 0;
+
+	BT_DBG("len %d mtu %d", len, mtu);
+
+	for (i = 0; i &lt; BTUSB_MAX_ISOC_FRAMES &amp;&amp; len &gt;= mtu;
+					i++, offset += mtu, len -= mtu) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = mtu;
+	}
+
+	if (len &amp;&amp; i &lt; BTUSB_MAX_ISOC_FRAMES) {
+		urb-&gt;iso_frame_desc[i].offset = offset;
+		urb-&gt;iso_frame_desc[i].length = len;
+		i++;
+	}
+
+	urb-&gt;number_of_packets = i;
+}
+
+static int btusb_submit_isoc_urb(struct hci_dev *hdev)
+{
+	struct btusb_data *data = hdev-&gt;driver_data;
+	struct urb *urb;
+	unsigned char *buf;
+	unsigned int pipe;
+	int err, size;
+
+	BT_DBG("%s", hdev-&gt;name);
+
+	if (!data-&gt;isoc_rx_ep)
+		return -ENODEV;
+
+	urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, GFP_KERNEL);
+	if (!urb)
+		return -ENOMEM;
+
+	size = le16_to_cpu(data-&gt;isoc_rx_ep-&gt;wMaxPacketSize) *
+						BTUSB_MAX_ISOC_FRAMES;
+
+	buf = kmalloc(size, GFP_KERNEL);
+	if (!buf) {
+		usb_free_urb(urb);
+		return -ENOMEM;
+	}
+
+	pipe = usb_rcvisocpipe(data-&gt;udev, data-&gt;isoc_rx_ep-&gt;bEndpointAddress);
+
+	urb-&gt;dev      = data-&gt;udev;
+	urb-&gt;pipe     = pipe;
+	urb-&gt;context  = hdev;
+	urb-&gt;complete = btusb_isoc_complete;
+	urb-&gt;interval = data-&gt;isoc_rx_ep-&gt;bInterval;
+
+	urb-&gt;transfer_flags  = URB_FREE_BUFFER | URB_ISO_ASAP;
+	urb-&gt;transfer_buffer = buf;
+	urb-&gt;transfer_buffer_length = size;
+
+	__fill_isoc_descriptor(urb, size,
+			le16_to_cpu(data-&gt;isoc_rx_ep-&gt;wMaxPacketSize));
+
+	usb_anchor_urb(urb, &amp;data-&gt;isoc_anchor);
+
 	err = usb_submit_urb(urb, GFP_KERNEL);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
@@ -392,6 +532,11 @@ static int btusb_close(struct hci_dev *hdev)
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
+	flush_work(&amp;data-&gt;work);
+
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
 	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
 
@@ -453,6 +598,9 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_ACLDATA_PKT:
+		if (!data-&gt;bulk_tx_ep || hdev-&gt;conn_hash.acl_num &lt; 1)
+			return -ENODEV;
+
 		urb = usb_alloc_urb(0, GFP_ATOMIC);
 		if (!urb)
 			return -ENOMEM;
@@ -467,9 +615,31 @@ static int btusb_send_frame(struct sk_buff *skb)
 		break;
 
 	case HCI_SCODATA_PKT:
+		if (!data-&gt;isoc_tx_ep || hdev-&gt;conn_hash.sco_num &lt; 1)
+			return -ENODEV;
+
+		urb = usb_alloc_urb(BTUSB_MAX_ISOC_FRAMES, GFP_ATOMIC);
+		if (!urb)
+			return -ENOMEM;
+
+		pipe = usb_sndisocpipe(data-&gt;udev,
+					data-&gt;isoc_tx_ep-&gt;bEndpointAddress);
+
+		urb-&gt;dev      = data-&gt;udev;
+		urb-&gt;pipe     = pipe;
+		urb-&gt;context  = skb;
+		urb-&gt;complete = btusb_tx_complete;
+		urb-&gt;interval = data-&gt;isoc_tx_ep-&gt;bInterval;
+
+		urb-&gt;transfer_flags  = URB_ISO_ASAP;
+		urb-&gt;transfer_buffer = skb-&gt;data;
+		urb-&gt;transfer_buffer_length = skb-&gt;len;
+
+		__fill_isoc_descriptor(urb, skb-&gt;len,
+				le16_to_cpu(data-&gt;isoc_tx_ep-&gt;wMaxPacketSize));
+
 		hdev-&gt;stat.sco_tx++;
-		kfree_skb(skb);
-		return 0;
+		break;
 
 	default:
 		return -EILSEQ;
@@ -504,8 +674,62 @@ static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
+}
+
+static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
+{
+	struct btusb_data *data = hdev-&gt;driver_data;
+	struct usb_interface *intf = data-&gt;isoc;
+	struct usb_endpoint_descriptor *ep_desc;
+	int i, err;
+
+	if (!data-&gt;isoc)
+		return -ENODEV;
+
+	err = usb_set_interface(data-&gt;udev, 1, altsetting);
+	if (err &lt; 0) {
+		BT_ERR("%s setting interface failed (%d)", hdev-&gt;name, -err);
+		return err;
+	}
+
+	data-&gt;isoc_altsetting = altsetting;
+
+	data-&gt;isoc_tx_ep = NULL;
+	data-&gt;isoc_rx_ep = NULL;
+
+	for (i = 0; i &lt; intf-&gt;cur_altsetting-&gt;desc.bNumEndpoints; i++) {
+		ep_desc = &amp;intf-&gt;cur_altsetting-&gt;endpoint[i].desc;
+
+		if (!data-&gt;isoc_tx_ep &amp;&amp; usb_endpoint_is_isoc_out(ep_desc)) {
+			data-&gt;isoc_tx_ep = ep_desc;
+			continue;
+		}
+
+		if (!data-&gt;isoc_rx_ep &amp;&amp; usb_endpoint_is_isoc_in(ep_desc)) {
+			data-&gt;isoc_rx_ep = ep_desc;
+			continue;
+		}
+	}
+
+	if (!data-&gt;isoc_tx_ep || !data-&gt;isoc_rx_ep) {
+		BT_ERR("%s invalid SCO descriptors", hdev-&gt;name);
+		return -ENODEV;
+	}
+
+	return 0;
 }
 
 static void btusb_work(struct work_struct *work)
@@ -513,17 +737,26 @@ static void btusb_work(struct work_struct *work)
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num == 0) {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-		return;
-	}
+	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
+		if (data-&gt;isoc_altsetting != 2) {
+			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
 
-	if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-		if (btusb_submit_bulk_urb(hdev) &lt; 0)
-			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		else
-			btusb_submit_bulk_urb(hdev);
+			if (__set_isoc_interface(hdev, 2) &lt; 0)
+				return;
+		}
+
+		if (!test_and_set_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_isoc_urb(hdev) &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	} else {
+		clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+		usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+
+		__set_isoc_interface(hdev, 0);
 	}
 }
 
@@ -597,6 +830,7 @@ static int btusb_probe(struct usb_interface *intf,
 	init_usb_anchor(&amp;data-&gt;tx_anchor);
 	init_usb_anchor(&amp;data-&gt;intr_anchor);
 	init_usb_anchor(&amp;data-&gt;bulk_anchor);
+	init_usb_anchor(&amp;data-&gt;isoc_anchor);
 
 	hdev = hci_alloc_dev();
 	if (!hdev) {
@@ -620,6 +854,9 @@ static int btusb_probe(struct usb_interface *intf,
 
 	hdev-&gt;owner = THIS_MODULE;
 
+	/* interface numbers are hardcoded in the spec */
+	data-&gt;isoc = usb_ifnum_to_if(data-&gt;udev, 1);
+
 	if (reset || id-&gt;driver_info &amp; BTUSB_RESET)
 		set_bit(HCI_QUIRK_RESET_ON_INIT, &amp;hdev-&gt;quirks);
 
@@ -628,11 +865,16 @@ static int btusb_probe(struct usb_interface *intf,
 			set_bit(HCI_QUIRK_FIXUP_BUFFER_SIZE, &amp;hdev-&gt;quirks);
 	}
 
+	if (id-&gt;driver_info &amp; BTUSB_BROKEN_ISOC)
+		data-&gt;isoc = NULL;
+
 	if (id-&gt;driver_info &amp; BTUSB_SNIFFER) {
-		struct usb_device *udev = interface_to_usbdev(intf);
+		struct usb_device *udev = data-&gt;udev;
 
 		if (le16_to_cpu(udev-&gt;descriptor.bcdDevice) &gt; 0x997)
 			set_bit(HCI_QUIRK_RAW_DEVICE, &amp;hdev-&gt;quirks);
+
+		data-&gt;isoc = NULL;
 	}
 
 	if (id-&gt;driver_info &amp; BTUSB_BCM92035) {
@@ -646,6 +888,16 @@ static int btusb_probe(struct usb_interface *intf,
 		}
 	}
 
+	if (data-&gt;isoc) {
+		err = usb_driver_claim_interface(&amp;btusb_driver,
+							data-&gt;isoc, NULL);
+		if (err &lt; 0) {
+			hci_free_dev(hdev);
+			kfree(data);
+			return err;
+		}
+	}
+
 	err = hci_register_dev(hdev);
 	if (err &lt; 0) {
 		hci_free_dev(hdev);
@@ -670,6 +922,9 @@ static void btusb_disconnect(struct usb_interface *intf)
 
 	hdev = data-&gt;hdev;
 
+	if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
 	usb_set_intfdata(intf, NULL);
 
 	hci_unregister_dev(hdev);

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080818212647</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-18 21:26:47-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Montag 18 August 2008 19:07:53 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; actually we can't move the URB killing for ACL into notify() since that
&gt; &gt; &gt; gives me a kernel panic (fatal exception in interrupt).
&gt; &gt; &gt; 
&gt; &gt; &gt; Your patch for the IRQ disabling doesn't make a difference.
&gt; &gt; 
&gt; &gt; Please send me the version that triggers it.
&gt; 
&gt; the attached version makes it oops. Just create a connection with rfcomm
&gt; or sdptool and you will see it when disconnecting.

This is a context you cannot sleep in:

@@ -504,8 +674,62 @@ static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);

But you use usb_kill_anchored_urbs(). You should use usb_unlink_anchored_urbs()

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819040554</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 04:05:54-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; actually we can't move the URB killing for ACL into notify() since that
&gt; &gt; &gt; &gt; gives me a kernel panic (fatal exception in interrupt).
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Your patch for the IRQ disabling doesn't make a difference.
&gt; &gt; &gt; 
&gt; &gt; &gt; Please send me the version that triggers it.
&gt; &gt; 
&gt; &gt; the attached version makes it oops. Just create a connection with rfcomm
&gt; &gt; or sdptool and you will see it when disconnecting.
&gt; 
&gt; This is a context you cannot sleep in:
&gt; 
&gt; @@ -504,8 +674,62 @@ static void btusb_notify(struct hci_dev *hdev, unsigned int evt)
&gt;  
&gt;  	BT_DBG("%s evt %d", hdev-&gt;name, evt);
&gt;  
&gt; -	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
&gt; -		schedule_work(&amp;data-&gt;work);
&gt; +	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
&gt; +		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
&gt; +			if (btusb_submit_bulk_urb(hdev) &lt; 0)
&gt; +				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +			else
&gt; +				btusb_submit_bulk_urb(hdev);
&gt; +		}
&gt; +	} else {
&gt; +		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
&gt; +		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
&gt; 
&gt; But you use usb_kill_anchored_urbs(). You should use usb_unlink_anchored_urbs()

good catch. That was starring me at the code and not realizing that all
usb_kill_* version need to sleep.

However when using the unlink version, this gives me spinlock lockup
(with and without your IRQ disable patch). From the backtrace it seems
that usb_unanchor_urb is calling spinlock_irq_save here.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819070305</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 07:03:05-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Dienstag 19 August 2008 06:05:54 schrieb Marcel Holtmann:
&gt; However when using the unlink version, this gives me spinlock lockup
&gt; (with and without your IRQ disable patch). From the backtrace it seems
&gt; that usb_unanchor_urb is calling spinlock_irq_save here.

This patch should fix it.

	Regards
		Oliver

----

--- linux-2.6.27-rc3/drivers/usb/core/urb.c.alt2	2008-08-18 16:24:41.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-19 08:12:27.000000000 +0200
@@ -607,8 +607,12 @@ void usb_unlink_anchored_urbs(struct usb
 	while (!list_empty(&amp;anchor-&gt;urb_list)) {
 		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
 				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 		/* this will unanchor the URB */
 		usb_unlink_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	}
 	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 }

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819071944</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 07:19:44-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Oliver,

&gt; &gt; However when using the unlink version, this gives me spinlock lockup
&gt; &gt; (with and without your IRQ disable patch). From the backtrace it seems
&gt; &gt; that usb_unanchor_urb is calling spinlock_irq_save here.
&gt; 
&gt; This patch should fix it.

yes, that patch fixes it for me.

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Together with your IRQ disable patch, this should go into 2.6.27-rc4 and
it should also be submitted for 2.6.26-stable.

So do we have any chance to make usb_set_interface asynchron? For
example have the USB core queue submitted URBs until the new alternate
setting has been selected?

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819073058</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 07:30:58-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Dienstag 19 August 2008 09:19:44 schrieb Marcel Holtmann:
&gt; So do we have any chance to make usb_set_interface asynchron? For
&gt; example have the USB core queue submitted URBs until the new alternate
&gt; setting has been selected?

Alan,

this one's for you. Is there a deeper reason we enable and disable endpoints
therein?

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819075249</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 07:52:49-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Alan,

&gt; &gt; example have the USB core queue submitted URBs until the new alternate
&gt; &gt; setting has been selected?
&gt; 
&gt; this one's for you. Is there a deeper reason we enable and disable endpoints
&gt; therein?

just let me give you details on rational behind my question. A Bluetooth
USB device uses two interfaces. The first one for control (commands),
interrupt (event) and bulk (ACL data) endpoints. The second interface
contains the isoc (SCO data) endpoints.

T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bf8 ProdID=1003 Rev=53.42
C:* #Ifs= 3 Cfg#= 1 Atr=c0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

The second interface contains 6 alternate settings and you have to
select them based on your voice setting (8-bit or 16-bit) and the number
of SCO connections (0-3).

The Bluetooth specification has the details, but when using 16-bit input
data and one SCO connection, you have to select alternate setting #2. If
no SCO connections are open, we have to go with setting #0.

T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0bf8 ProdID=1003 Rev=53.42
C:* #Ifs= 3 Cfg#= 1 Atr=c0 MxPwr=  0mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
I:* If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
I:* If#= 2 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

So we can't have isoc URBs running all them time since that would drain
power. The old hci_usb did it this way and was an obvious issue showing
up on powertop.

The Bluetooth subsystem calls our notify() callback when the number of
connection or the voice setting changes. However this context can't
sleep and thus we can't call usb_set_interface(). Right now are using a
workqueue, but that is not an optimal solution since as Oliver pointed
correctly out, we have no idea when this gets scheduled.

My question is if we can have a usb_set_interface() version that we can
call from interrupt context and that will queue the URBs that we submit
in between until the new alternate setting has been selected.

I personally think the Bluetooth USB specification is broken and a bad
design, but that is what we have at the moment.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819144935</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-19 14:49:35-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

On Tue, 19 Aug 2008, Marcel Holtmann wrote:

&gt; Hi Alan,
&gt; 
&gt; &gt; &gt; example have the USB core queue submitted URBs until the new alternate
&gt; &gt; &gt; setting has been selected?
&gt; &gt; 
&gt; &gt; this one's for you. Is there a deeper reason we enable and disable endpoints
&gt; &gt; therein?

There is.  Endpoint properties can and do differ between altsettings.  
In order to work properly, the host controller hardware needs to be
aware of changes in the endpoint properties.  The only way to
accomplish this is to disable the endpoints for the altsetting going
away (thereby flushing their properties from the controller hardware)  
and then to enable the endpoints for the altsetting coming into
existence.

&gt; just let me give you details on rational behind my question. A Bluetooth
&gt; USB device uses two interfaces. The first one for control (commands),
&gt; interrupt (event) and bulk (ACL data) endpoints. The second interface
&gt; contains the isoc (SCO data) endpoints.
&gt; 
&gt; T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
&gt; D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
&gt; P:  Vendor=0bf8 ProdID=1003 Rev=53.42
&gt; C:* #Ifs= 3 Cfg#= 1 Atr=c0 MxPwr=  0mA
&gt; I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
&gt; E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
&gt; I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
&gt; I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
&gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
&gt; I:* If#= 2 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)

What is that last interface for?  It doesn't appear to be very useful, 
with no endpoints (and no driver)...

&gt; The second interface contains 6 alternate settings and you have to
&gt; select them based on your voice setting (8-bit or 16-bit) and the number
&gt; of SCO connections (0-3).
&gt; 
&gt; The Bluetooth specification has the details, but when using 16-bit input
&gt; data and one SCO connection, you have to select alternate setting #2. If
&gt; no SCO connections are open, we have to go with setting #0.

And presumably, if the number of SCO connections increases from one to 
two then you need to switch to yet another altsetting -- while keeping 
the existing connection intact, yes?

&gt; So we can't have isoc URBs running all them time since that would drain
&gt; power. The old hci_usb did it this way and was an obvious issue showing
&gt; up on powertop.
&gt; 
&gt; The Bluetooth subsystem calls our notify() callback when the number of
&gt; connection or the voice setting changes. However this context can't
&gt; sleep and thus we can't call usb_set_interface().

That's the real problem.  Why doesn't opening or closing a connection 
take place in a sleepable process context?

&gt; Right now are using a
&gt; workqueue, but that is not an optimal solution since as Oliver pointed
&gt; correctly out, we have no idea when this gets scheduled.
&gt; 
&gt; My question is if we can have a usb_set_interface() version that we can
&gt; call from interrupt context and that will queue the URBs that we submit
&gt; in between until the new alternate setting has been selected.
&gt; 
&gt; I personally think the Bluetooth USB specification is broken and a bad
&gt; design, but that is what we have at the moment.

I don't know how much of this comes from the Bluetooth USB spec and how 
much comes from the design of the Bluetooth subsystem.  It sounds like 
you're being asked to do too much in too short a time.

Is it possible to change the subsystem design so that, for example, in
addition to getting a notify() callback when the connection settings
change, you also call a ready() function in the subsystem core to tell
it when the new settings are ready for use?

If not, and you are forced to rely on queuing URBs for later 
submission, then I think it might be more appropriate to do this 
queuing in the Bluetooth driver code rather than in usbcore.  You could 
have an entire anchor devoted to deferred URBs.

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819151854</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 15:18:54-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Alan,

&gt; &gt; &gt; &gt; example have the USB core queue submitted URBs until the new alternate
&gt; &gt; &gt; &gt; setting has been selected?
&gt; &gt; &gt; 
&gt; &gt; &gt; this one's for you. Is there a deeper reason we enable and disable endpoints
&gt; &gt; &gt; therein?
&gt; 
&gt; There is.  Endpoint properties can and do differ between altsettings.  
&gt; In order to work properly, the host controller hardware needs to be
&gt; aware of changes in the endpoint properties.  The only way to
&gt; accomplish this is to disable the endpoints for the altsetting going
&gt; away (thereby flushing their properties from the controller hardware)  
&gt; and then to enable the endpoints for the altsetting coming into
&gt; existence.
&gt; 
&gt; &gt; just let me give you details on rational behind my question. A Bluetooth
&gt; &gt; USB device uses two interfaces. The first one for control (commands),
&gt; &gt; interrupt (event) and bulk (ACL data) endpoints. The second interface
&gt; &gt; contains the isoc (SCO data) endpoints.
&gt; &gt; 
&gt; &gt; T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
&gt; &gt; D:  Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
&gt; &gt; P:  Vendor=0bf8 ProdID=1003 Rev=53.42
&gt; &gt; C:* #Ifs= 3 Cfg#= 1 Atr=c0 MxPwr=  0mA
&gt; &gt; I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
&gt; &gt; E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; &gt; E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
&gt; &gt; I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
&gt; &gt; I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
&gt; &gt; I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
&gt; &gt; I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
&gt; &gt; I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
&gt; &gt; I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(unk. ) Sub=01 Prot=01 Driver=btusb
&gt; &gt; E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
&gt; &gt; E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
&gt; &gt; I:* If#= 2 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=00 Driver=(none)
&gt; 
&gt; What is that last interface for?  It doesn't appear to be very useful, 
&gt; with no endpoints (and no driver)...

that is DFU. Don't worry about that one.

&gt; &gt; The second interface contains 6 alternate settings and you have to
&gt; &gt; select them based on your voice setting (8-bit or 16-bit) and the number
&gt; &gt; of SCO connections (0-3).
&gt; &gt; 
&gt; &gt; The Bluetooth specification has the details, but when using 16-bit input
&gt; &gt; data and one SCO connection, you have to select alternate setting #2. If
&gt; &gt; no SCO connections are open, we have to go with setting #0.
&gt; 
&gt; And presumably, if the number of SCO connections increases from one to 
&gt; two then you need to switch to yet another altsetting -- while keeping 
&gt; the existing connection intact, yes?

The connection will be kept alive. That is not the problem. We have to
cancel all URBs, select the new setting and then re-submit them.

&gt; &gt; So we can't have isoc URBs running all them time since that would drain
&gt; &gt; power. The old hci_usb did it this way and was an obvious issue showing
&gt; &gt; up on powertop.
&gt; &gt; 
&gt; &gt; The Bluetooth subsystem calls our notify() callback when the number of
&gt; &gt; connection or the voice setting changes. However this context can't
&gt; &gt; sleep and thus we can't call usb_set_interface().
&gt; 
&gt; That's the real problem.  Why doesn't opening or closing a connection 
&gt; take place in a sleepable process context?

Because we get the HCI event for an established connection in an
interrupt context and then do the notifications based on that.

&gt; &gt; Right now are using a
&gt; &gt; workqueue, but that is not an optimal solution since as Oliver pointed
&gt; &gt; correctly out, we have no idea when this gets scheduled.
&gt; &gt; 
&gt; &gt; My question is if we can have a usb_set_interface() version that we can
&gt; &gt; call from interrupt context and that will queue the URBs that we submit
&gt; &gt; in between until the new alternate setting has been selected.
&gt; &gt; 
&gt; &gt; I personally think the Bluetooth USB specification is broken and a bad
&gt; &gt; design, but that is what we have at the moment.
&gt; 
&gt; I don't know how much of this comes from the Bluetooth USB spec and how 
&gt; much comes from the design of the Bluetooth subsystem.  It sounds like 
&gt; you're being asked to do too much in too short a time.

As mentioned above, there is nothing much we can do. Once we get the
connection established event, we have to submit URBs. The event comes in
via an interrupt URB. In theory we could defer the processing of the HCI
events, but that would have bad impact on all other parts of Bluetooth
and doing this only for audio makes no sense.

&gt; Is it possible to change the subsystem design so that, for example, in
&gt; addition to getting a notify() callback when the connection settings
&gt; change, you also call a ready() function in the subsystem core to tell
&gt; it when the new settings are ready for use?

I was thinking about that. However it is still the same problem. We do
have to submit URBs as soon as the connection is up. For the bulk URBs
(for ACL) it is no problem. The only issue is with isoc URB (for SCO),
because we have to pick an alternate setting first.

&gt; If not, and you are forced to rely on queuing URBs for later 
&gt; submission, then I think it might be more appropriate to do this 
&gt; queuing in the Bluetooth driver code rather than in usbcore.  You could 
&gt; have an entire anchor devoted to deferred URBs.

What happens if we submit the isoc URBs right away and the call
usb_set_interface at some later time. Will these be canceled or what
happens to them when switching the endpoint.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819155322</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-19 15:53:22-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

On Tue, 19 Aug 2008, Marcel Holtmann wrote:

&gt; &gt; And presumably, if the number of SCO connections increases from one to 
&gt; &gt; two then you need to switch to yet another altsetting -- while keeping 
&gt; &gt; the existing connection intact, yes?
&gt; 
&gt; The connection will be kept alive. That is not the problem. We have to
&gt; cancel all URBs, select the new setting and then re-submit them.

Along with any URBs that were generated while the new altsetting was 
being installed, right?

If you're already keeping track of old URBs that were cancelled, why is 
it hard to keep track of new URBs as well?

&gt; As mentioned above, there is nothing much we can do. Once we get the
&gt; connection established event, we have to submit URBs. The event comes in
&gt; via an interrupt URB. In theory we could defer the processing of the HCI
&gt; events, but that would have bad impact on all other parts of Bluetooth
&gt; and doing this only for audio makes no sense.

How about deferring only the submission of isoc URBs while doing all 
the others immediately?

&gt; &gt; Is it possible to change the subsystem design so that, for example, in
&gt; &gt; addition to getting a notify() callback when the connection settings
&gt; &gt; change, you also call a ready() function in the subsystem core to tell
&gt; &gt; it when the new settings are ready for use?
&gt; 
&gt; I was thinking about that. However it is still the same problem. We do
&gt; have to submit URBs as soon as the connection is up. For the bulk URBs
&gt; (for ACL) it is no problem. The only issue is with isoc URB (for SCO),
&gt; because we have to pick an alternate setting first.

Well, you _can't_ submit isoc URBs before changing the altsetting; it
just won't work.  So you can't start submitting them as soon as the
connection is up -- the hardware doesn't allow it.  One way or another
they have to be deferred.  The only question is how the deferrals 
should be implemented.

&gt; &gt; If not, and you are forced to rely on queuing URBs for later 
&gt; &gt; submission, then I think it might be more appropriate to do this 
&gt; &gt; queuing in the Bluetooth driver code rather than in usbcore.  You could 
&gt; &gt; have an entire anchor devoted to deferred URBs.
&gt; 
&gt; What happens if we submit the isoc URBs right away and the call
&gt; usb_set_interface at some later time. Will these be canceled or what
&gt; happens to them when switching the endpoint.

When you call usb_set_interface(), all pending URBs for that interface 
will be cancelled and will complete with a status of -ESHUTDOWN.

(Hmm, looking at the code I see that the altsetting gets changed
_before_ the old URBs are cancelled.  That probably is a bug...)

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819181946</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 18:19:46-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Hi Alan,

&gt; &gt; &gt; And presumably, if the number of SCO connections increases from one to 
&gt; &gt; &gt; two then you need to switch to yet another altsetting -- while keeping 
&gt; &gt; &gt; the existing connection intact, yes?
&gt; &gt; 
&gt; &gt; The connection will be kept alive. That is not the problem. We have to
&gt; &gt; cancel all URBs, select the new setting and then re-submit them.
&gt; 
&gt; Along with any URBs that were generated while the new altsetting was 
&gt; being installed, right?
&gt; 
&gt; If you're already keeping track of old URBs that were cancelled, why is 
&gt; it hard to keep track of new URBs as well?
&gt; 
&gt; &gt; As mentioned above, there is nothing much we can do. Once we get the
&gt; &gt; connection established event, we have to submit URBs. The event comes in
&gt; &gt; via an interrupt URB. In theory we could defer the processing of the HCI
&gt; &gt; events, but that would have bad impact on all other parts of Bluetooth
&gt; &gt; and doing this only for audio makes no sense.
&gt; 
&gt; How about deferring only the submission of isoc URBs while doing all 
&gt; the others immediately?

the bulk, control and interrupt URBs are on a different interface and so
they are not affected.

&gt; &gt; &gt; Is it possible to change the subsystem design so that, for example, in
&gt; &gt; &gt; addition to getting a notify() callback when the connection settings
&gt; &gt; &gt; change, you also call a ready() function in the subsystem core to tell
&gt; &gt; &gt; it when the new settings are ready for use?
&gt; &gt; 
&gt; &gt; I was thinking about that. However it is still the same problem. We do
&gt; &gt; have to submit URBs as soon as the connection is up. For the bulk URBs
&gt; &gt; (for ACL) it is no problem. The only issue is with isoc URB (for SCO),
&gt; &gt; because we have to pick an alternate setting first.
&gt; 
&gt; Well, you _can't_ submit isoc URBs before changing the altsetting; it
&gt; just won't work.  So you can't start submitting them as soon as the
&gt; connection is up -- the hardware doesn't allow it.  One way or another
&gt; they have to be deferred.  The only question is how the deferrals 
&gt; should be implemented.

Our problem is only that we are using a workqueue and can't make any
assumption when we get scheduled. This is obviously not perfect, but it
seems there is nothing much that can be done.

I think the specification is simply bad and we have to live with it.

&gt; &gt; &gt; If not, and you are forced to rely on queuing URBs for later 
&gt; &gt; &gt; submission, then I think it might be more appropriate to do this 
&gt; &gt; &gt; queuing in the Bluetooth driver code rather than in usbcore.  You could 
&gt; &gt; &gt; have an entire anchor devoted to deferred URBs.
&gt; &gt; 
&gt; &gt; What happens if we submit the isoc URBs right away and the call
&gt; &gt; usb_set_interface at some later time. Will these be canceled or what
&gt; &gt; happens to them when switching the endpoint.
&gt; 
&gt; When you call usb_set_interface(), all pending URBs for that interface 
&gt; will be cancelled and will complete with a status of -ESHUTDOWN.
&gt; 
&gt; (Hmm, looking at the code I see that the altsetting gets changed
&gt; _before_ the old URBs are cancelled.  That probably is a bug...)

Currently we cancel the URBs before calling usb_set_inferface.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819185723</emailId><senderName>Alan Stern</senderName><senderEmail>stern@rowland.harvard.edu</senderEmail><timestampReceived>2008-08-19 18:57:23-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

On Tue, 19 Aug 2008, Marcel Holtmann wrote:

&gt; Our problem is only that we are using a workqueue and can't make any
&gt; assumption when we get scheduled. This is obviously not perfect, but it
&gt; seems there is nothing much that can be done.
&gt; 
&gt; I think the specification is simply bad and we have to live with it.

I guess so.

Since these are isoc URBs anyway, shouldn't you simply drop them until
the new altsetting is ready?  That's a lot easier than trying to keep
track of them and deferring them (which doesn't make much sense for
Isochronous data).

Alan Stern

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080820063936</emailId><senderName>"Dave Higton"</senderName><senderEmail>dave.higton@nice.com</senderEmail><timestampReceived>2008-08-20 06:39:36-0400</timestampReceived><subject>RE: [rfc]btusb with SCO support</subject><body>

Alan Stern wrote:

&gt; On Tue, 19 Aug 2008, Marcel Holtmann wrote:
&gt; 
&gt; &gt; Our problem is only that we are using a workqueue and can't make any
&gt; &gt; assumption when we get scheduled. This is obviously not 
&gt; perfect, but it
&gt; &gt; seems there is nothing much that can be done.
&gt; &gt; 
&gt; &gt; I think the specification is simply bad and we have to live with it.
&gt; 
&gt; I guess so.
&gt; 
&gt; Since these are isoc URBs anyway, shouldn't you simply drop them until
&gt; the new altsetting is ready?  That's a lot easier than trying to keep
&gt; track of them and deferring them (which doesn't make much sense for
&gt; Isochronous data).

If they were scheduled before an altsetting change, they must be plain
wrong for the new altsetting - and indeed the new altsetting could be
0, in which case they wouldn't be sent anyway.  So it seems to me that
they should be dropped.

The only difference it makes, from the POV of the outside world, is an
ever so slight change in the time the stream is switched off.

Dave



************************************************************************************** \
***********************************************************************************************************************************************************


NICE CTI Systems UK Limited ("NICE") is registered in England under company number, \
3403044.  The registered office of NICE is at Tollbar Way, Hedge End, Southampton, \
Hampshire SO30 2ZP.

Confidentiality: This communication and any attachments are intended for the \
above-named persons only and may be confidential and/or legally privileged. Any \
opinions expressed in this communication are not necessarily those of NICE. If this \
communication has come to you in error you must take no action based on it, nor must \
you copy or show it to anyone; please delete/destroy and inform the sender by e-mail \
immediately.

Monitoring: NICE may monitor incoming and outgoing e-mails.

Viruses:  Although we have taken steps toward ensuring that this e-mail and \
attachments are free from any virus, we advise that in keeping with good computing \
practice the recipient should ensure they are actually virus free.

************************************************************************************** \
**************************************************************************************************************************************************************


 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080819130900</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 13:09:00-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Am Dienstag 19 August 2008 14:43:01 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; btusb has some races in disconnect()
&gt; &gt; 
&gt; &gt; - it doesn't deal with only the iso interface disconnected
&gt; 
&gt; It see the point here, but then we have to release the main interface
&gt; cleanly or just disable SCO. I would prefer to just disable SCO.

The patch disables the main interface. Just disabling SCO means that
btusb_data.isoc could no longer be treated as constant and locking for it
would be necessary. This seems extravagant for a minor use case.

&gt; &gt; - it releases the data interface before unregistering the iso interface
&gt; 
&gt; How does this happen? It doesn't do it that way.

From your version:
	if (data-&gt;isoc)
		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);

	usb_set_intfdata(intf, NULL);

	hci_unregister_dev(hdev);

First you release the interface, then you unregister the hci.

&gt; 
&gt; &gt; - it isn't carefull to kill all URBs in case of soft disconnect
&gt; 
&gt; The hci_unregister_dev will be calling the close() callback. Check
&gt; hci_core.c and hci_dev_do_close().

OK, I'll modify the patch.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819132826</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 13:28:26-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Hi Oliver,

&gt; &gt; &gt; btusb has some races in disconnect()
&gt; &gt; &gt; 
&gt; &gt; &gt; - it doesn't deal with only the iso interface disconnected
&gt; &gt; 
&gt; &gt; It see the point here, but then we have to release the main interface
&gt; &gt; cleanly or just disable SCO. I would prefer to just disable SCO.
&gt; 
&gt; The patch disables the main interface. Just disabling SCO means that
&gt; btusb_data.isoc could no longer be treated as constant and locking for it
&gt; would be necessary. This seems extravagant for a minor use case.

I am fine with both ways. Will decide which code looks cleaner :)

&gt; &gt; &gt; - it releases the data interface before unregistering the iso interface
&gt; &gt; 
&gt; &gt; How does this happen? It doesn't do it that way.
&gt; 
&gt; From your version:
&gt; 	if (data-&gt;isoc)
&gt; 		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
&gt; 
&gt; 	usb_set_intfdata(intf, NULL);
&gt; 
&gt; 	hci_unregister_dev(hdev);
&gt; 
&gt; First you release the interface, then you unregister the hci.

Putting it after hci_unregister_dev is an issue. The unregister will
call __hci_dev_put and then in return will call the destruct callback
which will free the data pointer.

So either we use hci_dev_hold or make sure that disconnect can only
disable the SCO interface. That comes directly with the first comment
from you.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819134022</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 13:40:22-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Am Dienstag 19 August 2008 15:28:26 schrieb Marcel Holtmann:
Hello,

&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; btusb has some races in disconnect()
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; - it doesn't deal with only the iso interface disconnected
&gt; &gt; &gt; 
&gt; &gt; &gt; It see the point here, but then we have to release the main interface
&gt; &gt; &gt; cleanly or just disable SCO. I would prefer to just disable SCO.
&gt; &gt; 
&gt; &gt; The patch disables the main interface. Just disabling SCO means that
&gt; &gt; btusb_data.isoc could no longer be treated as constant and locking for it
&gt; &gt; would be necessary. This seems extravagant for a minor use case.
&gt; 
&gt; I am fine with both ways. Will decide which code looks cleaner :)
&gt; 
&gt; &gt; &gt; &gt; - it releases the data interface before unregistering the iso interface
&gt; &gt; &gt; 
&gt; &gt; &gt; How does this happen? It doesn't do it that way.
&gt; &gt; 
&gt; &gt; From your version:
&gt; &gt; 	if (data-&gt;isoc)
&gt; &gt; 		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
&gt; &gt; 
&gt; &gt; 	usb_set_intfdata(intf, NULL);
&gt; &gt; 
&gt; &gt; 	hci_unregister_dev(hdev);
&gt; &gt; 
&gt; &gt; First you release the interface, then you unregister the hci.
&gt; 
&gt; Putting it after hci_unregister_dev is an issue. The unregister will
&gt; call __hci_dev_put and then in return will call the destruct callback
&gt; which will free the data pointer.
&gt; 
&gt; So either we use hci_dev_hold or make sure that disconnect can only
&gt; disable the SCO interface. That comes directly with the first comment
&gt; from you.

I'll make a patch with hci_dev_hold. It seems the cleaner solution.

	Regards
		Oliver

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819140540</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 14:05:40-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Am Dienstag 19 August 2008 15:28:26 schrieb Marcel Holtmann:
&gt; &gt; First you release the interface, then you unregister the hci.
&gt; 
&gt; Putting it after hci_unregister_dev is an issue. The unregister will
&gt; call __hci_dev_put and then in return will call the destruct callback
&gt; which will free the data pointer.
&gt; 
&gt; So either we use hci_dev_hold or make sure that disconnect can only
&gt; disable the SCO interface. That comes directly with the first comment
&gt; from you.

Here is a new version. I am afraid normal hci_dev_hold would fail if
the disconnect happens because the btusb module is being unloaded.

	Regards
		Oliver

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

----

--- linux-2.6.27-rc3/drivers/bluetooth/btusb.c.marcel	2008-08-19 10:21:51.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-19 15:50:06.000000000 +0200
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -523,6 +524,14 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -535,13 +544,9 @@ static int btusb_close(struct hci_dev *h
 	flush_work(&amp;data-&gt;work);
 
 	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
-
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
 
 	return 0;
 }
@@ -822,6 +827,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -890,7 +896,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -922,13 +928,23 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819143118</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 14:31:18-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Hi Oliver,

&gt; &gt; &gt; First you release the interface, then you unregister the hci.
&gt; &gt; 
&gt; &gt; Putting it after hci_unregister_dev is an issue. The unregister will
&gt; &gt; call __hci_dev_put and then in return will call the destruct callback
&gt; &gt; which will free the data pointer.
&gt; &gt; 
&gt; &gt; So either we use hci_dev_hold or make sure that disconnect can only
&gt; &gt; disable the SCO interface. That comes directly with the first comment
&gt; &gt; from you.
&gt; 
&gt; Here is a new version. I am afraid normal hci_dev_hold would fail if
&gt; the disconnect happens because the btusb module is being unloaded.

the btusb_stop_traffic change is bogus. You don't need that. The flush
callback will be called to ensure that all TX traffic is released.

I am not sure about hci_dev_hold. We ensure that a reference count to
the module is hold when the HCI device is brought up.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819151449</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-19 15:14:49-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Am Dienstag 19 August 2008 16:31:18 schrieb Marcel Holtmann:
&gt; Hi Oliver,
&gt; 
&gt; &gt; &gt; &gt; First you release the interface, then you unregister the hci.
&gt; &gt; &gt; 
&gt; &gt; &gt; Putting it after hci_unregister_dev is an issue. The unregister will
&gt; &gt; &gt; call __hci_dev_put and then in return will call the destruct callback
&gt; &gt; &gt; which will free the data pointer.
&gt; &gt; &gt; 
&gt; &gt; &gt; So either we use hci_dev_hold or make sure that disconnect can only
&gt; &gt; &gt; disable the SCO interface. That comes directly with the first comment
&gt; &gt; &gt; from you.
&gt; &gt; 
&gt; &gt; Here is a new version. I am afraid normal hci_dev_hold would fail if
&gt; &gt; the disconnect happens because the btusb module is being unloaded.
&gt; 
&gt; the btusb_stop_traffic change is bogus. You don't need that. The flush
&gt; callback will be called to ensure that all TX traffic is released.

OK.

&gt; I am not sure about hci_dev_hold. We ensure that a reference count to
&gt; the module is hold when the HCI device is brought up.

But won't the module be marked as going away and make try_module_get()
fail?

	Regards
		Oliver

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

---

--- linux-2.6.27-rc3/drivers/bluetooth/btusb.c.marcel	2008-08-19 10:21:51.000000000 +0200
+++ linux-2.6.27-rc3/drivers/bluetooth/btusb.c	2008-08-19 15:50:06.000000000 +0200
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -822,6 +827,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -890,7 +896,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -922,13 +928,23 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819152723</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 15:27:23-0400</timestampReceived><subject>Re: [patch]race condition in btusb disconnect() handling</subject><body>

Hi Oliver,

&gt; &gt; &gt; &gt; &gt; First you release the interface, then you unregister the hci.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Putting it after hci_unregister_dev is an issue. The unregister will
&gt; &gt; &gt; &gt; call __hci_dev_put and then in return will call the destruct callback
&gt; &gt; &gt; &gt; which will free the data pointer.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; So either we use hci_dev_hold or make sure that disconnect can only
&gt; &gt; &gt; &gt; disable the SCO interface. That comes directly with the first comment
&gt; &gt; &gt; &gt; from you.
&gt; &gt; &gt; 
&gt; &gt; &gt; Here is a new version. I am afraid normal hci_dev_hold would fail if
&gt; &gt; &gt; the disconnect happens because the btusb module is being unloaded.
&gt; &gt; 
&gt; &gt; the btusb_stop_traffic change is bogus. You don't need that. The flush
&gt; &gt; callback will be called to ensure that all TX traffic is released.
&gt; 
&gt; OK.
&gt; 
&gt; &gt; I am not sure about hci_dev_hold. We ensure that a reference count to
&gt; &gt; the module is hold when the HCI device is brought up.
&gt; 
&gt; But won't the module be marked as going away and make try_module_get()
&gt; fail?

when calling "hciconfig hci0 up" then it is impossible to unload the
btusb module since we keep a module reference.

I am thinking that just __set_isoc_interface(..., 0) when disconnect
gets called for the isoc interface and the releasing the interface is
the more cleaner way. I have to think about this.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080819123614</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-19 12:36:14-0400</timestampReceived><subject>Re: question on btusb_open()</subject><body>

Hi Oliver,

&gt; if this function is reentered there's a race with the error path. Can
&gt; it be reentered?

no. The Bluetooth core will protect against it. The open callback will
be triggered by "hciconfig hci0 up" or hcid/bluetoothd.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080818195711</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-08-18 19:57:11-0400</timestampReceived><subject>Re: [PATCH 04/39] pcmcia: use pcmcia_loop_config in bluetooth</subject><body>

Hi Dominik,

&gt; Use the config loop helper in bluetooth pcmcia drivers.
&gt; 
&gt; CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; CC: linux-bluetooth@vger.kernel.org
&gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;

I know that the Bluetooth PCMCIA drivers are not the best examples for
coding style, but please double check your whitespaces/tabs. We don't
wanna make it worse.

&gt; -	return get_tuple(handle, tuple, parse);
&gt; +        unsigned long try = (unsigned long) priv_data;
&gt; +
&gt; +       if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
&gt; +               p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;

This is an obvious case where something is wrong.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080822074228</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-22 07:42:28-0400</timestampReceived><subject>Re: 2.6.17-rc3: hci-usb related warnings and error on resume</subject><body>

&gt; I recently got a new laptop (HP 2510p) and have been playing with 
&gt; suspend/resume. Initially the dmesg after resume was fairly clean, but 
&gt; that was with the bluetooth device disabled (I initially disabled it in 
&gt; Windows).

avoid hci_usb. It is racy as hell. btusb actually works.


-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080828071755</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-08-28 07:17:55-0400</timestampReceived><subject>Re: [linux-pm] btusb hibernation/suspend breakage in current -git</subject><body>

Am Donnerstag 28 August 2008 00:33:06 schrieb Rafael J. Wysocki:
&gt; On Wednesday, 27 of August 2008, Rafael J. Wysocki wrote:
&gt; &gt; On Wednesday, 27 of August 2008, Oliver Neukum wrote:
&gt; &gt; &gt; Am Mittwoch 27 August 2008 15:04:55 schrieb Rafael J. Wysocki:
&gt; &gt; &gt; &gt; I'm quite confident it's specific to bluetooth, because I only need to turn
&gt; &gt; &gt; &gt; the bluetooth user space off, most importantly hcid, to make the problem go
&gt; &gt; &gt; &gt; away even without the patch (that is, without the patch I don't even have to
&gt; &gt; &gt; &gt; uload btusb before suspend if the bluetoot user land is not running).
&gt; &gt; &gt; 
&gt; &gt; &gt; But do you use any other usb driver without support for suspend/resume?
&gt; &gt; 
&gt; &gt; Well, probably not.
&gt; &gt; 
&gt; &gt; I'll check the hid, then.
&gt; 
&gt; I couldn't reproduce the breakage with suspend/resume support removed from
&gt; usbhid.
&gt; 
&gt; Let's just say it's related to BT, since your patch evidently fixes the problem
&gt; for me and I have just no reason to believe it's anything else than BT.
&gt; 
&gt; Thanks,
&gt; Rafael
&gt; 

Very good.

Marcel, here it is again. You may need to cut the USB bits depending
on which tree you want to apply it to.

Signed-off-by: Oliver Neukum &lt;oneukum@suse.de&gt;

	Regards
		Oliver
---

--- linux-2.6.27-rc4/drivers/usb/core/urb.c	2008-08-21 10:03:44.000000000 +0200
+++ linux-2.6.27-rc3/drivers/usb/core/urb.c	2008-08-22 17:25:49.000000000 +0200
@@ -601,15 +601,20 @@ EXPORT_SYMBOL_GPL(usb_kill_anchored_urbs
 void usb_unlink_anchored_urbs(struct usb_anchor *anchor)
 {
 	struct urb *victim;
+	unsigned long flags;
 
-	spin_lock_irq(&amp;anchor-&gt;lock);
+	spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	while (!list_empty(&amp;anchor-&gt;urb_list)) {
 		victim = list_entry(anchor-&gt;urb_list.prev, struct urb,
 				    anchor_list);
+		usb_get_urb(victim);
+		spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 		/* this will unanchor the URB */
 		usb_unlink_urb(victim);
+		usb_put_urb(victim);
+		spin_lock_irqsave(&amp;anchor-&gt;lock, flags);
 	}
-	spin_unlock_irq(&amp;anchor-&gt;lock);
+	spin_unlock_irqrestore(&amp;anchor-&gt;lock, flags);
 }
 EXPORT_SYMBOL_GPL(usb_unlink_anchored_urbs);
 
--- linux-2.6.27-rc4/drivers/bluetooth/btusb.c.alt	2008-08-25 15:02:14.000000000 +0200
+++ linux-2.6.27-rc4/drivers/bluetooth/btusb.c	2008-08-25 15:44:25.000000000 +0200
@@ -169,6 +169,7 @@ static struct usb_device_id blacklist_ta
 struct btusb_data {
 	struct hci_dev       *hdev;
 	struct usb_device    *udev;
+	struct usb_interface *acl;
 	struct usb_interface *isoc;
 
 	spinlock_t lock;
@@ -176,6 +177,7 @@ struct btusb_data {
 	unsigned long flags;
 
 	struct work_struct work;
+	struct work_struct waker;
 
 	struct usb_anchor tx_anchor;
 	struct usb_anchor intr_anchor;
@@ -189,6 +191,7 @@ struct btusb_data {
 	struct usb_endpoint_descriptor *isoc_rx_ep;
 
 	int isoc_altsetting;
+	int susp_count;
 };
 
 static void btusb_intr_complete(struct urb *urb)
@@ -227,7 +230,7 @@ static void btusb_intr_complete(struct u
 	}
 }
 
-static int btusb_submit_intr_urb(struct hci_dev *hdev)
+static int btusb_submit_intr_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -240,13 +243,13 @@ static int btusb_submit_intr_urb(struct
 	if (!data-&gt;intr_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_ATOMIC);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;intr_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_ATOMIC);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
@@ -262,7 +265,7 @@ static int btusb_submit_intr_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;intr_anchor);
 
-	err = usb_submit_urb(urb, GFP_ATOMIC);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -311,7 +314,7 @@ static void btusb_bulk_complete(struct u
 	}
 }
 
-static int btusb_submit_bulk_urb(struct hci_dev *hdev)
+static int btusb_submit_bulk_urb(struct hci_dev *hdev, gfp_t gfp)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
 	struct urb *urb;
@@ -324,18 +327,19 @@ static int btusb_submit_bulk_urb(struct
 	if (!data-&gt;bulk_rx_ep)
 		return -ENODEV;
 
-	urb = usb_alloc_urb(0, GFP_KERNEL);
+	urb = usb_alloc_urb(0, gfp);
 	if (!urb)
 		return -ENOMEM;
 
 	size = le16_to_cpu(data-&gt;bulk_rx_ep-&gt;wMaxPacketSize);
 
-	buf = kmalloc(size, GFP_KERNEL);
+	buf = kmalloc(size, gfp);
 	if (!buf) {
 		usb_free_urb(urb);
 		return -ENOMEM;
 	}
 
+	usb_mark_last_busy(data-&gt;udev);
 	pipe = usb_rcvbulkpipe(data-&gt;udev, data-&gt;bulk_rx_ep-&gt;bEndpointAddress);
 
 	usb_fill_bulk_urb(urb, data-&gt;udev, pipe,
@@ -345,7 +349,7 @@ static int btusb_submit_bulk_urb(struct
 
 	usb_anchor_urb(urb, &amp;data-&gt;bulk_anchor);
 
-	err = usb_submit_urb(urb, GFP_KERNEL);
+	err = usb_submit_urb(urb, gfp);
 	if (err &lt; 0) {
 		BT_ERR("%s urb %p submission failed (%d)",
 						hdev-&gt;name, urb, -err);
@@ -514,7 +518,7 @@ static int btusb_open(struct hci_dev *hd
 	if (test_and_set_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags))
 		return 0;
 
-	err = btusb_submit_intr_urb(hdev);
+	err = btusb_submit_intr_urb(hdev, GFP_KERNEL);
 	if (err &lt; 0) {
 		clear_bit(BTUSB_INTR_RUNNING, &amp;hdev-&gt;flags);
 		clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
@@ -523,6 +527,13 @@ static int btusb_open(struct hci_dev *hd
 	return err;
 }
 
+static void btusb_stop_traffic(struct btusb_data *data)
+{
+	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	usb_kill_anchored_urbs(&amp;data-&gt;isoc_anchor);
+}
+
 static int btusb_close(struct hci_dev *hdev)
 {
 	struct btusb_data *data = hdev-&gt;driver_data;
@@ -532,14 +543,12 @@ static int btusb_close(struct hci_dev *h
 	if (!test_and_clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags))
 		return 0;
 
-	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	flush_work(&amp;data-&gt;work);
 
+	clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
 	clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-
 	clear_bit(BTUSB_INTR_RUNNING, &amp;data-&gt;flags);
-	usb_kill_anchored_urbs(&amp;data-&gt;intr_anchor);
+	btusb_stop_traffic(data);
 
 	return 0;
 }
@@ -672,8 +681,19 @@ static void btusb_notify(struct hci_dev
 
 	BT_DBG("%s evt %d", hdev-&gt;name, evt);
 
-	if (evt == HCI_NOTIFY_CONN_ADD || evt == HCI_NOTIFY_CONN_DEL)
-		schedule_work(&amp;data-&gt;work);
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
+			if (btusb_submit_bulk_urb(hdev, GFP_ATOMIC) &lt; 0)
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_bulk_urb(hdev, GFP_ATOMIC);
+		}
+	} else {
+		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+		usb_unlink_anchored_urbs(&amp;data-&gt;bulk_anchor);
+	}
+
+	schedule_work(&amp;data-&gt;work);
 }
 
 static int inline __set_isoc_interface(struct hci_dev *hdev, int altsetting)
@@ -724,18 +744,6 @@ static void btusb_work(struct work_struc
 	struct btusb_data *data = container_of(work, struct btusb_data, work);
 	struct hci_dev *hdev = data-&gt;hdev;
 
-	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
-		if (!test_and_set_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags)) {
-			if (btusb_submit_bulk_urb(hdev) &lt; 0)
-				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-			else
-				btusb_submit_bulk_urb(hdev);
-		}
-	} else {
-		clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
-		usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
-	}
-
 	if (hdev-&gt;conn_hash.sco_num &gt; 0) {
 		if (data-&gt;isoc_altsetting != 2) {
 			clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
@@ -821,6 +829,7 @@ static int btusb_probe(struct usb_interf
 	}
 
 	data-&gt;udev = interface_to_usbdev(intf);
+	data-&gt;acl = intf;
 
 	spin_lock_init(&amp;data-&gt;lock);
 
@@ -889,7 +898,7 @@ static int btusb_probe(struct usb_interf
 
 	if (data-&gt;isoc) {
 		err = usb_driver_claim_interface(&amp;btusb_driver,
-							data-&gt;isoc, NULL);
+							data-&gt;isoc, data);
 		if (err &lt; 0) {
 			hci_free_dev(hdev);
 			kfree(data);
@@ -921,20 +930,92 @@ static void btusb_disconnect(struct usb_
 
 	hdev = data-&gt;hdev;
 
-	if (data-&gt;isoc)
-		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+	/* make sure we have a reference */
+	__hci_dev_hold(hdev);
 
-	usb_set_intfdata(intf, NULL);
+	usb_set_intfdata(data-&gt;acl, NULL);
+	if (data-&gt;isoc)
+		usb_set_intfdata(data-&gt;isoc, NULL);
 
+	/* unregister before releasing any interface */
 	hci_unregister_dev(hdev);
 
+	if (intf == data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;acl);
+	else if (data-&gt;isoc)
+		usb_driver_release_interface(&amp;btusb_driver, data-&gt;isoc);
+
+	/* release the reference */
+	__hci_dev_put(hdev);
 	hci_free_dev(hdev);
 }
 
+static int btusb_suspend(struct usb_interface *intf, pm_message_t message)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+
+	BT_DBG("%s called\n", __func__);
+
+	if (data-&gt;susp_count++)
+		return 0;
+
+	cancel_work_sync(&amp;data-&gt;work);
+	btusb_stop_traffic(data);
+	usb_kill_anchored_urbs(&amp;data-&gt;tx_anchor);
+	return 0;
+}
+
+static int btusb_resume(struct usb_interface *intf)
+{
+	struct btusb_data *data = usb_get_intfdata(intf);
+	struct hci_dev *hdev = data-&gt;hdev;
+	int ret;
+
+	if (--data-&gt;susp_count)
+		return 0;
+	if (test_bit(HCI_RUNNING, &amp;hdev-&gt;flags)) {
+		ret = btusb_submit_intr_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(HCI_RUNNING, &amp;hdev-&gt;flags);
+			return ret;
+		}
+	}
+
+	if (hdev-&gt;conn_hash.acl_num &gt; 0) {
+		ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+		if (ret &lt; 0) {
+			clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+			return ret;
+		} else {
+			ret = btusb_submit_bulk_urb(hdev, GFP_NOIO);
+			if (ret &lt; 0) {
+				clear_bit(BTUSB_BULK_RUNNING, &amp;data-&gt;flags);
+				usb_kill_anchored_urbs(&amp;data-&gt;bulk_anchor);
+				return ret;
+			}
+		}
+	}
+
+	if (data-&gt;isoc) {
+		if (test_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags)) {
+			ret = btusb_submit_isoc_urb(hdev);
+			if (ret &lt; 0)
+				clear_bit(BTUSB_ISOC_RUNNING, &amp;data-&gt;flags);
+			else
+				btusb_submit_isoc_urb(hdev);
+		}
+	}
+
+	schedule_work(&amp;data-&gt;work);
+	return 0;
+}
+
 static struct usb_driver btusb_driver = {
 	.name		= "btusb",
 	.probe		= btusb_probe,
 	.disconnect	= btusb_disconnect,
+	.suspend	= btusb_suspend,
+	.resume		= btusb_resume,
 	.id_table	= btusb_table,
 };
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080828080615</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-08-28 08:06:15-0400</timestampReceived><subject>Re: [rft]autosuspend for btusb</subject><body>

On Tue 2008-08-26 13:02:51, Oliver Neukum wrote:
&gt; Am Dienstag 26 August 2008 12:05:19 schrieb Pavel Machek:
&gt; 
&gt; Hi,
&gt; 
&gt; &gt; And it worked for me, but suspend died. I'll verify if that's a
&gt; &gt; problem in vanilla -rc4-git, too.
&gt; 
&gt; what exactly does "died" mean?

Black screen during resume, backlight on, but otherwise unresposnive machine.
									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080704222741</emailId><senderName>Gaël_Evenat</senderName><senderEmail>gevenat@insa-rennes.fr</senderEmail><timestampReceived>2008-07-04 22:27:41-0400</timestampReceived><subject>Re: errors on bluez-utils compilation</subject><body>

Luiz Augusto von Dentz a écrit :
&gt; Probably you forget to update bluez-libs.
&gt;
&gt; On Fri, Jul 4, 2008 at 1:31 PM, Gaël Evenat &lt;g007@wanadoo.fr&gt; wrote:
&gt;   
&gt;&gt; hi,
&gt;&gt; I tried to compile bluez-utils but there are some errors : (when I do make)
&gt;&gt; "
&gt;&gt; security.c: Dans la fonction «link_key_request» :
&gt;&gt; security.c:279: erreur: storage size of «req» isn»t known
&gt;&gt; security.c:291: erreur: «HCIGETAUTHINFO» undeclared (first use in this
&gt;&gt; function)
&gt;&gt; security.c:291: erreur: (Each undeclared identifier is reported only once
&gt;&gt; security.c:291: erreur: for each function it appears in.)
&gt;&gt; security.c:279: attention : unused variable «req»
&gt;&gt; "
&gt;&gt; I don't what to do... If you have ideas
&gt;&gt;
&gt;&gt; the ./configure was OK
&gt;&gt;
&gt;&gt; thank you
&gt;&gt;
&gt;&gt; (I have Ubuntu 8.04)
&gt;&gt;
&gt;&gt; --
&gt;&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth"
&gt;&gt; in
&gt;&gt; the body of a message to majordomo@vger.kernel.org
&gt;&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;&gt;
&gt;&gt;     
&gt;
&gt;
&gt;
&gt;   
yeah, great, it works
In fact, I thing I don't even install bluez-libs...but after intalled 
it, the compilation was successful.
Thank you

(I thought by installing bluez-utils I could use hsmicro but it don't work.
I don't know if I have to go to "test" directory (in bluez-utils-3.35 
eg) or if it should be possible to execut it directly from anywhere... 
where I go in "test" directory and write the command : &gt;./hsmicro 
00:1D:3B:BC:9F:E1 12 it give me an error about ./hstest
I don't know what to do...
)
and sorry for my english, I'm not very good

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080705162749</emailId><senderName>Jamie Lentin</senderName><senderEmail>jm@lentin.co.uk</senderEmail><timestampReceived>2008-07-05 16:27:49-0400</timestampReceived><subject>Adding Support For OQO Model 01+ Bluetooth</subject><body>

Hi,

I have a OQO Model 01+[1] that, for whatever reason, has had the USB ID's 
of it's internal wireless and bluetooth altered to a OQO specific product 
id.  However adding the Vendor/Product ID with the following patch to 
kernel version 2.6.25.6:-

--- linux-2.6.25.6.orig/drivers/bluetooth/hci_usb.c    2008-04-17 
03:49:44.000000000 +0100
+++ linux-2.6.25.6/drivers/bluetooth/hci_usb.c  2008-06-20 
19:48:51.000000000 +0100
@@ -98,6 +98,9 @@
         /* Canyon CN-BTU1 with HID interfaces */
         { USB_DEVICE(0x0c10, 0x0000), .driver_info = HCI_RESET },

+       /* OQO Model 01+ internal Bluetooth */
+       { USB_DEVICE(0x1557, 0x0003) },
+
         { }     /* Terminating entry */
  };

Results in working bluetooth.  I can scan using hcitool and have 
transfered files to/from my mobile phone with success.  Are there any 
other tests I should run, or shall I submit the above as a formal patch?

According to this forum post[2] it is actually a CSR chipset.  I haven't 
opened my device to confirm this, but my lsusb output is available 
here[3].

Many thanks for all your work,

  [1] http://en.wikipedia.org/wiki/OQO#OQO_Model_01_.26_01.2B
      (the OQO site doesn't seem to have a product description anymore)
  [2] http://www.oqotalk.com/index.php/topic,10.0.html#msg435
  [3] http://jamie.lentin.co.uk/hardware/oqo_01plus/lsusb.txt
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080708155642</emailId><senderName>Tim Gardner</senderName><senderEmail>timg@tpi.com</senderEmail><timestampReceived>2008-07-08 15:56:42-0400</timestampReceived><subject>Set HCI_RESET for Broadcomm 2046</subject><body>

From e5cb6d2dbd8a3446a44f4506a8fe1739f4284732 Mon Sep 17 00:00:00 2001
From: Michael Frey (Senior Manager, MID) &lt;michael.frey@canonical.com&gt;
Date: Tue, 8 Jul 2008 14:01:48 +0100
Subject: [PATCH] Set HCI_RESET for Broadcomm 2046

Signed-off-by: Michael Frey (Senior Manager, MID) &lt;michael.frey@canonical.com&gt;
Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
---
 drivers/bluetooth/hci_usb.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index 149ddaf..0254a6b 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -138,6 +138,9 @@ static struct usb_device_id blacklist_ids[] = {
 	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
 	/* Dell Wireless 410 */
 	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+        
+        /* Broadcom 2046 */
+        { USB_DEVICE(0x0a5c, 0x2151), .driver_info = HCI_RESET },
 
 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
 	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
-- 
1.5.4.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717093344</emailId><senderName>Mateusz</senderName><senderEmail>m.patelak@gmail.com</senderEmail><timestampReceived>2008-07-17 09:33:44-0400</timestampReceived><subject>RFCOMM connection timeout question (rfcomm/sock.c)</subject><body>

Hello,

I'm trying to understand the following piece of kernel code in rfcomm/sock.c.

rfcomm_sock_connect -&gt; rfcomm_dlc_open -&gt; bt_sock_wait_state

The last procedure waits until the sk's state changes to BT_CONNECTED.

1. When creating sk socket the sk_sndtimeo member of sk is initialized
to RFCOMM_CONN_TIMEOUT, which in my kernel code is HZ * 30 which, as I
see it, should be 30 seconds. However after enabling debug, I can see
that the timeout returned by  sock_sndtimeo is 7500. How could this
be?

2. What is the role of the bt_sock_wait_state? If timeout expires it
returns error code 115 (EINPROGRESS). What does the situation look
like here? Is the client still trying to connect to a remote device?
If so, how should the client program handle this error code? Is
ignoring it a good option or should it rather call the
rfcomm_socket_release function? What would happen if the client tried
to connect to the same remote device using rfcomm_sock_connect after
receiving this error code? Is there a way to notify the client that
the connection was made (BT_CONNECTED) without waiting on the
bt_sock_wait_state function.

3. Is there a way to control this timeout in a more flexible fashion
or is it impossible due to some BT specification bits?

Thanks in advance for all the answers. Your support and suggestions
are greatly appreciated.

Best wishes,
Mateusz
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080715183958</emailId><senderName>Alan Louis Scheinine</senderName><senderEmail>alscheinine@tuffmail.us</senderEmail><timestampReceived>2008-07-15 18:39:58-0400</timestampReceived><subject>installation instructions</subject><body>

For bluez-libs-3.36 the package-specific installation
instructions are in README (the INSTALL file has only
generic instructions).  In the README file it is writtern

In order to compile Bluetooth libraries you need following software packages:
         - Linux Bluetooth protocol stack (BlueZ)
         - GCC compiler

But what do you mean by "Linux Bluetooth protocol stack (BlueZ)"?
Usually such a message describes the _prerequisites_, not the package
in which the file is found!!!  Does the phrase mean that the
kernel drivers must be available?  Or do you mean "this package"?
Moreover, "Linux Bluetooth protocol stack (BlueZ)" is the title of
the WWW site, not a specific software package.  Is bluez-utils a
prerequisite, since it is one of several packages that can be
downloaded from the site?
    Please be more precise.
-- 

  Alan Scheinine
  5010 Mancuso Lane, Apt. 621
  Baton Rouge, LA 70809

  Email: alscheinine@tuffmail.us
  Office phone: 225 578 0294
  (Mobile phone Italy: 347 7990472   [+39 347 7990472])
  Mobile phone USA:   225 288 4176  [+1 225 288 4176]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717112457</emailId><senderName>Sam</senderName><senderEmail>rotisseriecat@gmail.com</senderEmail><timestampReceived>2008-07-17 11:24:57-0400</timestampReceived><subject>bluez-utils compilation error.</subject><body>

Hello. I'm having a bit of trouble compiling bluez-utils using the
.tar.gz source. I need to run this configuration to enable all the
tools (dfutool, etc.)

Here's a pastebin of the bash: http://pastebin.ca/1073779

make[2]: Entering directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
make  all-am
make[3]: Entering directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd
-I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I../eglib
-I../gdbus -DPLUGINDIR=\""/g/lib/bluetooth/plugins"\" -Wall -O2
-D_FORTIFY_SOURCE=2 -fPIE -MT security.o -MD -MP -MF
.deps/security.Tpo -c -o security.o security.c
security.c: In function 'link_key_request':
security.c:279: error: storage size of 'req' isn't known
security.c:291: error: 'HCIGETAUTHINFO' undeclared (first use in this function)
security.c:291: error: (Each undeclared identifier is reported only once
security.c:291: error: for each function it appears in.)
security.c:279: warning: unused variable 'req'
make[3]: *** [security.o] Error 1
make[3]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
make[2]: *** [all] Error 2
make[2]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36'
make: *** [all] Error 2

Any thoughts on what might be the trouble would be greatly
appreciated.  Is it possible to find a .deb package of bluez-utils
with all the tools enabled?

Thank you,

Sam
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080712152856</emailId><senderName>nased0</senderName><senderEmail>nased0@aster.pl</senderEmail><timestampReceived>2008-07-12 15:28:56-0400</timestampReceived><subject>Bluez-utils-3.36 hidd daemon does not compile on Suse 11 x64</subject><body>

I downloaded old version 2.25 of bluez-utils, compiled and installed it, then
compiled and installed v. 3.36 over 2.25 to be able to use my MS
Bluetooth mouse.
Suse 11 64-bit distribution does not have a hidd daemon file included,
therefore its Bluetooth configurators only pretend to work.
I think that Suse 11 x64 distro developers were not able to
compile is also.


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080719211227</emailId><senderName>Vegard Nossum</senderName><senderEmail>vegard.nossum@gmail.com</senderEmail><timestampReceived>2008-07-19 21:12:27-0400</timestampReceived><subject>[PATCH] Bluetooth: fix oops in rfcomm tty code (v2)</subject><body>

Hi,

This is a resend of a patch I sent earlier. It fixes a reproducible
oops (see http://lkml.org/lkml/2008/7/13/89 for test case), and I'd
be very happy for some feedback from Bluetooth people. Can this be
included for testing somewhere? I don't have any bluetooth devices
myself, so all my testing is limited to creating/releasing devices
with ioctl (I'm not sure that's good enough).

Dave: I have extended the rfcomm_dev_lock to include all the setup and
teardown of a single device. On second thought, it doesn't really make
sense to use a separate lock for that. May I have your opinion on this
second version? (I've fixed the comments/BUG_ON that you pointed out.)


Vegard


From ee99cfaae05bf6173efc77e5a100f1fbbc668301 Mon Sep 17 00:00:00 2001
From: Vegard Nossum &lt;vegard.nossum@gmail.com&gt;
Date: Sun, 13 Jul 2008 19:02:11 +0200
Subject: [PATCH] Bluetooth: fix oops in rfcomm tty code

Soeren Sonnenburg reported:
&gt; this oops happened after a couple of s2ram cycles so it might be very
&gt; well crap. However I somehow triggered it by /etc/init.d/bluetooth
&gt; stop/start's which also call hid2hci maybe even a connection was about
&gt; to be established at that time. As I remember having seen a problem like
&gt; this before I thought I report it (even though I have a madwifi tainted
&gt; kernel).
&gt; 
&gt; kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
&gt; with the same name in the same directory.

It turns out that the following sequence of actions will reproduce the
oops:

  1. Create a new rfcomm device (using RFCOMMCREATEDEV ioctl)
  2. (Try to) open the device
  3. Release the rfcomm device (using RFCOMMRELEASEDEV ioctl)

At this point, the "rfcomm?" tty is still in use, but the device is gone
from the internal rfcomm list, so the device id can be reused.

  4. Create a new rfcomm device with the same device id as before

And now kobject will complain that the tty already exists.

(See http://lkml.org/lkml/2008/7/13/89 for a reproducible test-case.)

This patch attempts to correct this by only removing the device from the
internal rfcomm list of devices at the final unregister, so that the id
won't get reused until the device has been completely destructed.

This should be safe as the RFCOMM_TTY_RELEASED bit will be set for the
device and prevent the device from being reopened after it has been
released.

We also fix a race (which would lead to the same oops) by including the
tty setup/teardown code in the rfcomm_dev_lock, the lock protecting the
list of devices.

Thanks to Dave Young for additional suggestions.

Reported-by: Soeren Sonnenburg &lt;kernel@nn7.de&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Vegard Nossum &lt;vegard.nossum@gmail.com&gt;
---
 net/bluetooth/rfcomm/tty.c |   27 ++++++++++++++-------------
 1 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/net/bluetooth/rfcomm/tty.c b/net/bluetooth/rfcomm/tty.c
index c919187..1709ccf 100644
--- a/net/bluetooth/rfcomm/tty.c
+++ b/net/bluetooth/rfcomm/tty.c
@@ -96,9 +96,11 @@ static void rfcomm_dev_destruct(struct rfcomm_dev *dev)
 	BT_DBG("dev %p dlc %p", dev, dlc);
 
 	/* Refcount should only hit zero when called from rfcomm_dev_del()
-	   which will have taken us off the list. Everything else are
-	   refcounting bugs. */
-	BUG_ON(!list_empty(&amp;dev-&gt;list));
+	   which will have set the RFCOMM_TTY_RELEASED bit. Everything else
+	   are refcounting bugs. */
+	BUG_ON(!test_bit(RFCOMM_TTY_RELEASED, &amp;dev-&gt;flags));
+
+	write_lock_bh(&amp;rfcomm_dev_lock);
 
 	rfcomm_dlc_lock(dlc);
 	/* Detach DLC if it's owned by this dev */
@@ -108,8 +110,11 @@ static void rfcomm_dev_destruct(struct rfcomm_dev *dev)
 
 	rfcomm_dlc_put(dlc);
 
+	list_del_init(&amp;dev-&gt;list);
 	tty_unregister_device(rfcomm_tty_driver, dev-&gt;id);
 
+	write_unlock_bh(&amp;rfcomm_dev_lock);
+
 	kfree(dev);
 
 	/* It's safe to call module_put() here because socket still
@@ -127,10 +132,8 @@ static inline void rfcomm_dev_put(struct rfcomm_dev *dev)
 	/* The reason this isn't actually a race, as you no
 	   doubt have a little voice screaming at you in your
 	   head, is that the refcount should never actually
-	   reach zero unless the device has already been taken
-	   off the list, in rfcomm_dev_del(). And if that's not
-	   true, we'll hit the BUG() in rfcomm_dev_destruct()
-	   anyway. */
+	   reach zero unless we've already set the
+	   RFCOMM_TTY_RELEASED bit in rfcomm_dev_del(). */
 	if (atomic_dec_and_test(&amp;dev-&gt;refcnt))
 		rfcomm_dev_destruct(dev);
 }
@@ -278,9 +281,8 @@ static int rfcomm_dev_add(struct rfcomm_dev_req *req, struct \
rfcomm_dlc *dlc)  __module_get(THIS_MODULE);
 
 out:
-	write_unlock_bh(&amp;rfcomm_dev_lock);
-
 	if (err &lt; 0) {
+		write_unlock_bh(&amp;rfcomm_dev_lock);
 		kfree(dev);
 		return err;
 	}
@@ -290,6 +292,7 @@ out:
 	if (IS_ERR(dev-&gt;tty_dev)) {
 		err = PTR_ERR(dev-&gt;tty_dev);
 		list_del(&amp;dev-&gt;list);
+		write_unlock_bh(&amp;rfcomm_dev_lock);
 		kfree(dev);
 		return err;
 	}
@@ -302,6 +305,8 @@ out:
 	if (device_create_file(dev-&gt;tty_dev, &amp;dev_attr_channel) &lt; 0)
 		BT_ERR("Failed to create channel attribute");
 
+	write_unlock_bh(&amp;rfcomm_dev_lock);
+
 	return dev-&gt;id;
 }
 
@@ -314,10 +319,6 @@ static void rfcomm_dev_del(struct rfcomm_dev *dev)
 	else
 		set_bit(RFCOMM_TTY_RELEASED, &amp;dev-&gt;flags);
 
-	write_lock_bh(&amp;rfcomm_dev_lock);
-	list_del_init(&amp;dev-&gt;list);
-	write_unlock_bh(&amp;rfcomm_dev_lock);
-
 	rfcomm_dev_put(dev);
 }
 
-- 
1.5.5.1

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080721050811</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-21 05:08:11-0400</timestampReceived><subject>Re: [PATCH 3/7] bluetooth: Add quirks for a few hci_usb devices</subject><body>

Hi Ben,

&gt; When the Dell 370 and 410 BT adapters are put into BT radio mode, they
&gt; need to be prepared like many other Broadcom adapters.
&gt; 
&gt; Also, add quirk Broadcom 2046 devices with HCI_RESET.
&gt; 
&gt; CC: linux-bluetooth@vger.kernel.org
&gt; Signed-off-by: Michael Frey &lt;michael.frey@canonical.com&gt;
&gt; Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; Signed-off-by: Ben Collins &lt;ben.collins@canonical.com&gt;
&gt; ---
&gt;  drivers/bluetooth/hci_usb.c |    7 +++++++
&gt;  1 files changed, 7 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
&gt; index 192522e..0254a6b 100644
&gt; --- a/drivers/bluetooth/hci_usb.c
&gt; +++ b/drivers/bluetooth/hci_usb.c
&gt; @@ -134,6 +134,13 @@ static struct usb_device_id blacklist_ids[] = {
&gt;  
&gt;  	/* Dell laptop with Broadcom chip */
&gt;  	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; +	/* Dell Wireless 370 */
&gt; +	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; +	/* Dell Wireless 410 */
&gt; +	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; +        
&gt; +        /* Broadcom 2046 */
&gt; +        { USB_DEVICE(0x0a5c, 0x2151), .driver_info = HCI_RESET },

do me a favor and use tabs and not whitespaces here. And is this the
latest Apple machine that has a Broadcom instead of a CSR chip in it. If
so, then let the comment reflect this.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080723223130</emailId><senderName>"keith preston"</senderName><senderEmail>keithpre@gmail.com</senderEmail><timestampReceived>2008-07-23 22:31:30-0400</timestampReceived><subject>[PATCH] bluez a2dp alsa fix</subject><body>

There is a small bug in pcm_bluetooth.c.   Typically in an alsa write
call you return the number of samples(frames) that you have processed.
  However in this case where we don't have a full block to encode in
SBC, we return basically return (incoming_buffer_size) %
(SBC_Encode_Block_size).   This is correct in the case where
(incoming_buffer_size) &lt; (SBC_Encode_Block_size), however is wrong
when (incoming_buffer_size) &gt; (SBC_Encode_Block_size), because this
statement ignores previously processed blocks.  This is a small one
line fix.   Patch is attached.    Also I don't know if anyone is
actively working on this, but this section of code is rather
inefficent.   The memcopy is only needed when partial blocks are found
and there are way too many repeated calculations inside the for loop.
 I guess a patch for that will come another day though.

Keith Preston

["return-correct-number-of-frames.patch" (text/x-patch)]

diff -Naur bluez-utils-3.36.orig/audio/pcm_bluetooth.c bluez-utils-3.36/audio/pcm_bluetooth.c
--- bluez-utils-3.36.orig/audio/pcm_bluetooth.c	2008-07-23 17:13:13.000000000 -0500
+++ bluez-utils-3.36/audio/pcm_bluetooth.c	2008-07-23 17:13:56.000000000 -0500
@@ -1032,7 +1032,7 @@
 		/* Remember we have some frames in the pipe now */
 		data-&gt;count += frames_to_read * frame_size;
 		if (data-&gt;count != a2dp-&gt;codesize) {
-			ret = frames_to_read;
+			ret += frames_to_read;
 			goto done;
 		}
 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080724120815</emailId><senderName>Kasper Revsbech</senderName><senderEmail>mail@krevsbech.dk</senderEmail><timestampReceived>2008-07-24 12:08:15-0400</timestampReceived><subject>RFCOMM server multiple client connections</subject><body>

Hi everyone.
I am trying do do a simple client server setup  with bluez.
I can manage to have a client and a server on rfcomm sockets where the 
server listen on a socket and accept a connection from the client by 
connect. But then if I set the server back to accepting without putting 
down the one client connection it doesn't accept a new connection.
When I read thought the documentation I can find on Bluez and Bluetooth 
in general it seems like it should be possible to multiplex serveal 
virtual rfcomm connections  on one actual connection. But however I 
really can get it working and can't find any code where they do 
something similar.

Hope that someone can give me a hint...

/Kasper Revsbech


Here is a example of what I have tried to make it work:

Client:
--------------------------

#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;bluetooth/bluetooth.h&gt;
#include &lt;bluetooth/rfcomm.h&gt;
#define number_of_connections 5

int main(int argc, char **argv)
{
 
  struct sockaddr_rc addr = { 0 };
  int s[number_of_connections], status, getpeer_status;
    char dest[18] = "00:11:67:05:4f:dc";
    struct sockaddr peer_address;
    int namelen = sizeof(peer_address),i;

    // set the connection parameters (who to connect to)
    addr.rc_family = AF_BLUETOOTH;
    addr.rc_channel = (uint8_t) 1;
    str2ba( dest, &amp;addr.rc_bdaddr );
   
for (i=0 ;i=(number_of_connections-1);i++){
   
      s[i] = socket(AF_BLUETOOTH, SOCK_STREAM, BTPROTO_RFCOMM);

  
     /*connect to server*/
      status = connect(s[i], (struct sockaddr *)&amp;addr, sizeof(addr));
   
   
    // send a message
    if( status == 0 ) {
      status = write(s[i], "hello!", 6);
    }

    if( status &lt; 0 ) perror("uh oh");
    }
  



    for (i=0 ;i=(number_of_connections-1);i++){
      close(s[i]);
    }  

    return 0;
}

-----------------------------------
Server:
-----------------------------------
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;bluetooth/bluetooth.h&gt;
#include &lt;bluetooth/rfcomm.h&gt;
#define number_of_connections 5

int main(int argc, char **argv)
{
    struct sockaddr_rc loc_addr = { 0 }, rem_addr = { 0 };
    char buf[1024] = { 0 };
    int s, client[number_of_connections], bytes_read;
    socklen_t opt = sizeof(rem_addr);
    int i;
    // allocate socket
    s = socket(AF_BLUETOOTH, SOCK_STREAM, BTPROTO_RFCOMM);

    // bind socket to port 1 of the first available
    // local bluetooth adapter
    loc_addr.rc_family = AF_BLUETOOTH;
    loc_addr.rc_bdaddr = *BDADDR_ANY;
    loc_addr.rc_channel = (uint8_t) 1;
    bind(s, (struct sockaddr *)&amp;loc_addr, sizeof(loc_addr));

    // put socket into listening mode
    listen(s, number_of_connections);
    for (i=0 ;i=(number_of_connections-1);i++){

    // accept one connection
      client[i] = accept(s, (struct sockaddr *)&amp;rem_addr, &amp;opt);

      ba2str( &amp;rem_addr.rc_bdaddr, buf );
      fprintf(stderr, "accepted connection from %s\n", buf);
      memset(buf, 0, sizeof(buf));

      // read data from the client
      bytes_read = read(client[i], buf, sizeof(buf));
      if( bytes_read &gt; 0 ) {
        printf("received [%s]\n", buf);
      }
    }
   
    // close connection
      for (i=0 ;i=(number_of_connections-1);i++){
       close(client[i]);
     }
     close(s);
    return 0;



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729122156</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-07-29 12:21:56-0400</timestampReceived><subject>HCI_Reset and Notification to User-Space</subject><body>

Hi,

I am trying to understand the HCI_RESET procedure and the notification of new device \
to the user-space, in case of a UART Bluetooth device.

What I am trying to understand is, in what place of hciattach does the whole system, \
[through dbus] get to know the existance of the bt device and what call [from which \
module] does that notification go to the user-space.

Just a brief about the hciattach / notification to user-space and socket setup.


Thanks in advance.
Pavan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080729071539</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-07-29 07:15:39-0400</timestampReceived><subject>[RFC] [PATCH 1/7] pcmcia: add pcmcia_loop_config() helper</subject><body>

By calling pcmcia_loop_config(), a pcmcia driver can iterate over all
available configuration options. During a driver's probe() phase, one
doesn't need to use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data
and pcmcia_parse_tuple directly in most if not all cases.

Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
---
 Documentation/pcmcia/driver-changes.txt |    6 +++
 drivers/pcmcia/pcmcia_resource.c        |   57 +++++++++++++++++++++++++++++++
 include/pcmcia/cistpl.h                 |    6 +++
 3 files changed, 69 insertions(+), 0 deletions(-)

By calling pcmcia_loop_config(), a pcmcia driver can iterate over all
available configuration options. During a driver's probe() phase, one
doesn't need to use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data
and pcmcia_parse_tuple directly in most if not all cases.

Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
---
 Documentation/pcmcia/driver-changes.txt |    6 +++
 drivers/pcmcia/pcmcia_resource.c        |   63 +++++++++++++++++++++++++++++++
 include/pcmcia/cistpl.h                 |    6 +++
 3 files changed, 75 insertions(+), 0 deletions(-)

diff --git a/Documentation/pcmcia/driver-changes.txt b/Documentation/pcmcia/driver-changes.txt
index 96f155e..44085c1 100644
--- a/Documentation/pcmcia/driver-changes.txt
+++ b/Documentation/pcmcia/driver-changes.txt
@@ -1,5 +1,11 @@
 This file details changes in 2.6 which affect PCMCIA card driver authors:
 
+* New configuration loop helper (as of 2.6.28)
+   By calling pcmcia_loop_config(), a driver can iterate over all available
+   configuration options. During a driver's probe() phase, one doesn't need
+   to use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data and
+   pcmcia_parse_tuple directly in most if not all cases.  
+
 * New release helper (as of 2.6.17)
    Instead of calling pcmcia_release_{configuration,io,irq,win}, all that's
    necessary now is calling pcmcia_disable_device. As there is no valid
diff --git a/drivers/pcmcia/pcmcia_resource.c b/drivers/pcmcia/pcmcia_resource.c
index 4884a18..0fa48aa 100644
--- a/drivers/pcmcia/pcmcia_resource.c
+++ b/drivers/pcmcia/pcmcia_resource.c
@@ -909,3 +909,66 @@ void pcmcia_disable_device(struct pcmcia_device *p_dev) {
 		pcmcia_release_window(p_dev-&gt;win);
 }
 EXPORT_SYMBOL(pcmcia_disable_device);
+
+
+/**
+ * pcmcia_loop_config() - loop over configuration options
+ * @p_dev:	the struct pcmcia_device which we need to loop for.
+ * @conf_check:	function to call for each configuration option.
+ *		It gets passed the struct pcmcia_device, the CIS data
+ *		describing the configuration option, and private data
+ *		being passed to pcmcia_loop_config()
+ * @priv_data:	private data to be passed to the conf_check function.
+ *
+ * pcmcia_loop_config() loops over all configuration options, and calls
+ * the driver-specific conf_check() for each one, checking whether
+ * it is a valid one.
+ */
+
+struct pcmcia_cfg_mem {
+	tuple_t tuple;
+	cisparse_t parse;
+	u8 buf[256];
+};
+
+int pcmcia_loop_config(struct pcmcia_device *p_dev,
+		       int	(*conf_check)	(struct pcmcia_device *p_dev,
+						 cistpl_cftable_entry_t *cfg,
+						 void *priv_data),
+		       void *priv_data)
+{
+	struct pcmcia_cfg_mem *cfg_mem;
+	tuple_t *tuple;
+	int ret = -ENODEV;
+
+	cfg_mem = kzalloc(sizeof(struct pcmcia_cfg_mem), GFP_KERNEL);
+	if (cfg_mem == NULL)
+		return -ENOMEM;
+
+	tuple = &amp;cfg_mem-&gt;tuple;
+	tuple-&gt;TupleData = cfg_mem-&gt;buf;
+	tuple-&gt;TupleDataMax = 255;
+	tuple-&gt;TupleOffset = 0;
+	tuple-&gt;DesiredTuple = CISTPL_CFTABLE_ENTRY;
+	tuple-&gt;Attributes = 0;
+
+	ret = pcmcia_get_first_tuple(p_dev, tuple);
+	while (!ret) {
+		if (pcmcia_get_tuple_data(p_dev, tuple))
+			goto next_entry;
+
+		if (pcmcia_parse_tuple(p_dev, tuple, &amp;cfg_mem-&gt;parse))
+			goto next_entry;
+
+		ret = conf_check(p_dev, &amp;cfg_mem-&gt;parse.cftable_entry,
+				 priv_data);
+		if (!ret)
+			break;
+
+	next_entry:
+		ret = pcmcia_get_next_tuple(p_dev, tuple);
+	}
+
+	return ret;
+}
+EXPORT_SYMBOL(pcmcia_loop_config);
diff --git a/include/pcmcia/cistpl.h b/include/pcmcia/cistpl.h
index 552a332..9830b34 100644
--- a/include/pcmcia/cistpl.h
+++ b/include/pcmcia/cistpl.h
@@ -607,4 +607,10 @@ int pccard_validate_cis(struct pcmcia_socket *s, unsigned int function, unsigned
 #define pcmcia_validate_cis(p_dev, info) \
 		pccard_validate_cis(p_dev-&gt;socket, p_dev-&gt;func, info)
 
+int pcmcia_loop_config(struct pcmcia_device *p_dev,
+		       int	(*conf_check)	(struct pcmcia_device *p_dev,
+						 cistpl_cftable_entry_t *cf,
+						 void *priv_data),
+		       void *priv_data);
+
 #endif /* LINUX_CISTPL_H */
-- 
1.5.4.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729071826</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-07-29 07:18:26-0400</timestampReceived><subject>[RFC] [PATCH 3/7] pcmcia: use pcmcia_loop_config in bluetooth</subject><body>

Use the config loop helper in bluetooth pcmcia drivers.

CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
CC: linux-bluetooth@vger.kernel.org
Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
---
 drivers/bluetooth/bt3c_cs.c   |  118 ++++++++++++++++-------------------------
 drivers/bluetooth/btuart_cs.c |  119 ++++++++++++++++-------------------------
 drivers/bluetooth/dtl1_cs.c   |   62 +++++-----------------
 3 files changed, 105 insertions(+), 194 deletions(-)

diff --git a/drivers/bluetooth/bt3c_cs.c b/drivers/bluetooth/bt3c_cs.c
index 593b7c5..e3d44f9 100644
--- a/drivers/bluetooth/bt3c_cs.c
+++ b/drivers/bluetooth/bt3c_cs.c
@@ -678,93 +678,67 @@ static void bt3c_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config(struct pcmcia_device *p_dev,
+			     cistpl_cftable_entry_t *cf,
+			     void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+        unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int bt3c_check_config_notpicky(struct pcmcia_device *p_dev,
+				      cistpl_cftable_entry_t *cf,
+				      void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3))
+	{
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int bt3c_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	bt3c_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if(!pcmcia_loop_config(link, bt3c_check_config, (void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if(!pcmcia_loop_config(link, bt3c_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/btuart_cs.c b/drivers/bluetooth/btuart_cs.c
index 68d1d25..dcd8063 100644
--- a/drivers/bluetooth/btuart_cs.c
+++ b/drivers/bluetooth/btuart_cs.c
@@ -607,94 +607,67 @@ static void btuart_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config(struct pcmcia_device *p_dev,
+			       cistpl_cftable_entry_t *cf,
+			       void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+        unsigned long try = (unsigned long) priv_data;
+
+	if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
+		p_dev-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int btuart_check_config_notpicky(struct pcmcia_device *p_dev,
+					cistpl_cftable_entry_t *cf,
+					void *priv_data)
 {
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
+	int j;
+
+	if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3))
+	{
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		for (j = 0; j &lt; 5; j++) {
+			p_dev-&gt;io.BasePort1 = base[j];
+			p_dev-&gt;io.IOAddrLines = base[j] ? 16 : 3;
+			if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+				return 0;
+		}
+	}
+	return -ENODEV;
 }
 
 static int btuart_config(struct pcmcia_device *link)
 {
-	static unsigned int base[5] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8, 0x0 };
 	btuart_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
-	int i, j, try;
-
-	/* First pass: look for a config entry that looks normal. */
-	tuple.TupleData = (cisdata_t *) buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-	/* Two tries: without IO aliases, then with aliases */
-	for (try = 0; try &lt; 2; try++) {
-		i = first_tuple(link, &amp;tuple, &amp;parse);
-		while (i != CS_NO_MORE_ITEMS) {
-			if (i != CS_SUCCESS)
-				goto next_entry;
-			if (cf-&gt;vpp1.present &amp; (1 &lt;&lt; CISTPL_POWER_VNOM))
-				link-&gt;conf.Vpp = cf-&gt;vpp1.param[CISTPL_POWER_VNOM] / 10000;
-			if ((cf-&gt;io.nwin &gt; 0) &amp;&amp; (cf-&gt;io.win[0].len == 8) &amp;&amp; (cf-&gt;io.win[0].base != 0)) {
-				link-&gt;conf.ConfigIndex = cf-&gt;index;
-				link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-				link-&gt;io.IOAddrLines = (try == 0) ? 16 : cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-next_entry:
-			i = next_tuple(link, &amp;tuple, &amp;parse);
-		}
-	}
+	int i;
+	unsigned long try;
+
+	/* First pass: look for a config entry that looks normal.
+	   Two tries: without IO aliases, then with aliases */
+	for (try = 0; try &lt; 2; try++)
+		if(!pcmcia_loop_config(link, btuart_check_config, (void *) try))
+			goto found_port;
 
 	/* Second pass: try to find an entry that isn't picky about
 	   its base address, then try to grab any standard serial port
 	   address, and finally try to get any free port. */
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin &gt; 0)
-		    &amp;&amp; ((cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK) &lt;= 3)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			for (j = 0; j &lt; 5; j++) {
-				link-&gt;io.BasePort1 = base[j];
-				link-&gt;io.IOAddrLines = base[j] ? 16 : 3;
-				i = pcmcia_request_io(link, &amp;link-&gt;io);
-				if (i == CS_SUCCESS)
-					goto found_port;
-			}
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
+	if(!pcmcia_loop_config(link, btuart_check_config_notpicky, NULL))
+		goto found_port;
 
-found_port:
-	if (i != CS_SUCCESS) {
-		BT_ERR("No usable port range found");
-		cs_error(link, RequestIO, i);
-		goto failed;
-	}
+	BT_ERR("No usable port range found");
+	cs_error(link, RequestIO, -ENODEV);
+	goto failed;
 
+found_port:
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
 		cs_error(link, RequestIRQ, i);
diff --git a/drivers/bluetooth/dtl1_cs.c b/drivers/bluetooth/dtl1_cs.c
index dae45cd..e30a633 100644
--- a/drivers/bluetooth/dtl1_cs.c
+++ b/drivers/bluetooth/dtl1_cs.c
@@ -590,66 +590,30 @@ static void dtl1_detach(struct pcmcia_device *link)
 	kfree(info);
 }
 
-static int get_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
+static int dtl1_confcheck(struct pcmcia_device *p_dev,
+			  cistpl_cftable_entry_t *cf,
+			  void *priv_data)
 {
-	int i;
-
-	i = pcmcia_get_tuple_data(handle, tuple);
-	if (i != CS_SUCCESS)
-		return i;
-
-	return pcmcia_parse_tuple(handle, tuple, parse);
-}
-
-static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_first_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
-}
-
-static int next_tuple(struct pcmcia_device *handle, tuple_t *tuple, cisparse_t *parse)
-{
-	if (pcmcia_get_next_tuple(handle, tuple) != CS_SUCCESS)
-		return CS_NO_MORE_ITEMS;
-	return get_tuple(handle, tuple, parse);
+	if ((cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
+		p_dev-&gt;conf.ConfigIndex = cf-&gt;index;
+		p_dev-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
+		p_dev-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
+		p_dev-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
+		if (!pcmcia_request_io(p_dev, &amp;p_dev-&gt;io))
+			return 0;
+	}
+	return -ENODEV;
 }
 
 static int dtl1_config(struct pcmcia_device *link)
 {
 	dtl1_info_t *info = link-&gt;priv;
-	tuple_t tuple;
-	u_short buf[256];
-	cisparse_t parse;
-	cistpl_cftable_entry_t *cf = &amp;parse.cftable_entry;
 	int i;
 
-	tuple.TupleData = (cisdata_t *)buf;
-	tuple.TupleOffset = 0;
-	tuple.TupleDataMax = 255;
-	tuple.Attributes = 0;
-	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
-
 	/* Look for a generic full-sized window */
 	link-&gt;io.NumPorts1 = 8;
-	i = first_tuple(link, &amp;tuple, &amp;parse);
-	while (i != CS_NO_MORE_ITEMS) {
-		if ((i == CS_SUCCESS) &amp;&amp; (cf-&gt;io.nwin == 1) &amp;&amp; (cf-&gt;io.win[0].len &gt; 8)) {
-			link-&gt;conf.ConfigIndex = cf-&gt;index;
-			link-&gt;io.BasePort1 = cf-&gt;io.win[0].base;
-			link-&gt;io.NumPorts1 = cf-&gt;io.win[0].len;	/*yo */
-			link-&gt;io.IOAddrLines = cf-&gt;io.flags &amp; CISTPL_IO_LINES_MASK;
-			i = pcmcia_request_io(link, &amp;link-&gt;io);
-			if (i == CS_SUCCESS)
-				break;
-		}
-		i = next_tuple(link, &amp;tuple, &amp;parse);
-	}
-
-	if (i != CS_SUCCESS) {
-		cs_error(link, RequestIO, i);
+	if (!pcmcia_loop_config(link, dtl1_confcheck, NULL))
 		goto failed;
-	}
 
 	i = pcmcia_request_irq(link, &amp;link-&gt;irq);
 	if (i != CS_SUCCESS) {
-- 
1.5.4.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080730064618</emailId><senderName>"Roland Aigner"</senderName><senderEmail>roland.aigner@orderman.com</senderEmail><timestampReceived>2008-07-30 06:46:18-0400</timestampReceived><subject>BlueZ and Bluetooth Qualification</subject><body>

Hi!
 
Sorry if this question was asked before, but appearantly I am not good
enough in finding the correct search terms ;)
 
Scenario:
I want to build a device which uses a BT-chipset from CSR, linux for ARM
(e.g. TI OMAP) and BlueZ for at least SPP usage.
 
1) If I want to sell this device with, what certifications and
qualifications for BT would I need? 
2) If I update the kernel/drivers/my own application (aka "firmware)
would I need to requalify something? 
3) If I update the BlueZ version would I need to requalify something? 
4) If I choose to add another profile to the system (e.g. Handsfree)
would I need to qualify the whole system again or only the Profile I
want to add?
 
 
If someone knows a better contact mailinglist/person for these types of
questions, please let me know!
 
TIA
roland
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729194844</emailId><senderName>Paul Waldo</senderName><senderEmail>paul@waldoware.com</senderEmail><timestampReceived>2008-07-29 19:48:44-0400</timestampReceived><subject>Trouble Connecting to NAP on Linux</subject><body>

Hi all,

I'm new to bluetooth, and got in over my head.  I have a Windows box that is acting \
as a Network Access Point as well as a PAN Server.  I have a laptop that I want to \
connect to the access point via bluetooth so it can access the Internet.  The laptop \
can connect to the NAP and the GN just fine when running Windows, but when the laptop \
is running linux, I get errors.  It can connect to the GN, but not the NAP:

************Start transcript*************************** 
root@paul-laptop:~# pand --killall
root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service GN -n
pand[17097]: Bluetooth PAN daemon version 3.26
pand[17097]: Connecting to 11:11:11:11:11:11
pand[17097]: bnep0 connected
root@paul-laptop:~# pand --killall
root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service NAP -n
pand[17123]: Bluetooth PAN daemon version 3.26
pand[17123]: Connecting to 11:11:11:11:11:11
pand[17123]: Connect to 11:11:11:11:11:11 failed. Protocol error(71)


[turn off GN service on server]


root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service NAP -n
pand[17797]: Bluetooth PAN daemon version 3.26
pand[17797]: Connecting to 11:11:11:11:11:11
pand[17797]: Connect to 11:11:11:11:11:11 failed. Connection refused(111)
************End transcript*************************** 

Here are the specifics of the Machines:
SERVER
Windows XP
BlueSoleil 1.6.1.4
All security turned off

CLIENT
Linux (Kubuntu 8.04 Hardy, AMD64)
bluez 3.26

I've googled everything I can think of.  Any help would be greatly appreciated.  \
Thanks in advance!

Paul
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080729211133</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-29 21:11:33-0400</timestampReceived><subject>Re: [RFC] [PATCH 3/7] pcmcia: use pcmcia_loop_config in bluetooth</subject><body>

Hi Dominik,

&gt; Use the config loop helper in bluetooth pcmcia drivers.
&gt; 
&gt; CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; CC: linux-bluetooth@vger.kernel.org
&gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;

in general I am okay with these changes, but can we please follow kernel
coding style. It is "if (...) {". The curly braces are supposed to be on
the same line. Only for functions the belong on the next line. Sorry for
being picky here :)

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729130320</emailId><senderName>"Ohad Ben-Cohen"</senderName><senderEmail>ohad@bencohen.org</senderEmail><timestampReceived>2008-07-29 13:03:20-0400</timestampReceived><subject>Re: HCI_Reset and Notification to User-Space</subject><body>

Hi Pavan,

On Tue, Jul 29, 2008 at 3:09 PM,  &lt;pavan_savoy@indiatimes.com&gt; wrote:
&gt; What I am trying to understand is, in what place of hciattach does the whole \
&gt; system, [through dbus] get to know the existance of the bt device and what call \
&gt; [from which module] does that notification go to the user-space.

When hciattach calls the HCIUARTSETPROTO ioctl, you get the following
trace in the kernel:
hci_uart_set_proto -&gt; hci_uart_register_dev -&gt; hci_register_dev -&gt; hci_notify.

The last function notifies user space (hcid) about the new device.
Hciattach does not use dbus and does not directly communicate with hcid.

Regards,
Ohad.

&gt; 
&gt; Just a brief about the hciattach / notification to user-space and socket setup.
&gt; 
&gt; 
&gt; Thanks in advance.
&gt; Pavan
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080731111009</emailId><senderName>Kasper Revsbech</senderName><senderEmail>mail@krevsbech.dk</senderEmail><timestampReceived>2008-07-31 11:10:09-0400</timestampReceived><subject>How to set packet type and how to see which packet type is in use</subject><body>

Hi
I am trying to compare some different Bluetooth setup. Doing that I 
would like to try with different baseband packet types.
So far I have been trying in two scenarios using hciconfig hci0 ptype 
&lt;type&gt; and that seems to work, at least in the case where I am using 
RFCOMM sockets for communication. But judging from the transfer rate it 
does not seem to work using a PAND/BNEP setup. This leads to the 
following questions:

 - How can I observe the currently uses packet type? I have been trying 
with hcidump and even parsed it with wireshark but can't really find the 
identifier that identifies witch packet type currently  is in use.

 - Can I by somehow set the packettype using setsocktop() on a rfcomm 
socket ? I have been look to find documentation on the content of the 
sockopt struc used but can't really find any. I have also tried looking 
in the code but can't figure out how to manipulate the packet type else 
that using hciconfig

Thanks
Kasper Revsbech
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729135254</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-07-29 13:52:54-0400</timestampReceived><subject>Re: HCI_Reset and Notification to User-Space</subject><body>

Thank you,

Also hci_notify notifies a HCI_DEV_REG event thru' the notifier chain, what I couldnt \
get was, how does HCI-daemon wait on it. (related to g_io_add_watch or something was \
my guess, but not sure..., or is it using the Stack-Internal Socket Events? which \
would require hci_dev_open to be called.)

I until now had thought notifier chains are used only for inter-kernel notifications. \
I guess I was wrong.

Please clarify.


----- Original Message -----
From: Ohad Ben-Cohen &lt;ohad@bencohen.org&gt;
To: pavan savoy &lt;pavan_savoy@indiatimes.com&gt;
Cc: linux-bluetooth@vger.kernel.org
Sent: Tue, 29 Jul 2008 18:33:20 +0530 (IST)
Subject: Re: HCI_Reset and Notification to User-Space

Hi Pavan,

On Tue, Jul 29, 2008 at 3:09 PM,  &lt;pavan_savoy@indiatimes.com&gt; wrote:
&gt; What I am trying to understand is, in what place of hciattach does the whole \
&gt; system, [through dbus] get to know the existance of the bt device and what call \
&gt; [from which module] does that notification go to the user-space.

When hciattach calls the HCIUARTSETPROTO ioctl, you get the following
trace in the kernel:
hci_uart_set_proto -&gt; hci_uart_register_dev -&gt; hci_register_dev -&gt; hci_notify.

The last function notifies user space (hcid) about the new device.
Hciattach does not use dbus and does not directly communicate with hcid.

Regards,
Ohad.

&gt; 
&gt; Just a brief about the hciattach / notification to user-space and socket setup.
&gt; 
&gt; 
&gt; Thanks in advance.
&gt; Pavan
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080729144525</emailId><senderName>"Ohad Ben-Cohen"</senderName><senderEmail>ohad@bencohen.org</senderEmail><timestampReceived>2008-07-29 14:45:25-0400</timestampReceived><subject>Re: HCI_Reset and Notification to User-Space</subject><body>

Pavan,

Please don't top-post.

On Tue, Jul 29, 2008 at 4:40 PM,  &lt;pavan_savoy@indiatimes.com&gt; wrote:
&gt; Also hci_notify notifies a HCI_DEV_REG event thru' the notifier chain, what I \
&gt; couldnt get was, how does HCI-daemon wait on it. (related to g_io_add_watch or \
&gt; something was my guess, but not sure..., or is it using the Stack-Internal Socket \
&gt; Events? which would require hci_dev_open to be called.) 
&gt; I until now had thought notifier chains are used only for inter-kernel \
&gt; notifications. I guess I was wrong.

The notification IS sent to a kernel client - the hci_sock_dev_event
function. That function in turn sends the event to a user space via a
socket which was created and watched by hcid beforehand. Check out
hcid's main function for more details.

Regards,
Ohad.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080724141305</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-24 14:13:05-0400</timestampReceived><subject>Re: RFCOMM server multiple client connections</subject><body>

Hi Kasper,

&gt; I am trying do do a simple client server setup  with bluez.
&gt; I can manage to have a client and a server on rfcomm sockets where the 
&gt; server listen on a socket and accept a connection from the client by 
&gt; connect. But then if I set the server back to accepting without putting 
&gt; down the one client connection it doesn't accept a new connection.
&gt; When I read thought the documentation I can find on Bluez and Bluetooth 
&gt; in general it seems like it should be possible to multiplex serveal 
&gt; virtual rfcomm connections  on one actual connection. But however I 
&gt; really can get it working and can't find any code where they do 
&gt; something similar.

are the clients running on multiple adapters. If they run on the same
adapter, it won't work. RFCOMM is not a layer that assign dynamic
channels numbers to each connection (like L2CAP does) and thus once a
RFCOMM channel is in use (the pair is bdaddr:channel) then you can
connect to it twice.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080725070319</emailId><senderName>Kasper Revsbech</senderName><senderEmail>mail@krevsbech.dk</senderEmail><timestampReceived>2008-07-25 07:03:19-0400</timestampReceived><subject>Re: RFCOMM server multiple client connections</subject><body>

Marcel Holtmann skrev:
&gt; Hi Kasper,
&gt; 
&gt; 
&gt; &gt; I am trying do do a simple client server setup  with bluez.
&gt; &gt; I can manage to have a client and a server on rfcomm sockets where the 
&gt; &gt; server listen on a socket and accept a connection from the client by 
&gt; &gt; connect. But then if I set the server back to accepting without putting 
&gt; &gt; down the one client connection it doesn't accept a new connection.
&gt; &gt; When I read thought the documentation I can find on Bluez and Bluetooth 
&gt; &gt; in general it seems like it should be possible to multiplex serveal 
&gt; &gt; virtual rfcomm connections  on one actual connection. But however I 
&gt; &gt; really can get it working and can't find any code where they do 
&gt; &gt; something similar.
&gt; &gt; 
&gt; 
&gt; are the clients running on multiple adapters.If they run on the sameadapter, it \
&gt; won't work. RFCOMM is not a layer that assign dynamic channels numbers to each \
&gt; connection (like L2CAP does) and thus once a RFCOMM channel is in use (the pair is \
&gt; bdaddr:channel) then you can connect to it twice.
&gt; 
&gt; 
Exactly the client sockets are all originated from the same adapter. 
What I want to do is by some libsocks tricks to emulate a native tcp/ip 
socket and provide nearly the same interface. So far I have been using 
RFCOMM. As I understand you, this setup with multiple sockets 
connections from each host is possible using a l2cap socket instead. 
Which leads into the next question. Reading documentation on Bluetooth 
stacks in general some seems to provide a SOCK_STREAM type using l2cap. 
However this does not seems to be the case in the Bluez stack. So is 
there a way to have a somehow reliable stream connection  allowing 
multiple connections from each host?

Regards and thanks a lot

Kasper Revsbech
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080724192903</emailId><senderName>"Brad Midgley"</senderName><senderEmail>bmidgley@gmail.com</senderEmail><timestampReceived>2008-07-24 19:29:03-0400</timestampReceived><subject>Re: [PATCH] bluez a2dp alsa fix</subject><body>

Keith

I may be wrong but I thought this list was for kernel issues.
bluez-devel might be better for userland.

I guess we have a similar problem in bluetooth_hsp_write. I can't make
the commit... when we're on git then everything will be good again.

On Wed, Jul 23, 2008 at 4:31 PM, keith preston &lt;keithpre@gmail.com&gt; wrote:
&gt;  However in this case where we don't have a full block to encode in
&gt; SBC, we return basically return (incoming_buffer_size) %
&gt; (SBC_Encode_Block_size).   This is correct in the case where
&gt; (incoming_buffer_size) &lt; (SBC_Encode_Block_size), however is wrong
&gt; when (incoming_buffer_size) &gt; (SBC_Encode_Block_size), because this
&gt; statement ignores previously processed blocks.

-- 
Brad
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080721055416</emailId><senderName>Ben Collins</senderName><senderEmail>ben.collins@canonical.com</senderEmail><timestampReceived>2008-07-21 05:54:16-0400</timestampReceived><subject>Re: [PATCH 3/7] bluetooth: Add quirks for a few hci_usb devices</subject><body>

On Mon, 2008-07-21 at 07:08 +0200, Marcel Holtmann wrote:
&gt; Hi Ben,
&gt; 
&gt; &gt; When the Dell 370 and 410 BT adapters are put into BT radio mode, they
&gt; &gt; need to be prepared like many other Broadcom adapters.
&gt; &gt; 
&gt; &gt; Also, add quirk Broadcom 2046 devices with HCI_RESET.
&gt; &gt; 
&gt; &gt; CC: linux-bluetooth@vger.kernel.org
&gt; &gt; Signed-off-by: Michael Frey &lt;michael.frey@canonical.com&gt;
&gt; &gt; Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
&gt; &gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; &gt; Signed-off-by: Ben Collins &lt;ben.collins@canonical.com&gt;
&gt; &gt; ---
&gt; &gt;  drivers/bluetooth/hci_usb.c |    7 +++++++
&gt; &gt;  1 files changed, 7 insertions(+), 0 deletions(-)
&gt; &gt; 
&gt; &gt; diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
&gt; &gt; index 192522e..0254a6b 100644
&gt; &gt; --- a/drivers/bluetooth/hci_usb.c
&gt; &gt; +++ b/drivers/bluetooth/hci_usb.c
&gt; &gt; @@ -134,6 +134,13 @@ static struct usb_device_id blacklist_ids[] = {
&gt; &gt;  
&gt; &gt;  	/* Dell laptop with Broadcom chip */
&gt; &gt;  	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; &gt; +	/* Dell Wireless 370 */
&gt; &gt; +	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; &gt; +	/* Dell Wireless 410 */
&gt; &gt; +	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; &gt; +        
&gt; &gt; +        /* Broadcom 2046 */
&gt; &gt; +        { USB_DEVICE(0x0a5c, 0x2151), .driver_info = HCI_RESET },
&gt; 
&gt; do me a favor and use tabs and not whitespaces here. And is this the
&gt; latest Apple machine that has a Broadcom instead of a CSR chip in it. If
&gt; so, then let the comment reflect this.

Whoops. That slipped through. I've no idea what system that device
actually came from. I'd have to ask Michael, since he was the one who
reported it. I'll resend a corrected patch in the morning.

Thanks Marcel.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080721160014</emailId><senderName>Ben Collins</senderName><senderEmail>ben.collins@canonical.com</senderEmail><timestampReceived>2008-07-21 16:00:14-0400</timestampReceived><subject>Re: [PATCH 3/7] bluetooth: Add quirks for a few hci_usb devices</subject><body>

Preface: The "Broadcom" device is on unreleased hardware, so I can't
disclose the actual model.

When the Dell 370 and 410 BT adapters are put into BT radio mode, they
need to be prepared like many other Broadcom adapters.
    
Also, add quirk Broadcom 2046 devices with HCI_RESET. Reference for this
bug: https://launchpad.net/bugs/249448
    
CC: linux-bluetooth@vger.kernel.org
Signed-off-by: Michael Frey &lt;michael.frey@canonical.com&gt;
Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Signed-off-by: Ben Collins &lt;ben.collins@canonical.com&gt;

diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index 192522e..c33bb59 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -134,6 +134,13 @@ static struct usb_device_id blacklist_ids[] = {
 
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	/* Dell Wireless 370 */
+	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	/* Dell Wireless 410 */
+	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+
+	/* Broadcom 2046 */
+	{ USB_DEVICE(0x0a5c, 0x2151), .driver_info = HCI_RESET },
 
 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
 	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080719213820</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-19 21:38:20-0400</timestampReceived><subject>Re: [PATCH] Bluetooth: fix oops in rfcomm tty code (v2)</subject><body>

Hi Vegard,

&gt; This is a resend of a patch I sent earlier. It fixes a reproducible
&gt; oops (see http://lkml.org/lkml/2008/7/13/89 for test case), and I'd
&gt; be very happy for some feedback from Bluetooth people. Can this be
&gt; included for testing somewhere? I don't have any bluetooth devices
&gt; myself, so all my testing is limited to creating/releasing devices
&gt; with ioctl (I'm not sure that's good enough).
&gt; 
&gt; Dave: I have extended the rfcomm_dev_lock to include all the setup and
&gt; teardown of a single device. On second thought, it doesn't really make
&gt; sense to use a separate lock for that. May I have your opinion on this
&gt; second version? (I've fixed the comments/BUG_ON that you pointed out.)

it seems it is the actually the first time, I see this one. Anyway, so
holding that lock is a bad idea. Fixing this the right way might be
tricky since the TTY layer is involved here and own the kobject. So I
would say we have to make sure that the RFCOMM TTY will hangup when
calling RELEASEDEV or otherwise fail.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080721065142</emailId><senderName>"Vegard Nossum"</senderName><senderEmail>vegard.nossum@gmail.com</senderEmail><timestampReceived>2008-07-21 06:51:42-0400</timestampReceived><subject>Re: [PATCH] Bluetooth: fix oops in rfcomm tty code (v2)</subject><body>

On Sat, Jul 19, 2008 at 11:38 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Vegard,
&gt;
&gt;&gt; This is a resend of a patch I sent earlier. It fixes a reproducible
&gt;&gt; oops (see http://lkml.org/lkml/2008/7/13/89 for test case), and I'd
&gt;&gt; be very happy for some feedback from Bluetooth people. Can this be
&gt;&gt; included for testing somewhere? I don't have any bluetooth devices
&gt;&gt; myself, so all my testing is limited to creating/releasing devices
&gt;&gt; with ioctl (I'm not sure that's good enough).
&gt;&gt;
&gt;&gt; Dave: I have extended the rfcomm_dev_lock to include all the setup and
&gt;&gt; teardown of a single device. On second thought, it doesn't really make
&gt;&gt; sense to use a separate lock for that. May I have your opinion on this
&gt;&gt; second version? (I've fixed the comments/BUG_ON that you pointed out.)
&gt;
&gt; it seems it is the actually the first time, I see this one. Anyway, so
&gt; holding that lock is a bad idea. Fixing this the right way might be
&gt; tricky since the TTY layer is involved here and own the kobject. So I
&gt; would say we have to make sure that the RFCOMM TTY will hangup when
&gt; calling RELEASEDEV or otherwise fail.

On Mon, Jul 21, 2008 at 7:14 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt;&gt; The patch titled
&gt;&gt;      Bluetooth: fix oops in rfcomm tty code
&gt;&gt; has been added to the -mm tree.  Its filename is
&gt;&gt;      bluetooth-fix-oops-in-rfcomm-tty-code-v2.patch
&gt;&gt;
&gt; just a quick note that I am not okay with this patch. Holding the lock
&gt; isn't the right solution since it would also block any other application
&gt; from creating new devices. We can't do this.

Hi,

We are not holding the lock across any ioctl/syscall boundary, which
would be an error anyway.

The lock now additionally protects the calls to:

    tty_register_device
    tty_unregister_device
    device_create_file

I don't think these functions block or do anything with the device
apart from just registering/unregistering the files.

Can you please explain in more detail what is wrong with the patch?
Where are we preventing other applications from creating new devices?
My intention was to prevent other applications from creating the
_same_ devices while they are still in use, although attempting to
register a new device (with an already-in-use ID) should simply fail,
and not block.

Thank you,


Vegard

-- 
"The animistic metaphor of the bug that maliciously sneaked in while
the programmer was not looking is intellectually dishonest as it
disguises that the error is the programmer's own creation."
	-- E. W. Dijkstra, EWD1036



-- 
"The animistic metaphor of the bug that maliciously sneaked in while
the programmer was not looking is intellectually dishonest as it
disguises that the error is the programmer's own creation."
	-- E. W. Dijkstra, EWD1036
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080721103113</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-21 10:31:13-0400</timestampReceived><subject>Re: [PATCH] Bluetooth: fix oops in rfcomm tty code (v2)</subject><body>

Hi Vegard,

&gt; &gt;&gt; This is a resend of a patch I sent earlier. It fixes a reproducible
&gt; &gt;&gt; oops (see http://lkml.org/lkml/2008/7/13/89 for test case), and I'd
&gt; &gt;&gt; be very happy for some feedback from Bluetooth people. Can this be
&gt; &gt;&gt; included for testing somewhere? I don't have any bluetooth devices
&gt; &gt;&gt; myself, so all my testing is limited to creating/releasing devices
&gt; &gt;&gt; with ioctl (I'm not sure that's good enough).
&gt; &gt;&gt;
&gt; &gt;&gt; Dave: I have extended the rfcomm_dev_lock to include all the setup and
&gt; &gt;&gt; teardown of a single device. On second thought, it doesn't really make
&gt; &gt;&gt; sense to use a separate lock for that. May I have your opinion on this
&gt; &gt;&gt; second version? (I've fixed the comments/BUG_ON that you pointed out.)
&gt; &gt;
&gt; &gt; it seems it is the actually the first time, I see this one. Anyway, so
&gt; &gt; holding that lock is a bad idea. Fixing this the right way might be
&gt; &gt; tricky since the TTY layer is involved here and own the kobject. So I
&gt; &gt; would say we have to make sure that the RFCOMM TTY will hangup when
&gt; &gt; calling RELEASEDEV or otherwise fail.
&gt; 
&gt; On Mon, Jul 21, 2008 at 7:14 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; &gt;&gt; The patch titled
&gt; &gt;&gt;      Bluetooth: fix oops in rfcomm tty code
&gt; &gt;&gt; has been added to the -mm tree.  Its filename is
&gt; &gt;&gt;      bluetooth-fix-oops-in-rfcomm-tty-code-v2.patch
&gt; &gt;&gt;
&gt; &gt; just a quick note that I am not okay with this patch. Holding the lock
&gt; &gt; isn't the right solution since it would also block any other application
&gt; &gt; from creating new devices. We can't do this.
&gt; 
&gt; Hi,
&gt; 
&gt; We are not holding the lock across any ioctl/syscall boundary, which
&gt; would be an error anyway.
&gt; 
&gt; The lock now additionally protects the calls to:
&gt; 
&gt;     tty_register_device
&gt;     tty_unregister_device
&gt;     device_create_file
&gt; 
&gt; I don't think these functions block or do anything with the device
&gt; apart from just registering/unregistering the files.
&gt; 
&gt; Can you please explain in more detail what is wrong with the patch?
&gt; Where are we preventing other applications from creating new devices?
&gt; My intention was to prevent other applications from creating the
&gt; _same_ devices while they are still in use, although attempting to
&gt; register a new device (with an already-in-use ID) should simply fail,
&gt; and not block.

I see an issue when a malicious application like the test program keeps
the TTY open. Then we would block any other TTY creation. Even if it is
a different TTY or process.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717121820</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-17 12:18:20-0400</timestampReceived><subject>Re: Bluez-utils-3.36 hidd daemon does not compile on Suse 11 x64</subject><body>

Hi,

&gt; I downloaded old version 2.25 of bluez-utils, compiled and installed it, then
&gt; compiled and installed v. 3.36 over 2.25 to be able to use my MS
&gt; Bluetooth mouse.
&gt; Suse 11 64-bit distribution does not have a hidd daemon file included,
&gt; therefore its Bluetooth configurators only pretend to work.
&gt; I think that Suse 11 x64 distro developers were not able to
&gt; compile is also.

I have no idea what you are talking about. The hidd compiles just fine
and the reason why SuSE not includes it is that the input service
supersedes hidd.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717183720</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-07-17 18:37:20-0400</timestampReceived><subject>Re: Bluez-utils-3.36 hidd daemon does not compile on Suse 11 x64</subject><body>

nased0 wrote:
&gt; Suse 11 64-bit distribution does not have a hidd daemon file included,
&gt; therefore its Bluetooth configurators only pretend to work.

I'd be interested in what you think is "only pretending to work". I don't want
to rule out a packaging flaw on my side, but at least for me it is working
fine with HID devices and rfcomm/dialup.

&gt; I think that Suse 11 x64 distro developers were not able to
&gt; compile is also.

I strongly object to that suspicion ;-)
It's not included on purpose, since it is obsoleted by input-service, as
Marcel already stated.

http://en.opensuse.org/Bluetooth might contain useful information to help you
set up your devices.

Have fun,

	Stefan
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080718192116</emailId><senderName>Pawel Witas</senderName><senderEmail>nased0@aster.pl</senderEmail><timestampReceived>2008-07-18 19:21:16-0400</timestampReceived><subject>Re: Bluez-utils-3.36 hidd daemon does not compile on Suse 11 x64</subject><body>



nased0 wrote:
&gt; &gt; Suse 11 64-bit distribution does not have a hidd daemon file included,
&gt; &gt; therefore its Bluetooth configurators only pretend to work.

I'd be interested in what you think is "only pretending to work". I
don't want
to rule out a packaging flaw on my side, but at least for me it is working
fine with HID devices and rfcomm/dialup.

&gt; &gt; I think that Suse 11 x64 distro developers were not able to
&gt; &gt; compile is also.

I strongly object to that suspicion  ;-)
It's not included on purpose, since it is obsoleted by input-service, as
Marcel already stated.

http://en.opensuse.org/Bluetooth might contain useful information to
help you
set up your devices.

Have fun,

	Stefan

I'm using Gnome, not KDE and Gnome configurator could not start my MS
Wireless Laser Mouse 8000.
I have a Compal JFL-92 laptop with integrated BT and Suse 11 x64.
I tried to configure my mouse manually according to some howto's found
on the web, but the final step was starting the hidd daemon.
When I compiled hidd (old version 2.25) and typed command:
 hidd --connect 00:17:FA:8A:BD:0B
and pressed a button at the bottom of my mouse
the mouse started to move my cursor.

I don't need anything more from BT, I can connect my Nokia phone by USB
cable with much less effort, but I hate wired mouses and USB radio mouse
 plugs, which I'd have to remove before transporting my laptop in my bag.

Just try to test Suse 11 x64 with Gnome on configuration similar to mine.
I propose to include hidd daemon in Suse 11, to allow to configure BT
manually (even if it is not needed by your configurators).

Regards

Pawel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717121107</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-17 12:11:07-0400</timestampReceived><subject>Re: bluez-utils compilation error.</subject><body>

I Sam,

&gt; Hello. I'm having a bit of trouble compiling bluez-utils using the
&gt; .tar.gz source. I need to run this configuration to enable all the
&gt; tools (dfutool, etc.)

and you might wanna read the ChangeLog and see that it requires
bluez-libs-3.36.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717124946</emailId><senderName>Mateusz</senderName><senderEmail>m.patelak@gmail.com</senderEmail><timestampReceived>2008-07-17 12:49:46-0400</timestampReceived><subject>Re: bluez-utils compilation error.</subject><body>

Hi,

I had the same problem, here is a solution I got from the #bluez IRC.

You have to compile and install the bluez-libs first. Remember to run
the configure script with prober --prefix option set to path of your
system's lib directory (eg. /usr/lib).

Configure bluez-utils with the same prefix option. Compile and install.

Hope it helps,
Mateusz


2008/7/17 Sam &lt;rotisseriecat@gmail.com&gt;:
&gt; Hello. I'm having a bit of trouble compiling bluez-utils using the
&gt; .tar.gz source. I need to run this configuration to enable all the
&gt; tools (dfutool, etc.)
&gt;
&gt; Here's a pastebin of the bash: http://pastebin.ca/1073779
&gt;
&gt; make[2]: Entering directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
&gt; make  all-am
&gt; make[3]: Entering directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
&gt; gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd
&gt; -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I../eglib
&gt; -I../gdbus -DPLUGINDIR=\""/g/lib/bluetooth/plugins"\" -Wall -O2
&gt; -D_FORTIFY_SOURCE=2 -fPIE -MT security.o -MD -MP -MF
&gt; .deps/security.Tpo -c -o security.o security.c
&gt; security.c: In function 'link_key_request':
&gt; security.c:279: error: storage size of 'req' isn't known
&gt; security.c:291: error: 'HCIGETAUTHINFO' undeclared (first use in this function)
&gt; security.c:291: error: (Each undeclared identifier is reported only once
&gt; security.c:291: error: for each function it appears in.)
&gt; security.c:279: warning: unused variable 'req'
&gt; make[3]: *** [security.o] Error 1
&gt; make[3]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
&gt; make[2]: *** [all] Error 2
&gt; make[2]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36/hcid'
&gt; make[1]: *** [all-recursive] Error 1
&gt; make[1]: Leaving directory `/home/g/Desktop/bluez/bluez-utils-3.36'
&gt; make: *** [all] Error 2
&gt;
&gt; Any thoughts on what might be the trouble would be greatly
&gt; appreciated.  Is it possible to find a .deb package of bluez-utils
&gt; with all the tools enabled?
&gt;
&gt; Thank you,
&gt;
&gt; Sam
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717214942</emailId><senderName>Sam</senderName><senderEmail>rotisseriecat@gmail.com</senderEmail><timestampReceived>2008-07-17 21:49:42-0400</timestampReceived><subject>Re: bluez-utils compilation error.</subject><body>

I'm still encountering compile errors for bluez-utils.  Here are the
bash commands used:

cd '/home/g/bluez-libs-3.36'
./configure --prefix=/g
make
sudo make install

cd home/g/bluez-utils-3.36
./configure --prefix=/g --mandir=/g/share/man  --sysconfdir=/etc
--localstatedir=/var --libexecdir=/lib --enable-all
make
sudo make install

Here's the error:

make  all-am
make[3]: Entering directory `/home/g/bluez-utils-3.36/hcid'
gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd
-I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -I../gdbus
-DPLUGINDIR=\""/g/lib/bluetooth/plugins"\" -Wall -O2
-D_FORTIFY_SOURCE=2 -fPIE -MT security.o -MD -MP -MF
.deps/security.Tpo -c -o security.o security.c
security.c: In function 'link_key_request':
security.c:279: error: storage size of 'req' isn't known
security.c:291: error: 'HCIGETAUTHINFO' undeclared (first use in this function)
security.c:291: error: (Each undeclared identifier is reported only once
security.c:291: error: for each function it appears in.)
security.c:279: warning: unused variable 'req'
security.c: At top level:
security.c:1037: fatal error: opening dependency file
.deps/security.Tpo: Permission denied
compilation terminated.
make[3]: *** [security.o] Error 1
make[3]: Leaving directory `/home/g/bluez-utils-3.36/hcid'
make[2]: *** [all] Error 2
make[2]: Leaving directory `/home/g/bluez-utils-3.36/hcid'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/home/g/bluez-utils-3.36'
make: *** [all] Error 2


I did compile/install the libs first, though they are out of order in
the full bash pastebin: http://paste.ubuntu.com/27889/
If anyone can help, it'd be greatly appreciated!
(Is it possible to find a .deb package of bluez-utils with all the
tools enabled?)

Thank you,

Sam
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080717121318</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-17 12:13:18-0400</timestampReceived><subject>Re: installation instructions</subject><body>

Hi Alan,

&gt; For bluez-libs-3.36 the package-specific installation
&gt; instructions are in README (the INSTALL file has only
&gt; generic instructions).  In the README file it is writtern
&gt; 
&gt; In order to compile Bluetooth libraries you need following software packages:
&gt;          - Linux Bluetooth protocol stack (BlueZ)
&gt;          - GCC compiler
&gt; 
&gt; But what do you mean by "Linux Bluetooth protocol stack (BlueZ)"?
&gt; Usually such a message describes the _prerequisites_, not the package
&gt; in which the file is found!!!  Does the phrase mean that the
&gt; kernel drivers must be available?

it means the the Bluetooth protocol stack in the kernel is needed.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080718075408</emailId><senderName>Mateusz</senderName><senderEmail>m.patelak@gmail.com</senderEmail><timestampReceived>2008-07-18 07:54:08-0400</timestampReceived><subject>Re: bluez-utils compilation error.</subject><body>

2008/7/17 Sam &lt;rotisseriecat@gmail.com&gt;:
&gt; I'm still encountering compile errors for bluez-utils.  Here are the
&gt; bash commands used:
&gt;
&gt; cd '/home/g/bluez-libs-3.36'
&gt; ./configure --prefix=/g
&gt; make
&gt; sudo make install
&gt;
&gt; cd home/g/bluez-utils-3.36
&gt; ./configure --prefix=/g --mandir=/g/share/man  --sysconfdir=/etc
&gt; --localstatedir=/var --libexecdir=/lib --enable-all

Are you sure your --prefix should not be /usr/lib for both libs and utils?

&gt; make
&gt; sudo make install
&gt;
&gt; Here's the error:
&gt;
&gt; make  all-am
&gt; make[3]: Entering directory `/home/g/bluez-utils-3.36/hcid'
&gt; gcc -DHAVE_CONFIG_H -I. -I.. -I../common -I../sdpd
&gt; -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include
&gt; -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
&gt; -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -I../gdbus
&gt; -DPLUGINDIR=\""/g/lib/bluetooth/plugins"\" -Wall -O2
&gt; -D_FORTIFY_SOURCE=2 -fPIE -MT security.o -MD -MP -MF
&gt; .deps/security.Tpo -c -o security.o security.c
&gt; security.c: In function 'link_key_request':
&gt; security.c:279: error: storage size of 'req' isn't known
&gt; security.c:291: error: 'HCIGETAUTHINFO' undeclared (first use in this function)
&gt; security.c:291: error: (Each undeclared identifier is reported only once
&gt; security.c:291: error: for each function it appears in.)
&gt; security.c:279: warning: unused variable 'req'
&gt; security.c: At top level:
&gt; security.c:1037: fatal error: opening dependency file
&gt; .deps/security.Tpo: Permission denied
&gt; compilation terminated.
&gt; make[3]: *** [security.o] Error 1
&gt; make[3]: Leaving directory `/home/g/bluez-utils-3.36/hcid'
&gt; make[2]: *** [all] Error 2
&gt; make[2]: Leaving directory `/home/g/bluez-utils-3.36/hcid'
&gt; make[1]: *** [all-recursive] Error 1
&gt; make[1]: Leaving directory `/home/g/bluez-utils-3.36'
&gt; make: *** [all] Error 2
&gt;
&gt;
&gt; I did compile/install the libs first, though they are out of order in
&gt; the full bash pastebin: http://paste.ubuntu.com/27889/
&gt; If anyone can help, it'd be greatly appreciated!
&gt; (Is it possible to find a .deb package of bluez-utils with all the
&gt; tools enabled?)
&gt;
&gt; Thank you,
&gt;
&gt; Sam
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080720144108</emailId><senderName>Stefan Seyfried</senderName><senderEmail>seife@suse.de</senderEmail><timestampReceived>2008-07-20 14:41:08-0400</timestampReceived><subject>Re: Bluez-utils-3.36 hidd daemon does not compile on Suse 11 x64</subject><body>

Pawel Witas wrote:

&gt; I'm using Gnome, not KDE and Gnome configurator could not start my MS
&gt; Wireless Laser Mouse 8000.

You can still use kdebluetooth under gnome to configure input devices.
Anyway - if the gnome bluetooth applet does not work for you, then you should
file a bug report here.

&gt; I have a Compal JFL-92 laptop with integrated BT and Suse 11 x64.
&gt; I tried to configure my mouse manually according to some howto's found
&gt; on the web, but the final step was starting the hidd daemon.
&gt; When I compiled hidd (old version 2.25) and typed command:
&gt;  hidd --connect 00:17:FA:8A:BD:0B
&gt; and pressed a button at the bottom of my mouse
&gt; the mouse started to move my cursor.

I still won't include hidd for openSUSE since it's obsoleted and will be gone
with 4.0 anyway.

&gt; Just try to test Suse 11 x64 with Gnome on configuration similar to mine.
&gt; I propose to include hidd daemon in Suse 11, to allow to configure BT
&gt; manually (even if it is not needed by your configurators).

use the d-bus methods as described on
http://wiki.bluez.org/wiki/HOWTO/InputDevices if you don't want to use
kinputwizard or the bluez-gnome applet.

Have fun.
-- 
Stefan Seyfried
R&amp;D Team Mobile Devices            |              "Any ideas, John?"
SUSE LINUX Products GmbH, Nürnberg | "Well, surrounding them's out."

This footer brought to you by insane German lawmakers:
SUSE Linux Products GmbH, GF: Markus Rex, HRB 16746 (AG Nürnberg)
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080721092947</emailId><senderName>       Matthias =?ISO-8859-1?Q?Bl=E4sing?=</senderName><senderEmail></senderEmail><timestampReceived>2008-07-21 09:29:47-0400</timestampReceived><subject>Bluetooth audio and nokia HDW-3 do not work</subject><body>

Hello,

I had a bluetooth headset (Nokia HDW-3)  running once (it was in the
times of btsco (I think the whole package was calles bluetooth-alsa). As
I understand bluetooth audio should be its successor. Ok - I tried it
and got nothing. I have the 0.36 Version of bluez installed (compiled
from the debian package).

This is the .asoundrc:

pcm.bluetooth {
   type bluetooth
   device 00:03:89:51:8F:12
   profile "voice"
}

ctl.bluetooth {
   type bluetooth
   device 00:03:89:51:8F:12
   profile "voice"
}

When I connect the headset and try to play sound from mplayer:

mplayer -ao alsa:device=bluetooth &lt;audio file&gt;

I get these entries in syslog:

Jul 21 10:01:29 enterprise hcid[20068]: link_key_request (sba=00:03:7A:AA:A9:34, dba=00:03:89:51:8F:12)
Jul 21 10:01:30 enterprise hcid[20068]: link_key_notify (sba=00:03:7A:AA:A9:34, dba=00:03:89:51:8F:12)
Jul 21 10:01:38 enterprise hcid[20068]: Audio API: received BT_GETCAPABILITIES_REQ
Jul 21 10:01:38 enterprise hcid[20068]: Audio API: sending BT_GETCAPABILITIES_RSP
Jul 21 10:01:38 enterprise hcid[20068]: Audio API: received BT_SETCONFIGURATION_REQ
Jul 21 10:01:38 enterprise hcid[20068]: config sco - device = 00:03:89:51:8F:12 access_mode = 2

Mplayer is frozen and when I try to stop mplayer (Control-C) it reports,
that it was interrupted in ao2_init (the name implies, that it didn't
send anything).

Trying to set the volume by using amixer leeds to a flood of the syslog
with these messages:

Jul 21 09:53:08 enterprise hcid[20068]: Audio API: sending BT_CONTROL_RSP
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: received BT_CONTROL_REQ
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: sending BT_CONTROL_RSP
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: received BT_CONTROL_REQ
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: sending BT_CONTROL_RSP
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: received BT_CONTROL_REQ
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: sending BT_CONTROL_RSP
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: received BT_CONTROL_REQ
Jul 21 09:53:08 enterprise hcid[20068]: Audio API: sending BT_CONTROL_RSP

I really don't know where to look further - any help is appretiated 

Thanks in advance

Matthias

-- 
So long and thanks for all the fish!

["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080721173210</emailId><senderName>Vegard Nossum</senderName><senderEmail>vegard.nossum@gmail.com</senderEmail><timestampReceived>2008-07-21 17:32:10-0400</timestampReceived><subject>[PATCH] Bluetooth: fix oops in rfcomm tty code (v3)</subject><body>

Hi,

I've respun the patch, now addressing Marcel's comments.

The change is basically that we _don't_ hold the &amp;rfcomm_dev_lock while
registering tty devices. Instead, to prevent the race, we unregister the
device *before* it's removed from the list.

Does this look any better? I think that if I don't make it this time, I
will give up and let somebody else fix it :-)

I've tested it briefly and it doesn't block the creation of new devices,
however, it seems that the device is now deleted as soon as the first
socket is closed, which means that in order to create /dev/rfcomm0 and
also open it, in the test program, the first socket must not be closed
before the device is opened. I'm sure if this is the intended behaviour?

Thanks,


Vegard


From 5be8c4d5011f23d5e2b116f4965a6c6061d049a5 Mon Sep 17 00:00:00 2001
From: Vegard Nossum &lt;vegard.nossum@gmail.com&gt;
Date: Sun, 13 Jul 2008 19:02:11 +0200
Subject: [PATCH] Bluetooth: fix oops in rfcomm tty code

Soeren Sonnenburg reported:
&gt; this oops happened after a couple of s2ram cycles so it might be very
&gt; well crap. However I somehow triggered it by /etc/init.d/bluetooth
&gt; stop/start's which also call hid2hci maybe even a connection was about
&gt; to be established at that time. As I remember having seen a problem like
&gt; this before I thought I report it (even though I have a madwifi tainted
&gt; kernel).
&gt; 
&gt; kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
&gt; with the same name in the same directory.

It turns out that the following sequence of actions will reproduce the
oops:

  1. Create a new rfcomm device (using RFCOMMCREATEDEV ioctl)
  2. (Try to) open the device
  3. Release the rfcomm device (using RFCOMMRELEASEDEV ioctl)

At this point, the "rfcomm?" tty is still in use, but the device is gone
from the internal rfcomm list, so the device id can be reused.

  4. Create a new rfcomm device with the same device id as before

And now kobject will complain that the tty already exists.

(See http://lkml.org/lkml/2008/7/13/89 for a reproducible test-case.)

This patch attempts to correct this by only removing the device from the
internal rfcomm list of devices at the final unregister, so that the id
won't get reused until the device has been completely destructed.

This should be safe as the RFCOMM_TTY_RELEASED bit will be set for the
device and prevent the device from being reopened after it has been
released.

We also fix a race (which would lead to the same oops) by unregistering
with the tty layer before the device is taken off the list of devices.

Thanks to Dave Young for additional suggestions.

Reported-by: Soeren Sonnenburg &lt;kernel@nn7.de&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Vegard Nossum &lt;vegard.nossum@gmail.com&gt;
---
 net/bluetooth/rfcomm/tty.c |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/net/bluetooth/rfcomm/tty.c b/net/bluetooth/rfcomm/tty.c
index d3340dd..ef4bdaa 100644
--- a/net/bluetooth/rfcomm/tty.c
+++ b/net/bluetooth/rfcomm/tty.c
@@ -96,9 +96,13 @@ static void rfcomm_dev_destruct(struct rfcomm_dev *dev)
 	BT_DBG("dev %p dlc %p", dev, dlc);
 
 	/* Refcount should only hit zero when called from rfcomm_dev_del()
-	   which will have taken us off the list. Everything else are
-	   refcounting bugs. */
-	BUG_ON(!list_empty(&amp;dev-&gt;list));
+	   which will have set the RFCOMM_TTY_RELEASED bit. Everything else
+	   are refcounting bugs. */
+	BUG_ON(!test_bit(RFCOMM_TTY_RELEASED, &amp;dev-&gt;flags));
+
+	tty_unregister_device(rfcomm_tty_driver, dev-&gt;id);
+
+	write_lock_bh(&amp;rfcomm_dev_lock);
 
 	rfcomm_dlc_lock(dlc);
 	/* Detach DLC if it's owned by this dev */
@@ -108,7 +112,9 @@ static void rfcomm_dev_destruct(struct rfcomm_dev *dev)
 
 	rfcomm_dlc_put(dlc);
 
-	tty_unregister_device(rfcomm_tty_driver, dev-&gt;id);
+	list_del_init(&amp;dev-&gt;list);
+
+	write_unlock_bh(&amp;rfcomm_dev_lock);
 
 	kfree(dev);
 
@@ -127,10 +133,8 @@ static inline void rfcomm_dev_put(struct rfcomm_dev *dev)
 	/* The reason this isn't actually a race, as you no
 	   doubt have a little voice screaming at you in your
 	   head, is that the refcount should never actually
-	   reach zero unless the device has already been taken
-	   off the list, in rfcomm_dev_del(). And if that's not
-	   true, we'll hit the BUG() in rfcomm_dev_destruct()
-	   anyway. */
+	   reach zero unless we've already set the
+	   RFCOMM_TTY_RELEASED bit in rfcomm_dev_del(). */
 	if (atomic_dec_and_test(&amp;dev-&gt;refcnt))
 		rfcomm_dev_destruct(dev);
 }
@@ -335,10 +339,6 @@ static void rfcomm_dev_del(struct rfcomm_dev *dev)
 	else
 		set_bit(RFCOMM_TTY_RELEASED, &amp;dev-&gt;flags);
 
-	write_lock_bh(&amp;rfcomm_dev_lock);
-	list_del_init(&amp;dev-&gt;list);
-	write_unlock_bh(&amp;rfcomm_dev_lock);
-
 	rfcomm_dev_put(dev);
 }
 
-- 
1.5.5.1

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080721233014</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-21 23:30:14-0400</timestampReceived><subject>Re: [PATCH 3/7] bluetooth: Add quirks for a few hci_usb devices</subject><body>

Hi Ben,

&gt; Preface: The "Broadcom" device is on unreleased hardware, so I can't
&gt; disclose the actual model.

then put on your todo list to update this entry once you can.

&gt; When the Dell 370 and 410 BT adapters are put into BT radio mode, they
&gt; need to be prepared like many other Broadcom adapters.
&gt;
&gt; Also, add quirk Broadcom 2046 devices with HCI_RESET. Reference for  
&gt; this
&gt; bug: https://launchpad.net/bugs/249448
&gt;
&gt; CC: linux-bluetooth@vger.kernel.org
&gt; Signed-off-by: Michael Frey &lt;michael.frey@canonical.com&gt;
&gt; Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
&gt; Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
&gt; Signed-off-by: Ben Collins &lt;ben.collins@canonical.com&gt;

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080724185837</emailId><senderName>"keith preston"</senderName><senderEmail>keithpre@gmail.com</senderEmail><timestampReceived>2008-07-24 18:58:37-0400</timestampReceived><subject>[PATCH] a2dp_write patch</subject><body>

This is a patch to rewrite a2dp_write to avoid memory copies.   It
does this by only using the temporary buffer if we are dealing with
partial buffers.  I see a little bit of a speedup with my embedded
device, however sbc encoding usually takes the most time.

Keith Preston

["a2dp_write.patch" (text/x-patch)]

--- bluez-utils-3.36.orig/audio/pcm_bluetooth.c	2008-07-23 17:13:13.000000000 -0500
+++ bluez-utils-3.36/audio/pcm_bluetooth.c	2008-07-24 13:50:31.000000000 -0500
@@ -974,21 +974,25 @@
 	struct bluetooth_data *data = io-&gt;private_data;
 	struct bluetooth_a2dp *a2dp = &amp;data-&gt;a2dp;
 	snd_pcm_sframes_t ret = 0;
-	snd_pcm_uframes_t frames_to_read, frames_left = size;
-	int frame_size, encoded, written;
+	int frame_size, encoded, written, bytes_left;
 	uint8_t *buff;
-
 	DBG("areas-&gt;step=%u areas-&gt;first=%u offset=%lu size=%lu",
 				areas-&gt;step, areas-&gt;first, offset, size);
 	DBG("hw_ptr=%lu appl_ptr=%lu diff=%lu", io-&gt;hw_ptr, io-&gt;appl_ptr,
 			io-&gt;appl_ptr - io-&gt;hw_ptr);
 
+	/* Calutate starting pointers */
+	frame_size = areas-&gt;step / 8;
+	bytes_left = size * frame_size;
+	buff = (uint8_t *) areas-&gt;addr +
+		(areas-&gt;first + areas-&gt;step * (offset)) / 8;
+	/* Check for underrun */
 	if (io-&gt;hw_ptr &gt; io-&gt;appl_ptr) {
 		ret = bluetooth_playback_stop(io);
 		if (ret == 0)
 			ret = -EPIPE;
 		data-&gt;reset = 1;
-		goto done;
+		return ret;
 	}
 
 	/* Check if we should autostart */
@@ -1003,39 +1007,18 @@
 			if (io-&gt;appl_ptr &gt;= threshold) {
 				ret = snd_pcm_start(io-&gt;pcm);
 				if (ret != 0)
-					goto done;
+					return ret;
 			}
 		}
 
 		snd_pcm_sw_params_free(swparams);
 	}
 
-	while (frames_left &gt; 0) {
-		frame_size = areas-&gt;step / 8;
-
-		if ((data-&gt;count + frames_left * frame_size) &lt;= a2dp-&gt;codesize)
-			frames_to_read = frames_left;
-		else
-			frames_to_read = (a2dp-&gt;codesize - data-&gt;count) / frame_size;
-
-		DBG("count=%d frames_to_read=%lu", data-&gt;count, frames_to_read);
-		DBG("a2dp.count=%d data.link_mtu=%d", a2dp-&gt;count, data-&gt;link_mtu);
-
-		/* FIXME: If state is not streaming then return */
-
-		/* Ready for more data */
-		buff = (uint8_t *) areas-&gt;addr +
-			(areas-&gt;first + areas-&gt;step * (offset + ret)) / 8;
+	/* Check if we have any left over data from the last write */
+	if(data-&gt;count &gt; 0 &amp;&amp; ((bytes_left - data-&gt;count) &gt;= a2dp-&gt;codesize)) {
+		int additional_bytes_needed = a2dp-&gt;codesize - data-&gt;count;
 		memcpy(data-&gt;buffer + data-&gt;count, buff,
-				frame_size * frames_to_read);
-
-		/* Remember we have some frames in the pipe now */
-		data-&gt;count += frames_to_read * frame_size;
-		if (data-&gt;count != a2dp-&gt;codesize) {
-			ret = frames_to_read;
-			goto done;
-		}
-
+				additional_bytes_needed);
 		/* Enough data to encode (sbc wants 1k blocks) */
 		encoded = sbc_encode(&amp;(a2dp-&gt;sbc), data-&gt;buffer, a2dp-&gt;codesize,
 					a2dp-&gt;buffer + a2dp-&gt;count,
@@ -1045,35 +1028,65 @@
 			DBG("Encoding error %d", encoded);
 			goto done;
 		}
-
-		data-&gt;count -= encoded;
+		/* Increment a2dp buffers */
 		a2dp-&gt;count += written;
 		a2dp-&gt;frame_count++;
 		a2dp-&gt;samples += encoded / frame_size;
 		a2dp-&gt;nsamples += encoded / frame_size;
-
-		DBG("encoded=%d  written=%d count=%d", encoded,
-				written, a2dp-&gt;count);
-
 		/* No space left for another frame then send */
 		if (a2dp-&gt;count + written &gt;= data-&gt;link_mtu) {
 			avdtp_write(data);
 			DBG("sending packet %d, count %d, link_mtu %u",
 					a2dp-&gt;seq_num, a2dp-&gt;count,
 					data-&gt;link_mtu);
-		}
-
-		ret += frames_to_read;
-		frames_left -= frames_to_read;
+		}		
+		/* Increment up buff pointer to take into account the data processed */
+		buff += additional_bytes_needed;
+		bytes_left -= additional_bytes_needed;
+		/* Since data has been process mark it as zero */
+		data-&gt;count = 0;
 	}
 
-	/* note: some ALSA apps will get confused otherwise */
-	if (ret &gt; size)
-		ret = size;
+
+	/* Process this buffer in full chunks */
+	while( bytes_left &gt;= a2dp-&gt;codesize)
+	{
+		/* Enough data to encode (sbc wants 1k blocks) */
+		encoded = sbc_encode(&amp;(a2dp-&gt;sbc), buff, a2dp-&gt;codesize,
+					a2dp-&gt;buffer + a2dp-&gt;count,
+					sizeof(a2dp-&gt;buffer) - a2dp-&gt;count,
+					&amp;written);
+		if (encoded &lt;= 0) {
+			DBG("Encoding error %d", encoded);
+			goto done;
+		}
+		/* Increment up buff pointer to take into account the data processed */
+		buff += a2dp-&gt;codesize;
+		bytes_left -= a2dp-&gt;codesize;
+		/* Increment a2dp buffers */
+		a2dp-&gt;count += written;
+		a2dp-&gt;frame_count++;
+		a2dp-&gt;samples += encoded / frame_size;
+		a2dp-&gt;nsamples += encoded / frame_size;
+		/* No space left for another frame then send */
+		if (a2dp-&gt;count + written &gt;= data-&gt;link_mtu) {
+			avdtp_write(data);
+			printf("sending packet %d, count %d, link_mtu %u",
+					a2dp-&gt;seq_num, a2dp-&gt;count,
+					data-&gt;link_mtu);
+		}		
+	}
+	/* Copy the extra to our temp buffer for the next write */
+	if(bytes_left &gt; 0) {
+		memcpy(data-&gt;buffer + data-&gt;count, buff,
+				bytes_left);
+		data-&gt;count += bytes_left;
+		bytes_left = 0;
+	}
 
 done:
-	DBG("returning %ld", ret);
-	return ret;
+	DBG("returning %ld", size - bytes_left / frame_size);
+	return size - bytes_left / frame_size;
 }
 
 static int bluetooth_playback_delay(snd_pcm_ioplug_t *io,

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080724193427</emailId><senderName>"keith preston"</senderName><senderEmail>keithpre@gmail.com</senderEmail><timestampReceived>2008-07-24 19:34:27-0400</timestampReceived><subject>Re: [PATCH] bluez a2dp alsa fix</subject><body>

Sorry I'll forward it on.   Someone should probably change this page:
http://www.bluez.org/development/lists/

To list all of the mailing lists.

Keith Preston


On Thu, Jul 24, 2008 at 2:29 PM, Brad Midgley &lt;bmidgley@gmail.com&gt; wrote:
&gt; Keith
&gt;
&gt; I may be wrong but I thought this list was for kernel issues.
&gt; bluez-devel might be better for userland.
&gt;
&gt; I guess we have a similar problem in bluetooth_hsp_write. I can't make
&gt; the commit... when we're on git then everything will be good again.
&gt;
&gt; On Wed, Jul 23, 2008 at 4:31 PM, keith preston &lt;keithpre@gmail.com&gt; wrote:
&gt;&gt;  However in this case where we don't have a full block to encode in
&gt;&gt; SBC, we return basically return (incoming_buffer_size) %
&gt;&gt; (SBC_Encode_Block_size).   This is correct in the case where
&gt;&gt; (incoming_buffer_size) &lt; (SBC_Encode_Block_size), however is wrong
&gt;&gt; when (incoming_buffer_size) &gt; (SBC_Encode_Block_size), because this
&gt;&gt; statement ignores previously processed blocks.
&gt;
&gt; --
&gt; Brad
&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080725123150</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-25 12:31:50-0400</timestampReceived><subject>Re: RFCOMM server multiple client connections</subject><body>

Hi Kasper,

&gt;&gt;&gt; I am trying do do a simple client server setup  with bluez.
&gt;&gt;&gt; I can manage to have a client and a server on rfcomm sockets where  
&gt;&gt;&gt; the server listen on a socket and accept a connection from the  
&gt;&gt;&gt; client by connect. But then if I set the server back to accepting  
&gt;&gt;&gt; without putting down the one client connection it doesn't accept a  
&gt;&gt;&gt; new connection.
&gt;&gt;&gt; When I read thought the documentation I can find on Bluez and  
&gt;&gt;&gt; Bluetooth in general it seems like it should be possible to  
&gt;&gt;&gt; multiplex serveal virtual rfcomm connections  on one actual  
&gt;&gt;&gt; connection. But however I really can get it working and can't find  
&gt;&gt;&gt; any code where they do something similar.
&gt;&gt;&gt;
&gt;&gt;
&gt;&gt; are the clients running on multiple adapters.If they run on the  
&gt;&gt; sameadapter, it won't work. RFCOMM is not a layer that assign dynamic
&gt;&gt; channels numbers to each connection (like L2CAP does) and thus once a
&gt;&gt; RFCOMM channel is in use (the pair is bdaddr:channel) then you can
&gt;&gt; connect to it twice.
&gt;&gt;
&gt;&gt;
&gt; Exactly the client sockets are all originated from the same adapter.  
&gt; What I want to do is by some libsocks tricks to emulate a native tcp/ 
&gt; ip socket and provide nearly the same interface. So far I have been  
&gt; using RFCOMM. As I understand you, this setup with multiple sockets  
&gt; connections from each host is possible using a l2cap socket instead.  
&gt; Which leads into the next question. Reading documentation on  
&gt; Bluetooth stacks in general some seems to provide a SOCK_STREAM type  
&gt; using l2cap. However this does not seems to be the case in the Bluez  
&gt; stack. So is there a way to have a somehow reliable stream  
&gt; connection  allowing multiple connections from each host?

RFCOMM is SOCK_STREAM and L2CAP is SOCK_SEQPACKET. If someone  
implements L2CAP retransmission and flow-control we could have  
SOCK_STREAM for L2CAP, too.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080725165653</emailId><senderName>muckypups</senderName><senderEmail>muckypups@gmail.com</senderEmail><timestampReceived>2008-07-25 16:56:53-0400</timestampReceived><subject>Problems on Fedora 9</subject><body>

Hi, apologies if this is the wrong place, but the BlueZ site says to
come here for help.
Anyway, I have Fedora 9 x86-64 and I have BlueZ version 0.26 running
as per the OS install. (I didn't know it was installed, but I just
plugged in a BT usb dongle and it was detected immediately)

I have tried to pair with my Motorola HT820 headphones, and it seems
to detect the device fine, and accepts the passcode.

I can browse the device list ok, however, if I click Connect I get an error :

Couldn't display "obex://[00:07:A4:B7:B6:7F]/".
Error: Host down
Please select another viewer and try again.

Thinking that this is an issue with obex I have tried to install the
latest version of obexd (0.3).

When running configure I get the error :

[root@xeon obexd-0.3]# ./configure
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether to enable maintainer-specific portions of Makefiles... no
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking whether gcc accepts -fPIE... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking for ranlib... ranlib
checking for tm_gmtoff in struct tm... yes
checking for timezone variable... yes
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for GLIB... yes
checking for DBUS... yes
checking for dbus_watch_get_unix_fd in -ldbus-1... yes
checking for OPENOBEX... no
configure: error: libopenobex is required

So I have located and downloaded openobex-1.3-13.fc9.x86_64.rpm to try
and rectify the apparent lack of libopenobex.

Unfortunately, when I try to install the rpm I get :

	file /usr/lib64/libopenobex.so.1.3.0 from install of
openobex-1.3-13.fc9.x86_64 conflicts with file from package
openobex-1.3-11.fc9.x86_64

So I must assume it is already available, but obexd can't find it.
I have also installed the gnome-bluetooth-devel package provided by
FC9 but to no avail.

In the Bluetooth preferences window, my device is shown as connected,
but in the Browse device window, it is shown as not connected.
I have also set it to be a trusted device.

How can I resolve this ?
I have SE Linux turned off, but do I need to change firewall settings ?
Is this possibly an issue with the headphones themselves ?
Is this an x86 versus x86-64 library issue ?

Thanks in advance.

Alan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080728131151</emailId><senderName></senderName><senderEmail>pavan_savoy</senderEmail><timestampReceived>2008-07-28 13:11:51-0400</timestampReceived><subject>Understanding UART bluetooth ..</subject><body>

Hi,

I had a question on hciattach / hcid &amp; related to hci-core.c, If I know I have a \
bluetooth device on ttyS0.. and I do a  #hciattach ttyS0 &lt;with_relevant_parameters&gt;

will the whole system know [using dbus &amp; hcid, that a new device  has been added, if \
so who exactly does this ? ]

I mean I could only find hci_open_dev, but no other dbus or hcid functions to \
notify...

does hci_notify does the same ? which is being called on hci_open_dev?

Thanks..
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080729144536</emailId><senderName>"Ohad Ben-Cohen"</senderName><senderEmail>ohad@bencohen.org</senderEmail><timestampReceived>2008-07-29 14:45:36-0400</timestampReceived><subject>Re: HCI_Reset and Notification to User-Space</subject><body>

On Tue, Jul 29, 2008 at 4:44 PM,  &lt;pavan_savoy@indiatimes.com&gt; wrote:
&gt; Also I couldnt trace the hci_init_req, which does the HCI_RESET, read_BD addr, local name..etc..
&gt;
&gt; Who calls it ?

hci_dev_open. indirectly, using __hci_request.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080729211642</emailId><senderName>Randy Dunlap</senderName><senderEmail>rdunlap@xenotime.net</senderEmail><timestampReceived>2008-07-29 21:16:42-0400</timestampReceived><subject>Re: [RFC] [PATCH 1/7] pcmcia: add pcmcia_loop_config() helper</subject><body>

On Tue, 29 Jul 2008 09:15:39 +0200 Dominik Brodowski wrote:

&gt; By calling pcmcia_loop_config(), a pcmcia driver can iterate over all
&gt; available configuration options. During a driver's probe() phase, one
&gt; doesn't need to use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data
&gt; and pcmcia_parse_tuple directly in most if not all cases.
&gt; 
&gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
&gt; ---
&gt;  Documentation/pcmcia/driver-changes.txt |    6 +++
&gt;  drivers/pcmcia/pcmcia_resource.c        |   57 +++++++++++++++++++++++++++++++
&gt;  include/pcmcia/cistpl.h                 |    6 +++
&gt;  3 files changed, 69 insertions(+), 0 deletions(-)
&gt; 
&gt; By calling pcmcia_loop_config(), a pcmcia driver can iterate over all
&gt; available configuration options. During a driver's probe() phase, one
&gt; doesn't need to use pcmcia_get_{first,next}_tuple, pcmcia_get_tuple_data
&gt; and pcmcia_parse_tuple directly in most if not all cases.
&gt; 
&gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
&gt; ---
&gt;  Documentation/pcmcia/driver-changes.txt |    6 +++
&gt;  drivers/pcmcia/pcmcia_resource.c        |   63 +++++++++++++++++++++++++++++++
&gt;  include/pcmcia/cistpl.h                 |    6 +++
&gt;  3 files changed, 75 insertions(+), 0 deletions(-)
&gt; 
&gt; diff --git a/drivers/pcmcia/pcmcia_resource.c b/drivers/pcmcia/pcmcia_resource.c
&gt; index 4884a18..0fa48aa 100644
&gt; --- a/drivers/pcmcia/pcmcia_resource.c
&gt; +++ b/drivers/pcmcia/pcmcia_resource.c
&gt; @@ -909,3 +909,66 @@ void pcmcia_disable_device(struct pcmcia_device *p_dev) {
&gt;  		pcmcia_release_window(p_dev-&gt;win);
&gt;  }
&gt;  EXPORT_SYMBOL(pcmcia_disable_device);
&gt; +
&gt; +

Hi,

One more comment here (sorry I missed it earlier):

The kernel-doc comment needs to immediately precede the function, so that
struct pcmcia_cfg_mem needs to be moved to before the kernel-doc block...


&gt; +/**
&gt; + * pcmcia_loop_config() - loop over configuration options
&gt; + * @p_dev:	the struct pcmcia_device which we need to loop for.
&gt; + * @conf_check:	function to call for each configuration option.
&gt; + *		It gets passed the struct pcmcia_device, the CIS data
&gt; + *		describing the configuration option, and private data
&gt; + *		being passed to pcmcia_loop_config()
&gt; + * @priv_data:	private data to be passed to the conf_check function.
&gt; + *
&gt; + * pcmcia_loop_config() loops over all configuration options, and calls
&gt; + * the driver-specific conf_check() for each one, checking whether
&gt; + * it is a valid one.
&gt; + */
&gt; +
&gt; +struct pcmcia_cfg_mem {
&gt; +	tuple_t tuple;
&gt; +	cisparse_t parse;
&gt; +	u8 buf[256];
&gt; +};
&gt; +
&gt; +int pcmcia_loop_config(struct pcmcia_device *p_dev,
&gt; +		       int	(*conf_check)	(struct pcmcia_device *p_dev,
&gt; +						 cistpl_cftable_entry_t *cfg,
&gt; +						 void *priv_data),
&gt; +		       void *priv_data)
&gt; +{
...
&gt; +}
&gt; +EXPORT_SYMBOL(pcmcia_loop_config);


---
~Randy
Linux Plumbers Conference, 17-19 September 2008, Portland, Oregon USA
http://linuxplumbersconf.org/
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080730065652</emailId><senderName>Dominik Brodowski</senderName><senderEmail>linux@dominikbrodowski.net</senderEmail><timestampReceived>2008-07-30 06:56:52-0400</timestampReceived><subject>Re: [RFC] [PATCH 3/7] pcmcia: use pcmcia_loop_config in bluetooth drivers</subject><body>

Hi Marcel,

On Tue, Jul 29, 2008 at 11:11:33PM +0200, Marcel Holtmann wrote:
&gt; &gt; Use the config loop helper in bluetooth pcmcia drivers.
&gt; &gt; 
&gt; &gt; CC: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; &gt; CC: linux-bluetooth@vger.kernel.org
&gt; &gt; Signed-off-by: Dominik Brodowski &lt;linux@dominikbrodowski.net&gt;
&gt; 
&gt; in general I am okay with these changes, but can we please follow kernel
&gt; coding style. It is "if (...) {". The curly braces are supposed to be on
&gt; the same line. Only for functions the belong on the next line. Sorry for
&gt; being picky here :)

Ah, thanks for noticing this. Fixed the two instances where I got it wrong;
will push the corrected patch upstream (for 2.6.28) then.

Best,
	Dominik
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080730065716</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-30 06:57:16-0400</timestampReceived><subject>Re: BlueZ and Bluetooth Qualification</subject><body>

Hi Roland,

&gt; Sorry if this question was asked before, but appearantly I am not good
&gt; enough in finding the correct search terms ;)
&gt;
&gt; Scenario:
&gt; I want to build a device which uses a BT-chipset from CSR, linux for  
&gt; ARM
&gt; (e.g. TI OMAP) and BlueZ for at least SPP usage.
&gt;
&gt; 1) If I want to sell this device with, what certifications and
&gt; qualifications for BT would I need?

this needs a Bluetooth host stack qualification with SSP.

&gt; 2) If I update the kernel/drivers/my own application (aka "firmware)
&gt; would I need to requalify something?

Depending on what you change. This has to be decided case by case.

&gt; 3) If I update the BlueZ version would I need to requalify something?

Again, case by case decision.

&gt; 4) If I choose to add another profile to the system (e.g. Handsfree)
&gt; would I need to qualify the whole system again or only the Profile I
&gt; want to add?

If you build a modular qualification with components, then you can re- 
use components. If you do it as end-product, then you have to do the  
whole thing again.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080731131117</emailId><senderName>Paul Waldo</senderName><senderEmail>paul@waldoware.com</senderEmail><timestampReceived>2008-07-31 13:11:17-0400</timestampReceived><subject>Re: Trouble Connecting to NAP on Linux</subject><body>

Hi all, 

Apparently no takers :-(  If there is any more information that would be helpful, I'd \
be happy to provide it.  Unfortunately, I am unaware of any tools that will help me \
debug this problem.  I tried "strace" on the pand command, but it didn't yield \
anything useful.  Any tips on debugging the connection?

If I am inquiring in the wrong forum, I welcome suggestions on a better one.  Thanks \
in advance!

Paul

----- "Paul Waldo" wrote: 
Hi all, 

I'm new to bluetooth, and got in over my head. I have a Windows box that is acting as \
a Network Access Point as well as a PAN Server. I have a laptop that I want to \
connect to the access point via bluetooth so it can access the Internet. The laptop \
can connect to the NAP and the GN just fine when running Windows, but when the laptop \
is running linux, I get errors. It can connect to the GN, but not the NAP: 

************Start transcript*************************** 
root@paul-laptop:~# pand --killall 
root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service GN -n 
pand[17097]: Bluetooth PAN daemon version 3.26 
pand[17097]: Connecting to 11:11:11:11:11:11 
pand[17097]: bnep0 connected 
root@paul-laptop:~# pand --killall 
root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service NAP -n 
pand[17123]: Bluetooth PAN daemon version 3.26 
pand[17123]: Connecting to 11:11:11:11:11:11 
pand[17123]: Connect to 11:11:11:11:11:11 failed. Protocol error(71) 


[turn off GN service on server] 


root@paul-laptop:~# pand --connect 11:11:11:11:11:11 --service NAP -n 
pand[17797]: Bluetooth PAN daemon version 3.26 
pand[17797]: Connecting to 11:11:11:11:11:11 
pand[17797]: Connect to 11:11:11:11:11:11 failed. Connection refused(111) 
************End transcript*************************** 

Here are the specifics of the Machines: 
SERVER 
Windows XP 
BlueSoleil 1.6.1.4 
All security turned off 

CLIENT 
Linux (Kubuntu 8.04 Hardy, AMD64) 
bluez 3.26 

I've googled everything I can think of. Any help would be greatly appreciated. Thanks \
in advance! 

Paul 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080731134253</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-07-31 13:42:53-0400</timestampReceived><subject>Re: How to set packet type and how to see which packet type is in use ?</subject><body>

Hi Kasper,

&gt; I am trying to compare some different Bluetooth setup. Doing that I  
&gt; would like to try with different baseband packet types.
&gt; So far I have been trying in two scenarios using hciconfig hci0  
&gt; ptype &lt;type&gt; and that seems to work, at least in the case where I am  
&gt; using RFCOMM sockets for communication. But judging from the  
&gt; transfer rate it does not seem to work using a PAND/BNEP setup. This  
&gt; leads to the following questions:
&gt;
&gt; - How can I observe the currently uses packet type? I have been  
&gt; trying with hcidump and even parsed it with wireshark but can't  
&gt; really find the identifier that identifies witch packet type  
&gt; currently  is in use.

you can't since that is the job of the link manager and not the host  
stack.

&gt; - Can I by somehow set the packettype using setsocktop() on a rfcomm  
&gt; socket ? I have been look to find documentation on the content of  
&gt; the sockopt struc used but can't really find any. I have also tried  
&gt; looking in the code but can't figure out how to manipulate the  
&gt; packet type else that using hciconfig

Don't mess around with packet types. Really, I mean it, don't. Leave  
the default and leave the rest up to the link manager.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080731152133</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver@neukum.org</senderEmail><timestampReceived>2008-07-31 15:21:33-0400</timestampReceived><subject>Re: [rfc]btusb with SCO support</subject><body>

Am Donnerstag 31 Juli 2008 16:03:13 schrieb Marcel Holtmann:
&gt; yeah, I was afraid of that switching the alternate settings is not as  
&gt; easy as the spec. might think. Personally I think it is a broken  
&gt; specification anyway. So the best assumption is that we have one SCO  
&gt; connection and that is either 8-bit or 16-bit. So we do the switching  
&gt; when we get the notify() callback for a changed voice setting.

That's problematic because in the notify() callback you cannot sleep,
can you? In addition, a device is legally allowed to take a lot of time
to switch altsettings.

	Regards
		Oliver
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602014535</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-02 01:45:35-0400</timestampReceived><subject>Re: [PATCH][resend] rfcomm deadlock fix</subject><body>

On Sun, Jun 1, 2008 at 3:06 PM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Dave,
&gt;
&gt;&gt; There's logic in __rfcomm_dlc_close:
&gt;&gt;        rfcomm_dlc_lock(d);
&gt;&gt;        d-&gt;state = BT_CLOSED;
&gt;&gt;        d-&gt;state_changed(d, err);
&gt;&gt;        rfcomm_dlc_unlock(d);
&gt;&gt;
&gt;&gt; In rfcomm_dev_state_change, it's possible that rfcomm_dev_put try to take
&gt;&gt; the
&gt;&gt; dlc lock, then we will deadlock.
&gt;&gt;
&gt;&gt; Here fixed it by unlock dlc before rfcomm_dev_get in
&gt;&gt; rfcomm_dev_state_change.
&gt;&gt;
&gt;&gt; why not unlock just before rfcomm_dev_put? it's because there's another
&gt;&gt; problem.
&gt;&gt; rfcomm_dev_get/rfcomm_dev_del will take rfcomm_dev_lock, but in
&gt;&gt; rfcomm_dev_add
&gt;&gt; the lock order is : rfcomm_dev_lock --&gt; dlc lock
&gt;&gt;
&gt;&gt; so I unlock dlc before the taken of rfcomm_dev_lock.
&gt;&gt;
&gt;&gt; Actually it's a regression caused by commit
&gt;&gt; 1905f6c736cb618e07eca0c96e60e3c024023428, the dlc state_change could be
&gt;&gt; two
&gt;&gt; callbacks : rfcomm_sk_state_change and rfcomm_dev_state_change. I missed
&gt;&gt; the rfcomm_sk_state_change that time.
&gt;&gt;
&gt;&gt; Thanks Arjan van de Ven &lt;arjan@linux.intel.com&gt; for the effort in commit
&gt;&gt; 4c8411f8c115def968820a4df6658ccfd55d7f1a
&gt;&gt; but he missed the rfcomm_dev_state_change lock issue.
&gt;&gt;
&gt;&gt; Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt;&gt;
&gt;&gt; ---
&gt;&gt; net/bluetooth/rfcomm/tty.c |   13 ++++++++++++-
&gt;&gt; 1 file changed, 12 insertions(+), 1 deletion(-)
&gt;&gt;
&gt;&gt; diff -upr linux/net/bluetooth/rfcomm/tty.c
&gt;&gt; linux.new/net/bluetooth/rfcomm/tty.c
&gt;&gt; --- linux/net/bluetooth/rfcomm/tty.c    2008-05-30 15:46:33.000000000
&gt;&gt; +0800
&gt;&gt; +++ linux.new/net/bluetooth/rfcomm/tty.c        2008-05-30
&gt;&gt; 17:08:30.000000000 +0800
&gt;&gt; @@ -566,11 +566,22 @@ static void rfcomm_dev_state_change(stru
&gt;&gt;        if (dlc-&gt;state == BT_CLOSED) {
&gt;&gt;                if (!dev-&gt;tty) {
&gt;&gt;                        if (test_bit(RFCOMM_RELEASE_ONHUP, &amp;dev-&gt;flags)) {
&gt;&gt; -                               if (rfcomm_dev_get(dev-&gt;id) == NULL)
&gt;&gt; +                               /* Drop DLC lock here to avoid deadlock
&gt;&gt; +                                * 1. rfcomm_dev_get will take
&gt;&gt; rfcomm_dev_lock
&gt;&gt; +                                *    but in rfcomm_dev_add there's lock
&gt;&gt; order:
&gt;&gt; +                                *    rfcomm_dev_lock -&gt; dlc lock
&gt;&gt; +                                * 2. rfcomm_dev_put will deaklock if it's
&gt;&gt; +                                *    the last reference
&gt;
&gt; I meant this one :)  s/deaklock/deadlock/

Fixed, thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602065747</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-02 06:57:47-0400</timestampReceived><subject>Re: [PATCH] bluetooth: rfcomm_dev_state_change deadlock fix</subject><body>

On Mon, Jun 2, 2008 at 2:50 PM, David Miller &lt;davem@davemloft.net&gt; wrote:
&gt; From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Date: Mon, 2 Jun 2008 08:15:03 +0200
&gt;
&gt;&gt; Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;
&gt; Applied, but I had to add the commit header string to the two SHA ID
&gt; commit references.  Please always provide the header line text as well
&gt; as the SHA ID when referencing commits because when backporting or
&gt; putting the patch into a different tree the SHA ID will be different
&gt; and people will have a terrible time trying to find the commits you
&gt; are referring to.

Will do next time, thanks.

&gt;
&gt; Thanks.
&gt;



-- 
---
Regards
dave
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080603083020</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-06-03 08:30:20-0400</timestampReceived><subject>Re: hci_usb strikes again (was Re: BUG kmalloc-2048: Poison overwritten)</subject><body>

On Tue, Jun 3, 2008 at 6:43 AM, Pavel Machek &lt;pavel@suse.cz&gt; wrote:
&gt; Hi!
&gt;&gt; &gt;&gt; &gt; cpufreq_performance cpufreq_powersave rfcomm hidp l2cap bluetooth fan
&gt;&gt; &gt;&gt; &gt; ipmi_watchdog ipmi_msghandler uinput wlan_tkip ieee80211_crypt_tkip
&gt;&gt; &gt;&gt; &gt; ieee80211_crypt arpt_mangle arptable_filter arp_tables
&gt;&gt; &gt;&gt; &gt; nf_conntrack_ipv4 nf_conntrack iptable_mangle iptable_filter ip_tables
&gt;&gt; &gt;&gt; &gt; x_tables intelfb i2c_i810 i2c_algo_bit coretemp eeprom acpi_cpufreq
&gt;&gt; &gt;&gt; &gt; fglrx(P) applesmc joydev uvcvideo appletouch wlan_scan_sta
&gt;&gt; &gt;&gt; &gt; ath_rate_sample firewire_ohci firewire_core snd_hda_intel ath_pci
&gt;&gt; &gt;&gt; &gt; snd_pcm wlan ohci1394 intel_agp evdev ath_hal(P) snd_timer ieee1394
&gt;&gt; &gt;&gt; &gt; pata_acpi thermal ehci_hcd uhci_hcd snd_page_alloc snd_hwdep agpgart
&gt;&gt; &gt;&gt; &gt; video button processor
&gt;&gt; &gt;&gt; &gt; [  232.270800]
&gt;&gt; &gt;&gt; &gt; [  232.270802] Pid: 2690, comm: btdelconn Tainted: P
&gt;&gt; &gt;&gt; &gt; (2.6.26-rc4-00033-g5463508 #4)
&gt;&gt; &gt;
&gt;&gt; &gt; ...and we get oops in bluetooth.
&gt;&gt; &gt;
&gt;&gt; &gt; Use btusb, instead.
&gt;&gt; &gt;
&gt;&gt; &gt; Actually, I guess we should mark hci_usb as broken. I don't see why we
&gt;&gt; &gt; should debug the same problem over and over again.
&gt;
&gt;&gt; Well; "shizzle my frizzle," The funny thing is, is I have not seen
&gt;&gt; this after performing more suspends,
&gt;&gt; maybe this is a every once in a while scenario.
&gt;
&gt; It was "one in three" in my tests; but you need usb actively in use
&gt; while you are suspending for this to bite.
&gt;                                                                        Pavel
&gt;
&gt; --
&gt; (english) http://www.livejournal.com/~pavelmachek
&gt; (cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
&gt;

Aahhhh the beast has been discovered.
That's pretty cool!! I quess from my side, I'll try what you had
suggested "btusb".
("I just have to allocate enough time to do so, ("come on people", get
out of my way!!"))
I'm finding myself in one of those days where I'm away from my laptop
(contingency or not).
regards;

-- 
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080605201316</emailId><senderName>Clemens Cap</senderName><senderEmail>clemens.cap@uni-rostock.de</senderEmail><timestampReceived>2008-06-05 20:13:16-0400</timestampReceived><subject>Applications crashes kernel in BlueZ stack</subject><body>

Hi everyone,

I need a bit of help with debugging a bluetooth application.

The problem: The entire kernel just stops in the middle of the execution of the 
application. No panic, no syslogd, no crashing, just everything STOPS working, 
the screen stays as it is ... only relief is the power button.

The problem occurs rather consistently in a program which does inquiries to 
external devices using bluezlib and bluez calls. Most often it happens while the 
  execution is insideof a hci_create_connection, sometimes inside of a hci_inquiry.

The problem does not occur every time nor at the same place in the program, but, 
say, after some 10 - 15 times of executing the inquiry thread, and then, at 
different places, in blueZ lib calls.

The parameters used are standard, the program does heavy inquiry on devices. The 
Bluetooth device is a FrizBox AVM USB dongle.

This is on a 2.6.24.16 kernel, Ubuntu, using the included stack.

I am not in kernel hacking and I get ZERO information from the logs since the 
entire machine just stops. So I really could need some expert advice on how to 
proceed...it is not fund to reboot every 10 minutes :-o

Thanx.

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080611081128</emailId><senderName>"skyflame"</senderName><senderEmail>skyflame@21cn.com</senderEmail><timestampReceived>2008-06-11 08:11:28-0400</timestampReceived><subject>Re: How to use Bluez with CSR chip ?</subject><body>


&gt; ~ # hcitool -i hci0 scan
&gt; hci_dev_get: 0
&gt; hci_dev_get: 0
&gt; hci_dev_get: 0
&gt; Scanning ...
&gt; hci_dev_get: 0
&gt; inquiry_cache_flush: cache c7b01cf0
&gt; __hci_request: hci0 start
&gt; hci_inq_req: hci0
&gt; hci_send_cmd: hci0 ogf 0x1 ocf 0x1 plen 5
&gt; hci_send_cmd: skb len 8
&gt; hci_cmd_task: hci0 cmd 1
&gt; hci_send_frame: hci0 type 1 len 8
&gt; hci_uart_send_frame: hci0: type 1 len 8
&gt; hci_uart_tx_wakeup:
&gt; bcsp_prepare_pkt: We request packet no 1 to card
&gt; bcsp_prepare_pkt: Sending packet with seqno 0
&gt; hci_uart_tty_wakeup:
&gt; hci_uart_tx_wakeup:
&gt; bcsp_timed_event: hu c058c9e0 retransmitting 1 pkts
&gt; hci_uart_tx_wakeup:
&gt; bcsp_prepare_pkt: We request packet no 1 to card
&gt; bcsp_prepare_pkt: Sending packet with seqno 0
&gt; hci_uart_tty_wakeup:
&gt; bcsp_recv: hu c058c9e0 count 22 rx_state 1 rx_count 0
&gt; bcsp_complete_rx_pkt: Request for pkt 1 from card
&gt; bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 0
&gt; bcsp_complete_rx_pkt: Received seqno 1 from card
&gt; hci_uart_tx_wakeup:
&gt; bcsp_prepare_pkt: We request packet no 2 to card
&gt; bcsp_complete_rx_pkt: Request for pkt 1 from card
&gt; bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 0
&gt; hci_uart_tx_wakeup:
&gt; hci_rx_task: hci0
&gt; bcsp_recv: hu c058c9e0 count 11 rx_state 1 rx_count 0
&gt; bcsp_complete_rx_pkt: Received seqno 2 from card
&gt; hci_uart_tx_wakeup:
&gt; bcsp_prepare_pkt: We request packet no 3 to card
&gt; bcsp_complete_rx_pkt: Request for pkt 1 from card
&gt; bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 0
&gt; hci_uart_tty_wakeup:
&gt; hci_uart_tx_wakeup:
&gt; hci_rx_task: hci0
&gt; hci_req_complete: hci0 result 0x00
&gt; __hci_request: hci0 end: err 0
&gt; inquiry_cache_dump: cache c7b01cf0, copied 0
&gt; hci_inquiry: num_rsp 0
&gt; hci_dev_get: 0
&gt; ~ #
&gt;


Sorry , the above one do not enable scan

the following log continue with the above operation:


~ # hciconfig hci0 piscan
hci_dev_get: 0
hci_dev_get: 0
__hci_request: hci0 start
hci_scan_req: hci0 3
hci_send_cmd: hci0 ogf 0x3 ocf 0x1a plen 1
hci_send_cmd: skb len 4
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 4
hci_uart_send_frame: hci0: type 1 len 4
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 5 to card
bcsp_prepare_pkt: Sending packet with seqno 2
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:
bcsp_timed_event: hu c058c9e0 retransmitting 1 pkts
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 5 to card
bcsp_prepare_pkt: Sending packet with seqno 2
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 22 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 3 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 2
bcsp_complete_rx_pkt: Received seqno 5 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 6 to card
bcsp_complete_rx_pkt: Request for pkt 3 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 2
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_sent_cmd_data: hci0 ogf 0x3 ocf 0x1a
hci_req_complete: hci0 result 0x00
__hci_request: hci0 end: err 0
~ #
~ # hciconfig
hci_dev_get: 0
hci0:   Type: UART
        BD Address: 00:02:5B:00:A5:A5 ACL MTU: 310:10 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN INQUIRY
        RX bytes:335 acl:0 sco:0 events:14 errors:0
        TX bytes:345 acl:0 sco:0 commands:17 errors:0

~ #
~ #
~ # hcitool -i hci0 scan
hci_dev_get: 0
hci_dev_get: 0
hci_dev_get: 0
Scanning ...
hci_dev_get: 0
inquiry_cache_flush: cache c7b01cf0
__hci_request: hci0 start
hci_inq_req: hci0
hci_send_cmd: hci0 ogf 0x1 ocf 0x1 plen 5
hci_send_cmd: skb len 8
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 8
hci_uart_send_frame: hci0: type 1 len 8
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 6 to card
bcsp_prepare_pkt: Sending packet with seqno 3
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:
bcsp_timed_event: hu c058c9e0 retransmitting 1 pkts
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 6 to card
bcsp_prepare_pkt: Sending packet with seqno 3
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 22 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 4 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 3
bcsp_complete_rx_pkt: Received seqno 6 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 7 to card
bcsp_complete_rx_pkt: Request for pkt 4 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 3
hci_uart_tx_wakeup:
hci_rx_task: hci0
__hci_request: hci0 end: err -110
Inquiry failed: Connection timed out
~ #
~ # hcitool -i hci0 scan
hci_dev_get: 0
hci_dev_get: 0
hci_dev_get: 0
Scanning ...
hci_dev_get: 0
inquiry_cache_flush: cache c7b01cf0
__hci_request: hci0 start
hci_inq_req: hci0
__hci_request: hci0 end: err -110
Inquiry failed: Connection timed out
~ #


&gt;&gt;
&gt;&gt;
&gt;&gt; Many thanks.
&gt;&gt; Raymond
&gt;&gt; --
&gt;&gt; To unsubscribe from this list: send the line "unsubscribe 
&gt;&gt; linux-bluetooth" in
&gt;&gt; the body of a message to majordomo@vger.kernel.org
&gt;&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;&gt;
&gt;&gt;
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080613114719</emailId><senderName>maximilian attems</senderName><senderEmail>max@stro.at</senderEmail><timestampReceived>2008-06-13 11:47:19-0400</timestampReceived><subject>[PATCH] hci_usb: Blacklist Bluetooth Dell Wireless 370 for SCO MTU</subject><body>

From: Mario Limonciello &lt;Mario_Limonciello@dell.com&gt;

Add Dell Wireless 370 device to blacklist to enable SCO MTU workaround.

fixes report
https://bugs.launchpad.net/ubuntu/+source/linux/+bug/209715

Signed-off-by: Mario Limonciello &lt;Mario_Limonciello@Dell.com&gt;
Signed-off-by: Tim Gardner &lt;tim.gardner@canonical.com&gt;
Signed-off-by: maximilian attems &lt;max@stro.at&gt;
---
 drivers/bluetooth/hci_usb.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index d73e513..e9eef9a 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -134,6 +134,8 @@ static struct usb_device_id blacklist_ids[] = {
 
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	/* Dell Wireless 370 */
+	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
 
 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
 	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
-- 
1.5.5.3

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080626182855</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-06-26 18:28:55-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 10989] New: kernel oopses when wiggling the</subject><body>

On Thu, 26 Jun 2008 10:32:08 -0700 (PDT)
bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=10989

I assume that the bluetooth developers are watching
drivers_bluetooth@kernel-bugs.osdl.org?

Thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080627030629</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-27 03:06:29-0400</timestampReceived><subject>Re: bus_id changes</subject><body>

On Fri, Jun 27, 2008 at 10:49 AM, Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; Hi Dave,
&gt;
&gt;&gt; I noticed your patch about the hci conn bus_id changes in bugzilla.
&gt;&gt;
&gt;&gt; The original add-addr name is more straightforward indeed, Now the
&gt;&gt; bus_id 20 char limit will be not exist because the changes are already
&gt;&gt; in greg's tree.
&gt;&gt;
&gt;&gt; So how about use the hciX-addr-addr like name as original?
&gt;
&gt; actually this change is better since we only create the sysfs files when
&gt; the connection was successful. If the connection fails, then we don't
&gt; see any sysfs stuff.

Ok, you are right,  Thanks.

-- 
Regards
dave
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080501105917</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-05-01 10:59:17-0400</timestampReceived><subject>Fw: Kernel crash report - maybe triggered by the bluetooth system</subject><body>

Begin forwarded message:

Date: Tue, 29 Apr 2008 12:39:55 +0200
From: Giordano Battilana &lt;jordan83@gmail.com&gt;
To: linux-kernel@vger.kernel.org
Subject: Kernel crash report - maybe triggered by the bluetooth system


Hello to everyone,

I'm posting this message because I think that I might have triggered some kind 
of bug in the kernel, in my opinion related to the bluetooth system.

I use bluetooth VERY rarely, as a matter of fact I used it yesterday for the 
first time in probably 8 months, because I wanted to transfer a picture from 
my mobile phone into the laptop (usually I don't take pictures with the 
mobile because the quality is very poor).
The importance of this observation resides in the fact that I experienced 
another - and the only one till yesterday - kernel crash several months ago, 
about the same time when I used the bluetooth for the last time.

Yesterday I switched on kbluetoothd (I use KDE 3.5.8 in Gentoo 2008.0) and I 
started the transfer. As soon as I inserted the PIN code to confirm the 
transfer and the progress bar appeared on the screen, an oops apparently 
occurred, since two out of three keyboard lights were blinking (the capslock 
light was the only one to be switched off). Needlessly to say the only thing 
I could do was to hard reboot. The crash was not recorded in the logs with 
any explicit message.

I tried to perform the transfer again and this time everything went 
flawlessly. Then, I left my desk for about half an hour and when I came back 
the oops had occurred again, since the screen was black (switched off by the 
power-save mode in KDE) but the two lights were blinking again. Yet, no trace 
of oops in the logs.

I admit that I have no real proof that bluetooth is the cause of the oops, but 
as I tryed to explain I can reasonably suspect that it is somehow involved.
As I said I have not been using bluetooth for several months and in that 
period i never experienced kernel crashes. Yesterday I used it twice and i 
experienced two crashes in a row. More than a coincidence, I would say.

In attachment you can find my kernel configuration file and all the 
informations that are requested in 
http://www.kernel.org/pub/linux/docs/lkml/reporting-bugs.html

I hope that these informations can be helpful, even though they are quite 
vague.

Best regards,

Giordano Battilana


["kernel-config-x86-2.6.24-gentoo-r3" (text/plain)]

#
# Automatically generated make config: don't edit
# Linux kernel version: 2.6.24-gentoo-r3
# Thu Mar 20 18:17:23 2008
#
# CONFIG_64BIT is not set
CONFIG_X86_32=y
# CONFIG_X86_64 is not set
CONFIG_X86=y
CONFIG_GENERIC_TIME=y
CONFIG_GENERIC_CMOS_UPDATE=y
CONFIG_CLOCKSOURCE_WATCHDOG=y
CONFIG_GENERIC_CLOCKEVENTS=y
CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
CONFIG_LOCKDEP_SUPPORT=y
CONFIG_STACKTRACE_SUPPORT=y
CONFIG_SEMAPHORE_SLEEPERS=y
CONFIG_MMU=y
CONFIG_ZONE_DMA=y
CONFIG_QUICKLIST=y
CONFIG_GENERIC_ISA_DMA=y
CONFIG_GENERIC_IOMAP=y
CONFIG_GENERIC_BUG=y
CONFIG_GENERIC_HWEIGHT=y
CONFIG_ARCH_MAY_HAVE_PC_FDC=y
CONFIG_DMI=y
# CONFIG_RWSEM_GENERIC_SPINLOCK is not set
CONFIG_RWSEM_XCHGADD_ALGORITHM=y
# CONFIG_ARCH_HAS_ILOG2_U32 is not set
# CONFIG_ARCH_HAS_ILOG2_U64 is not set
CONFIG_GENERIC_CALIBRATE_DELAY=y
# CONFIG_GENERIC_TIME_VSYSCALL is not set
CONFIG_ARCH_SUPPORTS_OPROFILE=y
# CONFIG_ZONE_DMA32 is not set
CONFIG_ARCH_POPULATES_NODE_MAP=y
# CONFIG_AUDIT_ARCH is not set
CONFIG_GENERIC_HARDIRQS=y
CONFIG_GENERIC_IRQ_PROBE=y
CONFIG_GENERIC_PENDING_IRQ=y
CONFIG_X86_SMP=y
CONFIG_X86_HT=y
CONFIG_X86_BIOS_REBOOT=y
CONFIG_X86_TRAMPOLINE=y
CONFIG_KTIME_SCALAR=y
CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"

#
# General setup
#
CONFIG_EXPERIMENTAL=y
CONFIG_LOCK_KERNEL=y
CONFIG_INIT_ENV_ARG_LIMIT=32
CONFIG_LOCALVERSION=""
# CONFIG_LOCALVERSION_AUTO is not set
CONFIG_SWAP=y
CONFIG_SYSVIPC=y
CONFIG_SYSVIPC_SYSCTL=y
CONFIG_POSIX_MQUEUE=y
CONFIG_BSD_PROCESS_ACCT=y
CONFIG_BSD_PROCESS_ACCT_V3=y
# CONFIG_TASKSTATS is not set
# CONFIG_USER_NS is not set
# CONFIG_PID_NS is not set
CONFIG_AUDIT=y
CONFIG_AUDITSYSCALL=y
CONFIG_AUDIT_TREE=y
CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
CONFIG_LOG_BUF_SHIFT=14
# CONFIG_CGROUPS is not set
CONFIG_FAIR_GROUP_SCHED=y
CONFIG_FAIR_USER_SCHED=y
# CONFIG_FAIR_CGROUP_SCHED is not set
# CONFIG_SYSFS_DEPRECATED is not set
# CONFIG_RELAY is not set
CONFIG_BLK_DEV_INITRD=y
CONFIG_INITRAMFS_SOURCE="/usr/share/v86d/initramfs"
CONFIG_INITRAMFS_ROOT_UID=0
CONFIG_INITRAMFS_ROOT_GID=0
CONFIG_CC_OPTIMIZE_FOR_SIZE=y
CONFIG_SYSCTL=y
# CONFIG_EMBEDDED is not set
CONFIG_UID16=y
CONFIG_SYSCTL_SYSCALL=y
CONFIG_KALLSYMS=y
# CONFIG_KALLSYMS_EXTRA_PASS is not set
CONFIG_HOTPLUG=y
CONFIG_PRINTK=y
CONFIG_BUG=y
CONFIG_ELF_CORE=y
CONFIG_BASE_FULL=y
CONFIG_FUTEX=y
CONFIG_ANON_INODES=y
CONFIG_EPOLL=y
CONFIG_SIGNALFD=y
CONFIG_EVENTFD=y
CONFIG_SHMEM=y
CONFIG_VM_EVENT_COUNTERS=y
CONFIG_SLAB=y
# CONFIG_SLUB is not set
# CONFIG_SLOB is not set
CONFIG_SLABINFO=y
CONFIG_RT_MUTEXES=y
# CONFIG_TINY_SHMEM is not set
CONFIG_BASE_SMALL=0
CONFIG_MODULES=y
CONFIG_MODULE_UNLOAD=y
CONFIG_MODULE_FORCE_UNLOAD=y
CONFIG_MODVERSIONS=y
# CONFIG_MODULE_SRCVERSION_ALL is not set
CONFIG_KMOD=y
CONFIG_STOP_MACHINE=y
CONFIG_BLOCK=y
# CONFIG_LBD is not set
# CONFIG_BLK_DEV_IO_TRACE is not set
# CONFIG_LSF is not set
# CONFIG_BLK_DEV_BSG is not set

#
# IO Schedulers
#
CONFIG_IOSCHED_NOOP=y
# CONFIG_IOSCHED_AS is not set
# CONFIG_IOSCHED_DEADLINE is not set
CONFIG_IOSCHED_CFQ=y
# CONFIG_DEFAULT_AS is not set
# CONFIG_DEFAULT_DEADLINE is not set
CONFIG_DEFAULT_CFQ=y
# CONFIG_DEFAULT_NOOP is not set
CONFIG_DEFAULT_IOSCHED="cfq"
CONFIG_PREEMPT_NOTIFIERS=y

#
# Processor type and features
#
CONFIG_TICK_ONESHOT=y
CONFIG_NO_HZ=y
CONFIG_HIGH_RES_TIMERS=y
CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
CONFIG_SMP=y
CONFIG_X86_PC=y
# CONFIG_X86_ELAN is not set
# CONFIG_X86_VOYAGER is not set
# CONFIG_X86_NUMAQ is not set
# CONFIG_X86_SUMMIT is not set
# CONFIG_X86_BIGSMP is not set
# CONFIG_X86_VISWS is not set
# CONFIG_X86_GENERICARCH is not set
# CONFIG_X86_ES7000 is not set
# CONFIG_X86_VSMP is not set
CONFIG_SCHED_NO_NO_OMIT_FRAME_POINTER=y
# CONFIG_PARAVIRT_GUEST is not set
# CONFIG_M386 is not set
# CONFIG_M486 is not set
# CONFIG_M586 is not set
# CONFIG_M586TSC is not set
# CONFIG_M586MMX is not set
# CONFIG_M686 is not set
# CONFIG_MPENTIUMII is not set
# CONFIG_MPENTIUMIII is not set
# CONFIG_MPENTIUMM is not set
# CONFIG_MPENTIUM4 is not set
# CONFIG_MK6 is not set
# CONFIG_MK7 is not set
# CONFIG_MK8 is not set
# CONFIG_MCRUSOE is not set
# CONFIG_MEFFICEON is not set
# CONFIG_MWINCHIPC6 is not set
# CONFIG_MWINCHIP2 is not set
# CONFIG_MWINCHIP3D is not set
# CONFIG_MGEODEGX1 is not set
# CONFIG_MGEODE_LX is not set
# CONFIG_MCYRIXIII is not set
# CONFIG_MVIAC3_2 is not set
# CONFIG_MVIAC7 is not set
# CONFIG_MPSC is not set
CONFIG_MCORE2=y
# CONFIG_GENERIC_CPU is not set
# CONFIG_X86_GENERIC is not set
CONFIG_X86_CMPXCHG=y
CONFIG_X86_L1_CACHE_SHIFT=6
CONFIG_X86_XADD=y
CONFIG_X86_WP_WORKS_OK=y
CONFIG_X86_INVLPG=y
CONFIG_X86_BSWAP=y
CONFIG_X86_POPAD_OK=y
CONFIG_X86_GOOD_APIC=y
CONFIG_X86_INTEL_USERCOPY=y
CONFIG_X86_USE_PPRO_CHECKSUM=y
CONFIG_X86_TSC=y
CONFIG_X86_MINIMUM_CPU_FAMILY=4
CONFIG_HPET_TIMER=y
CONFIG_HPET_EMULATE_RTC=y
CONFIG_NR_CPUS=2
# CONFIG_SCHED_SMT is not set
CONFIG_SCHED_MC=y
# CONFIG_PREEMPT_NONE is not set
CONFIG_PREEMPT_VOLUNTARY=y
# CONFIG_PREEMPT is not set
CONFIG_PREEMPT_BKL=y
CONFIG_X86_LOCAL_APIC=y
CONFIG_X86_IO_APIC=y
# CONFIG_X86_MCE is not set
CONFIG_VM86=y
# CONFIG_TOSHIBA is not set
CONFIG_I8K=m
CONFIG_X86_REBOOTFIXUPS=y
CONFIG_MICROCODE=m
CONFIG_MICROCODE_OLD_INTERFACE=y
CONFIG_X86_MSR=y
CONFIG_X86_CPUID=y
# CONFIG_NOHIGHMEM is not set
CONFIG_HIGHMEM4G=y
# CONFIG_HIGHMEM64G is not set
CONFIG_PAGE_OFFSET=0xC0000000
CONFIG_HIGHMEM=y
CONFIG_ARCH_FLATMEM_ENABLE=y
CONFIG_ARCH_SPARSEMEM_ENABLE=y
CONFIG_ARCH_SELECT_MEMORY_MODEL=y
CONFIG_SELECT_MEMORY_MODEL=y
CONFIG_FLATMEM_MANUAL=y
# CONFIG_DISCONTIGMEM_MANUAL is not set
# CONFIG_SPARSEMEM_MANUAL is not set
CONFIG_FLATMEM=y
CONFIG_FLAT_NODE_MEM_MAP=y
CONFIG_SPARSEMEM_STATIC=y
# CONFIG_SPARSEMEM_VMEMMAP_ENABLE is not set
CONFIG_SPLIT_PTLOCK_CPUS=4
# CONFIG_RESOURCES_64BIT is not set
CONFIG_ZONE_DMA_FLAG=1
CONFIG_BOUNCE=y
CONFIG_NR_QUICK=1
CONFIG_VIRT_TO_BUS=y
# CONFIG_HIGHPTE is not set
# CONFIG_MATH_EMULATION is not set
CONFIG_MTRR=y
CONFIG_EFI=y
CONFIG_IRQBALANCE=y
CONFIG_BOOT_IOREMAP=y
CONFIG_SECCOMP=y
# CONFIG_HZ_100 is not set
# CONFIG_HZ_250 is not set
# CONFIG_HZ_300 is not set
CONFIG_HZ_1000=y
CONFIG_HZ=1000
# CONFIG_KEXEC is not set
CONFIG_CRASH_DUMP=y
CONFIG_PHYSICAL_START=0x1000000
# CONFIG_RELOCATABLE is not set
CONFIG_PHYSICAL_ALIGN=0x100000
CONFIG_HOTPLUG_CPU=y
CONFIG_COMPAT_VDSO=y
CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y

#
# Power management options
#
CONFIG_PM=y
# CONFIG_PM_LEGACY is not set
# CONFIG_PM_DEBUG is not set
CONFIG_PM_SLEEP_SMP=y
CONFIG_PM_SLEEP=y
CONFIG_SUSPEND_SMP_POSSIBLE=y
CONFIG_SUSPEND=y
CONFIG_HIBERNATION_SMP_POSSIBLE=y
CONFIG_HIBERNATION=y
CONFIG_PM_STD_PARTITION="/dev/sda5"
CONFIG_ACPI=y
CONFIG_ACPI_SLEEP=y
CONFIG_ACPI_PROCFS=y
CONFIG_ACPI_PROCFS_POWER=y
CONFIG_ACPI_SYSFS_POWER=y
CONFIG_ACPI_PROC_EVENT=y
CONFIG_ACPI_AC=y
CONFIG_ACPI_BATTERY=y
CONFIG_ACPI_BUTTON=y
CONFIG_ACPI_VIDEO=m
CONFIG_ACPI_FAN=y
CONFIG_ACPI_DOCK=y
# CONFIG_ACPI_BAY is not set
CONFIG_ACPI_PROCESSOR=y
CONFIG_ACPI_HOTPLUG_CPU=y
CONFIG_ACPI_THERMAL=y
# CONFIG_ACPI_ASUS is not set
# CONFIG_ACPI_TOSHIBA is not set
CONFIG_ACPI_BLACKLIST_YEAR=0
# CONFIG_ACPI_DEBUG is not set
CONFIG_ACPI_EC=y
CONFIG_ACPI_POWER=y
CONFIG_ACPI_SYSTEM=y
CONFIG_X86_PM_TIMER=y
CONFIG_ACPI_CONTAINER=y
CONFIG_ACPI_SBS=y
# CONFIG_APM is not set

#
# CPU Frequency scaling
#
CONFIG_CPU_FREQ=y
CONFIG_CPU_FREQ_TABLE=y
# CONFIG_CPU_FREQ_DEBUG is not set
# CONFIG_CPU_FREQ_STAT is not set
# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND=y
# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
CONFIG_CPU_FREQ_GOV_POWERSAVE=y
CONFIG_CPU_FREQ_GOV_USERSPACE=y
CONFIG_CPU_FREQ_GOV_ONDEMAND=y
CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y

#
# CPUFreq processor drivers
#
CONFIG_X86_ACPI_CPUFREQ=y
# CONFIG_X86_POWERNOW_K6 is not set
# CONFIG_X86_POWERNOW_K7 is not set
# CONFIG_X86_POWERNOW_K8 is not set
# CONFIG_X86_GX_SUSPMOD is not set
CONFIG_X86_SPEEDSTEP_CENTRINO=y
CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE=y
# CONFIG_X86_SPEEDSTEP_ICH is not set
# CONFIG_X86_SPEEDSTEP_SMI is not set
# CONFIG_X86_P4_CLOCKMOD is not set
# CONFIG_X86_CPUFREQ_NFORCE2 is not set
# CONFIG_X86_LONGRUN is not set
# CONFIG_X86_LONGHAUL is not set
# CONFIG_X86_E_POWERSAVER is not set

#
# shared options
#
# CONFIG_X86_ACPI_CPUFREQ_PROC_INTF is not set
# CONFIG_X86_SPEEDSTEP_LIB is not set
CONFIG_CPU_IDLE=y
CONFIG_CPU_IDLE_GOV_LADDER=y
CONFIG_CPU_IDLE_GOV_MENU=y

#
# Bus options (PCI etc.)
#
CONFIG_PCI=y
# CONFIG_PCI_GOBIOS is not set
# CONFIG_PCI_GOMMCONFIG is not set
# CONFIG_PCI_GODIRECT is not set
CONFIG_PCI_GOANY=y
CONFIG_PCI_BIOS=y
CONFIG_PCI_DIRECT=y
CONFIG_PCI_MMCONFIG=y
CONFIG_PCI_DOMAINS=y
CONFIG_PCIEPORTBUS=y
CONFIG_PCIEAER=y
CONFIG_ARCH_SUPPORTS_MSI=y
# CONFIG_PCI_MSI is not set
CONFIG_PCI_LEGACY=y
CONFIG_HT_IRQ=y
CONFIG_ISA_DMA_API=y
# CONFIG_ISA is not set
# CONFIG_MCA is not set
# CONFIG_SCx200 is not set
# CONFIG_PCCARD is not set
# CONFIG_HOTPLUG_PCI is not set

#
# Executable file formats / Emulations
#
CONFIG_BINFMT_ELF=y
# CONFIG_BINFMT_AOUT is not set
# CONFIG_BINFMT_MISC is not set

#
# Networking
#
CONFIG_NET=y

#
# Networking options
#
CONFIG_PACKET=y
# CONFIG_PACKET_MMAP is not set
CONFIG_UNIX=y
CONFIG_XFRM=y
CONFIG_XFRM_USER=m
# CONFIG_XFRM_SUB_POLICY is not set
# CONFIG_XFRM_MIGRATE is not set
# CONFIG_NET_KEY is not set
CONFIG_INET=y
# CONFIG_IP_MULTICAST is not set
CONFIG_IP_ADVANCED_ROUTER=y
CONFIG_ASK_IP_FIB_HASH=y
# CONFIG_IP_FIB_TRIE is not set
CONFIG_IP_FIB_HASH=y
# CONFIG_IP_MULTIPLE_TABLES is not set
CONFIG_IP_ROUTE_MULTIPATH=y
CONFIG_IP_ROUTE_VERBOSE=y
# CONFIG_IP_PNP is not set
# CONFIG_NET_IPIP is not set
# CONFIG_NET_IPGRE is not set
# CONFIG_ARPD is not set
CONFIG_SYN_COOKIES=y
CONFIG_INET_AH=m
CONFIG_INET_ESP=m
CONFIG_INET_IPCOMP=m
CONFIG_INET_XFRM_TUNNEL=m
CONFIG_INET_TUNNEL=m
CONFIG_INET_XFRM_MODE_TRANSPORT=y
CONFIG_INET_XFRM_MODE_TUNNEL=y
CONFIG_INET_XFRM_MODE_BEET=y
# CONFIG_INET_LRO is not set
CONFIG_INET_DIAG=y
CONFIG_INET_TCP_DIAG=y
# CONFIG_TCP_CONG_ADVANCED is not set
CONFIG_TCP_CONG_CUBIC=y
CONFIG_DEFAULT_TCP_CONG="cubic"
# CONFIG_TCP_MD5SIG is not set
# CONFIG_IP_VS is not set
# CONFIG_IPV6 is not set
# CONFIG_INET6_XFRM_TUNNEL is not set
# CONFIG_INET6_TUNNEL is not set
# CONFIG_NETWORK_SECMARK is not set
CONFIG_NETFILTER=y
# CONFIG_NETFILTER_DEBUG is not set

#
# Core Netfilter Configuration
#
CONFIG_NETFILTER_NETLINK=m
CONFIG_NETFILTER_NETLINK_QUEUE=m
CONFIG_NETFILTER_NETLINK_LOG=m
CONFIG_NF_CONNTRACK_ENABLED=m
CONFIG_NF_CONNTRACK=m
CONFIG_NF_CT_ACCT=y
CONFIG_NF_CONNTRACK_MARK=y
# CONFIG_NF_CONNTRACK_EVENTS is not set
CONFIG_NF_CT_PROTO_GRE=m
# CONFIG_NF_CT_PROTO_SCTP is not set
# CONFIG_NF_CT_PROTO_UDPLITE is not set
CONFIG_NF_CONNTRACK_AMANDA=m
CONFIG_NF_CONNTRACK_FTP=m
# CONFIG_NF_CONNTRACK_H323 is not set
CONFIG_NF_CONNTRACK_IRC=m
# CONFIG_NF_CONNTRACK_NETBIOS_NS is not set
CONFIG_NF_CONNTRACK_PPTP=m
# CONFIG_NF_CONNTRACK_SANE is not set
# CONFIG_NF_CONNTRACK_SIP is not set
CONFIG_NF_CONNTRACK_TFTP=m
# CONFIG_NF_CT_NETLINK is not set
CONFIG_NETFILTER_XTABLES=m
CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
CONFIG_NETFILTER_XT_TARGET_DSCP=m
CONFIG_NETFILTER_XT_TARGET_MARK=m
CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
CONFIG_NETFILTER_XT_TARGET_NFLOG=m
CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
CONFIG_NETFILTER_XT_TARGET_TRACE=m
CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
CONFIG_NETFILTER_XT_MATCH_COMMENT=m
CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
CONFIG_NETFILTER_XT_MATCH_DCCP=m
CONFIG_NETFILTER_XT_MATCH_DSCP=m
CONFIG_NETFILTER_XT_MATCH_ESP=m
# CONFIG_NETFILTER_XT_MATCH_HELPER is not set
CONFIG_NETFILTER_XT_MATCH_LENGTH=m
CONFIG_NETFILTER_XT_MATCH_LIMIT=m
CONFIG_NETFILTER_XT_MATCH_MAC=m
CONFIG_NETFILTER_XT_MATCH_MARK=m
CONFIG_NETFILTER_XT_MATCH_POLICY=m
CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
CONFIG_NETFILTER_XT_MATCH_QUOTA=m
CONFIG_NETFILTER_XT_MATCH_REALM=m
CONFIG_NETFILTER_XT_MATCH_SCTP=m
CONFIG_NETFILTER_XT_MATCH_STATE=m
CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
CONFIG_NETFILTER_XT_MATCH_STRING=m
CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
CONFIG_NETFILTER_XT_MATCH_TIME=m
CONFIG_NETFILTER_XT_MATCH_U32=m
CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m

#
# IP: Netfilter Configuration
#
CONFIG_NF_CONNTRACK_IPV4=m
CONFIG_NF_CONNTRACK_PROC_COMPAT=y
# CONFIG_IP_NF_QUEUE is not set
CONFIG_IP_NF_IPTABLES=m
CONFIG_IP_NF_MATCH_IPRANGE=m
CONFIG_IP_NF_MATCH_TOS=m
CONFIG_IP_NF_MATCH_RECENT=m
CONFIG_IP_NF_MATCH_ECN=m
CONFIG_IP_NF_MATCH_AH=m
CONFIG_IP_NF_MATCH_TTL=m
CONFIG_IP_NF_MATCH_OWNER=m
CONFIG_IP_NF_MATCH_ADDRTYPE=m
CONFIG_IP_NF_FILTER=m
CONFIG_IP_NF_TARGET_REJECT=m
CONFIG_IP_NF_TARGET_LOG=m
CONFIG_IP_NF_TARGET_ULOG=m
CONFIG_NF_NAT=m
CONFIG_NF_NAT_NEEDED=y
CONFIG_IP_NF_TARGET_MASQUERADE=m
CONFIG_IP_NF_TARGET_REDIRECT=m
CONFIG_IP_NF_TARGET_NETMAP=m
CONFIG_IP_NF_TARGET_SAME=m
# CONFIG_NF_NAT_SNMP_BASIC is not set
CONFIG_NF_NAT_PROTO_GRE=m
CONFIG_NF_NAT_FTP=m
CONFIG_NF_NAT_IRC=m
CONFIG_NF_NAT_TFTP=m
CONFIG_NF_NAT_AMANDA=m
CONFIG_NF_NAT_PPTP=m
# CONFIG_NF_NAT_H323 is not set
# CONFIG_NF_NAT_SIP is not set
CONFIG_IP_NF_MANGLE=m
CONFIG_IP_NF_TARGET_TOS=m
CONFIG_IP_NF_TARGET_ECN=m
CONFIG_IP_NF_TARGET_TTL=m
# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
CONFIG_IP_NF_RAW=m
CONFIG_IP_NF_ARPTABLES=m
CONFIG_IP_NF_ARPFILTER=m
CONFIG_IP_NF_ARP_MANGLE=m
# CONFIG_IP_DCCP is not set
CONFIG_IP_SCTP=m
# CONFIG_SCTP_DBG_MSG is not set
# CONFIG_SCTP_DBG_OBJCNT is not set
# CONFIG_SCTP_HMAC_NONE is not set
# CONFIG_SCTP_HMAC_SHA1 is not set
CONFIG_SCTP_HMAC_MD5=y
# CONFIG_TIPC is not set
# CONFIG_ATM is not set
# CONFIG_BRIDGE is not set
# CONFIG_VLAN_8021Q is not set
# CONFIG_DECNET is not set
# CONFIG_LLC2 is not set
# CONFIG_IPX is not set
# CONFIG_ATALK is not set
# CONFIG_X25 is not set
# CONFIG_LAPB is not set
# CONFIG_ECONET is not set
# CONFIG_WAN_ROUTER is not set
# CONFIG_NET_SCHED is not set
CONFIG_NET_CLS_ROUTE=y
CONFIG_NET_SCH_FIFO=y

#
# Network testing
#
# CONFIG_NET_PKTGEN is not set
# CONFIG_HAMRADIO is not set
# CONFIG_IRDA is not set
CONFIG_BT=m
CONFIG_BT_L2CAP=m
CONFIG_BT_SCO=m
CONFIG_BT_RFCOMM=m
CONFIG_BT_RFCOMM_TTY=y
CONFIG_BT_BNEP=m
CONFIG_BT_BNEP_MC_FILTER=y
CONFIG_BT_BNEP_PROTO_FILTER=y
CONFIG_BT_HIDP=m

#
# Bluetooth device drivers
#
CONFIG_BT_HCIUSB=m
CONFIG_BT_HCIUSB_SCO=y
# CONFIG_BT_HCIBTSDIO is not set
CONFIG_BT_HCIUART=m
CONFIG_BT_HCIUART_H4=y
CONFIG_BT_HCIUART_BCSP=y
CONFIG_BT_HCIUART_LL=y
CONFIG_BT_HCIBCM203X=m
CONFIG_BT_HCIBPA10X=m
CONFIG_BT_HCIBFUSB=m
CONFIG_BT_HCIVHCI=m
# CONFIG_AF_RXRPC is not set

#
# Wireless
#
CONFIG_CFG80211=m
CONFIG_NL80211=y
CONFIG_WIRELESS_EXT=y
CONFIG_MAC80211=m
CONFIG_MAC80211_RCSIMPLE=y
# CONFIG_MAC80211_DEBUG is not set
CONFIG_IEEE80211=m
# CONFIG_IEEE80211_DEBUG is not set
CONFIG_IEEE80211_CRYPT_WEP=m
CONFIG_IEEE80211_CRYPT_CCMP=m
CONFIG_IEEE80211_CRYPT_TKIP=m
CONFIG_IEEE80211_SOFTMAC=m
# CONFIG_IEEE80211_SOFTMAC_DEBUG is not set
# CONFIG_RFKILL is not set
# CONFIG_NET_9P is not set

#
# Device Drivers
#

#
# Generic Driver Options
#
CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
CONFIG_STANDALONE=y
CONFIG_PREVENT_FIRMWARE_BUILD=y
CONFIG_FW_LOADER=m
# CONFIG_SYS_HYPERVISOR is not set
CONFIG_CONNECTOR=y
CONFIG_PROC_EVENTS=y
# CONFIG_MTD is not set
# CONFIG_PARPORT is not set
CONFIG_PNP=y
# CONFIG_PNP_DEBUG is not set

#
# Protocols
#
CONFIG_PNPACPI=y
CONFIG_BLK_DEV=y
# CONFIG_BLK_DEV_FD is not set
# CONFIG_BLK_CPQ_DA is not set
# CONFIG_BLK_CPQ_CISS_DA is not set
# CONFIG_BLK_DEV_DAC960 is not set
# CONFIG_BLK_DEV_UMEM is not set
# CONFIG_BLK_DEV_COW_COMMON is not set
CONFIG_BLK_DEV_LOOP=y
CONFIG_BLK_DEV_CRYPTOLOOP=m
CONFIG_BLK_DEV_NBD=m
# CONFIG_BLK_DEV_SX8 is not set
# CONFIG_BLK_DEV_UB is not set
CONFIG_BLK_DEV_RAM=y
CONFIG_BLK_DEV_RAM_COUNT=16
CONFIG_BLK_DEV_RAM_SIZE=8192
CONFIG_BLK_DEV_RAM_BLOCKSIZE=1024
CONFIG_CDROM_PKTCDVD=m
CONFIG_CDROM_PKTCDVD_BUFFERS=8
CONFIG_CDROM_PKTCDVD_WCACHE=y
# CONFIG_ATA_OVER_ETH is not set
CONFIG_MISC_DEVICES=y
# CONFIG_IBM_ASM is not set
# CONFIG_PHANTOM is not set
# CONFIG_EEPROM_93CX6 is not set
# CONFIG_SGI_IOC4 is not set
# CONFIG_TIFM_CORE is not set
# CONFIG_FUJITSU_LAPTOP is not set
# CONFIG_MSI_LAPTOP is not set
# CONFIG_SONY_LAPTOP is not set
# CONFIG_THINKPAD_ACPI is not set
CONFIG_IDE=y
CONFIG_BLK_DEV_IDE=y

#
# Please see Documentation/ide.txt for help/info on IDE drives
#
# CONFIG_BLK_DEV_IDE_SATA is not set
# CONFIG_BLK_DEV_HD_IDE is not set
CONFIG_BLK_DEV_IDEDISK=y
CONFIG_IDEDISK_MULTI_MODE=y
CONFIG_BLK_DEV_IDECD=y
# CONFIG_BLK_DEV_IDETAPE is not set
CONFIG_BLK_DEV_IDEFLOPPY=m
# CONFIG_BLK_DEV_IDESCSI is not set
CONFIG_BLK_DEV_IDEACPI=y
# CONFIG_IDE_TASK_IOCTL is not set
CONFIG_IDE_PROC_FS=y

#
# IDE chipset support/bugfixes
#
CONFIG_IDE_GENERIC=y
# CONFIG_BLK_DEV_PLATFORM is not set
# CONFIG_BLK_DEV_CMD640 is not set
CONFIG_BLK_DEV_IDEPNP=y

#
# PCI IDE chipsets support
#
CONFIG_BLK_DEV_IDEPCI=y
CONFIG_IDEPCI_SHARE_IRQ=y
CONFIG_IDEPCI_PCIBUS_ORDER=y
# CONFIG_BLK_DEV_GENERIC is not set
# CONFIG_BLK_DEV_OPTI621 is not set
# CONFIG_BLK_DEV_RZ1000 is not set
CONFIG_BLK_DEV_IDEDMA_PCI=y
# CONFIG_BLK_DEV_AEC62XX is not set
# CONFIG_BLK_DEV_ALI15X3 is not set
# CONFIG_BLK_DEV_AMD74XX is not set
# CONFIG_BLK_DEV_ATIIXP is not set
# CONFIG_BLK_DEV_CMD64X is not set
# CONFIG_BLK_DEV_TRIFLEX is not set
# CONFIG_BLK_DEV_CY82C693 is not set
# CONFIG_BLK_DEV_CS5520 is not set
# CONFIG_BLK_DEV_CS5530 is not set
# CONFIG_BLK_DEV_CS5535 is not set
# CONFIG_BLK_DEV_HPT34X is not set
# CONFIG_BLK_DEV_HPT366 is not set
# CONFIG_BLK_DEV_JMICRON is not set
# CONFIG_BLK_DEV_SC1200 is not set
CONFIG_BLK_DEV_PIIX=y
# CONFIG_BLK_DEV_IT8213 is not set
# CONFIG_BLK_DEV_IT821X is not set
# CONFIG_BLK_DEV_NS87415 is not set
# CONFIG_BLK_DEV_PDC202XX_OLD is not set
# CONFIG_BLK_DEV_PDC202XX_NEW is not set
# CONFIG_BLK_DEV_SVWKS is not set
# CONFIG_BLK_DEV_SIIMAGE is not set
# CONFIG_BLK_DEV_SIS5513 is not set
# CONFIG_BLK_DEV_SLC90E66 is not set
# CONFIG_BLK_DEV_TRM290 is not set
# CONFIG_BLK_DEV_VIA82CXXX is not set
# CONFIG_BLK_DEV_TC86C001 is not set
# CONFIG_IDE_ARM is not set
CONFIG_BLK_DEV_IDEDMA=y
CONFIG_IDE_ARCH_OBSOLETE_INIT=y
# CONFIG_BLK_DEV_HD is not set

#
# SCSI device support
#
# CONFIG_RAID_ATTRS is not set
CONFIG_SCSI=y
CONFIG_SCSI_DMA=y
CONFIG_SCSI_TGT=m
# CONFIG_SCSI_NETLINK is not set
CONFIG_SCSI_PROC_FS=y

#
# SCSI support type (disk, tape, CD-ROM)
#
CONFIG_BLK_DEV_SD=y
# CONFIG_CHR_DEV_ST is not set
# CONFIG_CHR_DEV_OSST is not set
CONFIG_BLK_DEV_SR=m
CONFIG_BLK_DEV_SR_VENDOR=y
CONFIG_CHR_DEV_SG=m
# CONFIG_CHR_DEV_SCH is not set

#
# Some SCSI devices (e.g. CD jukebox) support multiple LUNs
#
# CONFIG_SCSI_MULTI_LUN is not set
# CONFIG_SCSI_CONSTANTS is not set
# CONFIG_SCSI_LOGGING is not set
# CONFIG_SCSI_SCAN_ASYNC is not set
CONFIG_SCSI_WAIT_SCAN=m

#
# SCSI Transports
#
# CONFIG_SCSI_SPI_ATTRS is not set
# CONFIG_SCSI_FC_ATTRS is not set
# CONFIG_SCSI_ISCSI_ATTRS is not set
# CONFIG_SCSI_SAS_LIBSAS is not set
# CONFIG_SCSI_SRP_ATTRS is not set
CONFIG_SCSI_LOWLEVEL=y
# CONFIG_ISCSI_TCP is not set
# CONFIG_BLK_DEV_3W_XXXX_RAID is not set
# CONFIG_SCSI_3W_9XXX is not set
# CONFIG_SCSI_ACARD is not set
# CONFIG_SCSI_AACRAID is not set
# CONFIG_SCSI_AIC7XXX is not set
# CONFIG_SCSI_AIC7XXX_OLD is not set
# CONFIG_SCSI_AIC79XX is not set
# CONFIG_SCSI_AIC94XX is not set
# CONFIG_SCSI_DPT_I2O is not set
# CONFIG_SCSI_ADVANSYS is not set
# CONFIG_SCSI_ARCMSR is not set
# CONFIG_MEGARAID_NEWGEN is not set
# CONFIG_MEGARAID_LEGACY is not set
# CONFIG_MEGARAID_SAS is not set
# CONFIG_SCSI_HPTIOP is not set
# CONFIG_SCSI_BUSLOGIC is not set
# CONFIG_SCSI_DMX3191D is not set
# CONFIG_SCSI_EATA is not set
# CONFIG_SCSI_FUTURE_DOMAIN is not set
# CONFIG_SCSI_GDTH is not set
# CONFIG_SCSI_IPS is not set
# CONFIG_SCSI_INITIO is not set
# CONFIG_SCSI_INIA100 is not set
# CONFIG_SCSI_STEX is not set
# CONFIG_SCSI_SYM53C8XX_2 is not set
# CONFIG_SCSI_IPR is not set
# CONFIG_SCSI_QLOGIC_1280 is not set
# CONFIG_SCSI_QLA_FC is not set
# CONFIG_SCSI_QLA_ISCSI is not set
# CONFIG_SCSI_LPFC is not set
# CONFIG_SCSI_DC395x is not set
# CONFIG_SCSI_DC390T is not set
# CONFIG_SCSI_NSP32 is not set
# CONFIG_SCSI_DEBUG is not set
# CONFIG_SCSI_SRP is not set
CONFIG_ATA=y
# CONFIG_ATA_NONSTANDARD is not set
CONFIG_ATA_ACPI=y
CONFIG_SATA_AHCI=y
# CONFIG_SATA_SVW is not set
# CONFIG_ATA_PIIX is not set
# CONFIG_SATA_MV is not set
# CONFIG_SATA_NV is not set
# CONFIG_PDC_ADMA is not set
# CONFIG_SATA_QSTOR is not set
# CONFIG_SATA_PROMISE is not set
# CONFIG_SATA_SX4 is not set
# CONFIG_SATA_SIL is not set
# CONFIG_SATA_SIL24 is not set
# CONFIG_SATA_SIS is not set
# CONFIG_SATA_ULI is not set
# CONFIG_SATA_VIA is not set
# CONFIG_SATA_VITESSE is not set
# CONFIG_SATA_INIC162X is not set
# CONFIG_PATA_ACPI is not set
# CONFIG_PATA_ALI is not set
# CONFIG_PATA_AMD is not set
# CONFIG_PATA_ARTOP is not set
# CONFIG_PATA_ATIIXP is not set
# CONFIG_PATA_CMD640_PCI is not set
# CONFIG_PATA_CMD64X is not set
# CONFIG_PATA_CS5520 is not set
# CONFIG_PATA_CS5530 is not set
# CONFIG_PATA_CS5535 is not set
# CONFIG_PATA_CS5536 is not set
# CONFIG_PATA_CYPRESS is not set
# CONFIG_PATA_EFAR is not set
# CONFIG_ATA_GENERIC is not set
# CONFIG_PATA_HPT366 is not set
# CONFIG_PATA_HPT37X is not set
# CONFIG_PATA_HPT3X2N is not set
# CONFIG_PATA_HPT3X3 is not set
# CONFIG_PATA_IT821X is not set
# CONFIG_PATA_IT8213 is not set
# CONFIG_PATA_JMICRON is not set
# CONFIG_PATA_TRIFLEX is not set
# CONFIG_PATA_MARVELL is not set
# CONFIG_PATA_MPIIX is not set
# CONFIG_PATA_OLDPIIX is not set
# CONFIG_PATA_NETCELL is not set
# CONFIG_PATA_NS87410 is not set
# CONFIG_PATA_NS87415 is not set
# CONFIG_PATA_OPTI is not set
# CONFIG_PATA_OPTIDMA is not set
# CONFIG_PATA_PDC_OLD is not set
# CONFIG_PATA_RADISYS is not set
# CONFIG_PATA_RZ1000 is not set
# CONFIG_PATA_SC1200 is not set
# CONFIG_PATA_SERVERWORKS is not set
# CONFIG_PATA_PDC2027X is not set
# CONFIG_PATA_SIL680 is not set
# CONFIG_PATA_SIS is not set
# CONFIG_PATA_VIA is not set
# CONFIG_PATA_WINBOND is not set
# CONFIG_MD is not set
# CONFIG_FUSION is not set

#
# IEEE 1394 (FireWire) support
#
# CONFIG_FIREWIRE is not set
CONFIG_IEEE1394=y

#
# Subsystem Options
#
# CONFIG_IEEE1394_VERBOSEDEBUG is not set

#
# Controllers
#
# CONFIG_IEEE1394_PCILYNX is not set
CONFIG_IEEE1394_OHCI1394=m

#
# Protocols
#
CONFIG_IEEE1394_VIDEO1394=m
CONFIG_IEEE1394_SBP2=m
# CONFIG_IEEE1394_SBP2_PHYS_DMA is not set
CONFIG_IEEE1394_ETH1394_ROM_ENTRY=y
CONFIG_IEEE1394_ETH1394=m
# CONFIG_IEEE1394_DV1394 is not set
CONFIG_IEEE1394_RAWIO=m
# CONFIG_I2O is not set
# CONFIG_MACINTOSH_DRIVERS is not set
CONFIG_NETDEVICES=y
# CONFIG_NETDEVICES_MULTIQUEUE is not set
# CONFIG_DUMMY is not set
# CONFIG_BONDING is not set
# CONFIG_MACVLAN is not set
# CONFIG_EQUALIZER is not set
# CONFIG_TUN is not set
# CONFIG_VETH is not set
# CONFIG_NET_SB1000 is not set
# CONFIG_ARCNET is not set
# CONFIG_PHYLIB is not set
CONFIG_NET_ETHERNET=y
CONFIG_MII=y
# CONFIG_HAPPYMEAL is not set
# CONFIG_SUNGEM is not set
# CONFIG_CASSINI is not set
# CONFIG_NET_VENDOR_3COM is not set
# CONFIG_NET_TULIP is not set
# CONFIG_HP100 is not set
# CONFIG_IBM_NEW_EMAC_ZMII is not set
# CONFIG_IBM_NEW_EMAC_RGMII is not set
# CONFIG_IBM_NEW_EMAC_TAH is not set
# CONFIG_IBM_NEW_EMAC_EMAC4 is not set
# CONFIG_NET_PCI is not set
CONFIG_B44=y
CONFIG_B44_PCI_AUTOSELECT=y
CONFIG_B44_PCICORE_AUTOSELECT=y
CONFIG_B44_PCI=y
# CONFIG_NETDEV_1000 is not set
# CONFIG_NETDEV_10000 is not set
# CONFIG_TR is not set

#
# Wireless LAN
#
# CONFIG_WLAN_PRE80211 is not set
CONFIG_WLAN_80211=y
# CONFIG_IPW2100 is not set
# CONFIG_IPW2200 is not set
# CONFIG_LIBERTAS is not set
# CONFIG_AIRO is not set
# CONFIG_HERMES is not set
# CONFIG_ATMEL is not set
# CONFIG_PRISM54 is not set
# CONFIG_USB_ZD1201 is not set
# CONFIG_RTL8187 is not set
# CONFIG_ADM8211 is not set
# CONFIG_P54_COMMON is not set
CONFIG_IWLWIFI=y
# CONFIG_IWLWIFI_DEBUG is not set
CONFIG_IWLWIFI_SENSITIVITY=y
CONFIG_IWLWIFI_SPECTRUM_MEASUREMENT=y
CONFIG_IWLWIFI_QOS=y
CONFIG_IWL4965=m
# CONFIG_IWL3945 is not set
# CONFIG_HOSTAP is not set
# CONFIG_BCM43XX is not set
# CONFIG_B43 is not set
# CONFIG_B43LEGACY is not set
# CONFIG_ZD1211RW is not set
# CONFIG_RT2X00 is not set

#
# USB Network Adapters
#
# CONFIG_USB_CATC is not set
# CONFIG_USB_KAWETH is not set
# CONFIG_USB_PEGASUS is not set
# CONFIG_USB_RTL8150 is not set
# CONFIG_USB_USBNET is not set
# CONFIG_WAN is not set
# CONFIG_FDDI is not set
# CONFIG_HIPPI is not set
CONFIG_PPP=m
CONFIG_PPP_MULTILINK=y
CONFIG_PPP_FILTER=y
CONFIG_PPP_ASYNC=m
CONFIG_PPP_SYNC_TTY=m
CONFIG_PPP_DEFLATE=m
CONFIG_PPP_BSDCOMP=m
CONFIG_PPP_MPPE=m
CONFIG_PPPOE=m
# CONFIG_PPPOL2TP is not set
CONFIG_SLIP=m
CONFIG_SLIP_COMPRESSED=y
CONFIG_SLHC=m
CONFIG_SLIP_SMART=y
CONFIG_SLIP_MODE_SLIP6=y
# CONFIG_NET_FC is not set
# CONFIG_SHAPER is not set
# CONFIG_NETCONSOLE is not set
# CONFIG_NETPOLL is not set
# CONFIG_NET_POLL_CONTROLLER is not set
# CONFIG_ISDN is not set
# CONFIG_PHONE is not set

#
# Input device support
#
CONFIG_INPUT=y
# CONFIG_INPUT_FF_MEMLESS is not set
# CONFIG_INPUT_POLLDEV is not set

#
# Userland interfaces
#
CONFIG_INPUT_MOUSEDEV=y
CONFIG_INPUT_MOUSEDEV_PSAUX=y
CONFIG_INPUT_MOUSEDEV_SCREEN_X=1280
CONFIG_INPUT_MOUSEDEV_SCREEN_Y=800
# CONFIG_INPUT_JOYDEV is not set
CONFIG_INPUT_EVDEV=y
# CONFIG_INPUT_EVBUG is not set

#
# Input Device Drivers
#
CONFIG_INPUT_KEYBOARD=y
CONFIG_KEYBOARD_ATKBD=y
# CONFIG_KEYBOARD_SUNKBD is not set
# CONFIG_KEYBOARD_LKKBD is not set
# CONFIG_KEYBOARD_XTKBD is not set
# CONFIG_KEYBOARD_NEWTON is not set
# CONFIG_KEYBOARD_STOWAWAY is not set
CONFIG_INPUT_MOUSE=y
CONFIG_MOUSE_PS2=y
CONFIG_MOUSE_PS2_ALPS=y
CONFIG_MOUSE_PS2_LOGIPS2PP=y
CONFIG_MOUSE_PS2_SYNAPTICS=y
CONFIG_MOUSE_PS2_LIFEBOOK=y
CONFIG_MOUSE_PS2_TRACKPOINT=y
# CONFIG_MOUSE_PS2_TOUCHKIT is not set
CONFIG_MOUSE_SERIAL=m
# CONFIG_MOUSE_APPLETOUCH is not set
# CONFIG_MOUSE_VSXXXAA is not set
# CONFIG_INPUT_JOYSTICK is not set
# CONFIG_INPUT_TABLET is not set
# CONFIG_INPUT_TOUCHSCREEN is not set
CONFIG_INPUT_MISC=y
CONFIG_INPUT_PCSPKR=m
# CONFIG_INPUT_WISTRON_BTNS is not set
# CONFIG_INPUT_ATLAS_BTNS is not set
# CONFIG_INPUT_ATI_REMOTE is not set
# CONFIG_INPUT_ATI_REMOTE2 is not set
# CONFIG_INPUT_KEYSPAN_REMOTE is not set
# CONFIG_INPUT_POWERMATE is not set
# CONFIG_INPUT_YEALINK is not set
# CONFIG_INPUT_UINPUT is not set

#
# Hardware I/O ports
#
CONFIG_SERIO=y
CONFIG_SERIO_I8042=y
CONFIG_SERIO_SERPORT=m
CONFIG_SERIO_CT82C710=m
CONFIG_SERIO_PCIPS2=m
CONFIG_SERIO_LIBPS2=y
CONFIG_SERIO_RAW=m
# CONFIG_GAMEPORT is not set

#
# Character devices
#
CONFIG_VT=y
CONFIG_VT_CONSOLE=y
CONFIG_HW_CONSOLE=y
# CONFIG_VT_HW_CONSOLE_BINDING is not set
# CONFIG_SERIAL_NONSTANDARD is not set

#
# Serial drivers
#
CONFIG_SERIAL_8250=y
CONFIG_SERIAL_8250_CONSOLE=y
CONFIG_FIX_EARLYCON_MEM=y
CONFIG_SERIAL_8250_PCI=y
CONFIG_SERIAL_8250_PNP=y
CONFIG_SERIAL_8250_NR_UARTS=4
CONFIG_SERIAL_8250_RUNTIME_UARTS=4
CONFIG_SERIAL_8250_EXTENDED=y
CONFIG_SERIAL_8250_MANY_PORTS=y
CONFIG_SERIAL_8250_SHARE_IRQ=y
# CONFIG_SERIAL_8250_DETECT_IRQ is not set
CONFIG_SERIAL_8250_RSA=y

#
# Non-8250 serial port support
#
CONFIG_SERIAL_CORE=y
CONFIG_SERIAL_CORE_CONSOLE=y
# CONFIG_SERIAL_JSM is not set
CONFIG_UNIX98_PTYS=y
# CONFIG_LEGACY_PTYS is not set
# CONFIG_IPMI_HANDLER is not set
CONFIG_HW_RANDOM=y
CONFIG_HW_RANDOM_INTEL=y
CONFIG_HW_RANDOM_AMD=y
CONFIG_HW_RANDOM_GEODE=y
CONFIG_HW_RANDOM_VIA=y
CONFIG_NVRAM=m
CONFIG_RTC=y
# CONFIG_R3964 is not set
# CONFIG_APPLICOM is not set
# CONFIG_SONYPI is not set
# CONFIG_MWAVE is not set
# CONFIG_PC8736x_GPIO is not set
# CONFIG_NSC_GPIO is not set
# CONFIG_CS5535_GPIO is not set
# CONFIG_RAW_DRIVER is not set
# CONFIG_HPET is not set
# CONFIG_HANGCHECK_TIMER is not set
# CONFIG_TCG_TPM is not set
# CONFIG_TELCLOCK is not set
CONFIG_DEVPORT=y
CONFIG_I2C=m
CONFIG_I2C_BOARDINFO=y
CONFIG_I2C_CHARDEV=m

#
# I2C Algorithms
#
CONFIG_I2C_ALGOBIT=m
CONFIG_I2C_ALGOPCF=m
CONFIG_I2C_ALGOPCA=m

#
# I2C Hardware Bus support
#
# CONFIG_I2C_ALI1535 is not set
# CONFIG_I2C_ALI1563 is not set
# CONFIG_I2C_ALI15X3 is not set
# CONFIG_I2C_AMD756 is not set
# CONFIG_I2C_AMD8111 is not set
CONFIG_I2C_I801=m
# CONFIG_I2C_I810 is not set
# CONFIG_I2C_PIIX4 is not set
# CONFIG_I2C_NFORCE2 is not set
# CONFIG_I2C_OCORES is not set
# CONFIG_I2C_PARPORT_LIGHT is not set
# CONFIG_I2C_PROSAVAGE is not set
# CONFIG_I2C_SAVAGE4 is not set
# CONFIG_I2C_SIMTEC is not set
# CONFIG_SCx200_ACB is not set
# CONFIG_I2C_SIS5595 is not set
# CONFIG_I2C_SIS630 is not set
# CONFIG_I2C_SIS96X is not set
# CONFIG_I2C_TAOS_EVM is not set
# CONFIG_I2C_STUB is not set
# CONFIG_I2C_TINY_USB is not set
# CONFIG_I2C_VIA is not set
# CONFIG_I2C_VIAPRO is not set
# CONFIG_I2C_VOODOO3 is not set

#
# Miscellaneous I2C Chip support
#
# CONFIG_SENSORS_DS1337 is not set
# CONFIG_SENSORS_DS1374 is not set
# CONFIG_DS1682 is not set
# CONFIG_SENSORS_EEPROM is not set
# CONFIG_SENSORS_PCF8574 is not set
# CONFIG_SENSORS_PCA9539 is not set
# CONFIG_SENSORS_PCF8591 is not set
# CONFIG_SENSORS_MAX6875 is not set
# CONFIG_SENSORS_TSL2550 is not set
# CONFIG_I2C_DEBUG_CORE is not set
# CONFIG_I2C_DEBUG_ALGO is not set
# CONFIG_I2C_DEBUG_BUS is not set
# CONFIG_I2C_DEBUG_CHIP is not set

#
# SPI support
#
# CONFIG_SPI is not set
# CONFIG_SPI_MASTER is not set
# CONFIG_W1 is not set
CONFIG_POWER_SUPPLY=y
# CONFIG_POWER_SUPPLY_DEBUG is not set
# CONFIG_PDA_POWER is not set
# CONFIG_BATTERY_DS2760 is not set
CONFIG_HWMON=m
# CONFIG_HWMON_VID is not set
# CONFIG_SENSORS_ABITUGURU is not set
# CONFIG_SENSORS_ABITUGURU3 is not set
# CONFIG_SENSORS_AD7418 is not set
# CONFIG_SENSORS_ADM1021 is not set
# CONFIG_SENSORS_ADM1025 is not set
# CONFIG_SENSORS_ADM1026 is not set
# CONFIG_SENSORS_ADM1029 is not set
# CONFIG_SENSORS_ADM1031 is not set
# CONFIG_SENSORS_ADM9240 is not set
# CONFIG_SENSORS_ADT7470 is not set
# CONFIG_SENSORS_K8TEMP is not set
# CONFIG_SENSORS_ASB100 is not set
# CONFIG_SENSORS_ATXP1 is not set
# CONFIG_SENSORS_DS1621 is not set
# CONFIG_SENSORS_I5K_AMB is not set
# CONFIG_SENSORS_F71805F is not set
# CONFIG_SENSORS_F71882FG is not set
# CONFIG_SENSORS_F75375S is not set
# CONFIG_SENSORS_FSCHER is not set
# CONFIG_SENSORS_FSCPOS is not set
# CONFIG_SENSORS_FSCHMD is not set
# CONFIG_SENSORS_GL518SM is not set
# CONFIG_SENSORS_GL520SM is not set
CONFIG_SENSORS_CORETEMP=m
# CONFIG_SENSORS_IT87 is not set
# CONFIG_SENSORS_LM63 is not set
# CONFIG_SENSORS_LM75 is not set
# CONFIG_SENSORS_LM77 is not set
# CONFIG_SENSORS_LM78 is not set
# CONFIG_SENSORS_LM80 is not set
# CONFIG_SENSORS_LM83 is not set
# CONFIG_SENSORS_LM85 is not set
# CONFIG_SENSORS_LM87 is not set
# CONFIG_SENSORS_LM90 is not set
# CONFIG_SENSORS_LM92 is not set
# CONFIG_SENSORS_LM93 is not set
# CONFIG_SENSORS_MAX1619 is not set
# CONFIG_SENSORS_MAX6650 is not set
# CONFIG_SENSORS_PC87360 is not set
# CONFIG_SENSORS_PC87427 is not set
# CONFIG_SENSORS_SIS5595 is not set
# CONFIG_SENSORS_DME1737 is not set
# CONFIG_SENSORS_SMSC47M1 is not set
# CONFIG_SENSORS_SMSC47M192 is not set
# CONFIG_SENSORS_SMSC47B397 is not set
# CONFIG_SENSORS_THMC50 is not set
# CONFIG_SENSORS_VIA686A is not set
# CONFIG_SENSORS_VT1211 is not set
# CONFIG_SENSORS_VT8231 is not set
# CONFIG_SENSORS_W83781D is not set
# CONFIG_SENSORS_W83791D is not set
# CONFIG_SENSORS_W83792D is not set
# CONFIG_SENSORS_W83793 is not set
# CONFIG_SENSORS_W83L785TS is not set
# CONFIG_SENSORS_W83627HF is not set
# CONFIG_SENSORS_W83627EHF is not set
# CONFIG_SENSORS_HDAPS is not set
# CONFIG_SENSORS_APPLESMC is not set
# CONFIG_HWMON_DEBUG_CHIP is not set
# CONFIG_WATCHDOG is not set

#
# Sonics Silicon Backplane
#
CONFIG_SSB_POSSIBLE=y
CONFIG_SSB=y
CONFIG_SSB_PCIHOST_POSSIBLE=y
CONFIG_SSB_PCIHOST=y
# CONFIG_SSB_DEBUG is not set
CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
CONFIG_SSB_DRIVER_PCICORE=y

#
# Multifunction device drivers
#
# CONFIG_MFD_SM501 is not set

#
# Multimedia devices
#
CONFIG_VIDEO_DEV=m
# CONFIG_VIDEO_V4L1 is not set
CONFIG_VIDEO_V4L1_COMPAT=y
CONFIG_VIDEO_V4L2=y
CONFIG_VIDEO_CAPTURE_DRIVERS=y
# CONFIG_VIDEO_ADV_DEBUG is not set
CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
# CONFIG_VIDEO_VIVI is not set
# CONFIG_VIDEO_SAA5246A is not set
# CONFIG_VIDEO_SAA5249 is not set
# CONFIG_VIDEO_SAA7134 is not set
# CONFIG_VIDEO_HEXIUM_ORION is not set
# CONFIG_VIDEO_HEXIUM_GEMINI is not set
# CONFIG_VIDEO_CX88 is not set
# CONFIG_VIDEO_CAFE_CCIC is not set
CONFIG_V4L_USB_DRIVERS=y
# CONFIG_VIDEO_PVRUSB2 is not set
# CONFIG_VIDEO_USBVISION is not set
# CONFIG_USB_ET61X251 is not set
# CONFIG_USB_SN9C102 is not set
# CONFIG_USB_ZC0301 is not set
# CONFIG_USB_ZR364XX is not set
# CONFIG_RADIO_ADAPTERS is not set
# CONFIG_DVB_CORE is not set
# CONFIG_DAB is not set

#
# Graphics support
#
# CONFIG_AGP is not set
# CONFIG_DRM is not set
# CONFIG_VGASTATE is not set
CONFIG_VIDEO_OUTPUT_CONTROL=y
CONFIG_FB=y
CONFIG_FIRMWARE_EDID=y
# CONFIG_FB_DDC is not set
CONFIG_FB_CFB_FILLRECT=y
CONFIG_FB_CFB_COPYAREA=y
CONFIG_FB_CFB_IMAGEBLIT=y
# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
# CONFIG_FB_SYS_FILLRECT is not set
# CONFIG_FB_SYS_COPYAREA is not set
# CONFIG_FB_SYS_IMAGEBLIT is not set
# CONFIG_FB_SYS_FOPS is not set
CONFIG_FB_DEFERRED_IO=y
# CONFIG_FB_SVGALIB is not set
# CONFIG_FB_MACMODES is not set
# CONFIG_FB_BACKLIGHT is not set
CONFIG_FB_MODE_HELPERS=y
# CONFIG_FB_TILEBLITTING is not set

#
# Frame buffer hardware drivers
#
# CONFIG_FB_CIRRUS is not set
# CONFIG_FB_PM2 is not set
# CONFIG_FB_CYBER2000 is not set
# CONFIG_FB_ARC is not set
# CONFIG_FB_ASILIANT is not set
# CONFIG_FB_IMSTT is not set
# CONFIG_FB_VGA16 is not set
CONFIG_FB_UVESA=y
CONFIG_FB_VESA=y
# CONFIG_FB_EFI is not set
# CONFIG_FB_IMAC is not set
# CONFIG_FB_HECUBA is not set
# CONFIG_FB_HGA is not set
# CONFIG_FB_S1D13XXX is not set
# CONFIG_FB_NVIDIA is not set
# CONFIG_FB_RIVA is not set
# CONFIG_FB_I810 is not set
# CONFIG_FB_LE80578 is not set
# CONFIG_FB_INTEL is not set
# CONFIG_FB_MATROX is not set
# CONFIG_FB_RADEON is not set
# CONFIG_FB_ATY128 is not set
# CONFIG_FB_ATY is not set
# CONFIG_FB_S3 is not set
# CONFIG_FB_SAVAGE is not set
# CONFIG_FB_SIS is not set
# CONFIG_FB_NEOMAGIC is not set
# CONFIG_FB_KYRO is not set
# CONFIG_FB_3DFX is not set
# CONFIG_FB_VOODOO1 is not set
# CONFIG_FB_VT8623 is not set
# CONFIG_FB_CYBLA is not set
# CONFIG_FB_TRIDENT is not set
# CONFIG_FB_ARK is not set
# CONFIG_FB_PM3 is not set
# CONFIG_FB_GEODE is not set
# CONFIG_FB_VIRTUAL is not set
CONFIG_BACKLIGHT_LCD_SUPPORT=y
CONFIG_LCD_CLASS_DEVICE=m
CONFIG_BACKLIGHT_CLASS_DEVICE=y
# CONFIG_BACKLIGHT_CORGI is not set
# CONFIG_BACKLIGHT_PROGEAR is not set

#
# Display device support
#
CONFIG_DISPLAY_SUPPORT=m

#
# Display hardware drivers
#

#
# Console display driver support
#
CONFIG_VGA_CONSOLE=y
# CONFIG_VGACON_SOFT_SCROLLBACK is not set
CONFIG_VIDEO_SELECT=y
CONFIG_DUMMY_CONSOLE=y
CONFIG_FRAMEBUFFER_CONSOLE=y
# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
CONFIG_FB_CON_DECOR=y
# CONFIG_FONTS is not set
CONFIG_FONT_8x8=y
CONFIG_FONT_8x16=y
# CONFIG_LOGO is not set

#
# Sound
#
CONFIG_SOUND=y

#
# Advanced Linux Sound Architecture
#
CONFIG_SND=m
CONFIG_SND_TIMER=m
CONFIG_SND_PCM=m
CONFIG_SND_SEQUENCER=m
# CONFIG_SND_SEQ_DUMMY is not set
CONFIG_SND_OSSEMUL=y
CONFIG_SND_MIXER_OSS=m
CONFIG_SND_PCM_OSS=m
CONFIG_SND_PCM_OSS_PLUGINS=y
CONFIG_SND_SEQUENCER_OSS=y
CONFIG_SND_RTCTIMER=m
CONFIG_SND_SEQ_RTCTIMER_DEFAULT=y
# CONFIG_SND_DYNAMIC_MINORS is not set
# CONFIG_SND_SUPPORT_OLD_API is not set
# CONFIG_SND_VERBOSE_PROCFS is not set
# CONFIG_SND_VERBOSE_PRINTK is not set
# CONFIG_SND_DEBUG is not set

#
# Generic devices
#
# CONFIG_SND_DUMMY is not set
# CONFIG_SND_VIRMIDI is not set
# CONFIG_SND_MTPAV is not set
# CONFIG_SND_SERIAL_U16550 is not set
# CONFIG_SND_MPU401 is not set

#
# PCI devices
#
# CONFIG_SND_AD1889 is not set
# CONFIG_SND_ALS300 is not set
# CONFIG_SND_ALS4000 is not set
# CONFIG_SND_ALI5451 is not set
# CONFIG_SND_ATIIXP is not set
# CONFIG_SND_ATIIXP_MODEM is not set
# CONFIG_SND_AU8810 is not set
# CONFIG_SND_AU8820 is not set
# CONFIG_SND_AU8830 is not set
# CONFIG_SND_AZT3328 is not set
# CONFIG_SND_BT87X is not set
# CONFIG_SND_CA0106 is not set
# CONFIG_SND_CMIPCI is not set
# CONFIG_SND_CS4281 is not set
# CONFIG_SND_CS46XX is not set
# CONFIG_SND_CS5530 is not set
# CONFIG_SND_CS5535AUDIO is not set
# CONFIG_SND_DARLA20 is not set
# CONFIG_SND_GINA20 is not set
# CONFIG_SND_LAYLA20 is not set
# CONFIG_SND_DARLA24 is not set
# CONFIG_SND_GINA24 is not set
# CONFIG_SND_LAYLA24 is not set
# CONFIG_SND_MONA is not set
# CONFIG_SND_MIA is not set
# CONFIG_SND_ECHO3G is not set
# CONFIG_SND_INDIGO is not set
# CONFIG_SND_INDIGOIO is not set
# CONFIG_SND_INDIGODJ is not set
# CONFIG_SND_EMU10K1 is not set
# CONFIG_SND_EMU10K1X is not set
# CONFIG_SND_ENS1370 is not set
# CONFIG_SND_ENS1371 is not set
# CONFIG_SND_ES1938 is not set
# CONFIG_SND_ES1968 is not set
# CONFIG_SND_FM801 is not set
CONFIG_SND_HDA_INTEL=m
# CONFIG_SND_HDA_HWDEP is not set
CONFIG_SND_HDA_CODEC_REALTEK=y
CONFIG_SND_HDA_CODEC_ANALOG=y
CONFIG_SND_HDA_CODEC_SIGMATEL=y
CONFIG_SND_HDA_CODEC_VIA=y
CONFIG_SND_HDA_CODEC_ATIHDMI=y
CONFIG_SND_HDA_CODEC_CONEXANT=y
CONFIG_SND_HDA_CODEC_CMEDIA=y
CONFIG_SND_HDA_CODEC_SI3054=y
CONFIG_SND_HDA_GENERIC=y
# CONFIG_SND_HDA_POWER_SAVE is not set
# CONFIG_SND_HDSP is not set
# CONFIG_SND_HDSPM is not set
# CONFIG_SND_ICE1712 is not set
# CONFIG_SND_ICE1724 is not set
# CONFIG_SND_INTEL8X0 is not set
# CONFIG_SND_INTEL8X0M is not set
# CONFIG_SND_KORG1212 is not set
# CONFIG_SND_MAESTRO3 is not set
# CONFIG_SND_MIXART is not set
# CONFIG_SND_NM256 is not set
# CONFIG_SND_PCXHR is not set
# CONFIG_SND_RIPTIDE is not set
# CONFIG_SND_RME32 is not set
# CONFIG_SND_RME96 is not set
# CONFIG_SND_RME9652 is not set
# CONFIG_SND_SONICVIBES is not set
# CONFIG_SND_TRIDENT is not set
# CONFIG_SND_VIA82XX is not set
# CONFIG_SND_VIA82XX_MODEM is not set
# CONFIG_SND_VX222 is not set
# CONFIG_SND_YMFPCI is not set

#
# USB devices
#
# CONFIG_SND_USB_AUDIO is not set
# CONFIG_SND_USB_USX2Y is not set
# CONFIG_SND_USB_CAIAQ is not set

#
# System on Chip audio support
#
# CONFIG_SND_SOC is not set

#
# SoC Audio support for SuperH
#

#
# Open Sound System
#
# CONFIG_SOUND_PRIME is not set
CONFIG_HID_SUPPORT=y
CONFIG_HID=y
# CONFIG_HID_DEBUG is not set
# CONFIG_HIDRAW is not set

#
# USB Input Devices
#
CONFIG_USB_HID=m
# CONFIG_USB_HIDINPUT_POWERBOOK is not set
# CONFIG_HID_FF is not set
CONFIG_USB_HIDDEV=y

#
# USB HID Boot Protocol drivers
#
# CONFIG_USB_KBD is not set
# CONFIG_USB_MOUSE is not set
CONFIG_USB_SUPPORT=y
CONFIG_USB_ARCH_HAS_HCD=y
CONFIG_USB_ARCH_HAS_OHCI=y
CONFIG_USB_ARCH_HAS_EHCI=y
CONFIG_USB=m
# CONFIG_USB_DEBUG is not set

#
# Miscellaneous USB options
#
CONFIG_USB_DEVICEFS=y
# CONFIG_USB_DEVICE_CLASS is not set
# CONFIG_USB_DYNAMIC_MINORS is not set
CONFIG_USB_SUSPEND=y
# CONFIG_USB_PERSIST is not set
# CONFIG_USB_OTG is not set

#
# USB Host Controller Drivers
#
CONFIG_USB_EHCI_HCD=m
# CONFIG_USB_EHCI_SPLIT_ISO is not set
# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
# CONFIG_USB_EHCI_TT_NEWSCHED is not set
CONFIG_USB_ISP116X_HCD=m
CONFIG_USB_OHCI_HCD=m
# CONFIG_USB_OHCI_HCD_SSB is not set
# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
CONFIG_USB_OHCI_LITTLE_ENDIAN=y
CONFIG_USB_UHCI_HCD=m
CONFIG_USB_SL811_HCD=m
# CONFIG_USB_R8A66597_HCD is not set

#
# USB Device Class drivers
#
CONFIG_USB_ACM=m
CONFIG_USB_PRINTER=m

#
# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
#

#
# may also be needed; see USB_STORAGE Help for more information
#
CONFIG_USB_STORAGE=m
# CONFIG_USB_STORAGE_DEBUG is not set
CONFIG_USB_STORAGE_DATAFAB=y
CONFIG_USB_STORAGE_FREECOM=y
CONFIG_USB_STORAGE_ISD200=y
CONFIG_USB_STORAGE_DPCM=y
CONFIG_USB_STORAGE_USBAT=y
CONFIG_USB_STORAGE_SDDR09=y
CONFIG_USB_STORAGE_SDDR55=y
CONFIG_USB_STORAGE_JUMPSHOT=y
# CONFIG_USB_STORAGE_ALAUDA is not set
# CONFIG_USB_STORAGE_KARMA is not set
# CONFIG_USB_LIBUSUAL is not set

#
# USB Imaging devices
#
# CONFIG_USB_MDC800 is not set
CONFIG_USB_MICROTEK=m
CONFIG_USB_MON=y

#
# USB port drivers
#

#
# USB Serial Converter support
#
# CONFIG_USB_SERIAL is not set

#
# USB Miscellaneous drivers
#
# CONFIG_USB_EMI62 is not set
# CONFIG_USB_EMI26 is not set
# CONFIG_USB_ADUTUX is not set
# CONFIG_USB_AUERSWALD is not set
# CONFIG_USB_RIO500 is not set
# CONFIG_USB_LEGOTOWER is not set
# CONFIG_USB_LCD is not set
# CONFIG_USB_BERRY_CHARGE is not set
# CONFIG_USB_LED is not set
# CONFIG_USB_CYPRESS_CY7C63 is not set
# CONFIG_USB_CYTHERM is not set
# CONFIG_USB_PHIDGET is not set
# CONFIG_USB_IDMOUSE is not set
# CONFIG_USB_FTDI_ELAN is not set
# CONFIG_USB_APPLEDISPLAY is not set
# CONFIG_USB_SISUSBVGA is not set
# CONFIG_USB_LD is not set
# CONFIG_USB_TRANCEVIBRATOR is not set
# CONFIG_USB_IOWARRIOR is not set
# CONFIG_USB_TEST is not set

#
# USB DSL modem support
#

#
# USB Gadget Support
#
# CONFIG_USB_GADGET is not set
CONFIG_MMC=y
# CONFIG_MMC_DEBUG is not set
# CONFIG_MMC_UNSAFE_RESUME is not set

#
# MMC/SD Card Drivers
#
CONFIG_MMC_BLOCK=y
CONFIG_MMC_BLOCK_BOUNCE=y
# CONFIG_SDIO_UART is not set

#
# MMC/SD Host Controller Drivers
#
CONFIG_MMC_SDHCI=y
CONFIG_MMC_RICOH_MMC=y
# CONFIG_MMC_WBSD is not set
# CONFIG_MMC_TIFM_SD is not set
# CONFIG_NEW_LEDS is not set
# CONFIG_INFINIBAND is not set
# CONFIG_EDAC is not set
# CONFIG_RTC_CLASS is not set
# CONFIG_DMADEVICES is not set
CONFIG_VIRTUALIZATION=y
CONFIG_KVM=m
CONFIG_KVM_INTEL=m
# CONFIG_KVM_AMD is not set
# CONFIG_LGUEST is not set

#
# Userspace I/O
#
# CONFIG_UIO is not set

#
# Firmware Drivers
#
# CONFIG_EDD is not set
CONFIG_EFI_VARS=m
CONFIG_DELL_RBU=m
CONFIG_DCDBAS=m
CONFIG_DMIID=y

#
# File systems
#
CONFIG_EXT2_FS=y
CONFIG_EXT2_FS_XATTR=y
CONFIG_EXT2_FS_POSIX_ACL=y
CONFIG_EXT2_FS_SECURITY=y
# CONFIG_EXT2_FS_XIP is not set
CONFIG_EXT3_FS=y
CONFIG_EXT3_FS_XATTR=y
CONFIG_EXT3_FS_POSIX_ACL=y
CONFIG_EXT3_FS_SECURITY=y
CONFIG_EXT4DEV_FS=m
CONFIG_EXT4DEV_FS_XATTR=y
CONFIG_EXT4DEV_FS_POSIX_ACL=y
CONFIG_EXT4DEV_FS_SECURITY=y
CONFIG_JBD=y
CONFIG_JBD2=m
CONFIG_FS_MBCACHE=y
CONFIG_REISERFS_FS=m
# CONFIG_REISERFS_CHECK is not set
# CONFIG_REISERFS_PROC_INFO is not set
# CONFIG_REISERFS_FS_XATTR is not set
CONFIG_JFS_FS=m
CONFIG_JFS_POSIX_ACL=y
CONFIG_JFS_SECURITY=y
# CONFIG_JFS_DEBUG is not set
CONFIG_JFS_STATISTICS=y
CONFIG_FS_POSIX_ACL=y
CONFIG_XFS_FS=m
CONFIG_XFS_QUOTA=y
CONFIG_XFS_SECURITY=y
CONFIG_XFS_POSIX_ACL=y
CONFIG_XFS_RT=y
# CONFIG_GFS2_FS is not set
# CONFIG_OCFS2_FS is not set
# CONFIG_MINIX_FS is not set
# CONFIG_ROMFS_FS is not set
CONFIG_INOTIFY=y
CONFIG_INOTIFY_USER=y
# CONFIG_QUOTA is not set
CONFIG_QUOTACTL=y
CONFIG_DNOTIFY=y
# CONFIG_AUTOFS_FS is not set
# CONFIG_AUTOFS4_FS is not set
CONFIG_FUSE_FS=m

#
# CD-ROM/DVD Filesystems
#
CONFIG_ISO9660_FS=m
CONFIG_JOLIET=y
CONFIG_ZISOFS=y
CONFIG_UDF_FS=m
CONFIG_UDF_NLS=y

#
# DOS/FAT/NT Filesystems
#
CONFIG_FAT_FS=y
CONFIG_MSDOS_FS=m
CONFIG_VFAT_FS=y
CONFIG_FAT_DEFAULT_CODEPAGE=437
CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
CONFIG_NTFS_FS=m
# CONFIG_NTFS_DEBUG is not set
CONFIG_NTFS_RW=y

#
# Pseudo filesystems
#
CONFIG_PROC_FS=y
CONFIG_PROC_KCORE=y
CONFIG_PROC_VMCORE=y
CONFIG_PROC_SYSCTL=y
CONFIG_SYSFS=y
CONFIG_TMPFS=y
# CONFIG_TMPFS_POSIX_ACL is not set
# CONFIG_HUGETLBFS is not set
# CONFIG_HUGETLB_PAGE is not set
CONFIG_CONFIGFS_FS=m

#
# Miscellaneous filesystems
#
# CONFIG_ADFS_FS is not set
# CONFIG_AFFS_FS is not set
# CONFIG_HFS_FS is not set
# CONFIG_HFSPLUS_FS is not set
# CONFIG_BEFS_FS is not set
# CONFIG_BFS_FS is not set
# CONFIG_EFS_FS is not set
# CONFIG_CRAMFS is not set
CONFIG_SQUASHFS=y
CONFIG_SQUASHFS_EMBEDDED=y
CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
# CONFIG_VXFS_FS is not set
# CONFIG_HPFS_FS is not set
# CONFIG_QNX4FS_FS is not set
# CONFIG_SYSV_FS is not set
# CONFIG_UFS_FS is not set
CONFIG_NETWORK_FILESYSTEMS=y
CONFIG_NFS_FS=m
CONFIG_NFS_V3=y
# CONFIG_NFS_V3_ACL is not set
# CONFIG_NFS_V4 is not set
# CONFIG_NFS_DIRECTIO is not set
CONFIG_NFSD=m
CONFIG_NFSD_V3=y
# CONFIG_NFSD_V3_ACL is not set
# CONFIG_NFSD_V4 is not set
CONFIG_NFSD_TCP=y
CONFIG_LOCKD=m
CONFIG_LOCKD_V4=y
CONFIG_EXPORTFS=m
CONFIG_NFS_COMMON=y
CONFIG_SUNRPC=m
# CONFIG_SUNRPC_BIND34 is not set
# CONFIG_RPCSEC_GSS_KRB5 is not set
# CONFIG_RPCSEC_GSS_SPKM3 is not set
CONFIG_SMB_FS=m
CONFIG_SMB_NLS_DEFAULT=y
CONFIG_SMB_NLS_REMOTE="cp437"
CONFIG_CIFS=m
# CONFIG_CIFS_STATS is not set
# CONFIG_CIFS_WEAK_PW_HASH is not set
CONFIG_CIFS_XATTR=y
CONFIG_CIFS_POSIX=y
# CONFIG_CIFS_DEBUG2 is not set
# CONFIG_CIFS_EXPERIMENTAL is not set
# CONFIG_NCP_FS is not set
# CONFIG_CODA_FS is not set
# CONFIG_AFS_FS is not set

#
# Partition Types
#
CONFIG_PARTITION_ADVANCED=y
# CONFIG_ACORN_PARTITION is not set
# CONFIG_OSF_PARTITION is not set
# CONFIG_AMIGA_PARTITION is not set
# CONFIG_ATARI_PARTITION is not set
# CONFIG_MAC_PARTITION is not set
CONFIG_MSDOS_PARTITION=y
# CONFIG_BSD_DISKLABEL is not set
# CONFIG_MINIX_SUBPARTITION is not set
# CONFIG_SOLARIS_X86_PARTITION is not set
# CONFIG_UNIXWARE_DISKLABEL is not set
CONFIG_LDM_PARTITION=y
# CONFIG_LDM_DEBUG is not set
# CONFIG_SGI_PARTITION is not set
# CONFIG_ULTRIX_PARTITION is not set
# CONFIG_SUN_PARTITION is not set
# CONFIG_KARMA_PARTITION is not set
# CONFIG_EFI_PARTITION is not set
# CONFIG_SYSV68_PARTITION is not set
CONFIG_NLS=y
CONFIG_NLS_DEFAULT="utf8"
CONFIG_NLS_CODEPAGE_437=m
# CONFIG_NLS_CODEPAGE_737 is not set
# CONFIG_NLS_CODEPAGE_775 is not set
CONFIG_NLS_CODEPAGE_850=m
# CONFIG_NLS_CODEPAGE_852 is not set
# CONFIG_NLS_CODEPAGE_855 is not set
# CONFIG_NLS_CODEPAGE_857 is not set
# CONFIG_NLS_CODEPAGE_860 is not set
# CONFIG_NLS_CODEPAGE_861 is not set
# CONFIG_NLS_CODEPAGE_862 is not set
# CONFIG_NLS_CODEPAGE_863 is not set
# CONFIG_NLS_CODEPAGE_864 is not set
# CONFIG_NLS_CODEPAGE_865 is not set
# CONFIG_NLS_CODEPAGE_866 is not set
# CONFIG_NLS_CODEPAGE_869 is not set
# CONFIG_NLS_CODEPAGE_936 is not set
# CONFIG_NLS_CODEPAGE_950 is not set
# CONFIG_NLS_CODEPAGE_932 is not set
# CONFIG_NLS_CODEPAGE_949 is not set
# CONFIG_NLS_CODEPAGE_874 is not set
# CONFIG_NLS_ISO8859_8 is not set
# CONFIG_NLS_CODEPAGE_1250 is not set
# CONFIG_NLS_CODEPAGE_1251 is not set
CONFIG_NLS_ASCII=m
CONFIG_NLS_ISO8859_1=m
# CONFIG_NLS_ISO8859_2 is not set
# CONFIG_NLS_ISO8859_3 is not set
# CONFIG_NLS_ISO8859_4 is not set
# CONFIG_NLS_ISO8859_5 is not set
# CONFIG_NLS_ISO8859_6 is not set
# CONFIG_NLS_ISO8859_7 is not set
# CONFIG_NLS_ISO8859_9 is not set
# CONFIG_NLS_ISO8859_13 is not set
# CONFIG_NLS_ISO8859_14 is not set
CONFIG_NLS_ISO8859_15=m
# CONFIG_NLS_KOI8_R is not set
# CONFIG_NLS_KOI8_U is not set
CONFIG_NLS_UTF8=y
CONFIG_DLM=m
# CONFIG_DLM_DEBUG is not set
# CONFIG_INSTRUMENTATION is not set

#
# Kernel hacking
#
CONFIG_TRACE_IRQFLAGS_SUPPORT=y
# CONFIG_PRINTK_TIME is not set
CONFIG_ENABLE_WARN_DEPRECATED=y
CONFIG_ENABLE_MUST_CHECK=y
# CONFIG_MAGIC_SYSRQ is not set
# CONFIG_UNUSED_SYMBOLS is not set
# CONFIG_DEBUG_FS is not set
# CONFIG_HEADERS_CHECK is not set
# CONFIG_DEBUG_KERNEL is not set
CONFIG_DEBUG_BUGVERBOSE=y
# CONFIG_SAMPLES is not set
CONFIG_EARLY_PRINTK=y
CONFIG_X86_FIND_SMP_CONFIG=y
CONFIG_X86_MPPARSE=y
CONFIG_DOUBLEFAULT=y

#
# Security options
#
# CONFIG_KEYS is not set
# CONFIG_SECURITY is not set
# CONFIG_SECURITY_FILE_CAPABILITIES is not set
CONFIG_CRYPTO=y
CONFIG_CRYPTO_ALGAPI=y
CONFIG_CRYPTO_BLKCIPHER=m
CONFIG_CRYPTO_HASH=y
CONFIG_CRYPTO_MANAGER=y
CONFIG_CRYPTO_HMAC=y
# CONFIG_CRYPTO_XCBC is not set
CONFIG_CRYPTO_NULL=m
CONFIG_CRYPTO_MD4=m
CONFIG_CRYPTO_MD5=y
CONFIG_CRYPTO_SHA1=m
CONFIG_CRYPTO_SHA256=m
CONFIG_CRYPTO_SHA512=m
# CONFIG_CRYPTO_WP512 is not set
# CONFIG_CRYPTO_TGR192 is not set
# CONFIG_CRYPTO_GF128MUL is not set
CONFIG_CRYPTO_ECB=m
CONFIG_CRYPTO_CBC=m
CONFIG_CRYPTO_PCBC=m
# CONFIG_CRYPTO_LRW is not set
# CONFIG_CRYPTO_XTS is not set
# CONFIG_CRYPTO_CRYPTD is not set
CONFIG_CRYPTO_DES=y
# CONFIG_CRYPTO_FCRYPT is not set
CONFIG_CRYPTO_BLOWFISH=m
CONFIG_CRYPTO_TWOFISH=m
CONFIG_CRYPTO_TWOFISH_COMMON=m
# CONFIG_CRYPTO_TWOFISH_586 is not set
CONFIG_CRYPTO_SERPENT=m
CONFIG_CRYPTO_AES=m
CONFIG_CRYPTO_AES_586=m
CONFIG_CRYPTO_CAST5=m
CONFIG_CRYPTO_CAST6=m
CONFIG_CRYPTO_TEA=m
CONFIG_CRYPTO_ARC4=m
# CONFIG_CRYPTO_KHAZAD is not set
# CONFIG_CRYPTO_ANUBIS is not set
# CONFIG_CRYPTO_SEED is not set
CONFIG_CRYPTO_DEFLATE=m
CONFIG_CRYPTO_MICHAEL_MIC=m
CONFIG_CRYPTO_CRC32C=m
# CONFIG_CRYPTO_CAMELLIA is not set
# CONFIG_CRYPTO_TEST is not set
# CONFIG_CRYPTO_AUTHENC is not set
CONFIG_CRYPTO_HW=y
# CONFIG_CRYPTO_DEV_PADLOCK is not set
CONFIG_CRYPTO_DEV_GEODE=m

#
# Library routines
#
CONFIG_BITREVERSE=y
CONFIG_CRC_CCITT=m
CONFIG_CRC16=m
# CONFIG_CRC_ITU_T is not set
CONFIG_CRC32=y
CONFIG_CRC7=m
CONFIG_LIBCRC32C=m
CONFIG_AUDIT_GENERIC=y
CONFIG_ZLIB_INFLATE=y
CONFIG_ZLIB_DEFLATE=m
CONFIG_TEXTSEARCH=y
CONFIG_TEXTSEARCH_KMP=m
CONFIG_TEXTSEARCH_BM=m
CONFIG_TEXTSEARCH_FSM=m
CONFIG_PLIST=y
CONFIG_HAS_IOMEM=y
CONFIG_HAS_IOPORT=y
CONFIG_HAS_DMA=y


["outputs.tar.gz" (application/x-tgz)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080501184543</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-05-01 18:45:43-0400</timestampReceived><subject>Re: Add IDs for Dell BT370 &amp; BT410</subject><body>

﻿Hi,

I never got a response back about this patch.  Is there something wrong
with adding it?

Regards,

On Wed, 2008-04-16 at 16:06 -0500, Mario_Limonciello@Dell.com wrote:
&gt; Hello,
&gt; 
&gt; In order for the radios on the Dell BT370 &amp; BT410 cards to function,
&gt; these two quirks need to be added to hci_usb.c.  This, however, is only
&gt; half of the solution.  The cards will start-up in HID mode, and are
&gt; expected to be changed to HCI mode by a user space utility.  If you
&gt; would like to test the functionality with the quirks for these cards,
&gt; you will need to use this patch: (until it is accepted to bluez):
&gt; 
&gt; http://article.gmane.org/gmane.linux.bluez.devel/15605
&gt; 
&gt; 
&gt; X-Git-Url: http://kernel.ubuntu.com/git?p=ubuntu%
&gt; 2Fubuntu-hardy.git;a=blobdiff_plain;f=drivers%2Fbluetooth%
&gt; 2Fhci_usb.c;h=1225b5260a5572956b96ca319af0078498918fc2;hp=117070c53348563b215a3b5f18d2c6b4a5c4a629;hb=HEAD;hpb=771d0cc54dc1710c585d3ee29447ddfc92aec440
&gt;  
&gt; diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
&gt; index 117070c..1225b52 100644
&gt; --- a/drivers/bluetooth/hci_usb.c
&gt; +++ b/drivers/bluetooth/hci_usb.c
&gt; @@ -132,6 +132,10 @@ static struct usb_device_id blacklist_ids[] = {
&gt; 
&gt; 	/* Dell laptop with Broadcom chip */
&gt; 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; +	/* Dell Wireless 370 */
&gt; +	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; +	/* Dell Wireless 410 */
&gt; +	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
&gt; 
&gt; 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
&gt; 	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
&gt; 
&gt; 
&gt; ---
&gt; Mario Limonciello
&gt; Dell | Linux Engineering
&gt; mario_limonciello@dell.com
&gt; 
&gt; 
---
Mario Limonciello
Dell | Linux Engineering
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080502234537</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-05-02 23:45:37-0400</timestampReceived><subject>Re: [patch 1/1] hci_usb.h: fix hard-to-trigger race</subject><body>

From: akpm@linux-foundation.org
Date: Fri, 02 May 2008 13:39:55 -0700

&gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt; 
&gt; If someone tries to _urb_unlink while _urb_queue_head is running, he'll see
&gt; _urb-&gt;queue == NULL and fail to do any locking.  Prevent that from happening
&gt; by strategically placed barriers.
&gt; 
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;

I know we've been over this, but I'm going to apply this
because as long as the code is in the tree we should take
fixes to identifyable problems.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080513011549</emailId><senderName>"Jaya Kumar"</senderName><senderEmail>jayakumar.lkml@gmail.com</senderEmail><timestampReceived>2008-05-13 01:15:49-0400</timestampReceived><subject>h4_recv errors and bluetooth performance</subject><body>

Hi Friends,

 I'm experiencing some issues related to bluetooth performance and am
looking for suggestions/advice on things I could do to debug it. I am
getting about 40ms latency. I'm not sure if this is normal or not.
More worryingly, I'm also getting hci errors and h4 unknown packets
when I try to do more than just ping over bluetooth. I've appended
log data below. I'm using a 2.6.25 kernel.

The errors seem limited to the hci drivers. At least, I don't see any
bnep or other prefixes. I looked at h4_recv and see that this error
condition is reached when:
drivers/bluetooth/hci_h4.c
217                 /* H4_W4_PACKET_TYPE */
219                 case HCI_EVENT_PKT:
blah
226                 case HCI_ACLDATA_PKT:
blah
233                 case HCI_SCODATA_PKT:
blah
240                 default:
241                         BT_ERR("Unknown HCI packet type %2.2x", (__u8)*ptr);
242                         hu-&gt;hdev-&gt;stat.err_rx++;
243                         ptr++; count--;
244                         continue;
245                 };

And I guess h4_recv is called by the uart driver. Does this mean the
uart data is getting mangled or possibly lost? Any advice on how to
debug and try to address this would be welcome.

 Thanks,
 jaya

 From my laptop to gumstix: Laptop is using a D-Link DBT-120 bluetooth dongle.
 # l2ping 00:80:37:2E:31:7D
 Ping: 00:80:37:2E:31:7D from 00:15:E9:65:3B:C5 (data size 44) ...
 44 bytes from 00:80:37:2E:31:7D id 0 time 44.34ms
 44 bytes from 00:80:37:2E:31:7D id 1 time 24.79ms
 &lt;snip&gt;
 44 bytes from 00:80:37:2E:31:7D id 7 time 27.08ms
 44 bytes from 00:80:37:2E:31:7D id 8 time 53.13ms
 ^C9 sent, 9 received, 0% loss

 Then from gumstix to the laptop:
 # l2ping 00:15:E9:65:3B:C5
 Ping: 00:15:E9:65:3B:C5 from 00:80:37:2E:31:7D (data size 44) ...
 44 bytes from 00:15:E9:65:3B:C5 id 0 time 40.87ms
 44 bytes from 00:15:E9:65:3B:C5 id 1 time 41.58ms
 &lt;snip&gt;
 44 bytes from 00:15:E9:65:3B:C5 id 6 time 40.45ms
 44 bytes from 00:15:E9:65:3B:C5 id 7 time 41.74ms
 8 sent, 8 received, 0% loss

 Normal ping. gumstix is 192.168.50.100.
 laptop pinging gumstix
 # ping 192.168.50.100
 PING 192.168.50.100 (192.168.50.100) 56(84) bytes of data.
 64 bytes from 192.168.50.100: icmp_seq=1 ttl=64 time=66.7 ms
 &lt;snip&gt;
 ^C
 --- 192.168.50.100 ping statistics ---
 6 packets transmitted, 6 received, 0% packet loss, time 5020ms
 rtt min/avg/max/mdev = 26.279/41.658/66.730/12.928 ms

 gumstix pinging laptop
 # ping 192.168.50.1
 PING 192.168.50.1 (192.168.50.1): 56 data bytes
 84 bytes from 192.168.50.1: icmp_seq=0 ttl=64 time=72.4 ms
 &lt;snip&gt;
 --- 192.168.50.1 ping statistics ---
 6 packets transmitted, 6 packets received, 0% packet loss
 round-trip min/avg/max = 44.0/54.0/72.4 ms

 But at least there aren't any errors or packet loss. When I'm testing
 normal apps that probably transfer more data, I get the following
 error messages:
 h4_check_data_len: Data length is too large
 h4_recv: Unknown HCI packet type 00
 h4_recv: Unknown HCI packet type df
 h4_recv: Unknown HCI packet type 05
 &lt;snip&gt;
 h4_recv: Unknown HCI packet type 00
 h4_check_data_len: Data length is too large
 h4_recv: Unknown HCI packet type 00
 &lt;snip&gt;
 h4_recv: Unknown HCI packet type 00
 h4_check_data_len: Data length is too large
 h4_recv: Unknown HCI packet type 00
 &lt;snip&gt;
 h4_recv: Unknown HCI packet type 38
 h4_recv: Unknown HCI packet type 00
 hci_acldata_packet: hci0 ACL packet for unknown connection handle 8
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 13
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 11
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 11
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 0
 hci_acldata_packet: hci0 ACL packet for unknown connection handle 512
 h4_recv: Unknown HCI packet type 00
 &lt;snip&gt;
 hci_acldata_packet: hci0 ACL packet for unknown connection handle 8
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 6
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 0
 hci_scodata_packet: hci0 SCO packet for unknown connection handle 10

 and that just dies after a point.

 ps: module details:
 # hcitool info 00:80:37:2E:31:7D
 Requesting information ...
       BD Address:  00:80:37:2E:31:7D
       Device Name: Gumstix (0)
       LMP Version: 2.0 (0x3) LMP Subversion: 0x62b9
       Manufacturer: Infineon Technologies AG (9)
       Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80
               &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
               &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
               &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
               &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
               &lt;power control&gt; &lt;transparent SCO&gt; &lt;broadcast encrypt&gt;
               &lt;EDR ACL 2 Mbps&gt; &lt;EDR ACL 3 Mbps&gt; &lt;enhanced iscan&gt;
               &lt;interlaced iscan&gt; &lt;interlaced pscan&gt; &lt;inquiry with RSSI&gt;
               &lt;extended SCO&gt; &lt;EV4 packets&gt; &lt;EV5 packets&gt; &lt;AFH cap. slave&gt;
               &lt;AFH class. slave&gt; &lt;3-slot EDR ACL&gt; &lt;5-slot EDR ACL&gt;
               &lt;AFH cap. master&gt; &lt;AFH class. master&gt; &lt;EDR eSCO 2 Mbps&gt;
               &lt;EDR eSCO 3 Mbps&gt; &lt;3-slot EDR eSCO&gt; &lt;extended features&gt;
 # hcitool lq 00:80:37:2E:31:7D
 Link quality: 230
 # hcitool tpl 00:80:37:2E:31:7D
 Current transmit power level: 3

 looking at laptop data:
 # hcitool info 00:15:E9:65:3B:C5
 Requesting information ...
       BD Address:  00:15:E9:65:3B:C5
       Device Name: lappy1-0
       LMP Version: 1.1 (0x1) LMP Subversion: 0x20d
       Manufacturer: Cambridge Silicon Radio (10)
       Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
               &lt;3-slot packets&gt; &lt;5-slot packets&gt; &lt;encryption&gt; &lt;slot offset&gt;
               &lt;timing accuracy&gt; &lt;role switch&gt; &lt;hold mode&gt; &lt;sniff mode&gt;
               &lt;park state&gt; &lt;RSSI&gt; &lt;channel quality&gt; &lt;SCO link&gt; &lt;HV2 packets&gt;
               &lt;HV3 packets&gt; &lt;u-law log&gt; &lt;A-law log&gt; &lt;CVSD&gt; &lt;paging scheme&gt;
               &lt;power control&gt; &lt;transparent SCO&gt;
 # hcitool lq 00:15:E9:65:3B:C5
 Link quality: 151
 # hcitool tpl 00:15:E9:65:3B:C5
 Current transmit power level: 4
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080513083651</emailId><senderName>"Bryan Wu"</senderName><senderEmail>cooloney@kernel.org</senderEmail><timestampReceived>2008-05-13 08:36:51-0400</timestampReceived><subject>Re: [PATCH 1/1] [bluetooth]: fix bug - kernel warning detected ifbuilt in Bluetooth CF driver</subject><body>

On Tue, May 13, 2008 at 4:20 PM, Hennerich, Michael
&lt;Michael.Hennerich@analog.com&gt; wrote:
&gt;
&gt;
&gt;
&gt;  &gt;-----Original Message-----
&gt;  &gt;From: Marcel Holtmann [mailto:marcel@holtmann.org]
&gt;  &gt;Sent: Montag, 12. Mai 2008 15:10
&gt;  &gt;To: Bryan Wu
&gt;  &gt;Cc: linux-bluetooth@vger.kernel.org; linux-kernel@vger.kernel.org;
&gt;  Michael
&gt;  &gt;Hennerich
&gt;  &gt;Subject: Re: [PATCH 1/1] [bluetooth]: fix bug - kernel warning detected
&gt;  &gt;ifbuilt in Bluetooth CF driver
&gt;  &gt;
&gt;  &gt;Hi Brian,
&gt;  &gt;
&gt;  &gt;&gt; https://blackfin.uclinux.org/gf/project/uclinux-
&gt;  &gt;dist/tracker/?action=TrackerItemEdit&amp;tracker_item_id=2650
&gt;  &gt;&gt;
&gt;  &gt;&gt; Signed-off-by: Michael Hennerich &lt;michael.hennerich@analog.com&gt;
&gt;  &gt;&gt; Signed-off-by: Bryan Wu &lt;cooloney@kernel.org&gt;
&gt;  &gt;&gt; ---
&gt;  &gt;&gt;  drivers/bluetooth/bluecard_cs.c |    2 +-
&gt;  &gt;&gt;  1 files changed, 1 insertions(+), 1 deletions(-)
&gt;  &gt;&gt;
&gt;  &gt;&gt; diff --git a/drivers/bluetooth/bluecard_cs.c
&gt;  &gt;b/drivers/bluetooth/bluecard_cs.c
&gt;  &gt;&gt; index bcf5792..3b330a0 100644
&gt;  &gt;&gt; --- a/drivers/bluetooth/bluecard_cs.c
&gt;  &gt;&gt; +++ b/drivers/bluetooth/bluecard_cs.c
&gt;  &gt;&gt; @@ -867,7 +867,7 @@ static int bluecard_probe(struct pcmcia_device
&gt;  *link)
&gt;  &gt;&gt;
&gt;  &gt;&gt;      link-&gt;io.Attributes1 = IO_DATA_PATH_WIDTH_8;
&gt;  &gt;&gt;      link-&gt;io.NumPorts1 = 8;
&gt;  &gt;&gt; -    link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
&gt;  &gt;&gt; +    link-&gt;irq.Attributes = IRQ_TYPE_DYNAMIC_SHARING |
&gt;  IRQ_HANDLE_PRESENT;
&gt;  &gt;&gt;      link-&gt;irq.IRQInfo1 = IRQ_LEVEL_ID;
&gt;  &gt;&gt;
&gt;  &gt;&gt;      link-&gt;irq.Handler = bluecard_interrupt;
&gt;  &gt;
&gt;  &gt;all Bluetooth PCMCIA drivers use an exclusive IRQ:
&gt;  &gt;
&gt;  &gt;bluecard_cs.c: link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;  &gt;IRQ_HANDLE_PRESENT;
&gt;  &gt;bt3c_cs.c:     link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;  IRQ_HANDLE_PRESENT;
&gt;  &gt;btuart_cs.c:   link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;  &gt;IRQ_HANDLE_PRESENT;
&gt;  &gt;dtl1_cs.c:     link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;  IRQ_HANDLE_PRESENT;
&gt;  &gt;
&gt;  &gt;There was a reason for that when these drivers where written. I am not
&gt;  &gt;sure if it is still valid or not. Does anybody at least have tested
&gt;  that
&gt;  &gt;the cards still work if you use a shared IRQ.
&gt;  &gt;
&gt;  &gt;Regards
&gt;  &gt;
&gt;  &gt;Marcel
&gt;
&gt;  Please disregard this patch. It's a leftover and not really necessary.
&gt;  Some time ago the Blackfin PCMCIA driver also requested the Card IRQ in
&gt;  order to shut up some irq handling noise. However this is no longer the
&gt;  case.
&gt;

OK, no problem. I will drop this.

Thanks
-Bryan
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080515181737</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-05-15 18:17:37-0400</timestampReceived><subject>Re: 2.6.26-rc1: warnings from sysfs, bluetooth related</subject><body>

Hi!

&gt; &gt; I'm getting these from rfcomm...
&gt; 
&gt; 
&gt; Are you sure it's a regression?

No, I'm not sure it is an regression. I have not seen it in a while,
and I seen it on -rc1. It does not seem to be too repeatable.

&gt; Dont know if it's same bug as BUG 10341.  I just describe the problem
&gt; in bug 10341:
&gt; 
&gt; While a rfcomm device is opened more than once, the BUG 10341 can be triggered.
&gt; 
&gt; rfcomm dev reference will be held for every rfcomm_tty_open, but release_dev
&gt;  will hangup the tty and release the dev number for free use without
&gt; judge the dev-&gt;opened.
&gt; 
&gt; rfcomm_dev_state_change and rfcomm_tty_hangup could del the rfcomm dev
&gt; as well,  the problem is similar as above.
&gt; 
&gt; If the create_dev called before the last tty_close,  sysfs will
&gt; warning and create will fail.
&gt; 
&gt; I have a patch which don't hold the dev reference in rfcomm_tty_open,
&gt; but it need some review and test.
&gt; 
&gt; please see:
&gt; http://bugzilla.kernel.org/attachment.cgi?id=15746
&gt; 
&gt; Marcel, do you have idea about this? or other solution?

									Pavel

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080517023403</emailId><senderName>"Andrew Kohlsmith (lists)"</senderName><senderEmail>aklists@mixdown.ca</senderEmail><timestampReceived>2008-05-17 02:34:03-0400</timestampReceived><subject>Re: SCO makes kernel crash?</subject><body>

On May 16, 2008 05:22:26 pm Manuel Naranjo wrote:
&gt; Then one of the users reported SCO wasn't working, so I looked through
&gt; the web, asked in the bluez IRC channel and Marcel told me there was an
&gt; official patch going around in lklm. I found this one:
&gt; http://lkml.org/lkml/diff/2008/2/27/528/1
&gt;
&gt; Not sure if that was the one or not. Thing is that after that SCO
&gt; started working.... Not for so long, I tried sco with mplayer, then
&gt; killed mplayer, and then accidentally turned off the headset before the
&gt; SCO link was closed, and then... Kernel crash! Shoot.... At the bottom
&gt; I'm attaching the dmesg report.

I see this as well with the omnibook.ko kernel driver (which provides a 
bluetooth interface for bluez).  SCO mostly works (with the patch that 
disables eSCO) but I get kernel panics fairly regularly.  I haven't had a 
chance to dig in to it much, though.

It's definitely something with SCO though, as I can use A2DP all day long 
without a problem.

-A.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080521180740</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-05-21 18:07:40-0400</timestampReceived><subject>Re: [Bugme-new] [Bug 10769] New: kernel crash when i put my pcmcia</subject><body>

On Wed, 21 May 2008 04:54:24 -0700 (PDT) bugme-daemon@bugzilla.kernel.org wrote:

&gt; http://bugzilla.kernel.org/show_bug.cgi?id=10769

Crash in bt3c_interrupt().
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080522224525</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-05-22 22:45:25-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi!

&gt;&gt;&gt;&gt;&gt;&gt; It could be easily fixed by just not freeing the urbs during
&gt;&gt;&gt;&gt;&gt;&gt; disconnect (introducing very very slow memory leak). Would that be
&gt;&gt;&gt;&gt;&gt;&gt; acceptable?
&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt; I don't think so.
&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt; Have you ever tried btusb driver? That code is a lot cleaner and it 
&gt;&gt;&gt;&gt;&gt; uses
&gt;&gt;&gt;&gt;&gt; USB anchors for the queued URBs (no home grown broken URB queues).
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I wish I knew about  this one earlier. Yes, it seems to work for me.
&gt;&gt;&gt;
&gt;&gt;&gt; Does this mean you are not fixing hci_usb anymore ;)
&gt;&gt;
&gt;&gt; I'm not sure what's next, as hci_usb is still in opensuse11...
&gt;
&gt; the goal should be improve btusb. Especially add all the needed quirks from 
&gt; the hci_usb driver to it. I have a patch for it, but I need to reverse the 
&gt; HCI_RESET logic.

Could I get a copy of that patch?

&gt; However if you have hci_usb patches, send them, I will review them and 
&gt; David will happily apply them I guess.

No, I given up. I was not able to fix close vs. finishing urbs race
in a reliable way :-(.
								Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602014625</emailId><senderName>Dave Young</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-02 01:46:25-0400</timestampReceived><subject>[PATCH] bluetooth: rfcomm_dev_state_change deadlock fix</subject><body>

There's logic in __rfcomm_dlc_close:
	rfcomm_dlc_lock(d);
	d-&gt;state = BT_CLOSED;
	d-&gt;state_changed(d, err);
	rfcomm_dlc_unlock(d);

In rfcomm_dev_state_change, it's possible that rfcomm_dev_put try to take the
dlc lock, then we will deadlock.

Here fixed it by unlock dlc before rfcomm_dev_get in rfcomm_dev_state_change.

why not unlock just before rfcomm_dev_put? it's because there's another problem.
rfcomm_dev_get/rfcomm_dev_del will take rfcomm_dev_lock, but in rfcomm_dev_add
the lock order is : rfcomm_dev_lock --&gt; dlc lock

so I unlock dlc before the taken of rfcomm_dev_lock.
 
Actually it's a regression caused by commit
1905f6c736cb618e07eca0c96e60e3c024023428, the dlc state_change could be two
callbacks : rfcomm_sk_state_change and rfcomm_dev_state_change. I missed the \
rfcomm_sk_state_change that time.

Thanks Arjan van de Ven &lt;arjan@linux.intel.com&gt; for the effort in commit
4c8411f8c115def968820a4df6658ccfd55d7f1a
but he missed the rfcomm_dev_state_change lock issue.

Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

---
net/bluetooth/rfcomm/tty.c |   13 ++++++++++++-
1 file changed, 12 insertions(+), 1 deletion(-)

diff -upr linux/net/bluetooth/rfcomm/tty.c linux.new/net/bluetooth/rfcomm/tty.c
--- linux/net/bluetooth/rfcomm/tty.c	2008-05-30 15:46:33.000000000 +0800
+++ linux.new/net/bluetooth/rfcomm/tty.c	2008-06-02 09:16:31.000000000 +0800
@@ -566,11 +566,22 @@ static void rfcomm_dev_state_change(stru
 	if (dlc-&gt;state == BT_CLOSED) {
 		if (!dev-&gt;tty) {
 			if (test_bit(RFCOMM_RELEASE_ONHUP, &amp;dev-&gt;flags)) {
-				if (rfcomm_dev_get(dev-&gt;id) == NULL)
+				/* Drop DLC lock here to avoid deadlock
+				 * 1. rfcomm_dev_get will take rfcomm_dev_lock
+				 *    but in rfcomm_dev_add there's lock order:
+				 *    rfcomm_dev_lock -&gt; dlc lock
+				 * 2. rfcomm_dev_put will deadlock if it's
+				 *    the last reference
+				 */
+				rfcomm_dlc_unlock(dlc);
+				if (rfcomm_dev_get(dev-&gt;id) == NULL) {
+					rfcomm_dlc_lock(dlc);
 					return;
+				}
 
 				rfcomm_dev_del(dev);
 				rfcomm_dev_put(dev);
+				rfcomm_dlc_lock(dlc);
 			}
 		} else
 			tty_hangup(dev-&gt;tty);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080602222142</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-06-02 22:21:42-0400</timestampReceived><subject>hci_usb strikes again (was Re: BUG kmalloc-2048: Poison</subject><body>

On Mon 2008-06-02 01:25:25, Rafael J. Wysocki wrote:
&gt; On Monday, 2 of June 2008, Justin Mattock wrote:
&gt; &gt; I received this after the second simultaneous suspend: (I will try and
&gt; &gt; see if this is re creatable or not)
&gt; 
&gt; Suspend to RAM or hibernation?

hci_usb... that beast is known to corrupt random data on suspend and
surprise removal.

&gt; &gt; [  232.270737] BUG: unable to handle kernel paging request at 6b6b6c6b
&gt; &gt; [  232.270743] IP: [&lt;c013f96d&gt;] module_put+0x12/0x2b
&gt; &gt; [  232.270750] *pde = 00000000
&gt; &gt; [  232.270753] Oops: 0002 [#1] SMP
&gt; &gt; [  232.270757] Modules linked in: hci_usb cpufreq_ondemand
&gt; &gt; cpufreq_performance cpufreq_powersave rfcomm hidp l2cap bluetooth fan
&gt; &gt; ipmi_watchdog ipmi_msghandler uinput wlan_tkip ieee80211_crypt_tkip
&gt; &gt; ieee80211_crypt arpt_mangle arptable_filter arp_tables
&gt; &gt; nf_conntrack_ipv4 nf_conntrack iptable_mangle iptable_filter ip_tables
&gt; &gt; x_tables intelfb i2c_i810 i2c_algo_bit coretemp eeprom acpi_cpufreq
&gt; &gt; fglrx(P) applesmc joydev uvcvideo appletouch wlan_scan_sta
&gt; &gt; ath_rate_sample firewire_ohci firewire_core snd_hda_intel ath_pci
&gt; &gt; snd_pcm wlan ohci1394 intel_agp evdev ath_hal(P) snd_timer ieee1394
&gt; &gt; pata_acpi thermal ehci_hcd uhci_hcd snd_page_alloc snd_hwdep agpgart
&gt; &gt; video button processor
&gt; &gt; [  232.270800]
&gt; &gt; [  232.270802] Pid: 2690, comm: btdelconn Tainted: P
&gt; &gt; (2.6.26-rc4-00033-g5463508 #4)

...and we get oops in bluetooth.

Use btusb, instead.

Actually, I guess we should mark hci_usb as broken. I don't see why we
should debug the same problem over and over again.
								Pavel

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080611014652</emailId><senderName>"skyflame"</senderName><senderEmail>skyflame@21cn.com</senderEmail><timestampReceived>2008-06-11 01:46:52-0400</timestampReceived><subject>How to use Bluez with CSR chip ?</subject><body>


Hi

    I am not sure is this the proper place to put up this question, if not ,
please correct me.

    I was trying to run bluez on our board with bc4 chip. This chip need to
set pskey before it can run

    I use hciattach and hciconfig to bring up the hci0 interface.

    Then I try hcitool hci0 scan with my earphone open.

    Nothing happend.

    while, if I using CSR's bchs a2dp demo , it's ok, I can play music. say
hardware is ok.

    My question is :

    1. To enable bluez with csr chip, is there anything need to do vs the
standard kernel and bluez package ? Some config need?

    2. Did I need to place the bootrap init sequence for the bc4 chip in
some place if I using bluez ? say in kernel or in the bluez user space
scripts? Or , the standard kernel and bluez utility already hand it, But I
just do the wrong way ?


Many thanks.
Raymond 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080627024351</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-06-27 02:43:51-0400</timestampReceived><subject>bus_id changes</subject><body>

Hi, marcel
I noticed your patch about the hci conn bus_id changes in bugzilla.

The original add-addr name is more straightforward indeed, Now the
bus_id 20 char limit will be not exist because the changes are already
in greg's tree.

So how about use the hciX-addr-addr like name as original?
-- 
Regards
dave
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080512102259</emailId><senderName>Bryan Wu</senderName><senderEmail>cooloney@kernel.org</senderEmail><timestampReceived>2008-05-12 10:22:59-0400</timestampReceived><subject>[PATCH 1/1] [bluetooth]: fix bug - kernel warning detected if built in Bluetooth CF driver</subject><body>

From: Michael Hennerich &lt;michael.hennerich@analog.com&gt;

https://blackfin.uclinux.org/gf/project/uclinux-dist/tracker/?action=TrackerItemEdit&amp;tracker_item_id=2650

Signed-off-by: Michael Hennerich &lt;michael.hennerich@analog.com&gt;
Signed-off-by: Bryan Wu &lt;cooloney@kernel.org&gt;
---
 drivers/bluetooth/bluecard_cs.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/drivers/bluetooth/bluecard_cs.c b/drivers/bluetooth/bluecard_cs.c
index bcf5792..3b330a0 100644
--- a/drivers/bluetooth/bluecard_cs.c
+++ b/drivers/bluetooth/bluecard_cs.c
@@ -867,7 +867,7 @@ static int bluecard_probe(struct pcmcia_device *link)
 
 	link-&gt;io.Attributes1 = IO_DATA_PATH_WIDTH_8;
 	link-&gt;io.NumPorts1 = 8;
-	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
+	link-&gt;irq.Attributes = IRQ_TYPE_DYNAMIC_SHARING | IRQ_HANDLE_PRESENT;
 	link-&gt;irq.IRQInfo1 = IRQ_LEVEL_ID;
 
 	link-&gt;irq.Handler = bluecard_interrupt;
-- 
1.5.5

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080512131028</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-05-12 13:10:28-0400</timestampReceived><subject>Re: [PATCH 1/1] [bluetooth]: fix bug - kernel warning detected if</subject><body>

Hi Brian,

&gt; https://blackfin.uclinux.org/gf/project/uclinux-dist/tracker/?action=TrackerItemEdit&amp;tracker_item_id=2650
&gt;  
&gt; Signed-off-by: Michael Hennerich &lt;michael.hennerich@analog.com&gt;
&gt; Signed-off-by: Bryan Wu &lt;cooloney@kernel.org&gt;
&gt; ---
&gt; drivers/bluetooth/bluecard_cs.c |    2 +-
&gt; 1 files changed, 1 insertions(+), 1 deletions(-)
&gt; 
&gt; diff --git a/drivers/bluetooth/bluecard_cs.c b/drivers/bluetooth/bluecard_cs.c
&gt; index bcf5792..3b330a0 100644
&gt; --- a/drivers/bluetooth/bluecard_cs.c
&gt; +++ b/drivers/bluetooth/bluecard_cs.c
&gt; @@ -867,7 +867,7 @@ static int bluecard_probe(struct pcmcia_device *link)
&gt; 
&gt; 	link-&gt;io.Attributes1 = IO_DATA_PATH_WIDTH_8;
&gt; 	link-&gt;io.NumPorts1 = 8;
&gt; -	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
&gt; +	link-&gt;irq.Attributes = IRQ_TYPE_DYNAMIC_SHARING | IRQ_HANDLE_PRESENT;
&gt; 	link-&gt;irq.IRQInfo1 = IRQ_LEVEL_ID;
&gt; 
&gt; 	link-&gt;irq.Handler = bluecard_interrupt;

all Bluetooth PCMCIA drivers use an exclusive IRQ:

bluecard_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
bt3c_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
btuart_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
dtl1_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;

There was a reason for that when these drivers where written. I am not
sure if it is still valid or not. Does anybody at least have tested that
the cards still work if you use a shared IRQ.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080513082039</emailId><senderName>"Hennerich, Michael"</senderName><senderEmail>michael.hennerich@analog.com</senderEmail><timestampReceived>2008-05-13 08:20:39-0400</timestampReceived><subject>RE: [PATCH 1/1] [bluetooth]: fix bug - kernel warning detected ifbuilt in Bluetooth CF driver</subject><body>



&gt;-----Original Message-----
&gt;From: Marcel Holtmann [mailto:marcel@holtmann.org]
&gt;Sent: Montag, 12. Mai 2008 15:10
&gt;To: Bryan Wu
&gt;Cc: linux-bluetooth@vger.kernel.org; linux-kernel@vger.kernel.org;
Michael
&gt;Hennerich
&gt;Subject: Re: [PATCH 1/1] [bluetooth]: fix bug - kernel warning detected
&gt;ifbuilt in Bluetooth CF driver
&gt;
&gt;Hi Brian,
&gt;
&gt;&gt; https://blackfin.uclinux.org/gf/project/uclinux-
&gt;dist/tracker/?action=TrackerItemEdit&amp;tracker_item_id=2650
&gt;&gt;
&gt;&gt; Signed-off-by: Michael Hennerich &lt;michael.hennerich@analog.com&gt;
&gt;&gt; Signed-off-by: Bryan Wu &lt;cooloney@kernel.org&gt;
&gt;&gt; ---
&gt;&gt;  drivers/bluetooth/bluecard_cs.c |    2 +-
&gt;&gt;  1 files changed, 1 insertions(+), 1 deletions(-)
&gt;&gt;
&gt;&gt; diff --git a/drivers/bluetooth/bluecard_cs.c
&gt;b/drivers/bluetooth/bluecard_cs.c
&gt;&gt; index bcf5792..3b330a0 100644
&gt;&gt; --- a/drivers/bluetooth/bluecard_cs.c
&gt;&gt; +++ b/drivers/bluetooth/bluecard_cs.c
&gt;&gt; @@ -867,7 +867,7 @@ static int bluecard_probe(struct pcmcia_device
*link)
&gt;&gt;
&gt;&gt;  	link-&gt;io.Attributes1 = IO_DATA_PATH_WIDTH_8;
&gt;&gt;  	link-&gt;io.NumPorts1 = 8;
&gt;&gt; -	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE | IRQ_HANDLE_PRESENT;
&gt;&gt; +	link-&gt;irq.Attributes = IRQ_TYPE_DYNAMIC_SHARING |
IRQ_HANDLE_PRESENT;
&gt;&gt;  	link-&gt;irq.IRQInfo1 = IRQ_LEVEL_ID;
&gt;&gt;
&gt;&gt;  	link-&gt;irq.Handler = bluecard_interrupt;
&gt;
&gt;all Bluetooth PCMCIA drivers use an exclusive IRQ:
&gt;
&gt;bluecard_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;IRQ_HANDLE_PRESENT;
&gt;bt3c_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
IRQ_HANDLE_PRESENT;
&gt;btuart_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
&gt;IRQ_HANDLE_PRESENT;
&gt;dtl1_cs.c:	link-&gt;irq.Attributes = IRQ_TYPE_EXCLUSIVE |
IRQ_HANDLE_PRESENT;
&gt;
&gt;There was a reason for that when these drivers where written. I am not
&gt;sure if it is still valid or not. Does anybody at least have tested
that
&gt;the cards still work if you use a shared IRQ.
&gt;
&gt;Regards
&gt;
&gt;Marcel

Please disregard this patch. It's a leftover and not really necessary.
Some time ago the Blackfin PCMCIA driver also requested the Card IRQ in
order to shut up some irq handling noise. However this is no longer the
case.

Best regards,
Michael

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080627024948</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-06-27 02:49:48-0400</timestampReceived><subject>Re: bus_id changes</subject><body>

Hi Dave,

&gt; I noticed your patch about the hci conn bus_id changes in bugzilla.
&gt; 
&gt; The original add-addr name is more straightforward indeed, Now the
&gt; bus_id 20 char limit will be not exist because the changes are already
&gt; in greg's tree.
&gt; 
&gt; So how about use the hciX-addr-addr like name as original?

actually this change is better since we only create the sysfs files when
the connection was successful. If the connection fails, then we don't
see any sysfs stuff.

Regards

Marcel


--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080611074416</emailId><senderName>"skyflame"</senderName><senderEmail>skyflame@21cn.com</senderEmail><timestampReceived>2008-06-11 07:44:16-0400</timestampReceived><subject>Re: How to use Bluez with CSR chip ?</subject><body>

&gt;    My question is :
&gt;
&gt;    1. To enable bluez with csr chip, is there anything need to do vs the
&gt; standard kernel and bluez package ? Some config need?
&gt;
&gt;    2. Did I need to place the bootrap init sequence for the bc4 chip in
&gt; some place if I using bluez ? say in kernel or in the bluez user space
&gt; scripts? Or , the standard kernel and bluez utility already hand it, But I
&gt; just do the wrong way ?


I open the debug message for both hci_uart and hci_core
And this is my operation log :

~ # insmod bluetooth.ko
Bluetooth: Core ver 2.11
NET: Registered protocol family 31
Bluetooth: HCI device and connection manager initialized
Bluetooth: HCI socket layer initialized
~ #
~ # insmod hci_uart.ko
Bluetooth: HCI UART driver ver 2.2
Bluetooth: HCI H4 protocol initialized
Bluetooth: HCI BCSP protocol initialized
~ #
~ #
~ # hciattach /dev/ttyS1 bcsp 921600
hci_uart_tty_open: tty c79a2800
hci_uart_tty_ioctl:
bcsp_open: hu c058c9e0
hci_uart_register_dev:
hci_register_dev: c7b01c00 name  type 3 owner bf013800
~ #
~ # bcsp_recv: hu c058c9e0 count 15 rx_state 0 rx_count 0
bcsp_complete_rx_pkt: Received seqno 0 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_complete_rx_pkt: Request for pkt 0 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 7
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:

~ #
~ # hciconfig
hci_dev_get: 0
hci0:   Type: UART
        BD Address: 00:00:00:00:00:00 ACL MTU: 0:0 SCO MTU: 0:0
        DOWN
        RX bytes:15 acl:0 sco:0 events:0 errors:0
        TX bytes:8 acl:0 sco:0 commands:0 errors:0

~ #
~ # hciconfig hci0 up
hci_dev_get: 0
hci_dev_get: 0
hci_dev_open: hci0 c7b01c00
hci_uart_open: hci0 c7b01c00
__hci_request: hci0 start
hci_init_req: hci0 0
hci_send_cmd: hci0 ogf 0x4 ocf 0x3 plen 0
hci_send_cmd: skb len 3
hci_send_cmd: hci0 ogf 0x4 ocf 0x1 plen 0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 3
hci_uart_send_frame: hci0: type 1 len 3
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_prepare_pkt: Sending packet with seqno 0
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:
hci_send_cmd: skb len 3
hci_send_cmd: hci0 ogf 0x4 ocf 0x5 plen 0
hci_cmd_task: hci0 cmd 0
hci_send_cmd: skb len 3
hci_send_cmd: hci0 ogf 0x4 ocf 0x9 plen 0
hci_send_cmd: skb len 3
hci_cmd_task: hci0 cmd 0
hci_send_cmd: hci0 ogf 0x3 ocf 0x25 plen 0
hci_send_cmd: skb len 3
hci_send_cmd: hci0 ogf 0x3 ocf 0x5 plen 2
hci_cmd_task: hci0 cmd 0
hci_send_cmd: skb len 5
hci_send_cmd: hci0 ogf 0x3 ocf 0x18 plen 2
hci_cmd_task: hci0 cmd 0
hci_send_cmd: skb len 5
hci_send_cmd: hci0 ogf 0x3 ocf 0x16 plen 2
hci_send_cmd: skb len 5
hci_cmd_task: hci0 cmd 0
hci_cmd_task: hci0 cmd 0
bcsp_timed_event: hu c058c9e0 retransmitting 1 pkts
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_prepare_pkt: Sending packet with seqno 0
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 30 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 1 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 0
bcsp_complete_rx_pkt: Received seqno 1 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 2 to card
bcsp_complete_rx_pkt: Request for pkt 1 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 0
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 3
hci_uart_send_frame: hci0: type 1 len 3
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 2 to card
bcsp_prepare_pkt: Sending packet with seqno 1
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 30 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 2 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 1
bcsp_complete_rx_pkt: Received seqno 2 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 3 to card
bcsp_complete_rx_pkt: Request for pkt 2 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 1
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 3
hci_uart_send_frame: hci0: type 1 len 3
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 3 to card
bcsp_prepare_pkt: Sending packet with seqno 2
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 10 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 3 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 2
bcsp_recv: hu c058c9e0 count 20 rx_state 2 rx_count 4
bcsp_complete_rx_pkt: Received seqno 3 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 4 to card
bcsp_complete_rx_pkt: Request for pkt 3 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 2
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 3
hci_uart_send_frame: hci0: type 1 len 3
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 4 to card
bcsp_prepare_pkt: Sending packet with seqno 3
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 28 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 4 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 3
bcsp_complete_rx_pkt: Received seqno 4 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 5 to card
bcsp_complete_rx_pkt: Request for pkt 4 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 3
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_req_complete: hci0 result 0x00
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 3
hci_uart_send_frame: hci0: type 1 len 3
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 5 to card
bcsp_prepare_pkt: Sending packet with seqno 4
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 24 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 5 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 4
bcsp_complete_rx_pkt: Received seqno 5 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 6 to card
bcsp_complete_rx_pkt: Request for pkt 5 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 4
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 5
hci_uart_send_frame: hci0: type 1 len 5
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 6 to card
bcsp_prepare_pkt: Sending packet with seqno 5
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 22 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 6 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 5
bcsp_complete_rx_pkt: Received seqno 6 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 7 to card
bcsp_complete_rx_pkt: Request for pkt 6 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 5
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 5
hci_uart_send_frame: hci0: type 1 len 5
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 7 to card
bcsp_prepare_pkt: Sending packet with seqno 6
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 23 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 7 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 6
bcsp_complete_rx_pkt: Received seqno 7 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 0 to card
bcsp_complete_rx_pkt: Request for pkt 7 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 6
hci_uart_tx_wakeup:
__hci_request: hci0 end: err 0
hci_rx_task: hci0
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 5
hci_uart_send_frame: hci0: type 1 len 5
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 0 to card
bcsp_prepare_pkt: Sending packet with seqno 7
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 23 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 0 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 7
bcsp_complete_rx_pkt: Received seqno 0 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_complete_rx_pkt: Request for pkt 0 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 7
hci_uart_tx_wakeup:
hci_rx_task: hci0
~ #
~ #
~ #
~ # hcitool -i hci0 scan
hci_dev_get: 0
hci_dev_get: 0
hci_dev_get: 0
Scanning ...
hci_dev_get: 0
inquiry_cache_flush: cache c7b01cf0
__hci_request: hci0 start
hci_inq_req: hci0
hci_send_cmd: hci0 ogf 0x1 ocf 0x1 plen 5
hci_send_cmd: skb len 8
hci_cmd_task: hci0 cmd 1
hci_send_frame: hci0 type 1 len 8
hci_uart_send_frame: hci0: type 1 len 8
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_prepare_pkt: Sending packet with seqno 0
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:
bcsp_timed_event: hu c058c9e0 retransmitting 1 pkts
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 1 to card
bcsp_prepare_pkt: Sending packet with seqno 0
hci_uart_tty_wakeup:
bcsp_recv: hu c058c9e0 count 22 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Request for pkt 1 from card
bcsp_pkt_cull: Removing 1 pkts out of 1, up to seqno 0
bcsp_complete_rx_pkt: Received seqno 1 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 2 to card
bcsp_complete_rx_pkt: Request for pkt 1 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 0
hci_uart_tx_wakeup:
hci_rx_task: hci0
bcsp_recv: hu c058c9e0 count 11 rx_state 1 rx_count 0
bcsp_complete_rx_pkt: Received seqno 2 from card
hci_uart_tx_wakeup:
bcsp_prepare_pkt: We request packet no 3 to card
bcsp_complete_rx_pkt: Request for pkt 1 from card
bcsp_pkt_cull: Removing 0 pkts out of 0, up to seqno 0
hci_uart_tty_wakeup:
hci_uart_tx_wakeup:
hci_rx_task: hci0
hci_req_complete: hci0 result 0x00
__hci_request: hci0 end: err 0
inquiry_cache_dump: cache c7b01cf0, copied 0
hci_inquiry: num_rsp 0
hci_dev_get: 0
~ #

&gt;
&gt;
&gt; Many thanks.
&gt; Raymond
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" 
&gt; in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
&gt; 

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602231238</emailId><senderName>"Justin Mattock"</senderName><senderEmail>justinmattock@gmail.com</senderEmail><timestampReceived>2008-06-02 23:12:38-0400</timestampReceived><subject>Re: hci_usb strikes again (was Re: BUG kmalloc-2048: Poison overwritten)</subject><body>

On Mon, Jun 2, 2008 at 10:21 PM, Pavel Machek &lt;pavel@suse.cz&gt; wrote:
&gt; On Mon 2008-06-02 01:25:25, Rafael J. Wysocki wrote:
&gt;&gt; On Monday, 2 of June 2008, Justin Mattock wrote:
&gt;&gt; &gt; I received this after the second simultaneous suspend: (I will try and
&gt;&gt; &gt; see if this is re creatable or not)
&gt;&gt;
&gt;&gt; Suspend to RAM or hibernation?
&gt;
&gt; hci_usb... that beast is known to corrupt random data on suspend and
&gt; surprise removal.
&gt;
&gt;&gt; &gt; [  232.270737] BUG: unable to handle kernel paging request at 6b6b6c6b
&gt;&gt; &gt; [  232.270743] IP: [&lt;c013f96d&gt;] module_put+0x12/0x2b
&gt;&gt; &gt; [  232.270750] *pde = 00000000
&gt;&gt; &gt; [  232.270753] Oops: 0002 [#1] SMP
&gt;&gt; &gt; [  232.270757] Modules linked in: hci_usb cpufreq_ondemand
&gt;&gt; &gt; cpufreq_performance cpufreq_powersave rfcomm hidp l2cap bluetooth fan
&gt;&gt; &gt; ipmi_watchdog ipmi_msghandler uinput wlan_tkip ieee80211_crypt_tkip
&gt;&gt; &gt; ieee80211_crypt arpt_mangle arptable_filter arp_tables
&gt;&gt; &gt; nf_conntrack_ipv4 nf_conntrack iptable_mangle iptable_filter ip_tables
&gt;&gt; &gt; x_tables intelfb i2c_i810 i2c_algo_bit coretemp eeprom acpi_cpufreq
&gt;&gt; &gt; fglrx(P) applesmc joydev uvcvideo appletouch wlan_scan_sta
&gt;&gt; &gt; ath_rate_sample firewire_ohci firewire_core snd_hda_intel ath_pci
&gt;&gt; &gt; snd_pcm wlan ohci1394 intel_agp evdev ath_hal(P) snd_timer ieee1394
&gt;&gt; &gt; pata_acpi thermal ehci_hcd uhci_hcd snd_page_alloc snd_hwdep agpgart
&gt;&gt; &gt; video button processor
&gt;&gt; &gt; [  232.270800]
&gt;&gt; &gt; [  232.270802] Pid: 2690, comm: btdelconn Tainted: P
&gt;&gt; &gt; (2.6.26-rc4-00033-g5463508 #4)
&gt;
&gt; ...and we get oops in bluetooth.
&gt;
&gt; Use btusb, instead.
&gt;
&gt; Actually, I guess we should mark hci_usb as broken. I don't see why we
&gt; should debug the same problem over and over again.
&gt;                                                                Pavel
&gt;
&gt; --
&gt; (english) http://www.livejournal.com/~pavelmachek
&gt; (cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
&gt;

Well; "shizzle my frizzle," The funny thing is, is I have not seen
this after performing more suspends,
maybe this is a every once in a while scenario.
regards;

-- 
Justin P. Mattock
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080603064359</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-06-03 06:43:59-0400</timestampReceived><subject>Re: hci_usb strikes again (was Re: BUG kmalloc-2048: Poison</subject><body>

Hi!
&gt; &gt;&gt; &gt; cpufreq_performance cpufreq_powersave rfcomm hidp l2cap bluetooth fan
&gt; &gt;&gt; &gt; ipmi_watchdog ipmi_msghandler uinput wlan_tkip ieee80211_crypt_tkip
&gt; &gt;&gt; &gt; ieee80211_crypt arpt_mangle arptable_filter arp_tables
&gt; &gt;&gt; &gt; nf_conntrack_ipv4 nf_conntrack iptable_mangle iptable_filter ip_tables
&gt; &gt;&gt; &gt; x_tables intelfb i2c_i810 i2c_algo_bit coretemp eeprom acpi_cpufreq
&gt; &gt;&gt; &gt; fglrx(P) applesmc joydev uvcvideo appletouch wlan_scan_sta
&gt; &gt;&gt; &gt; ath_rate_sample firewire_ohci firewire_core snd_hda_intel ath_pci
&gt; &gt;&gt; &gt; snd_pcm wlan ohci1394 intel_agp evdev ath_hal(P) snd_timer ieee1394
&gt; &gt;&gt; &gt; pata_acpi thermal ehci_hcd uhci_hcd snd_page_alloc snd_hwdep agpgart
&gt; &gt;&gt; &gt; video button processor
&gt; &gt;&gt; &gt; [  232.270800]
&gt; &gt;&gt; &gt; [  232.270802] Pid: 2690, comm: btdelconn Tainted: P
&gt; &gt;&gt; &gt; (2.6.26-rc4-00033-g5463508 #4)
&gt; &gt;
&gt; &gt; ...and we get oops in bluetooth.
&gt; &gt;
&gt; &gt; Use btusb, instead.
&gt; &gt;
&gt; &gt; Actually, I guess we should mark hci_usb as broken. I don't see why we
&gt; &gt; should debug the same problem over and over again.

&gt; Well; "shizzle my frizzle," The funny thing is, is I have not seen
&gt; this after performing more suspends,
&gt; maybe this is a every once in a while scenario.

It was "one in three" in my tests; but you need usb actively in use
while you are suspending for this to bite.
									Pavel

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602061503</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-06-02 06:15:03-0400</timestampReceived><subject>Re: [PATCH] bluetooth: rfcomm_dev_state_change deadlock fix</subject><body>

Hi Dave,

&gt; There's logic in __rfcomm_dlc_close:
&gt; 	rfcomm_dlc_lock(d);
&gt; 	d-&gt;state = BT_CLOSED;
&gt; 	d-&gt;state_changed(d, err);
&gt; 	rfcomm_dlc_unlock(d);
&gt;
&gt; In rfcomm_dev_state_change, it's possible that rfcomm_dev_put try to  
&gt; take the
&gt; dlc lock, then we will deadlock.
&gt;
&gt; Here fixed it by unlock dlc before rfcomm_dev_get in  
&gt; rfcomm_dev_state_change.
&gt;
&gt; why not unlock just before rfcomm_dev_put? it's because there's  
&gt; another problem.
&gt; rfcomm_dev_get/rfcomm_dev_del will take rfcomm_dev_lock, but in  
&gt; rfcomm_dev_add
&gt; the lock order is : rfcomm_dev_lock --&gt; dlc lock
&gt;
&gt; so I unlock dlc before the taken of rfcomm_dev_lock.
&gt;
&gt; Actually it's a regression caused by commit
&gt; 1905f6c736cb618e07eca0c96e60e3c024023428, the dlc state_change could  
&gt; be two
&gt; callbacks : rfcomm_sk_state_change and rfcomm_dev_state_change. I  
&gt; missed the rfcomm_sk_state_change that time.
&gt;
&gt; Thanks Arjan van de Ven &lt;arjan@linux.intel.com&gt; for the effort in  
&gt; commit
&gt; 4c8411f8c115def968820a4df6658ccfd55d7f1a
&gt; but he missed the rfcomm_dev_state_change lock issue.
&gt;
&gt; Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

looks good. Thanks for adding a clear comment why we have to do it  
this way.

Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080602065018</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-06-02 06:50:18-0400</timestampReceived><subject>Re: [PATCH] bluetooth: rfcomm_dev_state_change deadlock fix</subject><body>

From: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Date: Mon, 2 Jun 2008 08:15:03 +0200

&gt; Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;

Applied, but I had to add the commit header string to the two SHA ID
commit references.  Please always provide the header line text as well
as the SHA ID when referencing commits because when backporting or
putting the patch into a different tree the SHA ID will be different
and people will have a terrible time trying to find the commits you
are referring to.

Thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080511161930</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-05-11 16:19:30-0400</timestampReceived><subject>2.6.26-rc1: warnings from sysfs, bluetooth related</subject><body>


Hi!

I'm getting these from rfcomm...

								Pavel

 host4: resumed
scsi 4:0:0:0: Direct-Access     OLYMPUS  C765UZ           1.00 PQ: 0 ANSI: 2
sd 4:0:0:0: [sdb] 32000 512-byte hardware sectors (16 MB)
sd 4:0:0:0: [sdb] Write Protect is off
sd 4:0:0:0: [sdb] Mode Sense: 18 00 00 08
sd 4:0:0:0: [sdb] Assuming drive cache: write through
sd 4:0:0:0: [sdb] 32000 512-byte hardware sectors (16 MB)
sd 4:0:0:0: [sdb] Write Protect is off
sd 4:0:0:0: [sdb] Mode Sense: 18 00 00 08
sd 4:0:0:0: [sdb] Assuming drive cache: write through
 sdb: sdb1
sd 4:0:0:0: [sdb] Attached SCSI removable disk
sd 4:0:0:0: Attached scsi generic sg1 type 0
usb-storage: device scan complete
hci_cmd_task: hci0 command tx timeout
usb 5-1: USB disconnect, address 2
btusb_bulk_complete: hci0 urb f6191550 failed to resubmit (19)
btusb_bulk_complete: hci0 urb f6879090 failed to resubmit (19)
btusb_send_frame: hci0 urb f6879090 submission failed
hub 1-0:1.0: unable to enumerate USB device on port 7
usb 5-1: new full speed USB device using uhci_hcd and address 4
usb 5-1: configuration #1 chosen from 1 choice
usb 5-1: New USB device found, idVendor=0a5c, idProduct=2110
usb 5-1: New USB device strings: Mfr=1, Product=2, SerialNumber=0
usb 5-1: Product: BCM2045B
usb 5-1: Manufacturer: Broadcom Corp
sysfs: duplicate filename 'rfcomm0' can not be created
------------[ cut here ]------------
WARNING: at /data/l/linux/fs/sysfs/dir.c:425 sysfs_add_one+0x85/0xa0()
Modules linked in:
Pid: 2011, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
 [&lt;c022a2af&gt;] warn_on_slowpath+0x5f/0x90
 [&lt;c021c9e8&gt;] __wake_up_common+0x48/0x70
 [&lt;c02203e8&gt;] __wake_up+0x38/0x50
 [&lt;c022aa8b&gt;] wake_up_klogd+0x3b/0x40
 [&lt;c038510b&gt;] ida_get_new_above+0x7b/0x180
 [&lt;c02bd400&gt;] sysfs_ilookup_test+0x0/0x10
 [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
 [&lt;c029037f&gt;] ifind+0x8f/0xa0
 [&lt;c022b23b&gt;] printk+0x1b/0x20
 [&lt;c02bd775&gt;] sysfs_add_one+0x85/0xa0
 [&lt;c02bdcc8&gt;] create_dir+0x48/0x90
 [&lt;c02bdd39&gt;] sysfs_create_dir+0x29/0x50
 [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
 [&lt;c0385d66&gt;] kobject_add_internal+0xb6/0x190
 [&lt;c0385eb9&gt;] kobject_set_name_vargs+0x29/0x50
 [&lt;c0386201&gt;] kobject_add+0x31/0x60
 [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
 [&lt;c04235ef&gt;] device_add+0x9f/0x500
 [&lt;c042326e&gt;] device_initialize+0xce/0xf0
 [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
 [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
 [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
 [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
 [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
 [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
 [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
 [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
 [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
 [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
 [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
 [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
 [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
 [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
 =======================
---[ end trace a0614c8bfea95988 ]---
kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
                with the same name in the same directory.
Pid: 2011, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
 [&lt;c0385de7&gt;] kobject_add_internal+0x137/0x190
 [&lt;c0386201&gt;] kobject_add+0x31/0x60
 [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
 [&lt;c04235ef&gt;] device_add+0x9f/0x500
 [&lt;c042326e&gt;] device_initialize+0xce/0xf0
 [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
 [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
 [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
 [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
 [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
 [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
 [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
 [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
 [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
 [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
 [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
 [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
 [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
 [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
 =======================
sysfs: duplicate filename 'rfcomm0' can not be created
------------[ cut here ]------------
WARNING: at /data/l/linux/fs/sysfs/dir.c:425 sysfs_add_one+0x85/0xa0()
Modules linked in:
Pid: 2104, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
 [&lt;c022a2af&gt;] warn_on_slowpath+0x5f/0x90
 [&lt;c021c9e8&gt;] __wake_up_common+0x48/0x70
 [&lt;c02203e8&gt;] __wake_up+0x38/0x50
 [&lt;c022aa8b&gt;] wake_up_klogd+0x3b/0x40
 [&lt;c038510b&gt;] ida_get_new_above+0x7b/0x180
 [&lt;c02bd400&gt;] sysfs_ilookup_test+0x0/0x10
 [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
 [&lt;c029037f&gt;] ifind+0x8f/0xa0
 [&lt;c022b23b&gt;] printk+0x1b/0x20
 [&lt;c02bd775&gt;] sysfs_add_one+0x85/0xa0
 [&lt;c02bdcc8&gt;] create_dir+0x48/0x90
 [&lt;c02bdd39&gt;] sysfs_create_dir+0x29/0x50
 [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
 [&lt;c0385d66&gt;] kobject_add_internal+0xb6/0x190
 [&lt;c0385eb9&gt;] kobject_set_name_vargs+0x29/0x50
 [&lt;c0386201&gt;] kobject_add+0x31/0x60
 [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
 [&lt;c04235ef&gt;] device_add+0x9f/0x500
 [&lt;c042326e&gt;] device_initialize+0xce/0xf0
 [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
 [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
 [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
 [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
 [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
 [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
 [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
 [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
 [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
 [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
 [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
 [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
 [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
 [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
 =======================
---[ end trace a0614c8bfea95988 ]---
kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
                with the same name in the same directory.
Pid: 2104, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
 [&lt;c0385de7&gt;] kobject_add_internal+0x137/0x190
 [&lt;c0386201&gt;] kobject_add+0x31/0x60
 [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
 [&lt;c04235ef&gt;] device_add+0x9f/0x500
 [&lt;c042326e&gt;] device_initialize+0xce/0xf0
 [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
 [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
 [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
 [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
 [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
 [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
 [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
 [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
 [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
 [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
 [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
 [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
 [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
 [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
 =======================

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080516212226</emailId><senderName>Manuel Naranjo</senderName><senderEmail>manuel@aircable.net</senderEmail><timestampReceived>2008-05-16 21:22:26-0400</timestampReceived><subject>SCO makes kernel crash?</subject><body>

Hello guys,

I got into the boring task of maintaining  part of a distribution and
for that I packed linux 2.6.24.4 for an embedded PC targeting bluetooth
uses.

Then one of the users reported SCO wasn't working, so I looked through
the web, asked in the bluez IRC channel and Marcel told me there was an
official patch going around in lklm. I found this one:
http://lkml.org/lkml/diff/2008/2/27/528/1

Not sure if that was the one or not. Thing is that after that SCO
started working.... Not for so long, I tried sco with mplayer, then
killed mplayer, and then accidentally turned off the headset before the
SCO link was closed, and then... Kernel crash! Shoot.... At the bottom
I'm attaching the dmesg report.

I then read in the web that hci_usb is broken, any chance this is
related? I had never seen this before. I have some knowledge in kernel
usb module creation, I wrote one for an usb-rs232 converter, any chance
I can help?

Thanks,
Manuel Naranjo

hci_scodata_packet: hci0 SCO packet for unknown connection handle 46
usb 1-1: USB disconnect, address 3
__tx_submit: hci0 tx submit failed urb c5e88814 type 3 err -19
__tx_submit: hci0 tx submit failed urb c5e88814 type 3 err -19
------------[ cut here ]------------
kernel BUG at mm/page_alloc.c:383!
invalid opcode: 0000 [#1]
Modules linked in: bridge llc ipv6 usbhid ff_memless thermal processor
button sis_agp evdev

Pid: 122, comm: khubd Not tainted (2.6.24.4-aircable-sco1 #1)
EIP: 0060:[&lt;c014514a&gt;] EFLAGS: 00010086 CPU: 0
EIP is at free_pages_bulk+0x23a/0x270
EAX: c10bef40 EBX: c10bef40 ECX: ffffffff EDX: 00000001
ESI: 00000000 EDI: 00000000 EBP: 0000077b ESP: c684be10
DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068
Process khubd (pid: 122, ti=c684a000 task=c6877500 task.ti=c684a000)
Stack: 0000077c c04a6248 00000003 c04a6224 c10bef60 00000001 00000000
00000001
       00000001 c04a6248 c107d580 c04a623c 00000086 c014528b 00000000
c04a6224
       c04c6f00 00000282 c0348a08 c6ad6b08 c0158e10 c0348a08 00000000
c3ead300
Call Trace:
[&lt;c014528b&gt;] free_hot_cold_page+0x10b/0x130
[&lt;c0348a08&gt;] __kfree_skb+0x8/0x80
[&lt;c0158e10&gt;] kfree+0x60/0xb0
[&lt;c0348a08&gt;] __kfree_skb+0x8/0x80
[&lt;c0348a08&gt;] __kfree_skb+0x8/0x80
[&lt;c0348aba&gt;] skb_queue_purge+0xa/0x20
[&lt;c02efca8&gt;] hci_usb_flush+0x18/0x30
[&lt;c02efda4&gt;] hci_usb_close+0xe4/0xf0
[&lt;c02f07fb&gt;] hci_usb_disconnect+0x2b/0x90
[&lt;c02bc9e3&gt;] usb_disable_interface+0x33/0x40
[&lt;c02bf268&gt;] usb_unbind_interface+0x38/0x90
[&lt;c026ca44&gt;] __device_release_driver+0x64/0xa0
[&lt;c026ce7d&gt;] device_release_driver+0x1d/0x40
[&lt;c026c33a&gt;] bus_remove_device+0x5a/0x80
[&lt;c026a6f4&gt;] device_del+0x144/0x240
[&lt;c02bc948&gt;] usb_disable_device+0x78/0xe0
[&lt;c02b8ba4&gt;] usb_disconnect+0x94/0xe0
[&lt;c02b90b9&gt;] hub_thread+0x1d9/0xb60
[&lt;c0118ee2&gt;] update_curr+0x72/0x110
[&lt;c0118f6b&gt;] update_curr+0xfb/0x110
[&lt;c012dd40&gt;] autoremove_wake_function+0x0/0x50
[&lt;c03c2938&gt;] schedule+0x148/0x270
[&lt;c02b8ee0&gt;] hub_thread+0x0/0xb60
[&lt;c012da02&gt;] kthread+0x42/0x70
[&lt;c012d9c0&gt;] kthread+0x0/0x70
[&lt;c0105157&gt;] kernel_thread_helper+0x7/0x10
=======================
Code: 10 89 4a 04 89 5e 18 89 11 8b 54 24 0c ff 44 10 68 ff 44 24 1c 8b
4c 24 1c 39 4c 24 08 0f 85 11 fe ff ff 83 c4 24 5b 5e 5f 5d c3 &lt;0f&gt; 0b
eb fe 66 90 8b 43 0c e9 34 ff ff ff 8b 54 24 38 89 c8 e8
EIP: [&lt;c014514a&gt;] free_pages_bulk+0x23a/0x270 SS:ESP 0068:c684be10
---[ end trace a3cf24b8b03fe907 ]---
Bad page state in process 'syslogd'
page:c10bef40 flags:0x40000000 mapping:00000000 mapcount:0 count:-1
Trying to fix it up, but a reboot is needed
Backtrace:
Pid: 1956, comm: syslogd Tainted: G      D 2.6.24.4-aircable-sco1 #1
[&lt;c0144721&gt;] bad_page+0x61/0x90
[&lt;c0144ad9&gt;] get_page_from_freelist+0x389/0x3f0
[&lt;c0145456&gt;] __alloc_pages+0x56/0x380
[&lt;c014cefd&gt;] __pte_alloc+0xd/0x60
[&lt;c014da61&gt;] copy_page_range+0x2a1/0x2c0
[&lt;c011b99e&gt;] copy_process+0x72e/0xef0
[&lt;c011c317&gt;] do_fork+0x47/0x210
[&lt;c0102226&gt;] sys_clone+0x36/0x40
[&lt;c0104012&gt;] syscall_call+0x7/0xb
=======================



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418204653</emailId><senderName></senderName><senderEmail>akpm</senderEmail><timestampReceived>2008-04-18 20:46:53-0400</timestampReceived><subject>[patch 2/3] hci_usb: remove code obfuscation</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;

_urb_free is an alias for kfree... making code longer &amp; harder to
read. Remove it.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
---

 drivers/bluetooth/hci_usb.c |   10 +++++-----
 drivers/bluetooth/hci_usb.h |    5 -----
 2 files changed, 5 insertions(+), 10 deletions(-)

diff -puN drivers/bluetooth/hci_usb.c~hci_usb-remove-code-obfuscation drivers/bluetooth/hci_usb.c
--- a/drivers/bluetooth/hci_usb.c~hci_usb-remove-code-obfuscation
+++ a/drivers/bluetooth/hci_usb.c
@@ -265,7 +265,7 @@ static int hci_usb_intr_rx_submit(struct
 		BT_ERR("%s intr rx submit failed urb %p err %d",
 				husb-&gt;hdev-&gt;name, urb, err);
 		_urb_unlink(_urb);
-		_urb_free(_urb);
+		kfree(_urb);
 		kfree(buf);
 	}
 	return err;
@@ -302,7 +302,7 @@ static int hci_usb_bulk_rx_submit(struct
 		BT_ERR("%s bulk rx submit failed urb %p err %d",
 				husb-&gt;hdev-&gt;name, urb, err);
 		_urb_unlink(_urb);
-		_urb_free(_urb);
+		kfree(_urb);
 		kfree(buf);
 	}
 	return err;
@@ -353,7 +353,7 @@ static int hci_usb_isoc_rx_submit(struct
 		BT_ERR("%s isoc rx submit failed urb %p err %d",
 				husb-&gt;hdev-&gt;name, urb, err);
 		_urb_unlink(_urb);
-		_urb_free(_urb);
+		kfree(_urb);
 		kfree(buf);
 	}
 	return err;
@@ -431,7 +431,7 @@ static void hci_usb_unlink_urbs(struct h
 					husb-&gt;hdev-&gt;name, _urb, _urb-&gt;type, urb);
 			kfree(urb-&gt;setup_packet);
 			kfree(urb-&gt;transfer_buffer);
-			_urb_free(_urb);
+			kfree(_urb);
 		}
 	}
 }
@@ -490,7 +490,7 @@ static inline int hci_usb_send_ctrl(stru
 
 		dr = kmalloc(sizeof(*dr), GFP_ATOMIC);
 		if (!dr) {
-			_urb_free(_urb);
+			kfree(_urb);
 			return -ENOMEM;
 		}
 	} else
diff -puN drivers/bluetooth/hci_usb.h~hci_usb-remove-code-obfuscation drivers/bluetooth/hci_usb.h
--- a/drivers/bluetooth/hci_usb.h~hci_usb-remove-code-obfuscation
+++ a/drivers/bluetooth/hci_usb.h
@@ -60,11 +60,6 @@ struct _urb {
 	struct urb        urb;
 };
 
-static inline void _urb_free(struct _urb *_urb)
-{
-	kfree(_urb);
-}
-
 static inline void _urb_queue_init(struct _urb_queue *q)
 {
 	INIT_LIST_HEAD(&amp;q-&gt;head);
_
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418210710</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-18 21:07:10-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi Andrew,

&gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt;
&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt; read. Remove it.

our own URB handling here is broken anyway. It was a bad idea when we  
did it, but at that time the USB susbsystem was not in that good shape  
that it is today. So I would say leave this code as it is and  
concentrate on the new btusb driver, but if it helps anybody I am  
happy to ACK this one.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418223430</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-18 22:34:30-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

On Fri 2008-04-18 23:07:10, Marcel Holtmann wrote:
&gt; Hi Andrew,
&gt;
&gt;&gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt;&gt;
&gt;&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt;&gt; read. Remove it.
&gt;
&gt; our own URB handling here is broken anyway. It was a bad idea when we did 
&gt; it, but at that time the USB susbsystem was not in that good shape that it 
&gt; is today. So I would say leave this code as it is and concentrate on the 
&gt; new btusb driver, but if it helps anybody I am happy to ACK this one.

It currently corrupts memory (use after free) during suspend, and I'm
trying to get that fixed. It is 90% reproducible.

And yes, fixing clean code is easier.

It could be easily fixed by just not freeing the urbs during
disconnect (introducing very very slow memory leak). Would that be
acceptable?

									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419012834</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-19 01:28:34-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi Pavel,

&gt;&gt;&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt;&gt;&gt; read. Remove it.
&gt;&gt;
&gt;&gt; our own URB handling here is broken anyway. It was a bad idea when  
&gt;&gt; we did
&gt;&gt; it, but at that time the USB susbsystem was not in that good shape  
&gt;&gt; that it
&gt;&gt; is today. So I would say leave this code as it is and concentrate  
&gt;&gt; on the
&gt;&gt; new btusb driver, but if it helps anybody I am happy to ACK this one.
&gt;
&gt; It currently corrupts memory (use after free) during suspend, and I'm
&gt; trying to get that fixed. It is 90% reproducible.

that is good, because I can't reproduce it with any of my system.  
Don't ask me why. I really simply works. So if you figure it out, it  
would be great.

&gt; It could be easily fixed by just not freeing the urbs during
&gt; disconnect (introducing very very slow memory leak). Would that be
&gt; acceptable?

I don't think so.

Have you ever tried btusb driver? That code is a lot cleaner and it  
uses USB anchors for the queued URBs (no home grown broken URB queues).

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419161456</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-19 16:14:56-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi!

&gt;&gt;&gt;&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt;&gt;&gt;&gt; read. Remove it.
&gt;&gt;&gt;
&gt;&gt;&gt; our own URB handling here is broken anyway. It was a bad idea when we did
&gt;&gt;&gt; it, but at that time the USB susbsystem was not in that good shape that 
&gt;&gt;&gt; it
&gt;&gt;&gt; is today. So I would say leave this code as it is and concentrate on the
&gt;&gt;&gt; new btusb driver, but if it helps anybody I am happy to ACK this one.
&gt;&gt;
&gt;&gt; It currently corrupts memory (use after free) during suspend, and I'm
&gt;&gt; trying to get that fixed. It is 90% reproducible.
&gt;
&gt; that is good, because I can't reproduce it with any of my system. Don't ask 
&gt; me why. I really simply works. So if you figure it out, it would be great.

There needs to be some load on the usb. I use
rsync-over-bt-over-gprs/umts.

&gt;&gt; It could be easily fixed by just not freeing the urbs during
&gt;&gt; disconnect (introducing very very slow memory leak). Would that be
&gt;&gt; acceptable?
&gt;
&gt; I don't think so.
&gt;
&gt; Have you ever tried btusb driver? That code is a lot cleaner and it uses 
&gt; USB anchors for the queued URBs (no home grown broken URB queues).

I wish I knew about  this one earlier. Yes, it seems to work for me.

								Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419174342</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-19 17:43:42-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi Pavel,

&gt;&gt;&gt;&gt;&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt;&gt;&gt;&gt;&gt; read. Remove it.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; our own URB handling here is broken anyway. It was a bad idea  
&gt;&gt;&gt;&gt; when we did
&gt;&gt;&gt;&gt; it, but at that time the USB susbsystem was not in that good  
&gt;&gt;&gt;&gt; shape that
&gt;&gt;&gt;&gt; it
&gt;&gt;&gt;&gt; is today. So I would say leave this code as it is and concentrate  
&gt;&gt;&gt;&gt; on the
&gt;&gt;&gt;&gt; new btusb driver, but if it helps anybody I am happy to ACK this  
&gt;&gt;&gt;&gt; one.
&gt;&gt;&gt;
&gt;&gt;&gt; It currently corrupts memory (use after free) during suspend, and  
&gt;&gt;&gt; I'm
&gt;&gt;&gt; trying to get that fixed. It is 90% reproducible.
&gt;&gt;
&gt;&gt; that is good, because I can't reproduce it with any of my system.  
&gt;&gt; Don't ask
&gt;&gt; me why. I really simply works. So if you figure it out, it would be  
&gt;&gt; great.
&gt;
&gt; There needs to be some load on the usb. I use
&gt; rsync-over-bt-over-gprs/umts.

you told me before and I believe you. This driver is not in its best  
shape. Weird thing is that I never got it re-produced. If you find the  
real cause. That would be great.

&gt;&gt;&gt; It could be easily fixed by just not freeing the urbs during
&gt;&gt;&gt; disconnect (introducing very very slow memory leak). Would that be
&gt;&gt;&gt; acceptable?
&gt;&gt;
&gt;&gt; I don't think so.
&gt;&gt;
&gt;&gt; Have you ever tried btusb driver? That code is a lot cleaner and it  
&gt;&gt; uses
&gt;&gt; USB anchors for the queued URBs (no home grown broken URB queues).
&gt;
&gt; I wish I knew about  this one earlier. Yes, it seems to work for me.

Does this mean you are not fixing hci_usb anymore ;)

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080520152406</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@suse.cz</senderEmail><timestampReceived>2008-05-20 15:24:06-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi!

&gt;&gt; There needs to be some load on the usb. I use
&gt;&gt; rsync-over-bt-over-gprs/umts.
&gt;
&gt; you told me before and I believe you. This driver is not in its best shape. 
&gt; Weird thing is that I never got it re-produced. If you find the real cause. 
&gt; That would be great.

The cause seems to be hci_usb_close() racing with the USB core and
completion handlers...

&gt;&gt;&gt;&gt; It could be easily fixed by just not freeing the urbs during
&gt;&gt;&gt;&gt; disconnect (introducing very very slow memory leak). Would that be
&gt;&gt;&gt;&gt; acceptable?
&gt;&gt;&gt;
&gt;&gt;&gt; I don't think so.
&gt;&gt;&gt;
&gt;&gt;&gt; Have you ever tried btusb driver? That code is a lot cleaner and it uses
&gt;&gt;&gt; USB anchors for the queued URBs (no home grown broken URB queues).
&gt;&gt;
&gt;&gt; I wish I knew about  this one earlier. Yes, it seems to work for me.
&gt;
&gt; Does this mean you are not fixing hci_usb anymore ;)

I'm not sure what's next, as hci_usb is still in opensuse11...
									Pavel
-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080520172642</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-05-20 17:26:42-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

Hi Pavel,

&gt;&gt;&gt; There needs to be some load on the usb. I use
&gt;&gt;&gt; rsync-over-bt-over-gprs/umts.
&gt;&gt;
&gt;&gt; you told me before and I believe you. This driver is not in its  
&gt;&gt; best shape.
&gt;&gt; Weird thing is that I never got it re-produced. If you find the  
&gt;&gt; real cause.
&gt;&gt; That would be great.
&gt;
&gt; The cause seems to be hci_usb_close() racing with the USB core and
&gt; completion handlers...
&gt;
&gt;&gt;&gt;&gt;&gt; It could be easily fixed by just not freeing the urbs during
&gt;&gt;&gt;&gt;&gt; disconnect (introducing very very slow memory leak). Would that be
&gt;&gt;&gt;&gt;&gt; acceptable?
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; I don't think so.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Have you ever tried btusb driver? That code is a lot cleaner and  
&gt;&gt;&gt;&gt; it uses
&gt;&gt;&gt;&gt; USB anchors for the queued URBs (no home grown broken URB queues).
&gt;&gt;&gt;
&gt;&gt;&gt; I wish I knew about  this one earlier. Yes, it seems to work for me.
&gt;&gt;
&gt;&gt; Does this mean you are not fixing hci_usb anymore ;)
&gt;
&gt; I'm not sure what's next, as hci_usb is still in opensuse11...

the goal should be improve btusb. Especially add all the needed quirks  
from the hci_usb driver to it. I have a patch for it, but I need to  
reverse the HCI_RESET logic.

However if you have hci_usb patches, send them, I will review them and  
David will happily apply them I guess.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080512020500</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-05-12 02:05:00-0400</timestampReceived><subject>Re: 2.6.26-rc1: warnings from sysfs, bluetooth related</subject><body>

On Mon, May 12, 2008 at 12:19 AM, Pavel Machek &lt;pavel@suse.cz&gt; wrote:
&gt; 
&gt; Hi!
&gt; 
&gt; I'm getting these from rfcomm...


Are you sure it's a regression?

Dont know if it's same bug as BUG 10341.  I just describe the problem
in bug 10341:

While a rfcomm device is opened more than once, the BUG 10341 can be triggered.

rfcomm dev reference will be held for every rfcomm_tty_open, but release_dev
 will hangup the tty and release the dev number for free use without
judge the dev-&gt;opened.

rfcomm_dev_state_change and rfcomm_tty_hangup could del the rfcomm dev
as well,  the problem is similar as above.

If the create_dev called before the last tty_close,  sysfs will
warning and create will fail.

I have a patch which don't hold the dev reference in rfcomm_tty_open,
but it need some review and test.

please see:
http://bugzilla.kernel.org/attachment.cgi?id=15746

Marcel, do you have idea about this? or other solution?

&gt; 
&gt; Pavel
&gt; 
&gt; host4: resumed
&gt; scsi 4:0:0:0: Direct-Access     OLYMPUS  C765UZ           1.00 PQ: 0 ANSI: 2
&gt; sd 4:0:0:0: [sdb] 32000 512-byte hardware sectors (16 MB)
&gt; sd 4:0:0:0: [sdb] Write Protect is off
&gt; sd 4:0:0:0: [sdb] Mode Sense: 18 00 00 08
&gt; sd 4:0:0:0: [sdb] Assuming drive cache: write through
&gt; sd 4:0:0:0: [sdb] 32000 512-byte hardware sectors (16 MB)
&gt; sd 4:0:0:0: [sdb] Write Protect is off
&gt; sd 4:0:0:0: [sdb] Mode Sense: 18 00 00 08
&gt; sd 4:0:0:0: [sdb] Assuming drive cache: write through
&gt; sdb: sdb1
&gt; sd 4:0:0:0: [sdb] Attached SCSI removable disk
&gt; sd 4:0:0:0: Attached scsi generic sg1 type 0
&gt; usb-storage: device scan complete
&gt; hci_cmd_task: hci0 command tx timeout
&gt; usb 5-1: USB disconnect, address 2
&gt; btusb_bulk_complete: hci0 urb f6191550 failed to resubmit (19)
&gt; btusb_bulk_complete: hci0 urb f6879090 failed to resubmit (19)
&gt; btusb_send_frame: hci0 urb f6879090 submission failed
&gt; hub 1-0:1.0: unable to enumerate USB device on port 7
&gt; usb 5-1: new full speed USB device using uhci_hcd and address 4
&gt; usb 5-1: configuration #1 chosen from 1 choice
&gt; usb 5-1: New USB device found, idVendor=0a5c, idProduct=2110
&gt; usb 5-1: New USB device strings: Mfr=1, Product=2, SerialNumber=0
&gt; usb 5-1: Product: BCM2045B
&gt; usb 5-1: Manufacturer: Broadcom Corp
&gt; sysfs: duplicate filename 'rfcomm0' can not be created
&gt; ------------[ cut here ]------------
&gt; WARNING: at /data/l/linux/fs/sysfs/dir.c:425 sysfs_add_one+0x85/0xa0()
&gt; Modules linked in:
&gt; Pid: 2011, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
&gt; [&lt;c022a2af&gt;] warn_on_slowpath+0x5f/0x90
&gt; [&lt;c021c9e8&gt;] __wake_up_common+0x48/0x70
&gt; [&lt;c02203e8&gt;] __wake_up+0x38/0x50
&gt; [&lt;c022aa8b&gt;] wake_up_klogd+0x3b/0x40
&gt; [&lt;c038510b&gt;] ida_get_new_above+0x7b/0x180
&gt; [&lt;c02bd400&gt;] sysfs_ilookup_test+0x0/0x10
&gt; [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
&gt; [&lt;c029037f&gt;] ifind+0x8f/0xa0
&gt; [&lt;c022b23b&gt;] printk+0x1b/0x20
&gt; [&lt;c02bd775&gt;] sysfs_add_one+0x85/0xa0
&gt; [&lt;c02bdcc8&gt;] create_dir+0x48/0x90
&gt; [&lt;c02bdd39&gt;] sysfs_create_dir+0x29/0x50
&gt; [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
&gt; [&lt;c0385d66&gt;] kobject_add_internal+0xb6/0x190
&gt; [&lt;c0385eb9&gt;] kobject_set_name_vargs+0x29/0x50
&gt; [&lt;c0386201&gt;] kobject_add+0x31/0x60
&gt; [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
&gt; [&lt;c04235ef&gt;] device_add+0x9f/0x500
&gt; [&lt;c042326e&gt;] device_initialize+0xce/0xf0
&gt; [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
&gt; [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
&gt; [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
&gt; [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
&gt; [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
&gt; [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
&gt; [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
&gt; [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
&gt; [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
&gt; [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
&gt; [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
&gt; [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
&gt; [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
&gt; [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
&gt; =======================
&gt; ---[ end trace a0614c8bfea95988 ]---
&gt; kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
&gt;                 with the same name in the same directory.
&gt; Pid: 2011, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
&gt; [&lt;c0385de7&gt;] kobject_add_internal+0x137/0x190
&gt; [&lt;c0386201&gt;] kobject_add+0x31/0x60
&gt; [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
&gt; [&lt;c04235ef&gt;] device_add+0x9f/0x500
&gt; [&lt;c042326e&gt;] device_initialize+0xce/0xf0
&gt; [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
&gt; [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
&gt; [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
&gt; [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
&gt; [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
&gt; [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
&gt; [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
&gt; [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
&gt; [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
&gt; [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
&gt; [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
&gt; [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
&gt; [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
&gt; [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
&gt; =======================
&gt; sysfs: duplicate filename 'rfcomm0' can not be created
&gt; ------------[ cut here ]------------
&gt; WARNING: at /data/l/linux/fs/sysfs/dir.c:425 sysfs_add_one+0x85/0xa0()
&gt; Modules linked in:
&gt; Pid: 2104, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
&gt; [&lt;c022a2af&gt;] warn_on_slowpath+0x5f/0x90
&gt; [&lt;c021c9e8&gt;] __wake_up_common+0x48/0x70
&gt; [&lt;c02203e8&gt;] __wake_up+0x38/0x50
&gt; [&lt;c022aa8b&gt;] wake_up_klogd+0x3b/0x40
&gt; [&lt;c038510b&gt;] ida_get_new_above+0x7b/0x180
&gt; [&lt;c02bd400&gt;] sysfs_ilookup_test+0x0/0x10
&gt; [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
&gt; [&lt;c029037f&gt;] ifind+0x8f/0xa0
&gt; [&lt;c022b23b&gt;] printk+0x1b/0x20
&gt; [&lt;c02bd775&gt;] sysfs_add_one+0x85/0xa0
&gt; [&lt;c02bdcc8&gt;] create_dir+0x48/0x90
&gt; [&lt;c02bdd39&gt;] sysfs_create_dir+0x29/0x50
&gt; [&lt;c0751214&gt;] _spin_unlock+0x14/0x20
&gt; [&lt;c0385d66&gt;] kobject_add_internal+0xb6/0x190
&gt; [&lt;c0385eb9&gt;] kobject_set_name_vargs+0x29/0x50
&gt; [&lt;c0386201&gt;] kobject_add+0x31/0x60
&gt; [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
&gt; [&lt;c04235ef&gt;] device_add+0x9f/0x500
&gt; [&lt;c042326e&gt;] device_initialize+0xce/0xf0
&gt; [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
&gt; [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
&gt; [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
&gt; [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
&gt; [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
&gt; [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
&gt; [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
&gt; [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
&gt; [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
&gt; [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
&gt; [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
&gt; [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
&gt; [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
&gt; [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
&gt; =======================
&gt; ---[ end trace a0614c8bfea95988 ]---
&gt; kobject_add_internal failed for rfcomm0 with -EEXIST, don't try to register things \
&gt;                 with the same name in the same directory.
&gt; Pid: 2104, comm: rfcomm Tainted: G        W 2.6.26-rc1 #289
&gt; [&lt;c0385de7&gt;] kobject_add_internal+0x137/0x190
&gt; [&lt;c0386201&gt;] kobject_add+0x31/0x60
&gt; [&lt;c0385c2f&gt;] kobject_get+0xf/0x20
&gt; [&lt;c04235ef&gt;] device_add+0x9f/0x500
&gt; [&lt;c042326e&gt;] device_initialize+0xce/0xf0
&gt; [&lt;c0423aeb&gt;] device_create+0x8b/0xc0
&gt; [&lt;c03e6219&gt;] tty_register_device+0x69/0xf0
&gt; [&lt;c038a2a4&gt;] vsnprintf+0x544/0x600
&gt; [&lt;c038e982&gt;] __spin_lock_init+0x32/0x60
&gt; [&lt;c07512d9&gt;] _spin_lock+0x29/0x40
&gt; [&lt;c06e20ea&gt;] rfcomm_dev_ioctl+0x53a/0x690
&gt; [&lt;c06e01be&gt;] rfcomm_sock_ioctl+0x1e/0x50
&gt; [&lt;c06e01c9&gt;] rfcomm_sock_ioctl+0x29/0x50
&gt; [&lt;c0625e16&gt;] sock_ioctl+0xb6/0x1d0
&gt; [&lt;c0625d60&gt;] sock_ioctl+0x0/0x1d0
&gt; [&lt;c0288e8b&gt;] vfs_ioctl+0x2b/0x90
&gt; [&lt;c0288f4c&gt;] do_vfs_ioctl+0x5c/0x2a0
&gt; [&lt;c02891cd&gt;] sys_ioctl+0x3d/0x70
&gt; [&lt;c0203c2a&gt;] syscall_call+0x7/0xb
&gt; =======================
&gt; 
&gt; --
&gt; (english) http://www.livejournal.com/~pavelmachek
&gt; (cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
&gt; --
&gt; To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080529083123</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-05-29 08:31:23-0400</timestampReceived><subject>Re: two different oopses with 2.6.26-rc4</subject><body>

On Wed, 28 May 2008 11:50:34 +0200 Alejandro Riveira Fern__ndez  \
&lt;alejandro.riveira@gmail.com&gt; wrote:

&gt; I sent this to the list with other mail address and it didn't reach it
&gt; afaics. apologies if someone sees this twice
&gt; 
&gt; i cced wireless becouse of the first oops
&gt; 
&gt; First boot into 2.6.26-rc4 
&gt; 
&gt; Compiled and booting into 2.6.26-rc4
&gt; 
&gt; 1) With splash quiet on grub line it doesn't boot (or i didin't wait long
&gt; enough)
&gt; 2) without quiet and splash I get into VT X filas becouse i use the evil
&gt; nvidia driver that's expected. But ubuntu failsafe mode (xserver with vesa
&gt; in low res) doesn't show up either *regression*
&gt; 3) i get an oops with network manager
&gt; 4) if i try to run some sudo command it gets stuck (Crtl +C doesnt' help)
&gt; "ip route" gets stuck too. User programs i tried wrok fine (only ls and
&gt; htop). Network realted problem?
&gt; 
&gt; 5) printk times on dmesg go crazy
&gt; 
&gt; But the second time a boot into it i got a working system (i even compiled the
&gt; *famous* nvidia driver) with only a bluetooth related oops ...
&gt; 
&gt; Both dmesg follow. This is on a hardy 8.04 64 bits system. If more info is needed
&gt; just ask
&gt; 
&gt; ...
&gt; 
&gt; Working Second one
&gt; [    0.000000] Linux version 2.6.26-rc4 (alex@Varda) (gcc version 4.2.3 (Ubuntu \
&gt; 4.2.3-2ubuntu7)) #28 SMP PREEMPT Mon May 26 21:46:39 CEST 2008 [    0.000000] \
&gt; Command line: BOOT_IMAGE=(hd0,2)/vmlinuz-2.6.26-rc4 \
&gt; root=UUID=ee465ea1-394d-4dd2-a5f9-a35567176c40 ro quiet splash [    0.000000] \
&gt; BIOS-provided physical RAM map: [    0.000000]  BIOS-e820: 0000000000000000 - \
&gt; 000000000009fc00 (usable) [    0.000000]  BIOS-e820: 000000000009fc00 - \
&gt; 00000000000a0000 (reserved) [    0.000000]  BIOS-e820: 00000000000e6000 - \
&gt; 0000000000100000 (reserved) [    0.000000]  BIOS-e820: 0000000000100000 - \
&gt; 00000000bffb0000 (usable) [    0.000000]  BIOS-e820: 00000000bffb0000 - \
&gt; 00000000bffc0000 (ACPI data) [    0.000000]  BIOS-e820: 00000000bffc0000 - \
&gt; 00000000bfff0000 (ACPI NVS) [    0.000000]  BIOS-e820: 00000000bfff0000 - \
&gt; 00000000c0000000 (reserved) [    0.000000]  BIOS-e820: 00000000ff380000 - \
&gt; 0000000100000000 (reserved) [    0.000000] Entering add_active_range(0, 0, 159) 0 \
&gt; entries of 256 used [    0.000000] Entering add_active_range(0, 256, 786352) 1 \
&gt; entries of 256 used [    0.000000] max_pfn_mapped = 1048576
&gt; [    0.000000] x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
&gt; [    0.000000] init_memory_mapping
&gt; [    0.000000] DMI present.
&gt; [    0.000000] ACPI: RSDP 000F90F0, 0014 (r0 ACPIAM)
&gt; [    0.000000] ACPI: RSDT BFFB0000, 0040 (r1 A M I  OEMRSDT   3000715 MSFT       \
&gt; 97) [    0.000000] ACPI: FACP BFFB0200, 0084 (r2 A M I  OEMFACP  12000601 MSFT      \
&gt; 97) [    0.000000] ACPI: DSDT BFFB0440, 4B5A (r1  AM2ES AM2ES136      136 INTL  \
&gt; 2002026) [    0.000000] ACPI: FACS BFFC0000, 0040
&gt; [    0.000000] ACPI: APIC BFFB0390, 0068 (r1 A M I  OEMAPIC   3000715 MSFT       \
&gt; 97) [    0.000000] ACPI: MCFG BFFB0400, 003C (r1 A M I  OEMMCFG   3000715 MSFT      \
&gt; 97) [    0.000000] ACPI: SSDT BFFB4FA0, 002B (r1 OEM_ID OEMTBLID        1 INTL  \
&gt; 2002026) [    0.000000] ACPI: OEMB BFFC0040, 0056 (r1 A M I  AMI_OEM   3000715 MSFT \
&gt; 97) [    0.000000] ACPI: HPET BFFB4FD0, 0038 (r1 A M I  OEMHPET   3000715 MSFT      \
&gt; 97) [    0.000000] ACPI: SSDT BFFB5010, 01C4 (r1 A M I  POWERNOW        1 AMD       \
&gt; 1) [    0.000000] Entering add_active_range(0, 0, 159) 0 entries of 256 used
&gt; [    0.000000] Entering add_active_range(0, 256, 786352) 1 entries of 256 used
&gt; [    0.000000]   early res: 0 [0-fff] BIOS data page
&gt; [    0.000000]   early res: 1 [6000-7fff] TRAMPOLINE
&gt; [    0.000000]   early res: 2 [200000-5b3bcb] TEXT DATA BSS
&gt; [    0.000000]   early res: 3 [37c9d000-37fef7af] RAMDISK
&gt; [    0.000000]   early res: 4 [9fc00-fffff] BIOS reserved
&gt; [    0.000000]   early res: 5 [8000-cfff] PGTABLE
&gt; [    0.000000]  [ffffe20000000000-ffffe200029fffff] PMD -&gt; \
&gt; [ffff810001200000-ffff810003bfffff] on node 0 [    0.000000] Zone PFN ranges:
&gt; [    0.000000]   DMA             0 -&gt;     4096
&gt; [    0.000000]   DMA32        4096 -&gt;  1048576
&gt; [    0.000000]   Normal    1048576 -&gt;  1048576
&gt; [    0.000000] Movable zone start PFN for each node
&gt; [    0.000000] early_node_map[2] active PFN ranges
&gt; [    0.000000]     0:        0 -&gt;      159
&gt; [    0.000000]     0:      256 -&gt;   786352
&gt; [    0.000000] On node 0 totalpages: 786255
&gt; [    0.000000]   DMA zone: 56 pages used for memmap
&gt; [    0.000000]   DMA zone: 1053 pages reserved
&gt; [    0.000000]   DMA zone: 2890 pages, LIFO batch:0
&gt; [    0.000000]   DMA32 zone: 10695 pages used for memmap
&gt; [    0.000000]   DMA32 zone: 771561 pages, LIFO batch:31
&gt; [    0.000000]   Normal zone: 0 pages used for memmap
&gt; [    0.000000]   Movable zone: 0 pages used for memmap
&gt; [    0.000000] Detected use of extended apic ids on hypertransport bus
&gt; [    0.000000] ACPI: PM-Timer IO Port: 0x4008
&gt; [    0.000000] ACPI: Local APIC address 0xfee00000
&gt; [    0.000000] ACPI: LAPIC (acpi_id[0x01] lapic_id[0x00] enabled)
&gt; [    0.000000] ACPI: LAPIC (acpi_id[0x02] lapic_id[0x01] enabled)
&gt; [    0.000000] ACPI: IOAPIC (id[0x02] address[0xfec00000] gsi_base[0])
&gt; [    0.000000] IOAPIC[0]: apic_id 2, version 0, address 0xfec00000, GSI 0-23
&gt; [    0.000000] ACPI: IOAPIC (id[0x03] address[0xfec10000] gsi_base[24])
&gt; [    0.000000] IOAPIC[1]: apic_id 3, version 0, address 0xfec10000, GSI 24-44
&gt; [    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
&gt; [    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 low level)
&gt; [    0.000000] ACPI: IRQ0 used by override.
&gt; [    0.000000] ACPI: IRQ2 used by override.
&gt; [    0.000000] ACPI: IRQ9 used by override.
&gt; [    0.000000] Setting APIC routing to flat
&gt; [    0.000000] ACPI: HPET id: 0x10b9a201 base: 0xfed00000
&gt; [    0.000000] Using ACPI (MADT) for SMP configuration information
&gt; [    0.000000] Allocating PCI resources starting at c4000000 (gap: \
&gt; c0000000:3f380000) [    0.000000] SMP: Allowing 2 CPUs, 0 hotplug CPUs
&gt; [    0.000000] PERCPU: Allocating 33860 bytes of per cpu data
&gt; [    0.000000] NR_CPUS: 2, nr_cpu_ids: 2
&gt; [4294014.506571] Built 1 zonelists in Zone order, mobility grouping on.  Total \
&gt; pages: 774451 [4294014.506571] Kernel command line: \
&gt; BOOT_IMAGE=(hd0,2)/vmlinuz-2.6.26-rc4 \
&gt; root=UUID=ee465ea1-394d-4dd2-a5f9-a35567176c40 ro quiet splash [4294014.506571] \
&gt; Initializing CPU#0 [4294014.506571] Preemptible RCU implementation.
&gt; [4294014.506571] PID hash table entries: 4096 (order: 12, 32768 bytes)
&gt; [4294014.506571] TSC calibrated against PM_TIMER
&gt; [4294014.506571] Marking TSC unstable due to TSCs unsynchronized
&gt; [4294014.506571] time.c: Detected 1999.972 MHz processor.
&gt; [4294014.506571] Console: colour VGA+ 80x25
&gt; [4294014.506571] console [tty0] enabled
&gt; [4294014.506571] Dentry cache hash table entries: 524288 (order: 10, 4194304 bytes)
&gt; [4294014.506571] Inode-cache hash table entries: 262144 (order: 9, 2097152 bytes)
&gt; [4294014.506571] Checking aperture...
&gt; [4294014.506571] Node 0: aperture @ b56a000000 size 32 MB
&gt; [4294014.506571] Aperture beyond 4GB. Ignoring.
&gt; [4294014.506571] No AGP bridge found
&gt; [4294014.506571] Memory: 3087728k/3145408k available (2085k kernel code, 56648k \
&gt; reserved, 948k data, 240k init) [4294014.506571] CPA: page pool initialized 1 of 1 \
&gt; pages preallocated [4294014.506571] SLUB: Genslabs=12, HWalign=64, Order=0-3, \
&gt; MinObjects=0, CPUs=2, Nodes=1 [4294014.506571] hpet clockevent registered
&gt; [4294014.566574] Calibrating delay using timer specific routine.. 4002.05 BogoMIPS \
&gt; (lpj=2001028) [4294014.566602] Mount-cache hash table entries: 256
&gt; [4294014.566737] CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K (64 bytes/line)
&gt; [4294014.566740] CPU: L2 Cache: 512K (64 bytes/line)
&gt; [4294014.566749] CPU: Physical Processor ID: 0
&gt; [4294014.566751] CPU: Processor Core ID: 0
&gt; [4294014.566772] ACPI: Core revision 20080321
&gt; [4294014.583515] CPU0: AMD Athlon(tm) 64 X2 Dual Core Processor 3800+ stepping 02
&gt; [4294014.583519] Using local APIC timer interrupts.
&gt; [4294014.584559] APIC timer calibration result 12499834
&gt; [4294014.584559] Detected 12.499 MHz APIC timer.
&gt; [4294014.584559] Booting processor 1/1 ip 6000
&gt; [4294014.594453] Initializing CPU#1
&gt; [4294014.594453] Calibrating delay using timer specific routine.. 3999.78 BogoMIPS \
&gt; (lpj=1999893) [4294014.594453] CPU: L1 I Cache: 64K (64 bytes/line), D cache 64K \
&gt; (64 bytes/line) [4294014.594453] CPU: L2 Cache: 512K (64 bytes/line)
&gt; [4294014.594453] CPU: Physical Processor ID: 0
&gt; [4294014.594453] CPU: Processor Core ID: 1
&gt; [4294014.594453] x86 PAT enabled: cpu 1, old 0x7040600070406, new 0x7010600070106
&gt; [4294014.655548] CPU1: AMD Athlon(tm) 64 X2 Dual Core Processor 3800+ stepping 02
&gt; [4294014.655548] Brought up 2 CPUs
&gt; [4294014.655548] Total of 2 processors activated (8001.84 BogoMIPS).
&gt; [4294014.655548] CPU0 attaching sched-domain:
&gt; [4294014.655548]  domain 0: span 0-1
&gt; [4294014.655548]   groups: 0 1
&gt; [4294014.655548] CPU1 attaching sched-domain:
&gt; [4294014.655548]  domain 0: span 0-1
&gt; [4294014.655548]   groups: 1 0
&gt; [4294014.655548] net_namespace: 1176 bytes
&gt; [4294014.655548] NET: Registered protocol family 16
&gt; [4294014.656548] No dock devices found.
&gt; [4294014.656548] node 0 link 0: io port [1000, ffffff]
&gt; [4294014.656548] TOM: 00000000c0000000 aka 3072M
&gt; [4294014.656548] node 0 link 0: mmio [e0000000, efffffff]
&gt; [4294014.656548] node 0 link 0: mmio [a0000, bffff]
&gt; [4294014.656548] node 0 link 0: mmio [c0000000, ffffffff]
&gt; [4294014.656548] bus: [00,ff] on node 0 link 0
&gt; [4294014.656548] bus: 00 index 0 io port: [0, ffff]
&gt; [4294014.656548] bus: 00 index 1 mmio: [c0000000, fcffffffff]
&gt; [4294014.656548] bus: 00 index 2 mmio: [a0000, bffff]
&gt; [4294014.656548] ACPI: bus type pci registered
&gt; [4294014.656548] PCI: MCFG configuration 0: base e0000000 segment 0 buses 0 - 255
&gt; [4294014.656548] PCI: Not using MMCONFIG.
&gt; [4294014.656548] PCI: Using configuration type 1 for base access
&gt; [4294014.658149] ACPI: EC: Look up EC in DSDT
&gt; [4294014.666546] ACPI: Interpreter enabled
&gt; [4294014.666546] ACPI: (supports S0 S1 S3 S5)
&gt; [4294014.666546] ACPI: Using IOAPIC for interrupt routing
&gt; [4294014.666546] PCI: MCFG configuration 0: base e0000000 segment 0 buses 0 - 255
&gt; [4294014.670545] PCI: MCFG area at e0000000 reserved in ACPI motherboard resources
&gt; [4294014.680931] PCI: Using MMCONFIG at e0000000 - efffffff
&gt; [4294014.689543] ACPI: PCI Root Bridge [PCI0] (0000:00)
&gt; [4294014.690002] pci 0000:00:15.1: quirk: region 4000-403f claimed by ali7101 ACPI
&gt; [4294014.690532] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
&gt; [4294014.690634] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PE2P._PRT]
&gt; [4294014.690634] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PEB1._PRT]
&gt; [4294014.690735] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PEB2._PRT]
&gt; [4294014.690831] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PEB3._PRT]
&gt; [4294014.690927] ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.PEB4._PRT]
&gt; [4294014.702633] ACPI: PCI Interrupt Link [LNKA] (IRQs 3 4 5 6 7 *10 11 12 14 15)
&gt; [4294014.702633] ACPI: PCI Interrupt Link [LNKB] (IRQs *3 4 5 6 7 10 11 12 14 15)
&gt; [4294014.702633] ACPI: PCI Interrupt Link [LNKC] (IRQs 3 4 5 6 7 *10 11 12 14 15)
&gt; [4294014.702633] ACPI: PCI Interrupt Link [LNKD] (IRQs 3 4 5 6 7 *10 11 12 14 15)
&gt; [4294014.702804] ACPI: PCI Interrupt Link [LNKE] (IRQs 3 4 5 6 7 10 *11 12 14 15)
&gt; [4294014.702971] ACPI: PCI Interrupt Link [LNKF] (IRQs 5 6 *10 11 12 14 15)
&gt; [4294014.703135] ACPI: PCI Interrupt Link [LNKG] (IRQs 3 4 5 6 7 *10 11 12 14 15)
&gt; [4294014.703297] ACPI: PCI Interrupt Link [LNKH] (IRQs 3 4 5 6 7 *10 11 12 14 15), \
&gt; disabled. [4294014.703463] ACPI: PCI Interrupt Link [LNKP] (IRQs 3 4 5 6 7 *10 11 \
&gt; 12 14 15) [4294014.703715] ACPI Warning (tbutils-0217): Incorrect checksum in table \
&gt; [OEMB] - 52, should be 25 [20080321] [4294014.703733] Linux Plug and Play Support \
&gt; v0.97 (c) Adam Belay [4294014.704632] pnp: PnP ACPI init
&gt; [4294014.704632] ACPI: bus type pnp registered
&gt; [4294014.708981] pnp: PnP ACPI: found 16 devices
&gt; [4294014.708984] ACPI: ACPI bus type pnp unregistered
&gt; [4294014.709632] SCSI subsystem initialized
&gt; [4294014.709632] libata version 3.00 loaded.
&gt; [4294014.709632] PCI: Using ACPI for IRQ routing
&gt; [4294014.719989] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
&gt; [4294014.719989] hpet0: 3 64-bit timers, 14318180 Hz
&gt; [4294014.720989] ACPI: RTC can wake from S4
&gt; [4294014.721854] Switched to high resolution mode on CPU 0
&gt; [4294014.722329] Switched to high resolution mode on CPU 1
&gt; [4294014.730896] system 00:08: ioport range 0x4d0-0x4d1 has been reserved
&gt; [4294014.730900] system 00:08: ioport range 0x4000-0x40bf could not be reserved
&gt; [4294014.730903] system 00:08: ioport range 0x40c0-0x40df has been reserved
&gt; [4294014.730906] system 00:08: ioport range 0x400-0x40f has been reserved
&gt; [4294014.730910] system 00:08: ioport range 0x480-0x48f has been reserved
&gt; [4294014.730914] system 00:08: iomem range 0xfff80000-0xffffffff could not be \
&gt; reserved [4294014.730917] system 00:08: iomem range 0xfec10000-0xfec10fff has been \
&gt; reserved [4294014.730920] system 00:08: iomem range 0xfe000000-0xfe0000ff has been \
&gt; reserved [4294014.730930] system 00:0a: iomem range 0xff380000-0xffffffff could not \
&gt; be reserved [4294014.730933] system 00:0a: iomem range 0xfec00000-0xfec00fff has \
&gt; been reserved [4294014.730936] system 00:0a: iomem range 0xfee00000-0xfee00fff has \
&gt; been reserved [4294014.730944] system 00:0d: ioport range 0x290-0x29f has been \
&gt; reserved [4294014.730954] system 00:0e: iomem range 0xe0000000-0xefffffff has been \
&gt; reserved [4294014.730964] system 00:0f: iomem range 0x0-0x9ffff could not be \
&gt; reserved [4294014.730967] system 00:0f: iomem range 0xc0000-0xcffff has been \
&gt; reserved [4294014.730970] system 00:0f: iomem range 0xe0000-0xfffff could not be \
&gt; reserved [4294014.730973] system 00:0f: iomem range 0x100000-0xbfffffff could not \
&gt; be reserved [4294014.730977] system 00:0f: iomem range 0x0-0xffffffffffffffff could \
&gt; not be reserved [4294014.731028] PCI: Bridge: 0000:00:01.0
&gt; [4294014.731028]   IO window: d000-dfff
&gt; [4294014.731028]   MEM window: 0xdc000000-0xdeefffff
&gt; [4294014.731028]   PREFETCH window: 0x00000000c0000000-0x00000000cfffffff
&gt; [4294014.731028] PCI: Bridge: 0000:00:02.0
&gt; [4294014.731028]   IO window: disabled.
&gt; [4294014.731028]   MEM window: disabled.
&gt; [4294014.731028]   PREFETCH window: 0x00000000dad00000-0x00000000dadfffff
&gt; [4294014.731028] PCI: Bridge: 0000:00:03.0
&gt; [4294014.731028]   IO window: disabled.
&gt; [4294014.731028]   MEM window: disabled.
&gt; [4294014.731028]   PREFETCH window: 0x00000000dae00000-0x00000000daefffff
&gt; [4294014.731028] PCI: Bridge: 0000:00:04.0
&gt; [4294014.731028]   IO window: disabled.
&gt; [4294014.731028]   MEM window: disabled.
&gt; [4294014.731028]   PREFETCH window: 0x00000000daf00000-0x00000000daffffff
&gt; [4294014.731028] PCI: Bridge: 0000:00:11.0
&gt; [4294014.731028]   IO window: e000-efff
&gt; [4294014.731028]   MEM window: 0xdef00000-0xdeffffff
&gt; [4294014.731028]   PREFETCH window: disabled.
&gt; [4294014.731028] ACPI: PCI Interrupt 0000:00:01.0[A] -&gt; GSI 29 (level, low) -&gt; IRQ \
&gt; 29 [4294014.731028] PCI: Setting latency timer of device 0000:00:01.0 to 64
&gt; [4294014.731028] ACPI: PCI Interrupt 0000:00:02.0[A] -&gt; GSI 34 (level, low) -&gt; IRQ \
&gt; 34 [4294014.731028] PCI: Setting latency timer of device 0000:00:02.0 to 64
&gt; [4294014.731028] ACPI: PCI Interrupt 0000:00:03.0[A] -&gt; GSI 39 (level, low) -&gt; IRQ \
&gt; 39 [4294014.731028] PCI: Setting latency timer of device 0000:00:03.0 to 64
&gt; [4294014.731028] ACPI: PCI Interrupt 0000:00:04.0[A] -&gt; GSI 44 (level, low) -&gt; IRQ \
&gt; 44 [4294014.731028] PCI: Setting latency timer of device 0000:00:04.0 to 64
&gt; [4294014.731028] PCI: Setting latency timer of device 0000:00:11.0 to 64
&gt; [4294014.731028] NET: Registered protocol family 2
&gt; [4294014.766931] IP route cache hash table entries: 131072 (order: 8, 1048576 \
&gt; bytes) [4294014.767962] TCP established hash table entries: 262144 (order: 10, \
&gt; 4194304 bytes) [4294014.770873] TCP bind hash table entries: 65536 (order: 8, \
&gt; 1048576 bytes) [4294014.771872] TCP: Hash tables configured (established 262144 \
&gt; bind 65536) [4294014.771872] TCP reno registered
&gt; [4294014.783041] checking if image is initramfs... it is
&gt; [4294015.045048] Freeing initrd memory: 3401k freed
&gt; [4294015.051986] JFS: nTxBlock = 8192, nTxLock = 65536
&gt; [4294015.055910] msgmni has been set to 6038 for ipc namespace ffffffff804de850
&gt; [4294015.055910] Block layer SCSI generic (bsg) driver version 0.4 loaded (major \
&gt; 253) [4294015.055910] io scheduler noop registered
&gt; [4294015.055910] io scheduler cfq registered (default)
&gt; [4294015.055910] pci 0000:00:00.0: Enabling HT MSI Mapping
&gt; [4294015.055910] pci 0000:00:01.0: Enabling HT MSI Mapping
&gt; [4294015.055910] pci 0000:00:02.0: Enabling HT MSI Mapping
&gt; [4294015.055910] pci 0000:00:03.0: Enabling HT MSI Mapping
&gt; [4294015.055910] pci 0000:00:04.0: Enabling HT MSI Mapping
&gt; [4294015.090159] pci 0000:01:00.0: Boot video device
&gt; [4294015.091091] PCI: Setting latency timer of device 0000:00:01.0 to 64
&gt; [4294015.091091] assign_interrupt_mode Found MSI capability
&gt; [4294015.091091] Allocate Port Service[0000:00:01.0:pcie00]
&gt; [4294015.091091] Allocate Port Service[0000:00:01.0:pcie01]
&gt; [4294015.091091] Allocate Port Service[0000:00:01.0:pcie03]
&gt; [4294015.091091] PCI: Setting latency timer of device 0000:00:02.0 to 64
&gt; [4294015.091091] assign_interrupt_mode Found MSI capability
&gt; [4294015.091091] Allocate Port Service[0000:00:02.0:pcie00]
&gt; [4294015.091091] Allocate Port Service[0000:00:02.0:pcie01]
&gt; [4294015.091091] Allocate Port Service[0000:00:02.0:pcie03]
&gt; [4294015.091091] PCI: Setting latency timer of device 0000:00:03.0 to 64
&gt; [4294015.091091] assign_interrupt_mode Found MSI capability
&gt; [4294015.091091] Allocate Port Service[0000:00:03.0:pcie00]
&gt; [4294015.091091] Allocate Port Service[0000:00:03.0:pcie01]
&gt; [4294015.091091] Allocate Port Service[0000:00:03.0:pcie03]
&gt; [4294015.091091] PCI: Setting latency timer of device 0000:00:04.0 to 64
&gt; [4294015.091091] assign_interrupt_mode Found MSI capability
&gt; [4294015.091091] Allocate Port Service[0000:00:04.0:pcie00]
&gt; [4294015.091091] Allocate Port Service[0000:00:04.0:pcie01]
&gt; [4294015.091091] Allocate Port Service[0000:00:04.0:pcie03]
&gt; [4294015.094486] Load service driver aer on pcie device 0000:00:01.0:pcie01
&gt; [4294015.096278] Load service driver aer on pcie device 0000:00:02.0:pcie01
&gt; [4294015.098374] Load service driver aer on pcie device 0000:00:03.0:pcie01
&gt; [4294015.101231] Load service driver aer on pcie device 0000:00:04.0:pcie01
&gt; [4294015.104250] hpet_resources: 0xfed00000 is busy
&gt; [4294015.104250] Linux agpgart interface v0.103
&gt; [4294015.106233] brd: module loaded
&gt; [4294015.106233] Driver 'sd' needs updating - please use bus_type methods
&gt; [4294015.106233] ahci 0000:00:16.1: version 3.0
&gt; [4294015.106233] ACPI: PCI Interrupt 0000:00:16.1[A] -&gt; GSI 21 (level, low) -&gt; IRQ \
&gt; 21 [4294016.107111] ahci 0000:00:16.1: AHCI 0001.0000 32 slots 4 ports 3 Gbps 0xf \
&gt; impl SATA mode [4294016.107116] ahci 0000:00:16.1: flags: ncq sntf ilck pm led clo \
&gt; pmp pio slum part  [4294016.108086] scsi0 : ahci
&gt; [4294016.108086] scsi1 : ahci
&gt; [4294016.108086] scsi2 : ahci
&gt; [4294016.108086] scsi3 : ahci
&gt; [4294016.109086] ata1: SATA max UDMA/133 abar m1024@0xdbfef400 port 0xdbfef500 irq \
&gt; 21 [4294016.109086] ata2: SATA max UDMA/133 abar m1024@0xdbfef400 port 0xdbfef580 \
&gt; irq 21 [4294016.109086] ata3: SATA max UDMA/133 abar m1024@0xdbfef400 port \
&gt; 0xdbfef600 irq 21 [4294016.109086] ata4: SATA max UDMA/133 abar m1024@0xdbfef400 \
&gt; port 0xdbfef680 irq 21 [4294016.413763] ata1: SATA link down (SStatus 0 SControl \
&gt; 300) [4294016.718761] ata2: SATA link down (SStatus 0 SControl 300)
&gt; [4294017.023761] ata3: SATA link down (SStatus 0 SControl 300)
&gt; [4294017.481760] ata4: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
&gt; [4294017.523746] ata4.00: ATA-7: ST3320620AS, 3.AAK, max UDMA/133
&gt; [4294017.523746] ata4.00: 625142448 sectors, multi 16: LBA48 NCQ (depth 31/32)
&gt; [4294017.542743] ata4.00: configured for UDMA/133
&gt; [4294017.509792] isa bounce pool size: 16 pages
&gt; [4294017.509792] scsi 3:0:0:0: Direct-Access     ATA      ST3320620AS      3.AA PQ: \
&gt; 0 ANSI: 5 [4294017.509792] sd 3:0:0:0: [sda] 625142448 512-byte hardware sectors \
&gt; (320073 MB) [4294017.509792] sd 3:0:0:0: [sda] Write Protect is off
&gt; [4294017.509792] sd 3:0:0:0: [sda] Mode Sense: 00 3a 00 00
&gt; [4294017.509792] sd 3:0:0:0: [sda] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294017.509792] sd 3:0:0:0: [sda] 625142448 512-byte \
&gt; hardware sectors (320073 MB) [4294017.509792] sd 3:0:0:0: [sda] Write Protect is \
&gt; off [4294017.509792] sd 3:0:0:0: [sda] Mode Sense: 00 3a 00 00
&gt; [4294017.509792] sd 3:0:0:0: [sda] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294017.509792]  sda: sda1 sda2 sda3 sda4 &lt; sda5 sda6 &gt;
&gt; [4294017.638996] sd 3:0:0:0: [sda] Attached SCSI disk
&gt; [4294017.638996] ACPI: PCI Interrupt 0000:00:16.0[A] -&gt; GSI 21 (level, low) -&gt; IRQ \
&gt; 21 [4294017.638996] scsi4 : pata_ali
&gt; [4294017.653998] scsi5 : pata_ali
&gt; [4294017.669599] ata5: PATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0xff00 irq 14
&gt; [4294017.669602] ata6: PATA max UDMA/133 cmd 0x170 ctl 0x376 bmdma 0xff08 irq 15
&gt; [4294017.995282] ata5.00: ATA-6: ST3160021A, 8.01, max UDMA/100
&gt; [4294017.995285] ata5.00: 312581808 sectors, multi 16: LBA48 
&gt; [4294017.995505] ata5.01: ATA-7: Maxtor 6Y080L0, YAR41BW0, max UDMA/133
&gt; [4294017.995507] ata5.01: 160086528 sectors, multi 16: LBA 
&gt; [4294018.001296] ata5.00: configured for UDMA/100
&gt; [4294018.007279] ata5.01: configured for UDMA/133
&gt; [4294018.161367] ata6.00: ATAPI: _NEC DVD_RW ND-3540A, 1.01, max UDMA/33
&gt; [4294018.161376] ata6.00: WARNING: ATAPI DMA disabled for reliablity issues.  It \
&gt; can be enabled [4294018.161379] ata6.00: WARNING: via pata_ali.atapi_dma modparam \
&gt; or corresponding sysfs node. [4294018.167300] ata6.00: configured for UDMA/33
&gt; [4294018.167300] scsi 4:0:0:0: Direct-Access     ATA      ST3160021A       8.01 PQ: \
&gt; 0 ANSI: 5 [4294018.167300] sd 4:0:0:0: [sdb] 312581808 512-byte hardware sectors \
&gt; (160042 MB) [4294018.167300] sd 4:0:0:0: [sdb] Write Protect is off
&gt; [4294018.167300] sd 4:0:0:0: [sdb] Mode Sense: 00 3a 00 00
&gt; [4294018.167300] sd 4:0:0:0: [sdb] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294018.167300] sd 4:0:0:0: [sdb] 312581808 512-byte \
&gt; hardware sectors (160042 MB) [4294018.167300] sd 4:0:0:0: [sdb] Write Protect is \
&gt; off [4294018.167300] sd 4:0:0:0: [sdb] Mode Sense: 00 3a 00 00
&gt; [4294018.167300] sd 4:0:0:0: [sdb] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294018.167300]  sdb: sdb1 sdb2 sdb3 sdb4 &lt; sdb5 sdb6 \
&gt; sdb7 &gt; [4294018.167301] sd 4:0:0:0: [sdb] Attached SCSI disk
&gt; [4294018.234378] scsi 4:0:1:0: Direct-Access     ATA      Maxtor 6Y080L0   YAR4 PQ: \
&gt; 0 ANSI: 5 [4294018.235319] sd 4:0:1:0: [sdc] 160086528 512-byte hardware sectors \
&gt; (81964 MB) [4294018.235319] sd 4:0:1:0: [sdc] Write Protect is off
&gt; [4294018.235319] sd 4:0:1:0: [sdc] Mode Sense: 00 3a 00 00
&gt; [4294018.235319] sd 4:0:1:0: [sdc] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294018.235319] sd 4:0:1:0: [sdc] 160086528 512-byte \
&gt; hardware sectors (81964 MB) [4294018.235319] sd 4:0:1:0: [sdc] Write Protect is off
&gt; [4294018.235319] sd 4:0:1:0: [sdc] Mode Sense: 00 3a 00 00
&gt; [4294018.235319] sd 4:0:1:0: [sdc] Write cache: enabled, read cache: enabled, \
&gt; doesn't support DPO or FUA [4294018.235319]  sdc: sdc1 sdc2 sdc3
&gt; [4294018.240319] sd 4:0:1:0: [sdc] Attached SCSI disk
&gt; [4294018.242223] scsi 5:0:0:0: CD-ROM            _NEC     DVD_RW ND-3540A  1.01 PQ: \
&gt; 0 ANSI: 5 [4294018.243223] PNP: PS/2 Controller [PNP0303:PS2K] at 0x60,0x64 irq 1
&gt; [4294018.243223] PNP: PS/2 appears to have AUX port disabled, if this is incorrect \
&gt; please boot with i8042.nopnp [4294018.243223] serio: i8042 KBD port at 0x60,0x64 \
&gt; irq 1 [4294018.243247] mice: PS/2 mouse device common for all mice
&gt; [4294018.271586] input: AT Translated Set 2 keyboard as \
&gt; /devices/platform/i8042/serio0/input/input0 [4294018.280588] rtc_cmos 00:02: rtc \
&gt; core: registered rtc_cmos as rtc0 [4294018.280588] rtc0: alarms up to one month
&gt; [4294018.280588] cpuidle: using governor ladder
&gt; [4294018.280588] cpuidle: using governor menu
&gt; [4294018.280588] TCP cubic registered
&gt; [4294018.280588] ieee80211: 802.11 data/management/control stack, git-1.1.13
&gt; [4294018.280588] ieee80211: Copyright (C) 2004-2005 Intel Corporation \
&gt; &lt;jketreno@linux.intel.com&gt; [4294018.280588] ieee80211_crypt: registered algorithm \
&gt; 'NULL' [4294018.280588] rtc_cmos 00:02: setting system clock to 2008-05-28 08:56:00 \
&gt; UTC (1211964960) [4294018.280588] Freeing unused kernel memory: 240k freed
&gt; [4294018.280618] Write protecting the kernel read-only data: 2828k
&gt; [4294019.437523] fuse init (API version 7.9)
&gt; [4294019.446192] ACPI: duty_cycle spans bit 4
&gt; [4294019.446523] ACPI: ACPI0007:00 is registered as cooling_device0
&gt; [4294019.446523] ACPI: ACPI0007:01 is registered as cooling_device1
&gt; [4294019.451660] NET: Registered protocol family 1
&gt; [4294019.594060] usbcore: registered new interface driver usbfs
&gt; [4294019.594123] usbcore: registered new interface driver hub
&gt; [4294019.596066] usbcore: registered new device driver usb
&gt; [4294019.596066] r8169 Gigabit Ethernet driver 2.2LK-NAPI loaded
&gt; [4294019.596066] ACPI: PCI Interrupt 0000:05:0b.0[A] -&gt; GSI 19 (level, low) -&gt; IRQ \
&gt; 19 [4294019.596315] eth0: RTL8110s at 0xffffc20000030c00, 00:4f:63:00:a4:73, XID \
&gt; 04000000 IRQ 19 [4294019.601061] ohci_hcd: 2006 August 04 USB 1.1 'Open' Host \
&gt; Controller (OHCI) Driver [4294019.601061] ACPI: PCI Interrupt 0000:00:13.0[A] -&gt; \
&gt; GSI 17 (level, low) -&gt; IRQ 17 [4294019.601061] ohci_hcd 0000:00:13.0: OHCI Host \
&gt; Controller [4294019.601076] ohci_hcd 0000:00:13.0: new USB bus registered, assigned \
&gt; bus number 1 [4294019.601100] ohci_hcd 0000:00:13.0: irq 17, io mem 0xdbfee000
&gt; [4294019.622812] sd 3:0:0:0: Attached scsi generic sg0 type 0
&gt; [4294019.622841] sd 4:0:0:0: Attached scsi generic sg1 type 0
&gt; [4294019.622865] sd 4:0:1:0: Attached scsi generic sg2 type 0
&gt; [4294019.622888] scsi 5:0:0:0: Attached scsi generic sg3 type 5
&gt; [4294019.654885] usb usb1: configuration #1 chosen from 1 choice
&gt; [4294019.654914] hub 1-0:1.0: USB hub found
&gt; [4294019.654927] hub 1-0:1.0: 3 ports detected
&gt; [4294019.675883] Floppy drive(s): fd0 is 1.44M
&gt; [4294019.690544] FDC 0 is a post-1991 82077
&gt; [4294019.757057] ACPI: PCI Interrupt 0000:00:13.1[B] -&gt; GSI 18 (level, low) -&gt; IRQ \
&gt; 18 [4294019.757057] ohci_hcd 0000:00:13.1: OHCI Host Controller
&gt; [4294019.757057] ohci_hcd 0000:00:13.1: new USB bus registered, assigned bus number \
&gt; 2 [4294019.757057] ohci_hcd 0000:00:13.1: irq 18, io mem 0xdbfed000
&gt; [4294019.809971] usb usb2: configuration #1 chosen from 1 choice
&gt; [4294019.810001] hub 2-0:1.0: USB hub found
&gt; [4294019.810011] hub 2-0:1.0: 3 ports detected
&gt; [4294019.911541] ACPI: PCI Interrupt 0000:00:13.2[C] -&gt; GSI 19 (level, low) -&gt; IRQ \
&gt; 19 [4294019.911541] ohci_hcd 0000:00:13.2: OHCI Host Controller
&gt; [4294019.911541] ohci_hcd 0000:00:13.2: new USB bus registered, assigned bus number \
&gt; 3 [4294019.911541] ohci_hcd 0000:00:13.2: irq 19, io mem 0xdbfec000
&gt; [4294019.964555] usb usb3: configuration #1 chosen from 1 choice
&gt; [4294019.964585] hub 3-0:1.0: USB hub found
&gt; [4294019.964596] hub 3-0:1.0: 3 ports detected
&gt; [4294019.975364] usb 1-2: new low speed USB device using ohci_hcd and address 2
&gt; [4294020.066385] ACPI: PCI Interrupt 0000:00:13.3[D] -&gt; GSI 23 (level, low) -&gt; IRQ \
&gt; 23 [4294020.066385] ehci_hcd 0000:00:13.3: EHCI Host Controller
&gt; [4294020.066385] ehci_hcd 0000:00:13.3: new USB bus registered, assigned bus number \
&gt; 4 [4294020.087400] ehci_hcd 0000:00:13.3: debug port 1
&gt; [4294020.087417] ehci_hcd 0000:00:13.3: irq 23, io mem 0xdbfef800
&gt; [4294020.101639] ehci_hcd 0000:00:13.3: USB 2.0 started, EHCI 1.00, driver 10 Dec \
&gt; 2004 [4294020.101729] usb usb4: configuration #1 chosen from 1 choice
&gt; [4294020.101757] hub 4-0:1.0: USB hub found
&gt; [4294020.101765] hub 4-0:1.0: 8 ports detected
&gt; [4294020.505794] usb 1-2: device not accepting address 2, error -62
&gt; [4294020.556569] hub 1-0:1.0: unable to enumerate USB device on port 2
&gt; [4294020.925197] hub 4-0:1.0: unable to enumerate USB device on port 2
&gt; [4294021.141297] hub 4-0:1.0: unable to enumerate USB device on port 8
&gt; [4294021.358691] usb 1-2: new low speed USB device using ohci_hcd and address 4
&gt; [4294021.505050] usb 1-2: configuration #1 chosen from 1 choice
&gt; [4294021.732057] usb 3-2: new full speed USB device using ohci_hcd and address 2
&gt; [4294021.897145] usb 3-2: configuration #1 chosen from 1 choice
&gt; [4294027.122417] uli526x: ULi M5261/M5263 net driver, version 0.9.3 (2005-7-29)
&gt; [4294027.122417] ACPI: PCI Interrupt 0000:00:12.0[A] -&gt; GSI 20 (level, low) -&gt; IRQ \
&gt; 20 [4294027.145416] eth1: ULi M5263 at pci0000:00:12.0, 00:13:8f:b3:14:a4, irq 20.
&gt; [4294027.152419] input: Power Button (FF) as \
&gt; /devices/LNXSYSTM:00/LNXPWRBN:00/input/input1 [4294027.158483] ACPI: Power Button \
&gt; (FF) [PWRF] [4294027.158617] input: Power Button (CM) as \
&gt; /devices/LNXSYSTM:00/device:00/PNP0C0C:00/input/input2 [4294027.167469] ACPI: Power \
&gt; Button (CM) [PWRB] [4294027.233616] ali15x3_smbus 0000:00:15.1: ALI15X3_smb region \
&gt; uninitialized - upgrade BIOS or use force_addr=0xaddr [4294027.233616] \
&gt; ali15x3_smbus 0000:00:15.1: ALI15X3 not detected, module not inserted. \
&gt; [4294027.250701] ali1535_smbus 0000:00:15.1: ALI1535_smb region uninitialized - \
&gt; upgrade BIOS? [4294027.250706] ali1535_smbus 0000:00:15.1: ALI1535 not detected, \
&gt; module not inserted. [4294027.433976] usblp0: USB Bidirectional printer dev 2 if 0 \
&gt; alt 0 proto 2 vid 0x03F0 pid 0x1904 [4294027.433976] usbcore: registered new \
&gt; interface driver usblp [4294027.449798] usbcore: registered new interface driver \
&gt; hiddev [4294027.455956] input: KYE NetScroll+ Traveler as \
&gt; /devices/pci0000:00/0000:00:13.0/usb1/1-2/1-2:1.0/input/input3 [4294027.462644] \
&gt; input,hidraw0: USB HID v1.10 Mouse [KYE NetScroll+ Traveler] on usb-0000:00:13.0-2 \
&gt; [4294027.462669] usbcore: registered new interface driver usbhid [4294027.462673] \
&gt; usbhid: v2.6:USB HID core driver [4294027.539417] ACPI: PCI Interrupt \
&gt; 0000:05:0a.0[A] -&gt; GSI 18 (level, low) -&gt; IRQ 18 [4294027.562595] phy0: Selected \
&gt; rate control algorithm 'pid' [4294027.590852] input: PC Speaker as \
&gt; /devices/platform/pcspkr/input/input4 [4294027.677079] Driver 'sr' needs updating - \
&gt; please use bus_type methods [4294027.681082] sr0: scsi3-mmc drive: 48x/48x writer \
&gt; cd/rw xa/form2 cdda tray [4294027.681082] Uniform CD-ROM driver Revision: 3.20
&gt; [4294027.681082] sr 5:0:0:0: Attached scsi CD-ROM sr0
&gt; [4294027.685552] Serial: 8250/16550 driver $Revision: 1.90 $ 4 ports, IRQ sharing \
&gt; enabled [4294027.686028] serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
&gt; [4294027.704444] 00:0c: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
&gt; [4294027.769735] parport_pc 00:06: reported by Plug and Play ACPI
&gt; [4294027.769735] parport0: PC-style at 0x378 (0x778), irq 7, dma 3 \
&gt; [PCSPP,TRISTATE,COMPAT,ECP,DMA] [4294027.900664] Registered led device: \
&gt; rt2500pci-phy0:radio [4294027.900929] udev: renamed network interface eth1 to eth0
&gt; [4294027.951195] udev: renamed network interface eth0_rename to eth1
&gt; [4294028.122821] ACPI: PCI Interrupt 0000:00:14.0[C] -&gt; GSI 22 (level, low) -&gt; IRQ \
&gt; 22 [4294028.132675] hda_codec: Unknown model for ALC883, trying auto-probe from \
&gt; BIOS... [4294028.806243] lp0: using parport0 (interrupt-driven).
&gt; [4294028.820714] w83627ehf: Found W83627EHG chip at 0x290
&gt; [4294028.977309] Adding 1992020k swap on /dev/sdb7.  Priority:1 extents:1 \
&gt; across:1992020k [4294029.014282] Adding 1020116k swap on /dev/sdc2.  Priority:1 \
&gt; extents:1 across:1020116k [4294031.457231] ip_tables: (C) 2000-2006 Netfilter Core \
&gt; Team [4294032.698611] nf_conntrack version 0.5.0 (16384 buckets, 65536 max)
&gt; [4294033.907220] powernow-k8: Found 1 AMD Athlon(tm) 64 X2 Dual Core Processor \
&gt; 3800+ processors (2 cpu cores) (version 2.20.00) [4294033.906944] powernow-k8:    0 \
&gt; : fid 0xc (2000 MHz), vid 0xa [4294033.906944] powernow-k8:    1 : fid 0xa (1800 \
&gt; MHz), vid 0xc [4294033.906944] powernow-k8:    2 : fid 0x2 (1000 MHz), vid 0x12
&gt; [4294035.793408] NET: Registered protocol family 10
&gt; [4294035.795734] lo: Disabled Privacy Extensions
&gt; [4294036.032974] warning: `avahi-daemon' uses 32-bit capabilities (legacy support \
&gt; in use) [4294037.729296] Clocksource tsc unstable (delta = -249471632 ns)
&gt; [4294042.180312] ADDRCONF(NETDEV_UP): eth0: link is not ready
&gt; [4294042.204390] r8169: eth1: link down
&gt; [4294042.205306] r8169: eth1: link down
&gt; [4294042.206416] ADDRCONF(NETDEV_UP): eth1: link is not ready
&gt; [4294042.231137] BUG: scheduling while atomic: S25bluetooth/4382/0x00010002
&gt; [4294042.231144] CPU 1:
&gt; [4294042.231146] Modules linked in: ipv6 container powernow_k8 cpufreq_userspace \
&gt; cpufreq_stats cpufreq_powersave cpufreq_ondemand freq_table cpufreq_conservative \
&gt; nf_conntrack_ftp nf_conntrack_irc xt_tcpudp ipt_ULOG xt_limit xt_state \
&gt; nf_conntrack_ipv4 nf_conntrack iptable_filter ip_tables x_tables kvm_amd kvm \
&gt; w83627ehf hwmon_vid lp snd_hda_intel snd_pcm_oss snd_mixer_oss arc4 snd_pcm ecb \
&gt; parport_pc parport crypto_blkcipher snd_mpu401 snd_mpu401_uart 8250_pnp 8250 \
&gt; serial_core snd_seq_dummy sr_mod cdrom cryptomgr crypto_algapi evdev snd_seq_oss \
&gt; pcspkr snd_seq_midi snd_rawmidi k8temp rt2500pci rt2x00pci rt2x00lib \
&gt; snd_seq_midi_event rfkill usbhid snd_seq led_class usblp ff_memless input_polldev \
&gt; mac80211 snd_timer snd_seq_device cfg80211 snd eeprom_93cx6 i2c_ali1535 i2c_ali15x3 \
&gt; soundcore snd_page_alloc i2c_core button uli526x floppy sg ata_generic ehci_hcd \
&gt; ohci_hcd r8169 usbcore unix thermal processor fan fuse [4294042.231224] Pid: 4382, \
&gt; comm: S25bluetooth Not tainted 2.6.26-rc4 #28 [4294042.231227] RIP: \
&gt; 0010:[&lt;ffffffff80265b99&gt;]  [&lt;ffffffff80265b99&gt;] free_pgd_range+0xbf/0x3c3 \
&gt; [4294042.231302] RSP: 0018:ffff8100b9f05bf8  EFLAGS: 00000286 [4294042.231306] RAX: \
&gt; ffff8100be51ba80 RBX: 0000000000400000 RCX: 00000000006f7000 [4294042.231309] RDX: \
&gt; 00007f0000000000 RSI: 0000000000400000 RDI: ffff8100b9f05cf0 [4294042.231312] RBP: \
&gt; 0000000000000080 R08: 00007f1f3d012000 R09: ffff8100b9e0d7f8 [4294042.231315] R10: \
&gt; ffff8100b9e0d7f8 R11: ffff8100bf593390 R12: 00000080bf592f18 [4294042.231319] R13: \
&gt; 0000000000000001 R14: 0000000000000080 R15: ffff8100b9f05c08 [4294042.231322] FS:  \
&gt; 00007f1f3d5756e0(0000) GS:ffff8100bf806580(0000) knlGS:0000000000000000 \
&gt; [4294042.231326] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b [4294042.231329] \
&gt; CR2: 0000000000617ee8 CR3: 00000000b9e0e000 CR4: 00000000000006e0 [4294042.231332] \
&gt; DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 [4294042.231335] \
&gt; DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400 [4294042.231338] 
&gt; [4294042.231339] Call Trace:
&gt; [4294042.231344]  [&lt;ffffffff80263b0e&gt;] ? unmap_vmas+0x4d4/0x792
&gt; [4294042.231363]  [&lt;ffffffff8026622e&gt;] ? free_pgtables+0x87/0x99
&gt; [4294042.231372]  [&lt;ffffffff802675b4&gt;] ? exit_mmap+0xa0/0x120
&gt; [4294042.231380]  [&lt;ffffffff8022bbe3&gt;] ? mmput+0x20/0xa4
&gt; [4294042.231386]  [&lt;ffffffff8027dcae&gt;] ? flush_old_exec+0x4b6/0x7cf
&gt; [4294042.231390]  [&lt;ffffffff80279ce6&gt;] ? vfs_read+0x10b/0x11f
&gt; [4294042.231399]  [&lt;ffffffff802a8a37&gt;] ? load_elf_binary+0x0/0x1738
&gt; [4294042.231405]  [&lt;ffffffff802a8da6&gt;] ? load_elf_binary+0x36f/0x1738
&gt; [4294042.231409]  [&lt;ffffffff802acc16&gt;] ? load_elf_binary+0x16bf/0x17e2
&gt; [4294042.231417]  [&lt;ffffffff80264dcc&gt;] ? get_user_pages+0x32f/0x389
&gt; [4294042.231427]  [&lt;ffffffff8027ca2c&gt;] ? get_arg_page+0x46/0xa5
&gt; [4294042.231437]  [&lt;ffffffff802a8a37&gt;] ? load_elf_binary+0x0/0x1738
&gt; [4294042.231443]  [&lt;ffffffff8027ce71&gt;] ? search_binary_handler+0xdb/0x21d
&gt; [4294042.231452]  [&lt;ffffffff8027e119&gt;] ? do_execve+0x152/0x1d6
&gt; [4294042.231461]  [&lt;ffffffff8020981a&gt;] ? sys_execve+0x35/0x53
&gt; [4294042.231468]  [&lt;ffffffff8020b59a&gt;] ? stub_execve+0x6a/0xc0
&gt; [4294042.231481] 
&gt; [4294042.244824] ADDRCONF(NETDEV_UP): wlan0: link is not ready
&gt; [4294042.352377] Bluetooth: Core ver 2.11
&gt; [4294042.358411] NET: Registered protocol family 31
&gt; [4294042.358416] Bluetooth: HCI device and connection manager initialized
&gt; [4294042.358421] Bluetooth: HCI socket layer initialized
&gt; [4294042.408932] Bluetooth: L2CAP ver 2.9
&gt; [4294042.408932] Bluetooth: L2CAP socket layer initialized
&gt; [4294042.427442] Bluetooth: RFCOMM socket layer initialized
&gt; [4294042.427460] Bluetooth: RFCOMM TTY layer initialized
&gt; [4294042.427463] Bluetooth: RFCOMM ver 1.8
&gt; [4294043.376174] NET: Registered protocol family 17
&gt; [4294045.202822] uli526x: eth0 NIC Link is Down
&gt; 

OK, that's nasty.  I'd say that there is a locking imbalance somewhere
in the bluetooth initalisation code and this resulted in the above
warning much later on.  otoh it might be somewhere in networking core,
given that it comes before bluetooth really gets going.

Ingo, I think you used to have a tool which would help us find this?

Thanks.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080401085846</emailId><senderName>"Dave Young"</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-04-01 08:58:46-0400</timestampReceived><subject>Re: bluetooth lockdep trace. (.25rc5-git4)</subject><body>

On Tue, Apr 1, 2008 at 4:59 PM, Dave Young &lt;hidave.darkstar@gmail.com&gt; wrote:
&gt; marcel@holtmann.org
&gt; Bcc:
&gt; Subject: Re: bluetooth lockdep trace. (.25rc5-git4)
&gt; Reply-To:
&gt; In-Reply-To: &lt;20080328.182021.46780895.davem@davemloft.net&gt;
&gt; 
&gt; On Fri, Mar 28, 2008 at 06:20:21PM -0700, David Miller wrote:
&gt; &gt; From: Dave Jones &lt;davej@codemonkey.org.uk&gt;
&gt; &gt; Date: Thu, 27 Mar 2008 12:21:56 -0400
&gt; &gt; 
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel: Pid: 3611, comm: obex-data-serve Not tainted \
&gt; &gt; &gt;                 2.6.25-0.121.rc5.git4.fc9 #1
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+2287/3089] \
&gt; &gt; &gt;                 __lock_acquire+0x8ef/0xc11
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [sched_clock+8/11] ? sched_clock+0x8/0xb
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_acquire+106/144] \
&gt; &gt; &gt;                 lock_acquire+0x6a/0x90
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt; &gt;                 [l2cap]
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+182/198] \
&gt; &gt; &gt;                 lock_sock_nested+0xb6/0xc6
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt; &gt;                 [l2cap]
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [security_socket_post_create+22/27] ? \
&gt; &gt; &gt;                 security_socket_post_create+0x16/0x1b
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [__sock_create+388/472] ? \
&gt; &gt; &gt;                 __sock_create+0x184/0x1d8
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] l2cap_sock_bind+0x29/0x108 \
&gt; &gt; &gt;                 [l2cap]
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [kernel_bind+10/13] kernel_bind+0xa/0xd
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dad3d7&gt;] rfcomm_dlc_open+0xc8/0x294 \
&gt; &gt; &gt;                 [rfcomm]
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+187/198] ? \
&gt; &gt; &gt;                 lock_sock_nested+0xbb/0xc6
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dae18c&gt;] rfcomm_sock_connect+0x8b/0xc2 \
&gt; &gt; &gt;                 [rfcomm]
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_connect+96/125] sys_connect+0x60/0x7d
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+1370/3089] ? \
&gt; &gt; &gt;                 __lock_acquire+0x55a/0xc11
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_socketcall+140/392] \
&gt; &gt; &gt;                 sys_socketcall+0x8c/0x188
&gt; &gt; &gt; Mar 27 08:10:57 localhost kernel:  [syscall_call+7/11] syscall_call+0x7/0xb
&gt; &gt; 
&gt; &gt; rfcomm connect locks the socket, then does rfcomm_dlc_open which in
&gt; &gt; turn can do a l2cap_sock_bind on a seperate second socket which in
&gt; &gt; turn locks that second socket.
&gt; &gt; 
&gt; &gt; Both of these sockets are AF_BLUETOOTH family, so lockdep thinks there
&gt; &gt; is a locking conflict, even though what is happening here is perfectly
&gt; &gt; fine since the two sockets are totally different AF_BLUETOOTH
&gt; &gt; sub-types.
&gt; &gt; 
&gt; &gt; Bluetooth will need to use sock_lock_init_class_and_name() and
&gt; &gt; lock sub-classes per AF_BLUETOOTH socket sub-type.
&gt; &gt; 
&gt; &gt; David, could you or someone else work on this?
&gt; 
&gt; Does this fix the problem?
&gt; 
&gt; ---
&gt; 'rfcomm connect' will trigger lockdep warnings which is caused by
&gt; locking diffrent kinds of bluetooth sockets at the same time.
&gt; 
&gt; So using sub-classes per AF_BLUETOOTH sub-type for lockdep.
&gt; 
&gt; Thanks for the hints from dave jones.
&gt; 
&gt; 
&gt; Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; 
&gt; ---
&gt; net/bluetooth/af_bluetooth.c |   40 ++++++++++++++++++++++++++++++++++++++++
&gt; 1 file changed, 40 insertions(+)
&gt; 
&gt; diff -upr linux/net/bluetooth/af_bluetooth.c linux.new/net/bluetooth/af_bluetooth.c
&gt; --- linux/net/bluetooth/af_bluetooth.c  2008-04-01 16:09:17.000000000 +0800
&gt; +++ linux.new/net/bluetooth/af_bluetooth.c      2008-04-01 16:08:52.000000000 +0800
&gt; @@ -53,6 +53,30 @@
&gt; /* Bluetooth sockets */
&gt; #define BT_MAX_PROTO   8
&gt; static struct net_proto_family *bt_proto[BT_MAX_PROTO];
&gt; +
&gt; +static struct lock_class_key bt_slock_key[BT_MAX_PROTO];
&gt; +static struct lock_class_key bt_lock_key[BT_MAX_PROTO];
&gt; +static const char *bt_key_strings[BT_MAX_PROTO] = {
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_HCI",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_SCO",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_BNEP",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_CMTP",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_HIDP",
&gt; +       "sk_lock-AF_BLUETOOTH-BTPROTO_AVDTP",
&gt; +};
&gt; +
&gt; +static const char *bt_slock_key_strings[BT_MAX_PROTO] = {
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_L2CAP",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_HCI",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_SCO",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_RFCOMM",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_BNEP",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_CMTP",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_HIDP",
&gt; +       "slock-AF_BLUETOOTH-BTPROTO_AVDTP",
&gt; +};
&gt; static DEFINE_RWLOCK(bt_proto_lock);
&gt; 
&gt; int bt_sock_register(int proto, struct net_proto_family *ops)
&gt; @@ -95,6 +119,21 @@ int bt_sock_unregister(int proto)
&gt; }
&gt; EXPORT_SYMBOL(bt_sock_unregister);
&gt; 
&gt; +static void bt_reclassify_sock_lock(struct socket *sock, int proto)
&gt; +{
&gt; +       struct sock *sk = sock-&gt;sk;
&gt; +
&gt; +       if (!sk)
&gt; +               return;
&gt; +       BUG_ON(sock_owned_by_user(sk));
&gt; +
&gt; +       sock_lock_init_class_and_name(sk,
&gt; +                       bt_slock_key_strings[proto],
&gt; +                       &amp;bt_slock_key[proto],
&gt; +                       bt_key_strings[proto],
&gt; +                       &amp;bt_lock_key[proto]);
&gt; +}
&gt; +
&gt; static int bt_sock_create(struct net *net, struct socket *sock, int proto)
&gt; {
&gt; int err;
&gt; @@ -117,6 +156,7 @@ static int bt_sock_create(struct net *ne
&gt; 
&gt; if (bt_proto[proto] &amp;&amp; try_module_get(bt_proto[proto]-&gt;owner)) {
&gt; err = bt_proto[proto]-&gt;create(net, sock, proto);
&gt; +               bt_reclassify_sock_lock(sock, proto);
&gt; module_put(bt_proto[proto]-&gt;owner);
&gt; }
&gt; 
&gt; 

Sorry, the subject was cut by my mistake, please don't mind.

Regards
dave
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080401085942</emailId><senderName>Dave Young</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-04-01 08:59:42-0400</timestampReceived><subject></subject><body>

marcel@holtmann.org
Bcc: 
Subject: Re: bluetooth lockdep trace. (.25rc5-git4)
Reply-To: 
In-Reply-To: &lt;20080328.182021.46780895.davem@davemloft.net&gt;

On Fri, Mar 28, 2008 at 06:20:21PM -0700, David Miller wrote:
&gt; From: Dave Jones &lt;davej@codemonkey.org.uk&gt;
&gt; Date: Thu, 27 Mar 2008 12:21:56 -0400
&gt; 
&gt; &gt; Mar 27 08:10:57 localhost kernel: Pid: 3611, comm: obex-data-serve Not tainted \
&gt; &gt;                 2.6.25-0.121.rc5.git4.fc9 #1
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+2287/3089] \
&gt; &gt;                 __lock_acquire+0x8ef/0xc11
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sched_clock+8/11] ? sched_clock+0x8/0xb
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_acquire+106/144] lock_acquire+0x6a/0x90
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+182/198] \
&gt; &gt;                 lock_sock_nested+0xb6/0xc6
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] ? l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [security_socket_post_create+22/27] ? \
&gt; &gt;                 security_socket_post_create+0x16/0x1b
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__sock_create+388/472] ? \
&gt; &gt;                 __sock_create+0x184/0x1d8
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8bd9321&gt;] l2cap_sock_bind+0x29/0x108 \
&gt; &gt;                 [l2cap]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [kernel_bind+10/13] kernel_bind+0xa/0xd
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dad3d7&gt;] rfcomm_dlc_open+0xc8/0x294 \
&gt; &gt;                 [rfcomm]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [lock_sock_nested+187/198] ? \
&gt; &gt;                 lock_sock_nested+0xbb/0xc6
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [&lt;f8dae18c&gt;] rfcomm_sock_connect+0x8b/0xc2 \
&gt; &gt;                 [rfcomm]
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_connect+96/125] sys_connect+0x60/0x7d
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [__lock_acquire+1370/3089] ? \
&gt; &gt;                 __lock_acquire+0x55a/0xc11
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [sys_socketcall+140/392] \
&gt; &gt;                 sys_socketcall+0x8c/0x188
&gt; &gt; Mar 27 08:10:57 localhost kernel:  [syscall_call+7/11] syscall_call+0x7/0xb
&gt; 
&gt; rfcomm connect locks the socket, then does rfcomm_dlc_open which in
&gt; turn can do a l2cap_sock_bind on a seperate second socket which in
&gt; turn locks that second socket.
&gt; 
&gt; Both of these sockets are AF_BLUETOOTH family, so lockdep thinks there
&gt; is a locking conflict, even though what is happening here is perfectly
&gt; fine since the two sockets are totally different AF_BLUETOOTH
&gt; sub-types.
&gt; 
&gt; Bluetooth will need to use sock_lock_init_class_and_name() and
&gt; lock sub-classes per AF_BLUETOOTH socket sub-type.
&gt; 
&gt; David, could you or someone else work on this?

Does this fix the problem?

---
'rfcomm connect' will trigger lockdep warnings which is caused by
locking diffrent kinds of bluetooth sockets at the same time.

So using sub-classes per AF_BLUETOOTH sub-type for lockdep.

Thanks for the hints from dave jones.


Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

---
net/bluetooth/af_bluetooth.c |   40 ++++++++++++++++++++++++++++++++++++++++
1 file changed, 40 insertions(+)

diff -upr linux/net/bluetooth/af_bluetooth.c linux.new/net/bluetooth/af_bluetooth.c
--- linux/net/bluetooth/af_bluetooth.c	2008-04-01 16:09:17.000000000 +0800
+++ linux.new/net/bluetooth/af_bluetooth.c	2008-04-01 16:08:52.000000000 +0800
@@ -53,6 +53,30 @@
 /* Bluetooth sockets */
 #define BT_MAX_PROTO	8
 static struct net_proto_family *bt_proto[BT_MAX_PROTO];
+
+static struct lock_class_key bt_slock_key[BT_MAX_PROTO];
+static struct lock_class_key bt_lock_key[BT_MAX_PROTO];
+static const char *bt_key_strings[BT_MAX_PROTO] = {
+	"sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_HCI",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_SCO",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_BNEP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_CMTP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_HIDP",
+	"sk_lock-AF_BLUETOOTH-BTPROTO_AVDTP",
+};
+
+static const char *bt_slock_key_strings[BT_MAX_PROTO] = {
+	"slock-AF_BLUETOOTH-BTPROTO_L2CAP",
+	"slock-AF_BLUETOOTH-BTPROTO_HCI",
+	"slock-AF_BLUETOOTH-BTPROTO_SCO",
+	"slock-AF_BLUETOOTH-BTPROTO_RFCOMM",
+	"slock-AF_BLUETOOTH-BTPROTO_BNEP",
+	"slock-AF_BLUETOOTH-BTPROTO_CMTP",
+	"slock-AF_BLUETOOTH-BTPROTO_HIDP",
+	"slock-AF_BLUETOOTH-BTPROTO_AVDTP",
+};
 static DEFINE_RWLOCK(bt_proto_lock);
 
 int bt_sock_register(int proto, struct net_proto_family *ops)
@@ -95,6 +119,21 @@ int bt_sock_unregister(int proto)
 }
 EXPORT_SYMBOL(bt_sock_unregister);
 
+static void bt_reclassify_sock_lock(struct socket *sock, int proto)
+{
+	struct sock *sk = sock-&gt;sk;
+
+	if (!sk)
+		return;
+	BUG_ON(sock_owned_by_user(sk));
+
+	sock_lock_init_class_and_name(sk,
+			bt_slock_key_strings[proto],
+			&amp;bt_slock_key[proto],
+			bt_key_strings[proto],
+			&amp;bt_lock_key[proto]);
+}
+
 static int bt_sock_create(struct net *net, struct socket *sock, int proto)
 {
 	int err;
@@ -117,6 +156,7 @@ static int bt_sock_create(struct net *ne
 
 	if (bt_proto[proto] &amp;&amp; try_module_get(bt_proto[proto]-&gt;owner)) {
 		err = bt_proto[proto]-&gt;create(net, sock, proto);
+		bt_reclassify_sock_lock(sock, proto);
 		module_put(bt_proto[proto]-&gt;owner);
 	}
 
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080402070006</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-04-02 07:00:06-0400</timestampReceived><subject>Re: [PATCH 1/2] bluetooth : use lockdep sub-classes for diffrent</subject><body>

From: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Date: Wed, 2 Apr 2008 13:59:56 +0800

&gt; 'rfcomm connect' will trigger lockdep warnings which is caused by
&gt; locking diffrent kinds of bluetooth sockets at the same time.
&gt; 
&gt; So using sub-classes per AF_BLUETOOTH sub-type for lockdep.
&gt; 
&gt; Thanks for the hints from dave jones.

Applied, thanks for following up on this Dave.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080402070017</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-04-02 07:00:17-0400</timestampReceived><subject>Re: [PATCH 2/2] bluetooth : __rfcomm_dlc_close lock fix</subject><body>

From: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Date: Wed, 2 Apr 2008 14:02:43 +0800

&gt; Lockdep warning will be trigged while rfcomm connection closing.
&gt; 
&gt; The locks taken in rfcomm_dev_add:
&gt; rfcomm_dev_lock --&gt; d-&gt;lock
&gt; 
&gt; In __rfcomm_dlc_close:
&gt; d-&gt;lock --&gt; rfcomm_dev_lock (in rfcomm_dev_state_change)
&gt; 
&gt; There's two way to fix it, one is in rfcomm_dev_add we first locking
&gt; d-&gt;lock then the rfcomm_dev_lock
&gt; 
&gt; The other (in this patch), remove the locking of d-&gt;lock for
&gt; rfcomm_dev_state_change because just locking "d-&gt;state = BT_CLOSED;"
&gt; is enough.

Also applied, thanks a lot Dave!
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080416210608</emailId><senderName></senderName><senderEmail>mario_limonciello@dell.com</senderEmail><timestampReceived>2008-04-16 21:06:08-0400</timestampReceived><subject>Add IDs for Dell BT370 &amp; BT410</subject><body>

Hello,

In order for the radios on the Dell BT370 &amp; BT410 cards to function,
these two quirks need to be added to hci_usb.c.  This, however, is only
half of the solution.  The cards will start-up in HID mode, and are
expected to be changed to HCI mode by a user space utility.  If you
would like to test the functionality with the quirks for these cards,
you will need to use this patch: (until it is accepted to bluez):

http://article.gmane.org/gmane.linux.bluez.devel/15605


X-Git-Url: http://kernel.ubuntu.com/git?p=ubuntu%
2Fubuntu-hardy.git;a=blobdiff_plain;f=drivers%2Fbluetooth%
2Fhci_usb.c;h=1225b5260a5572956b96ca319af0078498918fc2;hp=117070c53348563b215a3b5f18d2c6b4a5c4a629;hb=HEAD;hpb=771d0cc54dc1710c585d3ee29447ddfc92aec440


diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index 117070c..1225b52 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -132,6 +132,10 @@ static struct usb_device_id blacklist_ids[] = {
 
 	/* Dell laptop with Broadcom chip */
 	{ USB_DEVICE(0x413c, 0x8126), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	/* Dell Wireless 370 */
+	{ USB_DEVICE(0x413c, 0x8156), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
+	/* Dell Wireless 410 */
+	{ USB_DEVICE(0x413c, 0x8152), .driver_info = HCI_RESET | HCI_WRONG_SCO_MTU },
 
 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
 	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },


---
Mario Limonciello
Dell | Linux Engineering
mario_limonciello@dell.com


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080418020124</emailId><senderName>Stuart Longland</senderName><senderEmail>redhatter@gentoo.org</senderEmail><timestampReceived>2008-04-18 02:01:24-0400</timestampReceived><subject>Broadcom BCM2035B USB reports BD Addr: 00:00:00:00:00:00</subject><body>

Hi All,
	I've been trying to get a USB bluetooth dongle going recently, based on 
the Broadcom BCM2035B chipset.  It appeas from the surface that this 
chip is supported, however it seems this particular dongle is having 
difficulties working under Linux.

When the device is plugged in, `dmesg` reports:
 &gt; [...]
&gt; [ 2560.963622] usb 5-1: new full speed USB device using ohci_hcd and address 3
&gt; [ 2561.133938] usb 5-1: configuration #1 chosen from 1 choice
&gt; [ 2561.151391] usb 5-1: New USB device found, idVendor=0a5c, idProduct=2035
&gt; [ 2561.151403] usb 5-1: New USB device strings: Mfr=1, Product=2, SerialNumber=0
&gt; [ 2561.151409] usb 5-1: Product: BCM2035B
&gt; [ 2561.151414] usb 5-1: Manufacturer: Broadcom Corp
 &gt; [...]

The USB device description is as follows:
&gt; wander ~ # cat /proc/bus/usb/devices
&gt; [...]
&gt; T: Bus=01 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#= 5 Spd=12 MxCh= 0
&gt; D: Ver= 2.00 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs= 1
&gt; P: Vendor=0a5c ProdID=2035 Rev= 1.00
&gt; S: Manufacturer=Broadcom Corp
&gt; S: Product=BCM2035B
&gt; C:* #Ifs= 3 Cfg#= 1 Atr=a0 MxPwr=100mA
&gt; I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(unk. ) Sub=01 Prot=01 Driver=hci_usb
&gt; [...]


The kernel loads the hci-usb driver, and a hci0 device appears in sysfs. 
  However, the address is null:
&gt; wander ~ # cat /sys/bus/bluetooth/devices/hci0/address
&gt; 00:00:00:00:00:00

BlueZ utils (3.28) see the USB HCI adaptor, and can scan devices:
&gt; wander ~ # hciconfig
&gt; hci0: Type: USB
&gt; BD Address: 00:00:00:00:00:00 ACL MTU: 377:10 SCO MTU: 64:8
&gt; UP RUNNING PSCAN
&gt; RX bytes:982 acl:0 sco:0 events:28 errors:0
&gt; TX bytes:610 acl:0 sco:0 commands:28 errors:0

&gt; wander ~ # hcitool scan --flush
&gt; Scanning ...
&gt; 20:07:35:xx:xx:xx KF-700
&gt; 00:1E:E1:xx:xx:xx SGH-A412

I have the BlueZ firmware package installed, however the bcm203x module 
seems to completely ignore the dongle, and no firmware is loaded.  (I 
understand this module is used with the BCM2033.  The name suggests it 
should also handle other 203x devices, such as the 2035.  I assume I'm 
mistaken?)

I haven't been able to pair any devices with my laptop.  I've also tried 
this dongle on an old PII laptop, and a Lemote Fulong minicomputer, with 
identical results.  My laptop is running kernel 2.6.25-rc6, the older 
laptop is running -rc8, and the Lemote computer is running kernel 2.6.23.

Is there anything I should try?  I'm not sure how to enable the 
debugging in the Bluetooth stack.  It would appear that this device is 
very close to actually working.  While I could go and buy another dongle 
(I don't really have the money), I'd much prefer to fix the driver so 
the device actually works.
-- 
Stuart Longland (aka Redhatter)              .'''.
Gentoo Linux/MIPS Cobalt and Docs Developer  '.'` :
. . . . . . . . . . . . . . . . . . . . . .   .'.'
http://dev.gentoo.org/~redhatter             :.'

I haven't lost my mind...
   ...it's backed up on a tape somewhere.


["signature.asc" (application/pgp-signature)]
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080419012501</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-19 01:25:01-0400</timestampReceived><subject>Re: [patch 3/3] hci_usb.h: fix hard-to-trigger race</subject><body>

Hi Andrew,

&gt;&gt;&gt; If someone tries to _urb_unlink while _urb_queue_head is running,
&gt;&gt;&gt; he'll see
&gt;&gt;&gt; _urb-&gt;queue == NULL and fail to do any locking.  Prevent that from
&gt;&gt;&gt; happening
&gt;&gt;&gt; by strategically placed barriers.
&gt;&gt;
&gt;&gt; let me repeat this, the hci_usb driver is not worth fixing. Doing our
&gt;&gt; own URB handling is a bad idea. The btusb driver should fix all of
&gt;&gt; this. Only exception is that it is missing all the quirks, but that
&gt;&gt; was me being lazy.
&gt;&gt;
&gt;
&gt; ok...  But as long as the old code is buildable and installable, we  
&gt; should
&gt; fix bugs in it?

I am okay with it and happy to accept any fixes, but to be quite  
honest, that this driver still works is in some cases pure luck. Doing  
the URB handling by ourself is really simply plain work. No excuses  
here and parts of it is my fault. I know that. Hence I started a new  
implementation from scratch.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419161842</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-19 16:18:42-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

On Wed 2008-04-16 10:19:15, Max Krasnyanskiy wrote:
&gt; Pavel Machek wrote:
&gt;&gt; On Wed 2008-04-16 13:51:37, Vitaliy Ivanov wrote:
&gt;&gt;&gt; On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt;&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; Got it from the first time;)
&gt;&gt;&gt;
&gt;&gt;&gt; Do you think that now code looks better? As for me it's not...
&gt;&gt;
&gt;&gt; Yes. Hiding &amp; operator deep inside macro is evil for one thing. Plus
&gt;&gt; it is no longer clear what the code does with the macros in there.
&gt;
&gt; In general I would agree in this case it seems to actually make code 
&gt; clearer (I prefer original macros that is).
&gt; Anyway, I do not mind the change.
&gt;
&gt; btw Marcel told me that all this queuing stuff does not actually make sense 
&gt; anymore. USB core did not support this before and HCI driver performance 
&gt; sucked without it. Marcel is telling me that things have changed.
&gt; So. Pavel, while you're at it can you maybe whack that stuff out completely ?
&gt; I mean all this custom _urb stuff that I did was eventually supposed to 
&gt; move into usb core. Then I stopped working on Bluetooth and it never 
&gt; happened. It'd be nice to clean that up since it seems that most of the 
&gt; latest bug reports are related to this urb business.

It seems someone already done that in (mainline) btusb.c

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419175740</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-19 17:57:40-0400</timestampReceived><subject>Re: [patch] document hci_usb as broken</subject><body>

Hi!

&gt;&gt; index 075598e..20d9279 100644
&gt;&gt; --- a/drivers/bluetooth/Kconfig
&gt;&gt; +++ b/drivers/bluetooth/Kconfig
&gt;&gt; @@ -3,13 +3,16 @@ menu "Bluetooth device drivers"
&gt;&gt; 	depends on BT
&gt;&gt;
&gt;&gt; config BT_HCIUSB
&gt;&gt; -	tristate "HCI USB driver"
&gt;&gt; +	tristate "HCI USB driver (dangerous, use alternate driver below)"
&gt;&gt; 	depends on USB
&gt;&gt; 	help
&gt;&gt; 	  Bluetooth HCI USB driver.
&gt;&gt; 	  This driver is required if you want to use Bluetooth devices with
&gt;&gt; 	  USB interface.
&gt;&gt;
&gt;&gt; +	  Unfortunately, locking in this driver is fatally broken; it will
&gt;&gt; +	  corrupt memory on surprise disconnect and during resume.
&gt;&gt; +
&gt;&gt; 	  Say Y here to compile support for Bluetooth USB devices into the
&gt;&gt; 	  kernel or say M to compile it as module (hci_usb).
&gt;
&gt; this would be fine with me. Acked-by: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;
&gt;&gt; diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
&gt;&gt; index 192522e..6cc96b4 100644
&gt;&gt; --- a/drivers/bluetooth/hci_usb.c
&gt;&gt; +++ b/drivers/bluetooth/hci_usb.c
&gt;&gt; @@ -1,8 +1,22 @@
&gt;&gt; -/*
&gt;&gt; +/*
&gt;&gt; +
&gt;&gt; +    This driver has fatally broken locking.
&gt;&gt; +
&gt;&gt; +    DO NOT USE.
&gt;&gt; +
&gt;&gt; +    See btusb.c for cleaner / shorter / actually working driver.
&gt;
&gt; NAK to this hunk. Not needed. The Kconfig help is enough.

Developers trying to debug hci_usb problems will nor see the help
text, since they probably have it enabled in their .config already and
will not be asked again...

								Pavel

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080420011414</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-04-20 01:14:14-0400</timestampReceived><subject>Re: [patch 1/3] hci_usb: do not initialize static variables to 0</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;
Date: Sat, 19 Apr 2008 18:12:45 +0200

&gt; According to you noone should read this one, anyway :-)... and this
&gt; wastes space in vmlinux.

This is getting rediculious :-)

I've applied this patch.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080420011659</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-04-20 01:16:59-0400</timestampReceived><subject>Re: [patch 2/3] hci_usb: remove code obfuscation</subject><body>

From: akpm@linux-foundation.org
Date: Fri, 18 Apr 2008 13:46:53 -0700

&gt; _urb_free is an alias for kfree... making code longer &amp; harder to
&gt; read. Remove it.
&gt; 
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;

As long as the code is in the tree, we should accept
simplifications that aid to code understanding.

Marking drivers broken or deprecated or to-be-replaced is
a secondary concern.

Therefore I'm applying this patch, thanks Pavel.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080402060243</emailId><senderName>Dave Young</senderName><senderEmail>hidave.darkstar@gmail.com</senderEmail><timestampReceived>2008-04-02 06:02:43-0400</timestampReceived><subject>[PATCH 2/2] bluetooth : __rfcomm_dlc_close lock fix</subject><body>

Lockdep warning will be trigged while rfcomm connection closing.

The locks taken in rfcomm_dev_add:
rfcomm_dev_lock --&gt; d-&gt;lock

In __rfcomm_dlc_close:
d-&gt;lock --&gt; rfcomm_dev_lock (in rfcomm_dev_state_change)

There's two way to fix it, one is in rfcomm_dev_add we first locking
d-&gt;lock then the rfcomm_dev_lock

The other (in this patch), remove the locking of d-&gt;lock for
rfcomm_dev_state_change because just locking "d-&gt;state = BT_CLOSED;"
is enough.

[  295.002046] =======================================================
[  295.002046] [ INFO: possible circular locking dependency detected ]
[  295.002046] 2.6.25-rc7 #1
[  295.002046] -------------------------------------------------------
[  295.002046] krfcommd/2705 is trying to acquire lock:
[  295.002046]  (rfcomm_dev_lock){-.--}, at: [&lt;f89a090a&gt;] rfcomm_dev_state_change+0x6a/0xd0 [rfcomm]
[  295.002046] 
[  295.002046] but task is already holding lock:
[  295.002046]  (&amp;d-&gt;lock){--..}, at: [&lt;f899c533&gt;] __rfcomm_dlc_close+0x43/0xd0 [rfcomm]
[  295.002046] 
[  295.002046] which lock already depends on the new lock.
[  295.002046] 
[  295.002046] 
[  295.002046] the existing dependency chain (in reverse order) is:
[  295.002046] 
[  295.002046] -&gt; #1 (&amp;d-&gt;lock){--..}:
[  295.002046]        [&lt;c0149b23&gt;] check_prev_add+0xd3/0x200
[  295.002046]        [&lt;c0149ce5&gt;] check_prevs_add+0x95/0xe0
[  295.002046]        [&lt;c0149f6f&gt;] validate_chain+0x23f/0x320
[  295.002046]        [&lt;c014b7b1&gt;] __lock_acquire+0x1c1/0x760
[  295.002046]        [&lt;c014c349&gt;] lock_acquire+0x79/0xb0
[  295.002046]        [&lt;c03d6b99&gt;] _spin_lock+0x39/0x80
[  295.002046]        [&lt;f89a01c0&gt;] rfcomm_dev_add+0x240/0x360 [rfcomm]
[  295.002046]        [&lt;f89a047e&gt;] rfcomm_create_dev+0x6e/0xe0 [rfcomm]
[  295.002046]        [&lt;f89a0823&gt;] rfcomm_dev_ioctl+0x33/0x60 [rfcomm]
[  295.002046]        [&lt;f899facc&gt;] rfcomm_sock_ioctl+0x2c/0x50 [rfcomm]
[  295.002046]        [&lt;c0363d38&gt;] sock_ioctl+0x118/0x240
[  295.002046]        [&lt;c0194196&gt;] vfs_ioctl+0x76/0x90
[  295.002046]        [&lt;c0194446&gt;] do_vfs_ioctl+0x56/0x140
[  295.002046]        [&lt;c0194569&gt;] sys_ioctl+0x39/0x60
[  295.002046]        [&lt;c0104faa&gt;] syscall_call+0x7/0xb
[  295.002046]        [&lt;ffffffff&gt;] 0xffffffff
[  295.002046] 
[  295.002046] -&gt; #0 (rfcomm_dev_lock){-.--}:
[  295.002046]        [&lt;c0149a84&gt;] check_prev_add+0x34/0x200
[  295.002046]        [&lt;c0149ce5&gt;] check_prevs_add+0x95/0xe0
[  295.002046]        [&lt;c0149f6f&gt;] validate_chain+0x23f/0x320
[  295.002046]        [&lt;c014b7b1&gt;] __lock_acquire+0x1c1/0x760
[  295.002046]        [&lt;c014c349&gt;] lock_acquire+0x79/0xb0
[  295.002046]        [&lt;c03d6639&gt;] _read_lock+0x39/0x80
[  295.002046]        [&lt;f89a090a&gt;] rfcomm_dev_state_change+0x6a/0xd0 [rfcomm]
[  295.002046]        [&lt;f899c548&gt;] __rfcomm_dlc_close+0x58/0xd0 [rfcomm]
[  295.002046]        [&lt;f899d44f&gt;] rfcomm_recv_ua+0x6f/0x120 [rfcomm]
[  295.002046]        [&lt;f899e061&gt;] rfcomm_recv_frame+0x171/0x1e0 [rfcomm]
[  295.002046]        [&lt;f899e357&gt;] rfcomm_run+0xe7/0x550 [rfcomm]
[  295.002046]        [&lt;c013c18c&gt;] kthread+0x5c/0xa0
[  295.002046]        [&lt;c0105c07&gt;] kernel_thread_helper+0x7/0x10
[  295.002046]        [&lt;ffffffff&gt;] 0xffffffff
[  295.002046] 
[  295.002046] other info that might help us debug this:
[  295.002046] 
[  295.002046] 2 locks held by krfcommd/2705:
[  295.002046]  #0:  (rfcomm_mutex){--..}, at: [&lt;f899e2eb&gt;] rfcomm_run+0x7b/0x550 [rfcomm]
[  295.002046]  #1:  (&amp;d-&gt;lock){--..}, at: [&lt;f899c533&gt;] __rfcomm_dlc_close+0x43/0xd0 [rfcomm]
[  295.002046] 
[  295.002046] stack backtrace:
[  295.002046] Pid: 2705, comm: krfcommd Not tainted 2.6.25-rc7 #1
[  295.002046]  [&lt;c0128a38&gt;] ? printk+0x18/0x20
[  295.002046]  [&lt;c014927f&gt;] print_circular_bug_tail+0x6f/0x80
[  295.002046]  [&lt;c0149a84&gt;] check_prev_add+0x34/0x200
[  295.002046]  [&lt;c0149ce5&gt;] check_prevs_add+0x95/0xe0
[  295.002046]  [&lt;c0149f6f&gt;] validate_chain+0x23f/0x320
[  295.002046]  [&lt;c014b7b1&gt;] __lock_acquire+0x1c1/0x760
[  295.002046]  [&lt;c014c349&gt;] lock_acquire+0x79/0xb0
[  295.002046]  [&lt;f89a090a&gt;] ? rfcomm_dev_state_change+0x6a/0xd0 [rfcomm]
[  295.002046]  [&lt;c03d6639&gt;] _read_lock+0x39/0x80
[  295.002046]  [&lt;f89a090a&gt;] ? rfcomm_dev_state_change+0x6a/0xd0 [rfcomm]
[  295.002046]  [&lt;f89a090a&gt;] rfcomm_dev_state_change+0x6a/0xd0 [rfcomm]
[  295.002046]  [&lt;f899c548&gt;] __rfcomm_dlc_close+0x58/0xd0 [rfcomm]
[  295.002046]  [&lt;f899d44f&gt;] rfcomm_recv_ua+0x6f/0x120 [rfcomm]
[  295.002046]  [&lt;f899e061&gt;] rfcomm_recv_frame+0x171/0x1e0 [rfcomm]
[  295.002046]  [&lt;c014abd9&gt;] ? trace_hardirqs_on+0xb9/0x130
[  295.002046]  [&lt;c03d6e89&gt;] ? _spin_unlock_irqrestore+0x39/0x70
[  295.002046]  [&lt;f899e357&gt;] rfcomm_run+0xe7/0x550 [rfcomm]
[  295.002046]  [&lt;c03d4559&gt;] ? __sched_text_start+0x229/0x4c0
[  295.002046]  [&lt;c0120000&gt;] ? cpu_avg_load_per_task+0x20/0x30
[  295.002046]  [&lt;f899e270&gt;] ? rfcomm_run+0x0/0x550 [rfcomm]
[  295.002046]  [&lt;c013c18c&gt;] kthread+0x5c/0xa0
[  295.002046]  [&lt;c013c130&gt;] ? kthread+0x0/0xa0
[  295.002046]  [&lt;c0105c07&gt;] kernel_thread_helper+0x7/0x10
[  295.002046]  =======================

Signed-off-by: Dave Young &lt;hidave.darkstar@gmail.com&gt;

---
net/bluetooth/rfcomm/core.c |    2 +-
net/bluetooth/rfcomm/tty.c  |    5 -----
2 files changed, 1 insertion(+), 6 deletions(-)

diff -upr linux/net/bluetooth/rfcomm/core.c linux.new/net/bluetooth/rfcomm/core.c
--- linux/net/bluetooth/rfcomm/core.c	2008-04-02 13:01:24.000000000 +0800
+++ linux.new/net/bluetooth/rfcomm/core.c	2008-04-02 13:01:39.000000000 +0800
@@ -423,8 +423,8 @@ static int __rfcomm_dlc_close(struct rfc
 
 		rfcomm_dlc_lock(d);
 		d-&gt;state = BT_CLOSED;
-		d-&gt;state_change(d, err);
 		rfcomm_dlc_unlock(d);
+		d-&gt;state_change(d, err);
 
 		skb_queue_purge(&amp;d-&gt;tx_queue);
 		rfcomm_dlc_unlink(d);
diff -upr linux/net/bluetooth/rfcomm/tty.c linux.new/net/bluetooth/rfcomm/tty.c
--- linux/net/bluetooth/rfcomm/tty.c	2008-04-01 17:52:42.000000000 +0800
+++ linux.new/net/bluetooth/rfcomm/tty.c	2008-04-02 13:02:56.000000000 +0800
@@ -570,12 +570,7 @@ static void rfcomm_dev_state_change(stru
 					return;
 
 				rfcomm_dev_del(dev);
-				/* We have to drop DLC lock here, otherwise
-				   rfcomm_dev_put() will dead lock if it's
-				   the last reference. */
-				rfcomm_dlc_unlock(dlc);
 				rfcomm_dev_put(dev);
-				rfcomm_dlc_lock(dlc);
 			}
 		} else
 			tty_hangup(dev-&gt;tty);
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20080418204654</emailId><senderName></senderName><senderEmail>akpm</senderEmail><timestampReceived>2008-04-18 20:46:54-0400</timestampReceived><subject>[patch 3/3] hci_usb.h: fix hard-to-trigger race</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;

If someone tries to _urb_unlink while _urb_queue_head is running, he'll see
_urb-&gt;queue == NULL and fail to do any locking.  Prevent that from happening
by strategically placed barriers.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
---

 drivers/bluetooth/hci_usb.h |   21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff -puN drivers/bluetooth/hci_usb.h~hci_usbh-fix-hard-to-trigger-race drivers/bluetooth/hci_usb.h
--- a/drivers/bluetooth/hci_usb.h~hci_usbh-fix-hard-to-trigger-race
+++ a/drivers/bluetooth/hci_usb.h
@@ -70,7 +70,8 @@ static inline void _urb_queue_head(struc
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	list_add(&amp;_urb-&gt;list, &amp;q-&gt;head); _urb-&gt;queue = q;
+	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
+	_urb-&gt;queue = q; mb(); list_add(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
@@ -78,19 +79,23 @@ static inline void _urb_queue_tail(struc
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;q-&gt;lock, flags);
-	list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head); _urb-&gt;queue = q;
+	/* _urb_unlink needs to know which spinlock to use, thus mb(). */
+	_urb-&gt;queue = q; mb(); list_add_tail(&amp;_urb-&gt;list, &amp;q-&gt;head);
 	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
 static inline void _urb_unlink(struct _urb *_urb)
 {
-	struct _urb_queue *q = _urb-&gt;queue;
+	struct _urb_queue *q;
 	unsigned long flags;
-	if (q) {
-		spin_lock_irqsave(&amp;q-&gt;lock, flags);
-		list_del(&amp;_urb-&gt;list); _urb-&gt;queue = NULL;
-		spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
-	}
+
+	mb();
+	q = _urb-&gt;queue;
+	/* If q is NULL, it will die at easy-to-debug NULL pointer dereference.
+	   No need to BUG(). */
+	spin_lock_irqsave(&amp;q-&gt;lock, flags);
+	list_del(&amp;_urb-&gt;list); _urb-&gt;queue = NULL;
+	spin_unlock_irqrestore(&amp;q-&gt;lock, flags);
 }
 
 struct hci_usb {
_
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416104257</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-16 10:42:57-0400</timestampReceived><subject>hci_usb: remove macro code obfuscation</subject><body>


I had trouble figuring out what the code does. atomic_inc/dec
management is actually pretty simple, but it is needlessly obfuscated
with macros. Fix that.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;

I had trouble figuring out what the code does. atomic_inc/dec
management is actually pretty simple, but it is needlessly obfuscated
with macros. Fix that.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;

---
commit 88c139ba08abddb52636e0ac25af0cabf8345e54
tree 30f9fd7c7051e63edaaa24a93ad9686492a0bc63
parent 43cfc0427c14f482e36adac447409c82b5cbbe09
author Pavel &lt;pavel@amd.ucw.cz&gt; Wed, 16 Apr 2008 12:42:32 +0200
committer Pavel &lt;pavel@amd.ucw.cz&gt; Wed, 16 Apr 2008 12:42:32 +0200

 drivers/bluetooth/hci_usb.c |   41 ++++++++++++++++++-----------------------
 1 files changed, 18 insertions(+), 23 deletions(-)

diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index 2597f63..6e0efc7 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -201,14 +201,9 @@ static struct _urb *_urb_dequeue(struct 
 static void hci_usb_rx_complete(struct urb *urb);
 static void hci_usb_tx_complete(struct urb *urb);
 
-#define __pending_tx(husb, type)  (&amp;husb-&gt;pending_tx[type-1])
-#define __pending_q(husb, type)   (&amp;husb-&gt;pending_q[type-1])
-#define __completed_q(husb, type) (&amp;husb-&gt;completed_q[type-1])
-#define __transmit_q(husb, type)  (&amp;husb-&gt;transmit_q[type-1])
-
 static inline struct _urb *__get_completed(struct hci_usb *husb, int type)
 {
-	return _urb_dequeue(__completed_q(husb, type)); 
+	return _urb_dequeue(&amp;husb-&gt;completed_q[type-1]); 
 }
 
 #ifdef CONFIG_BT_HCIUSB_SCO
@@ -254,7 +249,7 @@ static int hci_usb_intr_rx_submit(struct
 		return -ENOMEM;
 	}
 	_urb-&gt;type = HCI_EVENT_PKT;
-	_urb_queue_tail(__pending_q(husb, _urb-&gt;type), _urb);
+	_urb_queue_tail(&amp;husb-&gt;pending_q[_urb-&gt;type-1], _urb);
 
 	urb = &amp;_urb-&gt;urb;
 	pipe     = usb_rcvintpipe(husb-&gt;udev, husb-&gt;intr_in_ep-&gt;desc.bEndpointAddress);
@@ -289,7 +284,7 @@ static int hci_usb_bulk_rx_submit(struct
 		return -ENOMEM;
 	}
 	_urb-&gt;type = HCI_ACLDATA_PKT;
-	_urb_queue_tail(__pending_q(husb, _urb-&gt;type), _urb);
+	_urb_queue_tail(&amp;husb-&gt;pending_q[_urb-&gt;type-1], _urb);
 
 	urb  = &amp;_urb-&gt;urb;
 	pipe = usb_rcvbulkpipe(husb-&gt;udev, husb-&gt;bulk_in_ep-&gt;desc.bEndpointAddress);
@@ -330,7 +325,7 @@ static int hci_usb_isoc_rx_submit(struct
 		return -ENOMEM;
 	}
 	_urb-&gt;type = HCI_SCODATA_PKT;
-	_urb_queue_tail(__pending_q(husb, _urb-&gt;type), _urb);
+	_urb_queue_tail(&amp;husb-&gt;pending_q[_urb-&gt;type-1], _urb);
 
 	urb = &amp;_urb-&gt;urb;
 
@@ -423,7 +418,7 @@ static void hci_usb_unlink_urbs(struct h
 			BT_DBG("%s unlinking _urb %p type %d urb %p", 
 					husb-&gt;hdev-&gt;name, _urb, _urb-&gt;type, urb);
 			usb_kill_urb(urb);
-			_urb_queue_tail(__completed_q(husb, _urb-&gt;type), _urb);
+			_urb_queue_tail(&amp;husb-&gt;completed_q[_urb-&gt;type-1], _urb);
 		}
 
 		/* Release completed requests */
@@ -474,15 +469,15 @@ static int __tx_submit(struct hci_usb *h
 
 	BT_DBG("%s urb %p type %d", husb-&gt;hdev-&gt;name, urb, _urb-&gt;type);
 
-	_urb_queue_tail(__pending_q(husb, _urb-&gt;type), _urb);
+	_urb_queue_tail(&amp;husb-&gt;pending_q[_urb-&gt;type-1], _urb);
 	err = usb_submit_urb(urb, GFP_ATOMIC);
 	if (err) {
 		BT_ERR("%s tx submit failed urb %p type %d err %d",
 				husb-&gt;hdev-&gt;name, urb, _urb-&gt;type, err);
 		_urb_unlink(_urb);
-		_urb_queue_tail(__completed_q(husb, _urb-&gt;type), _urb);
+		_urb_queue_tail(&amp;husb-&gt;completed_q[_urb-&gt;type-1], _urb);
 	} else
-		atomic_inc(__pending_tx(husb, _urb-&gt;type));
+		atomic_inc(&amp;husb-&gt;pending_tx[_urb-&gt;type-1]);
 
 	return err;
 }
@@ -594,8 +589,8 @@ static void hci_usb_tx_process(struct hc
 		clear_bit(HCI_USB_TX_WAKEUP, &amp;husb-&gt;state);
 
 		/* Process command queue */
-		q = __transmit_q(husb, HCI_COMMAND_PKT);
-		if (!atomic_read(__pending_tx(husb, HCI_COMMAND_PKT)) &amp;&amp;
+		q = &amp;husb-&gt;transmit_q[HCI_COMMAND_PKT-1];
+		if (!atomic_read(&amp;husb-&gt;pending_tx[HCI_COMMAND_PKT-1]) &amp;&amp;
 				(skb = skb_dequeue(q))) {
 			if (hci_usb_send_ctrl(husb, skb) &lt; 0)
 				skb_queue_head(q, skb);
@@ -603,8 +598,8 @@ static void hci_usb_tx_process(struct hc
 
 #ifdef CONFIG_BT_HCIUSB_SCO
 		/* Process SCO queue */
-		q = __transmit_q(husb, HCI_SCODATA_PKT);
-		if (atomic_read(__pending_tx(husb, HCI_SCODATA_PKT)) &lt; HCI_MAX_ISOC_TX &amp;&amp;
+		q = &amp;husb-&gt;transmit_q[HCI_SCODATA_PKT-1];
+		if (atomic_read(&amp;husb-&gt;pending_tx[HCI_SCODATA_PKT-1]) &lt; HCI_MAX_ISOC_TX &amp;&amp;
 				(skb = skb_dequeue(q))) {
 			if (hci_usb_send_isoc(husb, skb) &lt; 0)
 				skb_queue_head(q, skb);
@@ -612,8 +607,8 @@ #ifdef CONFIG_BT_HCIUSB_SCO
 #endif
 
 		/* Process ACL queue */
-		q = __transmit_q(husb, HCI_ACLDATA_PKT);
-		while (atomic_read(__pending_tx(husb, HCI_ACLDATA_PKT)) &lt; HCI_MAX_BULK_TX &amp;&amp;
+		q = &amp;husb-&gt;transmit_q[HCI_ACLDATA_PKT-1];
+		while (atomic_read(&amp;husb-&gt;pending_tx[HCI_ACLDATA_PKT-1]) &lt; HCI_MAX_BULK_TX &amp;&amp;
 				(skb = skb_dequeue(q))) {
 			if (hci_usb_send_bulk(husb, skb) &lt; 0) {
 				skb_queue_head(q, skb);
@@ -675,7 +670,7 @@ #endif
 
 	read_lock(&amp;husb-&gt;completion_lock);
 
-	skb_queue_tail(__transmit_q(husb, bt_cb(skb)-&gt;pkt_type), skb);
+	skb_queue_tail(&amp;husb-&gt;transmit_q[bt_cb(skb)-&gt;pkt_type-1], skb);
 	hci_usb_tx_wakeup(husb);
 
 	read_unlock(&amp;husb-&gt;completion_lock);
@@ -752,7 +747,7 @@ static void hci_usb_tx_complete(struct u
 		return;
 
 	/* _urb may have been already cleared by hci_usb_unlink_urbs */
-	atomic_dec(__pending_tx(husb, _urb-&gt;type));
+	atomic_dec(&amp;husb-&gt;pending_tx[_urb-&gt;type-1]);
 
 	urb-&gt;transfer_buffer = NULL;
 	kfree_skb((struct sk_buff *) _urb-&gt;priv);
@@ -765,7 +760,7 @@ static void hci_usb_tx_complete(struct u
 	read_lock(&amp;husb-&gt;completion_lock);
 
 	_urb_unlink(_urb);
-	_urb_queue_tail(__completed_q(husb, _urb-&gt;type), _urb);
+	_urb_queue_tail(&amp;husb-&gt;completed_q[_urb-&gt;type-1], _urb);
 
 	hci_usb_tx_wakeup(husb);
 


-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416105137</emailId><senderName>"Vitaliy Ivanov"</senderName><senderEmail>vitalivanov@gmail.com</senderEmail><timestampReceived>2008-04-16 10:51:37-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt;
&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;  with macros. Fix that.
&gt;
&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;
&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;  with macros. Fix that.
&gt;
&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;


Got it from the first time;)

Do you think that now code looks better? As for me it's not...

V&gt;
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419164947</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-19 16:49:47-0400</timestampReceived><subject>[patch] document hci_usb as broken</subject><body>

Hi!

&gt;&gt; ok...  But as long as the old code is buildable and installable, we should
&gt;&gt; fix bugs in it?
&gt;
&gt; I am okay with it and happy to accept any fixes, but to be quite honest, 
&gt; that this driver still works is in some cases pure luck. Doing the URB 
&gt; handling by ourself is really simply plain work. No excuses here and parts 
&gt; of it is my fault. I know that. Hence I started a new implementation from 
&gt; scratch.

Ok, so I guess this is good idea... (I'd prefer previous race patch to
still be applied; but driver is broken even with that fix...)

I thought about adding &amp;&amp; BROKEN to Kconfig...

---

hci_usb is fatally broken, document it as such.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;

diff --git a/drivers/bluetooth/Kconfig b/drivers/bluetooth/Kconfig
index 075598e..20d9279 100644
--- a/drivers/bluetooth/Kconfig
+++ b/drivers/bluetooth/Kconfig
@@ -3,13 +3,16 @@ menu "Bluetooth device drivers"
 	depends on BT
 
 config BT_HCIUSB
-	tristate "HCI USB driver"
+	tristate "HCI USB driver (dangerous, use alternate driver below)"
 	depends on USB
 	help
 	  Bluetooth HCI USB driver.
 	  This driver is required if you want to use Bluetooth devices with
 	  USB interface.
 
+	  Unfortunately, locking in this driver is fatally broken; it will
+	  corrupt memory on surprise disconnect and during resume.
+
 	  Say Y here to compile support for Bluetooth USB devices into the
 	  kernel or say M to compile it as module (hci_usb).
 
diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
index 192522e..6cc96b4 100644
--- a/drivers/bluetooth/hci_usb.c
+++ b/drivers/bluetooth/hci_usb.c
@@ -1,8 +1,22 @@
-/* 
+/*
+
+    This driver has fatally broken locking.
+
+    DO NOT USE.
+
+    See btusb.c for cleaner / shorter / actually working driver.
+
+
+
+
+
+
+
+
+ 
    HCI USB driver for Linux Bluetooth protocol stack (BlueZ)
    Copyright (C) 2000-2001 Qualcomm Incorporated
    Written 2000,2001 by Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;
-
    Copyright (C) 2003 Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;
 
    This program is free software; you can redistribute it and/or modify

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418204651</emailId><senderName></senderName><senderEmail>akpm</senderEmail><timestampReceived>2008-04-18 20:46:51-0400</timestampReceived><subject>[patch 1/3] hci_usb: do not initialize static variables to 0</subject><body>

From: Pavel Machek &lt;pavel@ucw.cz&gt;

hci_usb: do not initialize static variables to 0.

Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
---

 drivers/bluetooth/hci_usb.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff -puN drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize-static-variables-to-0 \
                drivers/bluetooth/hci_usb.c
--- a/drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize-static-variables-to-0
+++ a/drivers/bluetooth/hci_usb.c
@@ -62,13 +62,13 @@
 #define URB_ZERO_PACKET 0
 #endif
 
-static int ignore = 0;
-static int ignore_dga = 0;
-static int ignore_csr = 0;
-static int ignore_sniffer = 0;
-static int disable_scofix = 0;
-static int force_scofix = 0;
-static int reset = 0;
+static int ignore;
+static int ignore_dga;
+static int ignore_csr;
+static int ignore_sniffer;
+static int disable_scofix;
+static int force_scofix;
+static int reset;
 
 #ifdef CONFIG_BT_HCIUSB_SCO
 static int isoc = 2;
_
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20080418210457</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-18 21:04:57-0400</timestampReceived><subject>Re: [patch 1/3] hci_usb: do not initialize static variables to 0</subject><body>

Hi Andrew,

&gt; hci_usb: do not initialize static variables to 0.
&gt;
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt; ---
&gt;
&gt; drivers/bluetooth/hci_usb.c |   14 +++++++-------
&gt; 1 file changed, 7 insertions(+), 7 deletions(-)
&gt;
&gt; diff -puN drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize- 
&gt; static-variables-to-0 drivers/bluetooth/hci_usb.c
&gt; --- a/drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize-static- 
&gt; variables-to-0
&gt; +++ a/drivers/bluetooth/hci_usb.c
&gt; @@ -62,13 +62,13 @@
&gt; #define URB_ZERO_PACKET 0
&gt; #endif
&gt;
&gt; -static int ignore = 0;
&gt; -static int ignore_dga = 0;
&gt; -static int ignore_csr = 0;
&gt; -static int ignore_sniffer = 0;
&gt; -static int disable_scofix = 0;
&gt; -static int force_scofix = 0;
&gt; -static int reset = 0;
&gt; +static int ignore;
&gt; +static int ignore_dga;
&gt; +static int ignore_csr;
&gt; +static int ignore_sniffer;
&gt; +static int disable_scofix;
&gt; +static int force_scofix;
&gt; +static int reset;

I know that some people don't like to do it and I agree, but in case  
of module parameters, I prefer to have them clearly indicate what the  
default value is. It is a lot easier to read for other people looking  
at the code. So that one is a NAK from my side.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419161245</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-19 16:12:45-0400</timestampReceived><subject>Re: [patch 1/3] hci_usb: do not initialize static variables to 0</subject><body>

On Fri 2008-04-18 23:04:57, Marcel Holtmann wrote:
&gt; Hi Andrew,
&gt;
&gt;&gt; hci_usb: do not initialize static variables to 0.
&gt;&gt;
&gt;&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt; Cc: Marcel Holtmann &lt;marcel@holtmann.org&gt;
&gt;&gt; Cc: Dave Young &lt;hidave.darkstar@gmail.com&gt;
&gt;&gt; Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;
&gt;&gt; ---
&gt;&gt;
&gt;&gt; drivers/bluetooth/hci_usb.c |   14 +++++++-------
&gt;&gt; 1 file changed, 7 insertions(+), 7 deletions(-)
&gt;&gt;
&gt;&gt; diff -puN 
&gt;&gt; drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize-static-variables-to-0 
&gt;&gt; drivers/bluetooth/hci_usb.c
&gt;&gt; --- 
&gt;&gt; a/drivers/bluetooth/hci_usb.c~hci_usb-do-not-initialize-static-variables-to-0
&gt;&gt; +++ a/drivers/bluetooth/hci_usb.c
&gt;&gt; @@ -62,13 +62,13 @@
&gt;&gt; #define URB_ZERO_PACKET 0
&gt;&gt; #endif
&gt;&gt;
&gt;&gt; -static int ignore = 0;
&gt;&gt; -static int ignore_dga = 0;
&gt;&gt; -static int ignore_csr = 0;
&gt;&gt; -static int ignore_sniffer = 0;
&gt;&gt; -static int disable_scofix = 0;
&gt;&gt; -static int force_scofix = 0;
&gt;&gt; -static int reset = 0;
&gt;&gt; +static int ignore;
&gt;&gt; +static int ignore_dga;
&gt;&gt; +static int ignore_csr;
&gt;&gt; +static int ignore_sniffer;
&gt;&gt; +static int disable_scofix;
&gt;&gt; +static int force_scofix;
&gt;&gt; +static int reset;
&gt;
&gt; I know that some people don't like to do it and I agree, but in case of 
&gt; module parameters, I prefer to have them clearly indicate what the default 
&gt; value is. It is a lot easier to read for other people looking at the code. 
&gt; So that one is a NAK from my side.

According to you noone should read this one, anyway :-)... and this
wastes space in vmlinux.
									Pavel	

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080419174018</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-19 17:40:18-0400</timestampReceived><subject>Re: [patch] document hci_usb as broken</subject><body>

Hi Pavel,

&gt;&gt;&gt; ok...  But as long as the old code is buildable and installable,  
&gt;&gt;&gt; we should
&gt;&gt;&gt; fix bugs in it?
&gt;&gt;
&gt;&gt; I am okay with it and happy to accept any fixes, but to be quite  
&gt;&gt; honest,
&gt;&gt; that this driver still works is in some cases pure luck. Doing the  
&gt;&gt; URB
&gt;&gt; handling by ourself is really simply plain work. No excuses here  
&gt;&gt; and parts
&gt;&gt; of it is my fault. I know that. Hence I started a new  
&gt;&gt; implementation from
&gt;&gt; scratch.
&gt;
&gt; Ok, so I guess this is good idea... (I'd prefer previous race patch to
&gt; still be applied; but driver is broken even with that fix...)
&gt;
&gt; I thought about adding &amp;&amp; BROKEN to Kconfig...
&gt;
&gt; ---
&gt;
&gt; hci_usb is fatally broken, document it as such.
&gt;
&gt; Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;
&gt; diff --git a/drivers/bluetooth/Kconfig b/drivers/bluetooth/Kconfig
&gt; index 075598e..20d9279 100644
&gt; --- a/drivers/bluetooth/Kconfig
&gt; +++ b/drivers/bluetooth/Kconfig
&gt; @@ -3,13 +3,16 @@ menu "Bluetooth device drivers"
&gt; 	depends on BT
&gt;
&gt; config BT_HCIUSB
&gt; -	tristate "HCI USB driver"
&gt; +	tristate "HCI USB driver (dangerous, use alternate driver below)"
&gt; 	depends on USB
&gt; 	help
&gt; 	  Bluetooth HCI USB driver.
&gt; 	  This driver is required if you want to use Bluetooth devices with
&gt; 	  USB interface.
&gt;
&gt; +	  Unfortunately, locking in this driver is fatally broken; it will
&gt; +	  corrupt memory on surprise disconnect and during resume.
&gt; +
&gt; 	  Say Y here to compile support for Bluetooth USB devices into the
&gt; 	  kernel or say M to compile it as module (hci_usb).

this would be fine with me. Acked-by: Marcel Holtmann &lt;marcel@holtmann.org 
 &gt;

&gt; diff --git a/drivers/bluetooth/hci_usb.c b/drivers/bluetooth/hci_usb.c
&gt; index 192522e..6cc96b4 100644
&gt; --- a/drivers/bluetooth/hci_usb.c
&gt; +++ b/drivers/bluetooth/hci_usb.c
&gt; @@ -1,8 +1,22 @@
&gt; -/*
&gt; +/*
&gt; +
&gt; +    This driver has fatally broken locking.
&gt; +
&gt; +    DO NOT USE.
&gt; +
&gt; +    See btusb.c for cleaner / shorter / actually working driver.

NAK to this hunk. Not needed. The Kconfig help is enough.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416105855</emailId><senderName>Pavel Machek</senderName><senderEmail>pavel@ucw.cz</senderEmail><timestampReceived>2008-04-16 10:58:55-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

On Wed 2008-04-16 13:51:37, Vitaliy Ivanov wrote:
&gt; On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt; &gt;
&gt; &gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt; &gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt; &gt;  with macros. Fix that.
&gt; &gt;
&gt; &gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; &gt;
&gt; &gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt; &gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt; &gt;  with macros. Fix that.
&gt; &gt;
&gt; &gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; 
&gt; 
&gt; Got it from the first time;)
&gt; 
&gt; Do you think that now code looks better? As for me it's not...

Yes. Hiding &amp; operator deep inside macro is evil for one thing. Plus
it is no longer clear what the code does with the macros in there.
									Pavel

-- 
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416171915</emailId><senderName>Max Krasnyanskiy</senderName><senderEmail>maxk@qualcomm.com</senderEmail><timestampReceived>2008-04-16 17:19:15-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

Pavel Machek wrote:
&gt; On Wed 2008-04-16 13:51:37, Vitaliy Ivanov wrote:
&gt;&gt; On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;
&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;&gt;
&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;
&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;
&gt;&gt; Got it from the first time;)
&gt;&gt;
&gt;&gt; Do you think that now code looks better? As for me it's not...
&gt; 
&gt; Yes. Hiding &amp; operator deep inside macro is evil for one thing. Plus
&gt; it is no longer clear what the code does with the macros in there.

In general I would agree in this case it seems to actually make code clearer 
(I prefer original macros that is).
Anyway, I do not mind the change.

btw Marcel told me that all this queuing stuff does not actually make sense 
anymore. USB core did not support this before and HCI driver performance 
sucked without it. Marcel is telling me that things have changed.
So. Pavel, while you're at it can you maybe whack that stuff out completely ?
I mean all this custom _urb stuff that I did was eventually supposed to move 
into usb core. Then I stopped working on Bluetooth and it never happened. It'd 
be nice to clean that up since it seems that most of the latest bug reports 
are related to this urb business.

Thanx
Max



--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416182909</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-04-16 18:29:09-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

On Wed, 16 Apr 2008 13:51:37 +0300
"Vitaliy Ivanov" &lt;vitalivanov@gmail.com&gt; wrote:

&gt; On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt; &gt;
&gt; &gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt; &gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt; &gt;  with macros. Fix that.
&gt; &gt;
&gt; &gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; &gt;
&gt; &gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt; &gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt; &gt;  with macros. Fix that.
&gt; &gt;
&gt; &gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt; 
&gt; 
&gt; Got it from the first time;)
&gt; 
&gt; Do you think that now code looks better? As for me it's not...
&gt; 

Yes, I expect that the original code was easier to work with and it is not
obfuscated I don't think.  Sometimes these things take a few minutes for
new readers to become comfortable with but are good for people who work on
the code regularly.

Although it's a mystery why __pending_tx() and friends

a) have leading underscores and

b) are implemented in cpp, when C is available.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416183741</emailId><senderName>Max Krasnyanskiy</senderName><senderEmail>maxk@qualcomm.com</senderEmail><timestampReceived>2008-04-16 18:37:41-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

Andrew Morton wrote:
&gt; On Wed, 16 Apr 2008 13:51:37 +0300
&gt; "Vitaliy Ivanov" &lt;vitalivanov@gmail.com&gt; wrote:
&gt; 
&gt;&gt; On Wed, Apr 16, 2008 at 1:42 PM, Pavel Machek &lt;pavel@ucw.cz&gt; wrote:
&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;
&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;&gt;
&gt;&gt;&gt;  I had trouble figuring out what the code does. atomic_inc/dec
&gt;&gt;&gt;  management is actually pretty simple, but it is needlessly obfuscated
&gt;&gt;&gt;  with macros. Fix that.
&gt;&gt;&gt;
&gt;&gt;&gt;  Signed-off-by: Pavel Machek &lt;pavel@suse.cz&gt;
&gt;&gt;
&gt;&gt; Got it from the first time;)
&gt;&gt;
&gt;&gt; Do you think that now code looks better? As for me it's not...
&gt;&gt;
&gt; 
&gt; Yes, I expect that the original code was easier to work with and it is not
&gt; obfuscated I don't think.  Sometimes these things take a few minutes for
&gt; new readers to become comfortable with but are good for people who work on
&gt; the code regularly.
&gt; 
&gt; Although it's a mystery why __pending_tx() and friends
&gt; 
&gt; a) have leading underscores and
At the time I wrote it, it made sense (to me :)) but it's been such a long 
time ago I would not remember. Probably to show that this is something 
internal and needs to be used with caution.

&gt; 
&gt; b) are implemented in cpp, when C is available.
&gt; 
I'm not sure what you mean ? #define vs inline I suppose ?

Max
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080416201048</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-04-16 20:10:48-0400</timestampReceived><subject>Re: hci_usb: remove macro code obfuscation</subject><body>

On Wed, 16 Apr 2008 11:37:41 -0700
Max Krasnyanskiy &lt;maxk@qualcomm.com&gt; wrote:

&gt; &gt; 
&gt; &gt; b) are implemented in cpp, when C is available.
&gt; &gt; 
&gt; I'm not sure what you mean ? #define vs inline I suppose ?

yup.

I have a stdrant about this which I should write down permanently sometime.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418211012</emailId><senderName>Marcel Holtmann</senderName><senderEmail>marcel@holtmann.org</senderEmail><timestampReceived>2008-04-18 21:10:12-0400</timestampReceived><subject>Re: [patch 3/3] hci_usb.h: fix hard-to-trigger race</subject><body>

Hi Andrew,

&gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt;
&gt; If someone tries to _urb_unlink while _urb_queue_head is running,  
&gt; he'll see
&gt; _urb-&gt;queue == NULL and fail to do any locking.  Prevent that from  
&gt; happening
&gt; by strategically placed barriers.

let me repeat this, the hci_usb driver is not worth fixing. Doing our  
own URB handling is a bad idea. The btusb driver should fix all of  
this. Only exception is that it is missing all the quirks, but that  
was me being lazy.

Regards

Marcel

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418212153</emailId><senderName>Andrew Morton</senderName><senderEmail>akpm@linux-foundation.org</senderEmail><timestampReceived>2008-04-18 21:21:53-0400</timestampReceived><subject>Re: [patch 3/3] hci_usb.h: fix hard-to-trigger race</subject><body>

On Fri, 18 Apr 2008 23:10:12 +0200
Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:

&gt; Hi Andrew,
&gt; 
&gt; &gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt; &gt;
&gt; &gt; If someone tries to _urb_unlink while _urb_queue_head is running,  
&gt; &gt; he'll see
&gt; &gt; _urb-&gt;queue == NULL and fail to do any locking.  Prevent that from  
&gt; &gt; happening
&gt; &gt; by strategically placed barriers.
&gt; 
&gt; let me repeat this, the hci_usb driver is not worth fixing. Doing our  
&gt; own URB handling is a bad idea. The btusb driver should fix all of  
&gt; this. Only exception is that it is missing all the quirks, but that  
&gt; was me being lazy.
&gt; 

ok...  But as long as the old code is buildable and installable, we should
fix bugs in it?

--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20080418224107</emailId><senderName>David Miller</senderName><senderEmail>davem@davemloft.net</senderEmail><timestampReceived>2008-04-18 22:41:07-0400</timestampReceived><subject>Re: [patch 3/3] hci_usb.h: fix hard-to-trigger race</subject><body>

From: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Date: Fri, 18 Apr 2008 14:21:53 -0700

&gt; On Fri, 18 Apr 2008 23:10:12 +0200
&gt; Marcel Holtmann &lt;marcel@holtmann.org&gt; wrote:
&gt; 
&gt; &gt; Hi Andrew,
&gt; &gt; 
&gt; &gt; &gt; From: Pavel Machek &lt;pavel@ucw.cz&gt;
&gt; &gt; &gt;
&gt; &gt; &gt; If someone tries to _urb_unlink while _urb_queue_head is running,  
&gt; &gt; &gt; he'll see
&gt; &gt; &gt; _urb-&gt;queue == NULL and fail to do any locking.  Prevent that from  
&gt; &gt; &gt; happening
&gt; &gt; &gt; by strategically placed barriers.
&gt; &gt; 
&gt; &gt; let me repeat this, the hci_usb driver is not worth fixing. Doing our  
&gt; &gt; own URB handling is a bad idea. The btusb driver should fix all of  
&gt; &gt; this. Only exception is that it is missing all the quirks, but that  
&gt; &gt; was me being lazy.
&gt; &gt; 
&gt; 
&gt; ok...  But as long as the old code is buildable and installable, we should
&gt; fix bugs in it?

Yep.
--
To unsubscribe from this list: send the line "unsubscribe linux-bluetooth" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email></emails>